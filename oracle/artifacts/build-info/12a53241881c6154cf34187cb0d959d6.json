{
	"id": "12a53241881c6154cf34187cb0d959d6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"oracle/UBI4ALLOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"../interfaces/IUBI4ALLOracle.sol\";\n\n/// @title UBI4ALLOracle - Oracolo per il prezzo EUR/USD\n/// @notice Fornisce prezzi aggiornati per la coppia EUR/USD, con fallback a Chainlink\ncontract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {\n    /// @dev Struttura per i dati del prezzo\n    struct PriceData {\n        uint256 price; // Prezzo della coppia (es. EUR/USD)\n        uint256 timestamp; // Timestamp dell'aggiornamento\n        bool isValid; // Validità del prezzo\n    }\n\n    /// @dev Feed di prezzo Chainlink\n    AggregatorV3Interface public priceFeed;\n\n    /// @dev Coppia supportata (EUR/USD)\n    bytes32 public constant EUR_USD_PAIR = bytes32(\"EUR/USD\");\n\n    /// @dev Mappatura dei prezzi più recenti per coppia\n    mapping(bytes32 => PriceData) public latestPrices;\n\n    /// @dev Periodo di validità del prezzo (15 minuti)\n    uint256 public constant PRICE_VALIDITY_PERIOD = 15 minutes;\n\n    /// @dev Periodo massimo di validità per i dati di Chainlink (1 ora)\n    uint256 public constant CHAINLINK_STALENESS_THRESHOLD = 1 hours;\n\n    /// @notice Evento emesso quando il prezzo viene aggiornato\n    event PriceUpdated(bytes32 indexed pair, uint256 price, uint256 timestamp);\n\n    /// @notice Evento emesso quando il feed di prezzo viene aggiornato\n    event PriceFeedUpdated(address indexed oldFeed, address indexed newFeed);\n\n    /// @notice Evento emesso quando il contratto viene messo in pausa\n    event EmergencyPause(bytes32 indexed pair);\n\n    /// @notice Costruttore del contratto\n    /// @param _priceFeed Indirizzo del feed Chainlink per EUR/USD\n    /// @param initialOwner Indirizzo del proprietario iniziale\n    constructor(address _priceFeed, address initialOwner) Ownable(initialOwner) {\n        require(_priceFeed != address(0), \"Invalid price feed address\");\n        priceFeed = AggregatorV3Interface(_priceFeed);\n    }\n\n    /// @notice Aggiorna manualmente il prezzo per la coppia EUR/USD\n    /// @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n    /// @param price Prezzo da impostare\n    /// @param timestamp Timestamp del prezzo\n    /// @param confidence Livello di confidenza del prezzo (non utilizzato)\n    function updatePrice(\n        bytes32 pair,\n        uint256 price,\n        uint256 timestamp,\n        uint256 confidence\n    ) external override onlyOwner whenNotPaused nonReentrant {\n        require(pair == EUR_USD_PAIR, \"Invalid pair\");\n        require(timestamp <= block.timestamp, \"Future timestamp\");\n        require(price > 0, \"Invalid price\");\n\n        latestPrices[pair] = PriceData({\n            price: price,\n            timestamp: timestamp,\n            isValid: true\n        });\n\n        emit PriceUpdated(pair, price, timestamp);\n    }\n\n    /// @notice Ottiene il prezzo più recente per la coppia EUR/USD\n    /// @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n    /// @return price Prezzo della coppia\n    /// @return timestamp Timestamp dell'aggiornamento\n    /// @return isValid True se il prezzo è valido\n    function getPrice(bytes32 pair) \n        external \n        view \n        override \n        returns (uint256 price, uint256 timestamp, bool isValid) \n    {\n        require(pair == EUR_USD_PAIR, \"Invalid pair\");\n        PriceData memory data = latestPrices[pair];\n\n        if (data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD) {\n            return (data.price, data.timestamp, true);\n        }\n\n        // Fallback a Chainlink\n        try priceFeed.latestRoundData() returns (\n            uint80,\n            int256 answer,\n            uint256,\n            uint256 updatedAt,\n            uint80\n        ) {\n            if (answer <= 0) revert(\"Chainlink: Invalid price\");\n            if (updatedAt == 0) revert(\"Chainlink: Round not complete\");\n            if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {\n                revert(\"Chainlink: Stale price\");\n            }\n            return (SafeCast.toUint256(answer), updatedAt, true);\n        } catch {\n            return (0, 0, false);\n        }\n    }\n\n    /// @notice Ottiene il prezzo aggregato (equivalente a getPrice per EUR/USD)\n    /// @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n    /// @return weightedPrice Prezzo aggregato\n    /// @return timestamp Timestamp dell'aggiornamento\n    /// @return isValid True se il prezzo è valido\n    function getAggregatedPrice(bytes32 pair) \n        external \n        view \n        override \n        returns (uint256 weightedPrice, uint256 timestamp, bool isValid) \n    {\n        return this.getPrice(pair);\n    }\n\n    /// @notice Ottiene il prezzo direttamente dal feed Chainlink\n    /// @param source Indirizzo del feed (deve corrispondere a priceFeed)\n    /// @return price Prezzo della coppia\n    /// @return timestamp Timestamp dell'aggiornamento\n    /// @return isValid True se il prezzo è valido\n    function getSourcePrice(address source) \n        external \n        view \n        override \n        returns (uint256 price, uint256 timestamp, bool isValid) \n    {\n        require(source == address(priceFeed), \"Invalid source\");\n        try priceFeed.latestRoundData() returns (\n            uint80,\n            int256 answer,\n            uint256,\n            uint256 updatedAt,\n            uint80\n        ) {\n            if (answer <= 0) revert(\"Chainlink: Invalid price\");\n            if (updatedAt == 0) revert(\"Chainlink: Round not complete\");\n            if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {\n                revert(\"Chainlink: Stale price\");\n            }\n            return (SafeCast.toUint256(answer), updatedAt, true);\n        } catch {\n            return (0, 0, false);\n        }\n    }\n\n    /// @notice Aggiunge o aggiorna il feed Chainlink per EUR/USD\n    /// @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n    /// @param source Nuovo indirizzo del feed Chainlink\n    /// @param weight Peso della sorgente (non utilizzato)\n    /// @param heartbeat Frequenza di aggiornamento della sorgente (non utilizzato)\n    /// @param maxDeviation Deviazione massima consentita (non utilizzato)\n    /// @param minConfidence Confidenza minima richiesta (non utilizzato)\n    function addOracleSource(\n        bytes32 pair,\n        address source,\n        uint256 weight,\n        uint256 heartbeat,\n        uint256 maxDeviation,\n        uint256 minConfidence\n    ) external override onlyOwner nonReentrant {\n        require(pair == EUR_USD_PAIR, \"Invalid pair\");\n        require(source != address(0), \"Invalid source address\");\n\n        address oldFeed = address(priceFeed);\n        priceFeed = AggregatorV3Interface(source);\n        emit PriceFeedUpdated(oldFeed, source);\n    }\n\n    /// @notice Rimuove un feed (no-op per oracolo a sorgente singola)\n    /// @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n    /// @param source Indirizzo del feed da rimuovere\n    function removeOracleSource(bytes32 pair, address source) external view override onlyOwner {\n        require(pair == EUR_USD_PAIR, \"Invalid pair\");\n        require(source == address(priceFeed), \"Invalid source\");\n        // No-op: l'oracolo supporta una sola sorgente\n    }\n\n    /// @notice Mette in pausa il contratto (blocca updatePrice)\n    function pause() external onlyOwner {\n        _pause();\n        emit EmergencyPause(EUR_USD_PAIR);\n    }\n\n    /// @notice Ripristina il contratto dalla pausa\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n}"
			},
			"interfaces/IUBI4ALLOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface IUBI4ALLOracle {\n    function updatePrice(\n        bytes32 pair,\n        uint256 price,\n        uint256 timestamp,\n        uint256 confidence\n    ) external;\n\n    function getPrice(bytes32 pair)\n        external\n        view\n        returns (uint256 price, uint256 timestamp, bool isValid);\n\n    function getAggregatedPrice(bytes32 pair)\n        external\n        view\n        returns (uint256 weightedPrice, uint256 timestamp, bool isValid);\n\n    function getSourcePrice(address source)\n        external\n        view\n        returns (uint256 price, uint256 timestamp, bool isValid);\n\n    function addOracleSource(\n        bytes32 pair,\n        address source,\n        uint256 weight,\n        uint256 heartbeat,\n        uint256 maxDeviation,\n        uint256 minConfidence\n    ) external;\n\n    function removeOracleSource(bytes32 pair, address source) external;\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.28;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.28;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.28;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x15490c1ac7fb488198fce8a04211f15277ee816915367bc906110cbb57863bbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3273e1e51c1bfe12b50778dd98d3d322ca315cd8e1185593694a0ac828b820\",\"dweb:/ipfs/QmTyAWneXaURy9Ls4dovFWLV9yxzMkELmLsgLTWeubz8ZA\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xf4d28329285c89e85daf450fbe612ec5ceb19842ae0be976ab1569897940be90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a021f64d3d58a64fd3045afc6b192c82bca29d95cd594a3c0ed93d1c69ecc98\",\"dweb:/ipfs/QmegaH5RM4Sboa22unJm3FdMVTd3K9UUf8ogbvBwx1K8XJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 312,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203fbf807b9946e12a44522b0bc5758f4a12d0763b6b3999ed33d89dda76f621de64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203fbf807b9946e12a44522b0bc5758f4a12d0763b6b3999ed33d89dda76f621de64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xBF DUP1 PUSH28 0x9946E12A44522B0BC5758F4A12D0763B6B3999ED33D89DDA76F621DE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203fbf807b9946e12a44522b0bc5758f4a12d0763b6b3999ed33d89dda76f621de64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xBF DUP1 PUSH28 0x9946E12A44522B0BC5758F4A12D0763B6B3999ED33D89DDA76F621DE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203fbf807b9946e12a44522b0bc5758f4a12d0763b6b3999ed33d89dda76f621de64736f6c634300081c0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"interfaces/IUBI4ALLOracle.sol",
								"oracle/UBI4ALLOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x880e8b3325f624a5c4dfb9a754ed83bf0be1476d02c5063b215f3c3b9fdec331\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e14b50f3ca0b35d014b166235d94dfa8c9067bb3f5d65efdfb2193355a455\",\"dweb:/ipfs/QmNrM5LEwfCi7cxMovccBpFeL8T9MWfqA15dW9SobPDPfo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUBI4ALLOracle.sol": {
				"IUBI4ALLOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "heartbeat",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxDeviation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minConfidence",
									"type": "uint256"
								}
							],
							"name": "addOracleSource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "getAggregatedPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "weightedPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "getSourcePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "removeOracleSource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "confidence",
									"type": "uint256"
								}
							],
							"name": "updatePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)": "9f97acb7",
							"getAggregatedPrice(bytes32)": "1fde7f26",
							"getPrice(bytes32)": "31d98b3f",
							"getSourcePrice(address)": "2806bce2",
							"removeOracleSource(bytes32,address)": "01e9492f",
							"updatePrice(bytes32,uint256,uint256,uint256)": "f3f699f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"heartbeat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minConfidence\",\"type\":\"uint256\"}],\"name\":\"addOracleSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"getAggregatedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"getSourcePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"removeOracleSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confidence\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUBI4ALLOracle.sol\":\"IUBI4ALLOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IUBI4ALLOracle.sol\":{\"keccak256\":\"0x49272c74047a783a16c9163a9cefa6f6ac19d1fc0611821df60335e8048af538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a191d8343caf8416dcb7c7c04f9c0fa361eaf321a303406a7b4a80024afa15\",\"dweb:/ipfs/QmeydCJh4nAkpNqqYuJCnF5g9Hid1GLYrNjokrxau95vXf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"oracle/UBI4ALLOracle.sol": {
				"UBI4ALLOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_priceFeed",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "EmergencyPause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldFeed",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newFeed",
									"type": "address"
								}
							],
							"name": "PriceFeedUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CHAINLINK_STALENESS_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EUR_USD_PAIR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRICE_VALIDITY_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "heartbeat",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxDeviation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minConfidence",
									"type": "uint256"
								}
							],
							"name": "addOracleSource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "getAggregatedPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "weightedPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "getSourcePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "latestPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "removeOracleSource",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "confidence",
									"type": "uint256"
								}
							],
							"name": "updatePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"heartbeat": "Frequenza di aggiornamento della sorgente (non utilizzato)",
									"maxDeviation": "Deviazione massima consentita (non utilizzato)",
									"minConfidence": "Confidenza minima richiesta (non utilizzato)",
									"pair": "Coppia di asset (deve essere EUR_USD_PAIR)",
									"source": "Nuovo indirizzo del feed Chainlink",
									"weight": "Peso della sorgente (non utilizzato)"
								}
							},
							"constructor": {
								"params": {
									"_priceFeed": "Indirizzo del feed Chainlink per EUR/USD",
									"initialOwner": "Indirizzo del proprietario iniziale"
								}
							},
							"getAggregatedPrice(bytes32)": {
								"params": {
									"pair": "Coppia di asset (deve essere EUR_USD_PAIR)"
								},
								"returns": {
									"isValid": "True se il prezzo è valido",
									"timestamp": "Timestamp dell'aggiornamento",
									"weightedPrice": "Prezzo aggregato"
								}
							},
							"getPrice(bytes32)": {
								"params": {
									"pair": "Coppia di asset (deve essere EUR_USD_PAIR)"
								},
								"returns": {
									"isValid": "True se il prezzo è valido",
									"price": "Prezzo della coppia",
									"timestamp": "Timestamp dell'aggiornamento"
								}
							},
							"getSourcePrice(address)": {
								"params": {
									"source": "Indirizzo del feed (deve corrispondere a priceFeed)"
								},
								"returns": {
									"isValid": "True se il prezzo è valido",
									"price": "Prezzo della coppia",
									"timestamp": "Timestamp dell'aggiornamento"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"removeOracleSource(bytes32,address)": {
								"params": {
									"pair": "Coppia di asset (deve essere EUR_USD_PAIR)",
									"source": "Indirizzo del feed da rimuovere"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updatePrice(bytes32,uint256,uint256,uint256)": {
								"params": {
									"confidence": "Livello di confidenza del prezzo (non utilizzato)",
									"pair": "Coppia di asset (deve essere EUR_USD_PAIR)",
									"price": "Prezzo da impostare",
									"timestamp": "Timestamp del prezzo"
								}
							}
						},
						"stateVariables": {
							"CHAINLINK_STALENESS_THRESHOLD": {
								"details": "Periodo massimo di validità per i dati di Chainlink (1 ora)"
							},
							"EUR_USD_PAIR": {
								"details": "Coppia supportata (EUR/USD)"
							},
							"PRICE_VALIDITY_PERIOD": {
								"details": "Periodo di validità del prezzo (15 minuti)"
							},
							"latestPrices": {
								"details": "Mappatura dei prezzi più recenti per coppia"
							},
							"priceFeed": {
								"details": "Feed di prezzo Chainlink"
							}
						},
						"title": "UBI4ALLOracle - Oracolo per il prezzo EUR/USD",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"oracle/UBI4ALLOracle.sol\":553:7813  contract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"oracle/UBI4ALLOracle.sol\":2033:2244  constructor(address _priceFeed, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"oracle/UBI4ALLOracle.sol\":2095:2107  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1822:1844  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":997:1004  _paused */\n  0x02\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":997:1012  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"oracle/UBI4ALLOracle.sol\":2127:2151  _priceFeed != address(0) */\n  dup3\n  and\n    /* \"oracle/UBI4ALLOracle.sol\":2119:2182  require(_priceFeed != address(0), \"Invalid price feed address\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":904:906   */\n  0x20\n    /* \"oracle/UBI4ALLOracle.sol\":2119:2182  require(_priceFeed != address(0), \"Invalid price feed address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":886:907   */\n  mstore\n    /* \"#utility.yul\":943:945   */\n  0x1a\n    /* \"#utility.yul\":923:941   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":916:946   */\n  mstore\n    /* \"#utility.yul\":982:1010   */\n  0x496e76616c696420707269636520666565642061646472657373000000000000\n    /* \"#utility.yul\":962:980   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":955:1011   */\n  mstore\n    /* \"#utility.yul\":1028:1046   */\n  0x64\n  add\n    /* \"oracle/UBI4ALLOracle.sol\":2119:2182  require(_priceFeed != address(0), \"Invalid price feed address\") */\n  tag_10\n    /* \"#utility.yul\":702:1052   */\n  jump\n    /* \"oracle/UBI4ALLOracle.sol\":2119:2182  require(_priceFeed != address(0), \"Invalid price feed address\") */\ntag_17:\n  pop\n    /* \"oracle/UBI4ALLOracle.sol\":2192:2201  priceFeed */\n  0x02\n    /* \"oracle/UBI4ALLOracle.sol\":2192:2237  priceFeed = AggregatorV3Interface(_priceFeed) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  0x0100\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"oracle/UBI4ALLOracle.sol\":553:7813  contract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_22:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_25:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_27:\n    /* \"#utility.yul\":375:415   */\n  tag_28\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_22\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_29\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_22\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":702:1052   */\ntag_23:\n    /* \"oracle/UBI4ALLOracle.sol\":553:7813  contract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"oracle/UBI4ALLOracle.sol\":553:7813  contract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x741bef1a\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa5b5fb88\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa5b5fb88\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xbc269850\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdb7c1ad1\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf3f699f1\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x741bef1a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9f97acb7\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6301a143\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x01e9492f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1fde7f26\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2806bce2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x31d98b3f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"oracle/UBI4ALLOracle.sol\":7240:7513  function removeOracleSource(bytes32 pair, address source) external view override onlyOwner {... */\n    tag_3:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"oracle/UBI4ALLOracle.sol\":4728:4942  function getAggregatedPrice(bytes32 pair) ... */\n    tag_4:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":924:949   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":980:982   */\n      0x20\n        /* \"#utility.yul\":965:983   */\n      dup5\n      add\n        /* \"#utility.yul\":958:992   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1035:1049   */\n      iszero\n        /* \"#utility.yul\":1028:1050   */\n      iszero\n        /* \"#utility.yul\":1008:1026   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1001:1051   */\n      mstore\n        /* \"#utility.yul\":912:914   */\n      0x60\n        /* \"#utility.yul\":897:915   */\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4728:4942  function getAggregatedPrice(bytes32 pair) ... */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"oracle/UBI4ALLOracle.sol\":5237:6059  function getSourcePrice(address source) ... */\n    tag_5:\n      tag_27\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":3380:4424  function getPrice(bytes32 pair) ... */\n    tag_6:\n      tag_27\n      tag_39\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":7746:7811  function unpause() external onlyOwner {... */\n    tag_7:\n      tag_23\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1616:1700  function paused() public view virtual returns (bool) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1686:1693  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1616:1700  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":1418:1432   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1411:1433   */\n      iszero\n        /* \"#utility.yul\":1393:1434   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1381:1383   */\n      0x20\n        /* \"#utility.yul\":1366:1384   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1616:1700  function paused() public view virtual returns (bool) {... */\n      tag_31\n        /* \"#utility.yul\":1253:1440   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":1235:1293  uint256 public constant PRICE_VALIDITY_PERIOD = 15 minutes */\n    tag_9:\n      tag_48\n        /* \"oracle/UBI4ALLOracle.sol\":1283:1293  15 minutes */\n      0x0384\n        /* \"oracle/UBI4ALLOracle.sol\":1235:1293  uint256 public constant PRICE_VALIDITY_PERIOD = 15 minutes */\n      dup2\n      jump\n    tag_48:\n      mload(0x40)\n        /* \"#utility.yul\":1591:1616   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1579:1581   */\n      0x20\n        /* \"#utility.yul\":1564:1582   */\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":1235:1293  uint256 public constant PRICE_VALIDITY_PERIOD = 15 minutes */\n      tag_31\n        /* \"#utility.yul\":1445:1622   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_23\n      tag_53\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":914:952  AggregatorV3Interface public priceFeed */\n    tag_11:\n      sload(0x02)\n      tag_54\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_54:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1819:1851   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1801:1852   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1789:1791   */\n      0x20\n        /* \"#utility.yul\":1774:1792   */\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":914:952  AggregatorV3Interface public priceFeed */\n      tag_31\n        /* \"#utility.yul\":1627:1858   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":7584:7688  function pause() external onlyOwner {... */\n    tag_12:\n      tag_23\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_54)\n        /* \"oracle/UBI4ALLOracle.sol\":6543:7046  function addOracleSource(... */\n    tag_14:\n      tag_23\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":1000:1057  bytes32 public constant EUR_USD_PAIR = bytes32(\"EUR/USD\") */\n    tag_15:\n      tag_48\n      shl(0xca, 0x1155548bd554d1)\n      dup2\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":1374:1437  uint256 public constant CHAINLINK_STALENESS_THRESHOLD = 1 hours */\n    tag_16:\n      tag_48\n        /* \"oracle/UBI4ALLOracle.sol\":1430:1437  1 hours */\n      0x0e10\n        /* \"oracle/UBI4ALLOracle.sol\":1374:1437  uint256 public constant CHAINLINK_STALENESS_THRESHOLD = 1 hours */\n      dup2\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":1122:1171  mapping(bytes32 => PriceData) public latestPrices */\n    tag_17:\n      tag_27\n      tag_76\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_76:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      0xff\n      and\n      dup4\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_23\n      tag_80\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":2545:3093  function updatePrice(... */\n    tag_19:\n      tag_23\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":7240:7513  function removeOracleSource(bytes32 pair, address source) external view override onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_87\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_87:\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":7349:7353  pair */\n      dup3\n        /* \"oracle/UBI4ALLOracle.sol\":7349:7369  pair == EUR_USD_PAIR */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":7341:7386  require(pair == EUR_USD_PAIR, \"Invalid pair\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"oracle/UBI4ALLOracle.sol\":7422:7431  priceFeed */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":7404:7432  source == address(priceFeed) */\n      dup3\n      dup2\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":7422:7431  priceFeed */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":7404:7432  source == address(priceFeed) */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":7396:7451  require(source == address(priceFeed), \"Invalid source\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4176:4178   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":7396:7451  require(source == address(priceFeed), \"Invalid source\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4158:4179   */\n      mstore\n        /* \"#utility.yul\":4215:4217   */\n      0x0e\n        /* \"#utility.yul\":4195:4213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4188:4218   */\n      mstore\n      shl(0x90, 0x496e76616c696420736f75726365)\n        /* \"#utility.yul\":4234:4252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4227:4271   */\n      mstore\n        /* \"#utility.yul\":4288:4306   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":7396:7451  require(source == address(priceFeed), \"Invalid source\") */\n      tag_91\n        /* \"#utility.yul\":3974:4312   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":7396:7451  require(source == address(priceFeed), \"Invalid source\") */\n    tag_93:\n        /* \"oracle/UBI4ALLOracle.sol\":7240:7513  function removeOracleSource(bytes32 pair, address source) external view override onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"oracle/UBI4ALLOracle.sol\":4728:4942  function getAggregatedPrice(bytes32 pair) ... */\n    tag_30:\n        /* \"oracle/UBI4ALLOracle.sol\":4916:4935  this.getPrice(pair) */\n      mload(0x40)\n      shl(0xe0, 0x31d98b3f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1591:1616   */\n      dup3\n      swap1\n      mstore\n        /* \"oracle/UBI4ALLOracle.sol\":4838:4859  uint256 weightedPrice */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":4916:4920  this */\n      address\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":4916:4929  this.getPrice */\n      0x31d98b3f\n      swap1\n        /* \"#utility.yul\":1564:1582   */\n      0x24\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4916:4935  this.getPrice(pair) */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"oracle/UBI4ALLOracle.sol\":4909:4935  return this.getPrice(pair) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":4728:4942  function getAggregatedPrice(bytes32 pair) ... */\n    tag_96:\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"oracle/UBI4ALLOracle.sol\":5237:6059  function getSourcePrice(address source) ... */\n    tag_36:\n        /* \"oracle/UBI4ALLOracle.sol\":5434:5443  priceFeed */\n      sload(0x02)\n        /* \"oracle/UBI4ALLOracle.sol\":5345:5358  uint256 price */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":5416:5444  source == address(priceFeed) */\n      dup6\n      dup2\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":5434:5443  priceFeed */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":5416:5444  source == address(priceFeed) */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":5408:5463  require(source == address(priceFeed), \"Invalid source\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4176:4178   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":5408:5463  require(source == address(priceFeed), \"Invalid source\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4158:4179   */\n      mstore\n        /* \"#utility.yul\":4215:4217   */\n      0x0e\n        /* \"#utility.yul\":4195:4213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4188:4218   */\n      mstore\n      shl(0x90, 0x496e76616c696420736f75726365)\n        /* \"#utility.yul\":4234:4252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4227:4271   */\n      mstore\n        /* \"#utility.yul\":4288:4306   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":5408:5463  require(source == address(priceFeed), \"Invalid source\") */\n      tag_91\n        /* \"#utility.yul\":3974:4312   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":5408:5463  require(source == address(priceFeed), \"Invalid source\") */\n    tag_103:\n        /* \"oracle/UBI4ALLOracle.sol\":5477:5486  priceFeed */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":5477:5502  priceFeed.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"oracle/UBI4ALLOracle.sol\":5477:5504  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_105\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_106\n      swap2\n      dup2\n      add\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      0x01\n    tag_105:\n        /* \"oracle/UBI4ALLOracle.sol\":5473:6053  try priceFeed.latestRoundData() returns (... */\n      tag_108\n      jumpi\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":6030:6031  0 */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n      dup1\n        /* \"oracle/UBI4ALLOracle.sol\":6022:6042  return (0, 0, false) */\n      jump(tag_96)\n        /* \"oracle/UBI4ALLOracle.sol\":5473:6053  try priceFeed.latestRoundData() returns (... */\n    tag_108:\n        /* \"oracle/UBI4ALLOracle.sol\":5671:5672  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":5661:5667  answer */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":5661:5672  answer <= 0 */\n      sgt\n        /* \"oracle/UBI4ALLOracle.sol\":5657:5708  if (answer <= 0) revert(\"Chainlink: Invalid price\") */\n      tag_113\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":5674:5708  revert(\"Chainlink: Invalid price\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5789:5791   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":5674:5708  revert(\"Chainlink: Invalid price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5771:5792   */\n      mstore\n        /* \"#utility.yul\":5828:5830   */\n      0x18\n        /* \"#utility.yul\":5808:5826   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5801:5831   */\n      mstore\n      shl(0x40, 0x436861696e6c696e6b3a20496e76616c6964207072696365)\n        /* \"#utility.yul\":5847:5865   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5840:5894   */\n      mstore\n        /* \"#utility.yul\":5911:5929   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":5674:5708  revert(\"Chainlink: Invalid price\") */\n      tag_91\n        /* \"#utility.yul\":5587:5935   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":5657:5708  if (answer <= 0) revert(\"Chainlink: Invalid price\") */\n    tag_113:\n        /* \"oracle/UBI4ALLOracle.sol\":5726:5735  updatedAt */\n      dup2\n        /* \"oracle/UBI4ALLOracle.sol\":5739:5740  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":5726:5740  updatedAt == 0 */\n      sub\n        /* \"oracle/UBI4ALLOracle.sol\":5722:5781  if (updatedAt == 0) revert(\"Chainlink: Round not complete\") */\n      tag_116\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":5742:5781  revert(\"Chainlink: Round not complete\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6142:6144   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":5742:5781  revert(\"Chainlink: Round not complete\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6124:6145   */\n      mstore\n        /* \"#utility.yul\":6181:6183   */\n      0x1d\n        /* \"#utility.yul\":6161:6179   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6154:6184   */\n      mstore\n        /* \"#utility.yul\":6220:6251   */\n      0x436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465000000\n        /* \"#utility.yul\":6200:6218   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6193:6252   */\n      mstore\n        /* \"#utility.yul\":6269:6287   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":5742:5781  revert(\"Chainlink: Round not complete\") */\n      tag_91\n        /* \"#utility.yul\":5940:6293   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":5722:5781  if (updatedAt == 0) revert(\"Chainlink: Round not complete\") */\n    tag_116:\n        /* \"oracle/UBI4ALLOracle.sol\":1430:1437  1 hours */\n      0x0e10\n        /* \"oracle/UBI4ALLOracle.sol\":5799:5826  block.timestamp - updatedAt */\n      tag_119\n        /* \"oracle/UBI4ALLOracle.sol\":5817:5826  updatedAt */\n      dup4\n        /* \"oracle/UBI4ALLOracle.sol\":5799:5814  block.timestamp */\n      timestamp\n        /* \"oracle/UBI4ALLOracle.sol\":5799:5826  block.timestamp - updatedAt */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"oracle/UBI4ALLOracle.sol\":5799:5858  block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD */\n      gt\n        /* \"oracle/UBI4ALLOracle.sol\":5795:5925  if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":5878:5910  revert(\"Chainlink: Stale price\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6730:6732   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":5878:5910  revert(\"Chainlink: Stale price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6712:6733   */\n      mstore\n        /* \"#utility.yul\":6769:6771   */\n      0x16\n        /* \"#utility.yul\":6749:6767   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6742:6772   */\n      mstore\n      shl(0x50, 0x436861696e6c696e6b3a205374616c65207072696365)\n        /* \"#utility.yul\":6788:6806   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6781:6833   */\n      mstore\n        /* \"#utility.yul\":6850:6868   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":5878:5910  revert(\"Chainlink: Stale price\") */\n      tag_91\n        /* \"#utility.yul\":6528:6874   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":5795:5925  if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {... */\n    tag_121:\n        /* \"oracle/UBI4ALLOracle.sol\":5946:5972  SafeCast.toUint256(answer) */\n      tag_124\n        /* \"oracle/UBI4ALLOracle.sol\":5965:5971  answer */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":5946:5964  SafeCast.toUint256 */\n      tag_125\n        /* \"oracle/UBI4ALLOracle.sol\":5946:5972  SafeCast.toUint256(answer) */\n      jump\t// in\n    tag_124:\n        /* \"oracle/UBI4ALLOracle.sol\":5974:5983  updatedAt */\n      dup3\n        /* \"oracle/UBI4ALLOracle.sol\":5985:5989  true */\n      0x01\n        /* \"oracle/UBI4ALLOracle.sol\":5938:5990  return (SafeCast.toUint256(answer), updatedAt, true) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_96)\n        /* \"oracle/UBI4ALLOracle.sol\":3380:4424  function getPrice(bytes32 pair) ... */\n    tag_40:\n        /* \"oracle/UBI4ALLOracle.sol\":3480:3493  uint256 price */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":3495:3512  uint256 timestamp */\n      dup1\n        /* \"oracle/UBI4ALLOracle.sol\":3514:3526  bool isValid */\n      0x00\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":3551:3555  pair */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":3551:3571  pair == EUR_USD_PAIR */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":3543:3588  require(pair == EUR_USD_PAIR, \"Invalid pair\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_127:\n        /* \"oracle/UBI4ALLOracle.sol\":3598:3619  PriceData memory data */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":3622:3640  latestPrices[pair] */\n      dup5\n      dup2\n      mstore\n        /* \"oracle/UBI4ALLOracle.sol\":3622:3634  latestPrices */\n      0x03\n        /* \"oracle/UBI4ALLOracle.sol\":3622:3640  latestPrices[pair] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"oracle/UBI4ALLOracle.sol\":3598:3640  PriceData memory data = latestPrices[pair] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      add\n      sload\n      0xff\n      and\n      iszero\n      dup1\n      iszero\n      swap3\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n      swap1\n      swap2\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":3655:3728  data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD */\n      tag_129\n      jumpi\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":1283:1293  15 minutes */\n      0x0384\n        /* \"oracle/UBI4ALLOracle.sol\":3689:3693  data */\n      dup2\n        /* \"oracle/UBI4ALLOracle.sol\":3689:3703  data.timestamp */\n      0x20\n      add\n      mload\n        /* \"oracle/UBI4ALLOracle.sol\":3671:3686  block.timestamp */\n      timestamp\n        /* \"oracle/UBI4ALLOracle.sol\":3671:3703  block.timestamp - data.timestamp */\n      tag_130\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_130:\n        /* \"oracle/UBI4ALLOracle.sol\":3671:3728  block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD */\n      gt\n      iszero\n        /* \"oracle/UBI4ALLOracle.sol\":3655:3728  data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD */\n    tag_129:\n        /* \"oracle/UBI4ALLOracle.sol\":3651:3796  if (data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":3752:3762  data.price */\n      dup1\n      mload\n        /* \"oracle/UBI4ALLOracle.sol\":3764:3778  data.timestamp */\n      0x20\n      swap1\n      swap2\n      add\n      mload\n        /* \"oracle/UBI4ALLOracle.sol\":3752:3762  data.price */\n      swap1\n      swap4\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":3764:3778  data.timestamp */\n      swap2\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":3780:3784  true */\n      0x01\n      swap1\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":3744:3785  return (data.price, data.timestamp, true) */\n      jump(tag_96)\n        /* \"oracle/UBI4ALLOracle.sol\":3651:3796  if (data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD) {... */\n    tag_131:\n        /* \"oracle/UBI4ALLOracle.sol\":3842:3851  priceFeed */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":3842:3867  priceFeed.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"oracle/UBI4ALLOracle.sol\":3842:3869  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_132\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_133\n      swap2\n      dup2\n      add\n      swap1\n      tag_107\n      jump\t// in\n    tag_133:\n      0x01\n    tag_132:\n        /* \"oracle/UBI4ALLOracle.sol\":3838:4418  try priceFeed.latestRoundData() returns (... */\n      tag_134\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":4395:4396  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4398:4399  0 */\n      dup1\n        /* \"oracle/UBI4ALLOracle.sol\":4401:4406  false */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4387:4407  return (0, 0, false) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_96)\n        /* \"oracle/UBI4ALLOracle.sol\":3838:4418  try priceFeed.latestRoundData() returns (... */\n    tag_134:\n        /* \"oracle/UBI4ALLOracle.sol\":4036:4037  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4026:4032  answer */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":4026:4037  answer <= 0 */\n      sgt\n        /* \"oracle/UBI4ALLOracle.sol\":4022:4073  if (answer <= 0) revert(\"Chainlink: Invalid price\") */\n      tag_139\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":4039:4073  revert(\"Chainlink: Invalid price\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5789:5791   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":4039:4073  revert(\"Chainlink: Invalid price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5771:5792   */\n      mstore\n        /* \"#utility.yul\":5828:5830   */\n      0x18\n        /* \"#utility.yul\":5808:5826   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5801:5831   */\n      mstore\n      shl(0x40, 0x436861696e6c696e6b3a20496e76616c6964207072696365)\n        /* \"#utility.yul\":5847:5865   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5840:5894   */\n      mstore\n        /* \"#utility.yul\":5911:5929   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4039:4073  revert(\"Chainlink: Invalid price\") */\n      tag_91\n        /* \"#utility.yul\":5587:5935   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":4022:4073  if (answer <= 0) revert(\"Chainlink: Invalid price\") */\n    tag_139:\n        /* \"oracle/UBI4ALLOracle.sol\":4091:4100  updatedAt */\n      dup2\n        /* \"oracle/UBI4ALLOracle.sol\":4104:4105  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4091:4105  updatedAt == 0 */\n      sub\n        /* \"oracle/UBI4ALLOracle.sol\":4087:4146  if (updatedAt == 0) revert(\"Chainlink: Round not complete\") */\n      tag_141\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":4107:4146  revert(\"Chainlink: Round not complete\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6142:6144   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":4107:4146  revert(\"Chainlink: Round not complete\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6124:6145   */\n      mstore\n        /* \"#utility.yul\":6181:6183   */\n      0x1d\n        /* \"#utility.yul\":6161:6179   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6154:6184   */\n      mstore\n        /* \"#utility.yul\":6220:6251   */\n      0x436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465000000\n        /* \"#utility.yul\":6200:6218   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6193:6252   */\n      mstore\n        /* \"#utility.yul\":6269:6287   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4107:4146  revert(\"Chainlink: Round not complete\") */\n      tag_91\n        /* \"#utility.yul\":5940:6293   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":4087:4146  if (updatedAt == 0) revert(\"Chainlink: Round not complete\") */\n    tag_141:\n        /* \"oracle/UBI4ALLOracle.sol\":1430:1437  1 hours */\n      0x0e10\n        /* \"oracle/UBI4ALLOracle.sol\":4164:4191  block.timestamp - updatedAt */\n      tag_143\n        /* \"oracle/UBI4ALLOracle.sol\":4182:4191  updatedAt */\n      dup4\n        /* \"oracle/UBI4ALLOracle.sol\":4164:4179  block.timestamp */\n      timestamp\n        /* \"oracle/UBI4ALLOracle.sol\":4164:4191  block.timestamp - updatedAt */\n      tag_120\n      jump\t// in\n    tag_143:\n        /* \"oracle/UBI4ALLOracle.sol\":4164:4223  block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD */\n      gt\n        /* \"oracle/UBI4ALLOracle.sol\":4160:4290  if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":4243:4275  revert(\"Chainlink: Stale price\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6730:6732   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":4243:4275  revert(\"Chainlink: Stale price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6712:6733   */\n      mstore\n        /* \"#utility.yul\":6769:6771   */\n      0x16\n        /* \"#utility.yul\":6749:6767   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6742:6772   */\n      mstore\n      shl(0x50, 0x436861696e6c696e6b3a205374616c65207072696365)\n        /* \"#utility.yul\":6788:6806   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6781:6833   */\n      mstore\n        /* \"#utility.yul\":6850:6868   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4243:4275  revert(\"Chainlink: Stale price\") */\n      tag_91\n        /* \"#utility.yul\":6528:6874   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":4160:4290  if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {... */\n    tag_144:\n        /* \"oracle/UBI4ALLOracle.sol\":4311:4337  SafeCast.toUint256(answer) */\n      tag_146\n        /* \"oracle/UBI4ALLOracle.sol\":4330:4336  answer */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":4311:4329  SafeCast.toUint256 */\n      tag_125\n        /* \"oracle/UBI4ALLOracle.sol\":4311:4337  SafeCast.toUint256(answer) */\n      jump\t// in\n    tag_146:\n        /* \"oracle/UBI4ALLOracle.sol\":4339:4348  updatedAt */\n      dup3\n        /* \"oracle/UBI4ALLOracle.sol\":4350:4354  true */\n      0x01\n        /* \"oracle/UBI4ALLOracle.sol\":4303:4355  return (SafeCast.toUint256(answer), updatedAt, true) */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_96)\n        /* \"oracle/UBI4ALLOracle.sol\":7746:7811  function unpause() external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"oracle/UBI4ALLOracle.sol\":7794:7804  _unpause() */\n      tag_150\n        /* \"oracle/UBI4ALLOracle.sol\":7794:7802  _unpause */\n      tag_151\n        /* \"oracle/UBI4ALLOracle.sol\":7794:7804  _unpause() */\n      jump\t// in\n    tag_150:\n        /* \"oracle/UBI4ALLOracle.sol\":7746:7811  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":7584:7688  function pause() external onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"oracle/UBI4ALLOracle.sol\":7630:7638  _pause() */\n      tag_161\n        /* \"oracle/UBI4ALLOracle.sol\":7630:7636  _pause */\n      tag_162\n        /* \"oracle/UBI4ALLOracle.sol\":7630:7638  _pause() */\n      jump\t// in\n    tag_161:\n        /* \"oracle/UBI4ALLOracle.sol\":7653:7681  EmergencyPause(EUR_USD_PAIR) */\n      mload(0x40)\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":1039:1057  bytes32(\"EUR/USD\") */\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":7653:7681  EmergencyPause(EUR_USD_PAIR) */\n      0xd373a1ac37410a4da6def2d7f3f2e704aca3e95e2e251322a031eedda7eb686c\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"oracle/UBI4ALLOracle.sol\":7584:7688  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"oracle/UBI4ALLOracle.sol\":6543:7046  function addOracleSource(... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_167\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_168\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_167:\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":6791:6795  pair */\n      dup7\n        /* \"oracle/UBI4ALLOracle.sol\":6791:6811  pair == EUR_USD_PAIR */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":6783:6828  require(pair == EUR_USD_PAIR, \"Invalid pair\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":6846:6866  source != address(0) */\n      dup6\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":6838:6893  require(source != address(0), \"Invalid source address\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7081:7083   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":6838:6893  require(source != address(0), \"Invalid source address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7063:7084   */\n      mstore\n        /* \"#utility.yul\":7120:7122   */\n      0x16\n        /* \"#utility.yul\":7100:7118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7093:7123   */\n      mstore\n      shl(0x50, 0x496e76616c696420736f757263652061646472657373)\n        /* \"#utility.yul\":7139:7157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7132:7184   */\n      mstore\n        /* \"#utility.yul\":7201:7219   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":6838:6893  require(source != address(0), \"Invalid source address\") */\n      tag_91\n        /* \"#utility.yul\":6879:7225   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":6838:6893  require(source != address(0), \"Invalid source address\") */\n    tag_172:\n        /* \"oracle/UBI4ALLOracle.sol\":6930:6939  priceFeed */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":6950:6991  priceFeed = AggregatorV3Interface(source) */\n      dup8\n      dup2\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":6930:6939  priceFeed */\n      0x0100\n        /* \"oracle/UBI4ALLOracle.sol\":6950:6991  priceFeed = AggregatorV3Interface(source) */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"oracle/UBI4ALLOracle.sol\":7006:7039  PriceFeedUpdated(oldFeed, source) */\n      mload(0x40)\n        /* \"oracle/UBI4ALLOracle.sol\":6930:6939  priceFeed */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":7006:7039  PriceFeedUpdated(oldFeed, source) */\n      0xa8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d321753536\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":6904:6919  address oldFeed */\n      0x00\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":7006:7039  PriceFeedUpdated(oldFeed, source) */\n      log3\n        /* \"oracle/UBI4ALLOracle.sol\":6773:7046  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2832  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2630:2839  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n    tag_175:\n        /* \"oracle/UBI4ALLOracle.sol\":6543:7046  function addOracleSource(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1801:1852   */\n      mstore\n        /* \"#utility.yul\":1774:1792   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_91\n        /* \"#utility.yul\":1627:1858   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"oracle/UBI4ALLOracle.sol\":2545:3093  function updatePrice(... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_186\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_187\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_189\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_168\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_189:\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":2745:2749  pair */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":2745:2765  pair == EUR_USD_PAIR */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":2737:2782  require(pair == EUR_USD_PAIR, \"Invalid pair\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_191:\n        /* \"oracle/UBI4ALLOracle.sol\":2813:2828  block.timestamp */\n      timestamp\n        /* \"oracle/UBI4ALLOracle.sol\":2800:2809  timestamp */\n      dup3\n        /* \"oracle/UBI4ALLOracle.sol\":2800:2828  timestamp <= block.timestamp */\n      gt\n      iszero\n        /* \"oracle/UBI4ALLOracle.sol\":2792:2849  require(timestamp <= block.timestamp, \"Future timestamp\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7432:7434   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":2792:2849  require(timestamp <= block.timestamp, \"Future timestamp\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7414:7435   */\n      mstore\n        /* \"#utility.yul\":7471:7473   */\n      0x10\n        /* \"#utility.yul\":7451:7469   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7444:7474   */\n      mstore\n      shl(0x84, 0x04675747572652074696d657374616d7)\n        /* \"#utility.yul\":7490:7508   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7483:7529   */\n      mstore\n        /* \"#utility.yul\":7546:7564   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":2792:2849  require(timestamp <= block.timestamp, \"Future timestamp\") */\n      tag_91\n        /* \"#utility.yul\":7230:7570   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":2792:2849  require(timestamp <= block.timestamp, \"Future timestamp\") */\n    tag_193:\n        /* \"oracle/UBI4ALLOracle.sol\":2875:2876  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":2867:2872  price */\n      dup4\n        /* \"oracle/UBI4ALLOracle.sol\":2867:2876  price > 0 */\n      gt\n        /* \"oracle/UBI4ALLOracle.sol\":2859:2894  require(price > 0, \"Invalid price\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7777:7779   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":2859:2894  require(price > 0, \"Invalid price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7759:7780   */\n      mstore\n        /* \"#utility.yul\":7816:7818   */\n      0x0d\n        /* \"#utility.yul\":7796:7814   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7789:7819   */\n      mstore\n      shl(0x98, 0x496e76616c6964207072696365)\n        /* \"#utility.yul\":7835:7853   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7828:7871   */\n      mstore\n        /* \"#utility.yul\":7888:7906   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":2859:2894  require(price > 0, \"Invalid price\") */\n      tag_91\n        /* \"#utility.yul\":7575:7912   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":2859:2894  require(price > 0, \"Invalid price\") */\n    tag_196:\n        /* \"oracle/UBI4ALLOracle.sol\":2926:3034  PriceData({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      dup2\n      mstore\n        /* \"oracle/UBI4ALLOracle.sol\":3019:3023  true */\n      0x01\n        /* \"oracle/UBI4ALLOracle.sol\":2926:3034  PriceData({... */\n      dup4\n      dup6\n      add\n      dup2\n      dup2\n      mstore\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":2905:2923  latestPrices[pair] */\n      dup11\n      dup2\n      mstore\n        /* \"oracle/UBI4ALLOracle.sol\":2905:2917  latestPrices */\n      0x03\n        /* \"oracle/UBI4ALLOracle.sol\":2905:2923  latestPrices[pair] */\n      dup6\n      mstore\n      dup7\n      swap1\n      keccak256\n        /* \"oracle/UBI4ALLOracle.sol\":2905:3034  latestPrices[pair] = PriceData({... */\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      swap1\n      dup5\n      add\n      sstore\n      mload\n      0x02\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"oracle/UBI4ALLOracle.sol\":3050:3086  PriceUpdated(pair, price, timestamp) */\n      dup2\n      mload\n        /* \"#utility.yul\":8091:8116   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8132:8150   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":8125:8159   */\n      dup5\n      swap1\n      mstore\n        /* \"oracle/UBI4ALLOracle.sol\":2905:2923  latestPrices[pair] */\n      dup6\n      swap2\n        /* \"oracle/UBI4ALLOracle.sol\":3050:3086  PriceUpdated(pair, price, timestamp) */\n      0xbcd10d64fce9dcf9568572ed92e371df336d32649e8960a045c9548794a44b26\n      swap2\n        /* \"#utility.yul\":8064:8082   */\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":3050:3086  PriceUpdated(pair, price, timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n      tag_201\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2832  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2630:2839  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n    tag_201:\n        /* \"oracle/UBI4ALLOracle.sol\":2545:3093  function updatePrice(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1801:1852   */\n      mstore\n        /* \"#utility.yul\":1774:1792   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_91\n        /* \"#utility.yul\":1627:1858   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17171:17364  function toUint256(int256 value) internal pure returns (uint256) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17227:17234  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17258:17259  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17250:17255  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17250:17259  value < 0 */\n      slt\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17246:17327  if (value < 0) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17282:17316  SafeCastOverflowedIntToUint(value) */\n      mload(0x40)\n      shl(0xe1, 0x54672219)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1591:1616   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":1564:1582   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17282:17316  SafeCastOverflowedIntToUint(value) */\n      tag_91\n        /* \"#utility.yul\":1445:1622   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17246:17327  if (value < 0) {... */\n    tag_210:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17351:17356  value */\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17171:17364  function toUint256(int256 value) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2434:2551  function _unpause() internal virtual whenPaused {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1487:1503  _requirePaused() */\n      tag_214\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1487:1501  _requirePaused */\n      tag_215\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1487:1503  _requirePaused() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2492:2499  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2492:2507  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2522:2544  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2531:2543  _msgSender() */\n    tag_217:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2522:2544  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1819:1851   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1801:1852   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1789:1791   */\n      0x20\n        /* \"#utility.yul\":1774:1792   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2522:2544  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2434:2551  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2187:2302  function _pause() internal virtual whenNotPaused {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_221\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_187\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2246:2253  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2246:2260  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2256:2260  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2246:2260  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2275:2295  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2282:2294  _msgSender() */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2337:2624  function _nonReentrantBefore() private {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1760:1761  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2469:2476  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2469:2488  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8552:8554   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8534:8555   */\n      mstore\n        /* \"#utility.yul\":8591:8593   */\n      0x1f\n        /* \"#utility.yul\":8571:8589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8564:8594   */\n      mstore\n        /* \"#utility.yul\":8630:8663   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8610:8628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8603:8664   */\n      mstore\n        /* \"#utility.yul\":8681:8699   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_91\n        /* \"#utility.yul\":8350:8705   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_226:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1760:1761  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2599:2606  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2599:2617  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2337:2624  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1768:1874  function _requireNotPaused() internal view virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1686:1693  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1846  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1829:1867  require(!paused(), \"Pausable: paused\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8912:8914   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1829:1867  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8894:8915   */\n      mstore\n        /* \"#utility.yul\":8951:8953   */\n      0x10\n        /* \"#utility.yul\":8931:8949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8924:8954   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":8970:8988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8963:9009   */\n      mstore\n        /* \"#utility.yul\":9026:9044   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1829:1867  require(!paused(), \"Pausable: paused\") */\n      tag_91\n        /* \"#utility.yul\":8710:9050   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1946:2052  function _requirePaused() internal view virtual {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1686:1693  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2004:2045  require(paused(), \"Pausable: not paused\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9257:9259   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2004:2045  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9239:9260   */\n      mstore\n        /* \"#utility.yul\":9296:9298   */\n      0x14\n        /* \"#utility.yul\":9276:9294   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9269:9299   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9315:9333   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9308:9358   */\n      mstore\n        /* \"#utility.yul\":9375:9393   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2004:2045  require(paused(), \"Pausable: not paused\") */\n      tag_91\n        /* \"#utility.yul\":9055:9399   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_241:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_245:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:492   */\n    tag_25:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_247:\n        /* \"#utility.yul\":382:405   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":448:486   */\n      tag_248\n        /* \"#utility.yul\":482:484   */\n      0x20\n        /* \"#utility.yul\":467:485   */\n      dup5\n      add\n        /* \"#utility.yul\":448:486   */\n      tag_241\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":438:486   */\n      swap1\n      pop\n        /* \"#utility.yul\":192:492   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:723   */\n    tag_29:\n        /* \"#utility.yul\":556:562   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":597:606   */\n      dup3\n        /* \"#utility.yul\":588:595   */\n      dup5\n        /* \"#utility.yul\":584:607   */\n      sub\n        /* \"#utility.yul\":580:612   */\n      slt\n        /* \"#utility.yul\":577:629   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":622:623   */\n      dup1\n        /* \"#utility.yul\":615:627   */\n      revert\n        /* \"#utility.yul\":577:629   */\n    tag_250:\n      pop\n        /* \"#utility.yul\":670:693   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":497:723   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1062:1248   */\n    tag_35:\n        /* \"#utility.yul\":1121:1127   */\n      0x00\n        /* \"#utility.yul\":1174:1176   */\n      0x20\n        /* \"#utility.yul\":1162:1171   */\n      dup3\n        /* \"#utility.yul\":1153:1160   */\n      dup5\n        /* \"#utility.yul\":1149:1172   */\n      sub\n        /* \"#utility.yul\":1145:1177   */\n      slt\n        /* \"#utility.yul\":1142:1194   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":1190:1191   */\n      0x00\n        /* \"#utility.yul\":1187:1188   */\n      dup1\n        /* \"#utility.yul\":1180:1192   */\n      revert\n        /* \"#utility.yul\":1142:1194   */\n    tag_253:\n        /* \"#utility.yul\":1213:1242   */\n      tag_254\n        /* \"#utility.yul\":1232:1241   */\n      dup3\n        /* \"#utility.yul\":1213:1242   */\n      tag_241\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1203:1242   */\n      swap4\n        /* \"#utility.yul\":1062:1248   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2071:2854   */\n    tag_66:\n        /* \"#utility.yul\":2175:2181   */\n      0x00\n        /* \"#utility.yul\":2183:2189   */\n      dup1\n        /* \"#utility.yul\":2191:2197   */\n      0x00\n        /* \"#utility.yul\":2199:2205   */\n      dup1\n        /* \"#utility.yul\":2207:2213   */\n      0x00\n        /* \"#utility.yul\":2215:2221   */\n      dup1\n        /* \"#utility.yul\":2268:2271   */\n      0xc0\n        /* \"#utility.yul\":2256:2265   */\n      dup8\n        /* \"#utility.yul\":2247:2254   */\n      dup10\n        /* \"#utility.yul\":2243:2266   */\n      sub\n        /* \"#utility.yul\":2239:2272   */\n      slt\n        /* \"#utility.yul\":2236:2289   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2236:2289   */\n    tag_260:\n        /* \"#utility.yul\":2330:2353   */\n      dup7\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2396:2434   */\n      tag_261\n        /* \"#utility.yul\":2430:2432   */\n      0x20\n        /* \"#utility.yul\":2415:2433   */\n      dup9\n      add\n        /* \"#utility.yul\":2396:2434   */\n      tag_241\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2071:2854   */\n      swap6\n      swap9\n        /* \"#utility.yul\":2386:2434   */\n      swap6\n      swap8\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2507:2509   */\n      0x40\n        /* \"#utility.yul\":2492:2510   */\n      dup5\n      add\n        /* \"#utility.yul\":2479:2511   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2610:2612   */\n      0x60\n        /* \"#utility.yul\":2595:2613   */\n      dup2\n      add\n        /* \"#utility.yul\":2582:2614   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2713:2716   */\n      0x80\n        /* \"#utility.yul\":2698:2717   */\n      dup3\n      add\n        /* \"#utility.yul\":2685:2718   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2817:2820   */\n      0xa0\n        /* \"#utility.yul\":2802:2821   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2789:2822   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2071:2854   */\n      jump\t// out\n        /* \"#utility.yul\":3041:3628   */\n    tag_84:\n        /* \"#utility.yul\":3127:3133   */\n      0x00\n        /* \"#utility.yul\":3135:3141   */\n      dup1\n        /* \"#utility.yul\":3143:3149   */\n      0x00\n        /* \"#utility.yul\":3151:3157   */\n      dup1\n        /* \"#utility.yul\":3204:3207   */\n      0x80\n        /* \"#utility.yul\":3192:3201   */\n      dup6\n        /* \"#utility.yul\":3183:3190   */\n      dup8\n        /* \"#utility.yul\":3179:3202   */\n      sub\n        /* \"#utility.yul\":3175:3208   */\n      slt\n        /* \"#utility.yul\":3172:3225   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3221:3222   */\n      0x00\n        /* \"#utility.yul\":3218:3219   */\n      dup1\n        /* \"#utility.yul\":3211:3223   */\n      revert\n        /* \"#utility.yul\":3172:3225   */\n    tag_264:\n      pop\n      pop\n        /* \"#utility.yul\":3266:3289   */\n      dup3\n      calldataload\n      swap5\n        /* \"#utility.yul\":3386:3388   */\n      0x20\n        /* \"#utility.yul\":3371:3389   */\n      dup5\n      add\n        /* \"#utility.yul\":3358:3390   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3489:3491   */\n      0x40\n        /* \"#utility.yul\":3474:3492   */\n      dup5\n      add\n        /* \"#utility.yul\":3461:3493   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3592:3594   */\n      0x60\n        /* \"#utility.yul\":3577:3595   */\n      add\n        /* \"#utility.yul\":3564:3596   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":3041:3628   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3633:3969   */\n    tag_92:\n        /* \"#utility.yul\":3835:3837   */\n      0x20\n        /* \"#utility.yul\":3817:3838   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3874:3876   */\n      0x0c\n        /* \"#utility.yul\":3854:3872   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3847:3877   */\n      mstore\n      shl(0xa1, 0x24b73b30b634b2103830b4b9)\n        /* \"#utility.yul\":3908:3910   */\n      0x40\n        /* \"#utility.yul\":3893:3911   */\n      dup3\n      add\n        /* \"#utility.yul\":3886:3928   */\n      mstore\n        /* \"#utility.yul\":3960:3962   */\n      0x60\n        /* \"#utility.yul\":3945:3963   */\n      add\n      swap1\n        /* \"#utility.yul\":3633:3969   */\n      jump\t// out\n        /* \"#utility.yul\":4317:4822   */\n    tag_101:\n        /* \"#utility.yul\":4402:4408   */\n      0x00\n        /* \"#utility.yul\":4410:4416   */\n      dup1\n        /* \"#utility.yul\":4418:4424   */\n      0x00\n        /* \"#utility.yul\":4471:4473   */\n      0x60\n        /* \"#utility.yul\":4459:4468   */\n      dup5\n        /* \"#utility.yul\":4450:4457   */\n      dup7\n        /* \"#utility.yul\":4446:4469   */\n      sub\n        /* \"#utility.yul\":4442:4474   */\n      slt\n        /* \"#utility.yul\":4439:4491   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":4487:4488   */\n      0x00\n        /* \"#utility.yul\":4484:4485   */\n      dup1\n        /* \"#utility.yul\":4477:4489   */\n      revert\n        /* \"#utility.yul\":4439:4491   */\n    tag_268:\n        /* \"#utility.yul\":4532:4548   */\n      dup4\n      mload\n        /* \"#utility.yul\":4638:4640   */\n      0x20\n        /* \"#utility.yul\":4623:4641   */\n      dup6\n      add\n        /* \"#utility.yul\":4617:4642   */\n      mload\n        /* \"#utility.yul\":4713:4715   */\n      0x40\n        /* \"#utility.yul\":4698:4716   */\n      dup7\n      add\n        /* \"#utility.yul\":4692:4717   */\n      mload\n        /* \"#utility.yul\":4532:4548   */\n      swap2\n      swap5\n      pop\n        /* \"#utility.yul\":4617:4642   */\n      swap3\n      pop\n        /* \"#utility.yul\":4755:4770   */\n      dup1\n      iszero\n        /* \"#utility.yul\":4748:4771   */\n      iszero\n        /* \"#utility.yul\":4736:4772   */\n      dup2\n      eq\n        /* \"#utility.yul\":4726:4790   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4786:4787   */\n      0x00\n        /* \"#utility.yul\":4783:4784   */\n      dup1\n        /* \"#utility.yul\":4776:4788   */\n      revert\n        /* \"#utility.yul\":4726:4790   */\n    tag_269:\n        /* \"#utility.yul\":4809:4816   */\n      dup1\n        /* \"#utility.yul\":4799:4816   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4317:4822   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4827:5006   */\n    tag_242:\n        /* \"#utility.yul\":4905:4918   */\n      dup1\n      mload\n        /* \"#utility.yul\":4958:4980   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":4947:4981   */\n      dup2\n      and\n        /* \"#utility.yul\":4937:4982   */\n      dup2\n      eq\n        /* \"#utility.yul\":4927:5000   */\n      tag_245\n      jumpi\n        /* \"#utility.yul\":4996:4997   */\n      0x00\n        /* \"#utility.yul\":4993:4994   */\n      dup1\n        /* \"#utility.yul\":4986:4998   */\n      revert\n        /* \"#utility.yul\":5011:5582   */\n    tag_107:\n        /* \"#utility.yul\":5114:5120   */\n      0x00\n        /* \"#utility.yul\":5122:5128   */\n      dup1\n        /* \"#utility.yul\":5130:5136   */\n      0x00\n        /* \"#utility.yul\":5138:5144   */\n      dup1\n        /* \"#utility.yul\":5146:5152   */\n      0x00\n        /* \"#utility.yul\":5199:5202   */\n      0xa0\n        /* \"#utility.yul\":5187:5196   */\n      dup7\n        /* \"#utility.yul\":5178:5185   */\n      dup9\n        /* \"#utility.yul\":5174:5197   */\n      sub\n        /* \"#utility.yul\":5170:5203   */\n      slt\n        /* \"#utility.yul\":5167:5220   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":5216:5217   */\n      0x00\n        /* \"#utility.yul\":5213:5214   */\n      dup1\n        /* \"#utility.yul\":5206:5218   */\n      revert\n        /* \"#utility.yul\":5167:5220   */\n    tag_273:\n        /* \"#utility.yul\":5239:5278   */\n      tag_274\n        /* \"#utility.yul\":5268:5277   */\n      dup7\n        /* \"#utility.yul\":5239:5278   */\n      tag_242\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5318:5320   */\n      0x20\n        /* \"#utility.yul\":5303:5321   */\n      dup8\n      add\n        /* \"#utility.yul\":5297:5322   */\n      mload\n        /* \"#utility.yul\":5384:5386   */\n      0x40\n        /* \"#utility.yul\":5369:5387   */\n      dup9\n      add\n        /* \"#utility.yul\":5363:5388   */\n      mload\n        /* \"#utility.yul\":5478:5480   */\n      0x60\n        /* \"#utility.yul\":5463:5481   */\n      dup10\n      add\n        /* \"#utility.yul\":5457:5482   */\n      mload\n        /* \"#utility.yul\":5229:5278   */\n      swap3\n      swap8\n      pop\n        /* \"#utility.yul\":5297:5322   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":5363:5388   */\n      swap4\n      pop\n        /* \"#utility.yul\":5457:5482   */\n      swap2\n      pop\n        /* \"#utility.yul\":5527:5576   */\n      tag_275\n        /* \"#utility.yul\":5571:5574   */\n      0x80\n        /* \"#utility.yul\":5556:5575   */\n      dup8\n      add\n        /* \"#utility.yul\":5527:5576   */\n      tag_242\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5517:5576   */\n      swap1\n      pop\n        /* \"#utility.yul\":5011:5582   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6298:6523   */\n    tag_120:\n        /* \"#utility.yul\":6365:6374   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6386:6397   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6383:6517   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":6439:6449   */\n      0x4e487b71\n        /* \"#utility.yul\":6434:6437   */\n      0xe0\n        /* \"#utility.yul\":6430:6450   */\n      shl\n        /* \"#utility.yul\":6427:6428   */\n      0x00\n        /* \"#utility.yul\":6420:6451   */\n      mstore\n        /* \"#utility.yul\":6474:6478   */\n      0x11\n        /* \"#utility.yul\":6471:6472   */\n      0x04\n        /* \"#utility.yul\":6464:6479   */\n      mstore\n        /* \"#utility.yul\":6502:6506   */\n      0x24\n        /* \"#utility.yul\":6499:6500   */\n      0x00\n        /* \"#utility.yul\":6492:6507   */\n      revert\n        /* \"#utility.yul\":6383:6517   */\n    tag_279:\n        /* \"#utility.yul\":6298:6523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f09044adcec01968d4d90212f613dd84e48f926c7039a2534ca70cdddd3e6ee864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_220": {
									"entryPoint": null,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2329": {
									"entryPoint": null,
									"id": 2329,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_320": {
									"entryPoint": null,
									"id": 320,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 249,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1054:8",
										"nodeType": "YulBlock",
										"src": "0:1054:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:8",
													"nodeType": "YulBlock",
													"src": "74:117:8",
													"statements": [
														{
															"nativeSrc": "84:22:8",
															"nodeType": "YulAssignment",
															"src": "84:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:8"
																},
																"nativeSrc": "93:13:8",
																"nodeType": "YulFunctionCall",
																"src": "93:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:8",
																"nodeType": "YulBlock",
																"src": "169:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:8",
																					"nodeType": "YulLiteral",
																					"src": "178:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:8",
																					"nodeType": "YulLiteral",
																					"src": "181:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:8"
																			},
																			"nativeSrc": "171:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:8"
																		},
																		"nativeSrc": "171:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:8",
																										"nodeType": "YulLiteral",
																										"src": "154:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:8",
																										"nodeType": "YulLiteral",
																										"src": "159:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:8"
																								},
																								"nativeSrc": "150:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:8",
																								"nodeType": "YulLiteral",
																								"src": "163:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:8"
																						},
																						"nativeSrc": "146:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:8"
																				},
																				"nativeSrc": "135:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:8"
																		},
																		"nativeSrc": "125:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:8"
																},
																"nativeSrc": "118:50:8",
																"nodeType": "YulFunctionCall",
																"src": "118:50:8"
															},
															"nativeSrc": "115:70:8",
															"nodeType": "YulIf",
															"src": "115:70:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:8",
														"nodeType": "YulTypedName",
														"src": "53:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:8",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "14:177:8"
											},
											{
												"body": {
													"nativeSrc": "294:195:8",
													"nodeType": "YulBlock",
													"src": "294:195:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:8",
																"nodeType": "YulBlock",
																"src": "340:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:8",
																					"nodeType": "YulLiteral",
																					"src": "349:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:8",
																					"nodeType": "YulLiteral",
																					"src": "352:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:8"
																			},
																			"nativeSrc": "342:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:8"
																		},
																		"nativeSrc": "342:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:8"
																		},
																		"nativeSrc": "311:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "336:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:8"
																},
																"nativeSrc": "307:32:8",
																"nodeType": "YulFunctionCall",
																"src": "307:32:8"
															},
															"nativeSrc": "304:52:8",
															"nodeType": "YulIf",
															"src": "304:52:8"
														},
														{
															"nativeSrc": "365:50:8",
															"nodeType": "YulAssignment",
															"src": "365:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:8"
																},
																"nativeSrc": "375:40:8",
																"nodeType": "YulFunctionCall",
																"src": "375:40:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:8"
																}
															]
														},
														{
															"nativeSrc": "424:59:8",
															"nodeType": "YulAssignment",
															"src": "424:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:8",
																				"nodeType": "YulLiteral",
																				"src": "479:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:8"
																		},
																		"nativeSrc": "464:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:8"
																},
																"nativeSrc": "434:49:8",
																"nodeType": "YulFunctionCall",
																"src": "434:49:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:8",
														"nodeType": "YulTypedName",
														"src": "252:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:8",
														"nodeType": "YulTypedName",
														"src": "263:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:8",
														"nodeType": "YulTypedName",
														"src": "275:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:8",
														"nodeType": "YulTypedName",
														"src": "283:6:8",
														"type": ""
													}
												],
												"src": "196:293:8"
											},
											{
												"body": {
													"nativeSrc": "595:102:8",
													"nodeType": "YulBlock",
													"src": "595:102:8",
													"statements": [
														{
															"nativeSrc": "605:26:8",
															"nodeType": "YulAssignment",
															"src": "605:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:8",
																		"nodeType": "YulLiteral",
																		"src": "628:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:8"
																},
																"nativeSrc": "613:18:8",
																"nodeType": "YulFunctionCall",
																"src": "613:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:8",
																								"nodeType": "YulLiteral",
																								"src": "678:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:8",
																								"nodeType": "YulLiteral",
																								"src": "683:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:8"
																						},
																						"nativeSrc": "674:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:8",
																						"nodeType": "YulLiteral",
																						"src": "687:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:8"
																				},
																				"nativeSrc": "670:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:8"
																		},
																		"nativeSrc": "658:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:8"
																},
																"nativeSrc": "640:51:8",
																"nodeType": "YulFunctionCall",
																"src": "640:51:8"
															},
															"nativeSrc": "640:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:8",
														"nodeType": "YulTypedName",
														"src": "564:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:8",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:8",
														"nodeType": "YulTypedName",
														"src": "586:4:8",
														"type": ""
													}
												],
												"src": "494:203:8"
											},
											{
												"body": {
													"nativeSrc": "876:176:8",
													"nodeType": "YulBlock",
													"src": "876:176:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "893:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "893:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "904:2:8",
																		"nodeType": "YulLiteral",
																		"src": "904:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "886:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "886:6:8"
																},
																"nativeSrc": "886:21:8",
																"nodeType": "YulFunctionCall",
																"src": "886:21:8"
															},
															"nativeSrc": "886:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "886:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "927:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "938:2:8",
																				"nodeType": "YulLiteral",
																				"src": "938:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "923:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:8"
																		},
																		"nativeSrc": "923:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "943:2:8",
																		"nodeType": "YulLiteral",
																		"src": "943:2:8",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "916:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:8"
																},
																"nativeSrc": "916:30:8",
																"nodeType": "YulFunctionCall",
																"src": "916:30:8"
															},
															"nativeSrc": "916:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "916:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "977:2:8",
																				"nodeType": "YulLiteral",
																				"src": "977:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "962:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "962:3:8"
																		},
																		"nativeSrc": "962:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "962:18:8"
																	},
																	{
																		"hexValue": "496e76616c696420707269636520666565642061646472657373",
																		"kind": "string",
																		"nativeSrc": "982:28:8",
																		"nodeType": "YulLiteral",
																		"src": "982:28:8",
																		"type": "",
																		"value": "Invalid price feed address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "955:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:8"
																},
																"nativeSrc": "955:56:8",
																"nodeType": "YulFunctionCall",
																"src": "955:56:8"
															},
															"nativeSrc": "955:56:8",
															"nodeType": "YulExpressionStatement",
															"src": "955:56:8"
														},
														{
															"nativeSrc": "1020:26:8",
															"nodeType": "YulAssignment",
															"src": "1020:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1032:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1043:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1043:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1028:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1028:3:8"
																},
																"nativeSrc": "1028:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1028:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1020:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1020:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "702:350:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "853:9:8",
														"nodeType": "YulTypedName",
														"src": "853:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "867:4:8",
														"nodeType": "YulTypedName",
														"src": "867:4:8",
														"type": ""
													}
												],
												"src": "702:350:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid price feed address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x108B CODESIZE SUB DUP1 PUSH2 0x108B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68 DUP2 PUSH2 0xF9 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420707269636520666565642061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x198 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x181 DUP4 PUSH2 0x149 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F PUSH1 0x20 DUP5 ADD PUSH2 0x149 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEE4 DUP1 PUSH2 0x1A7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741BEF1A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA5B5FB88 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA5B5FB88 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xBC269850 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xDB7C1AD1 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xF3F699F1 EQ PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x9F97ACB7 EQ PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x6301A143 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E9492F EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x1FDE7F26 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x2806BCE2 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x31D98B3F EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x138 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x384 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0x1A7 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH2 0x293 PUSH2 0xA95 JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP3 EQ PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420736F75726365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31D98B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0x31D98B3F SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420736F75726365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x45A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x457 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x46C JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x0 DUP5 SGT PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436861696E6C696E6B3A20496E76616C6964207072696365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x514 DUP4 TIMESTAMP PUSH2 0xE87 JUMP JUMPDEST GT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436861696E6C696E6B3A205374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x564 DUP5 PUSH2 0xAC2 JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0x38A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP5 EQ PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH2 0x5FD JUMPI POP PUSH2 0x384 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x618 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH2 0x38A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x687 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x684 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x38A JUMP JUMPDEST PUSH1 0x0 DUP5 SGT PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436861696E6C696E6B3A20496E76616C6964207072696365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x737 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x744 DUP4 TIMESTAMP PUSH2 0xE87 JUMP JUMPDEST GT ISZERO PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436861696E6C696E6B3A205374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x794 DUP5 PUSH2 0xAC2 JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP PUSH2 0x38A JUMP JUMPDEST PUSH2 0x7B0 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7B8 PUSH2 0xAEC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7C2 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7B8 PUSH1 0x0 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x7D4 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7DC PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL SWAP1 PUSH32 0xD373A1AC37410A4DA6DEF2D7F3F2E704ACA3E95E2E251322A031EEDDA7EB686C SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x81B PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x823 PUSH2 0xBCB JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP7 EQ PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420736F757263652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0xA8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x8FB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x90B PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x93E DUP2 PUSH2 0xB3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x949 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x951 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0x959 PUSH2 0xBCB JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP5 EQ PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xDB6 JUMP JUMPDEST TIMESTAMP DUP3 GT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4675747572652074696D657374616D7 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x1 DUP4 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD SWAP1 DUP5 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP6 SWAP2 PUSH32 0xBCD10D64FCE9DCF9568572ED92E371DF336D32649E8960A045C9548794A44B26 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xA8F PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54672219 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xAF4 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB96 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xB21 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xCF2 PUSH1 0x20 DUP5 ADD PUSH2 0xCB3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2F DUP3 PUSH2 0xCB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH2 0xD5F PUSH1 0x20 DUP9 ADD PUSH2 0xCB3 JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103830B4B9 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 DUP7 ADD MLOAD SWAP2 SWAP5 POP SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xCCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE56 DUP7 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xE7B PUSH1 0x80 DUP8 ADD PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xEA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SWAP1 DIFFICULTY 0xAD 0xCE 0xC0 NOT PUSH9 0xD4D90212F613DD84E4 DUP16 SWAP3 PUSH13 0x7039A2534CA70CDDDD3E6EE864 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "553:7260:7:-:0;;;2033:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2095:12;-1:-1:-1;;;;;1273:26:1;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;640:51:8;613:18;;1322:31:1;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1717:1:3;1822:22;;997:7:2;:15;;-1:-1:-1;;997:15:2;;;-1:-1:-1;;;;;2127:24:7;::::1;2119:63;;;::::0;-1:-1:-1;;;2119:63:7;;904:2:8;2119:63:7::1;::::0;::::1;886:21:8::0;943:2;923:18;;;916:30;982:28;962:18;;;955:56;1028:18;;2119:63:7::1;702:350:8::0;2119:63:7::1;-1:-1:-1::0;2192:9:7::1;:45:::0;;-1:-1:-1;;;;;2192:45:7;;::::1;;;-1:-1:-1::0;;;;;;2192:45:7;;::::1;::::0;;;::::1;::::0;;553:7260;;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;702:350::-;553:7260:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CHAINLINK_STALENESS_THRESHOLD_2280": {
									"entryPoint": null,
									"id": 2280,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@EUR_USD_PAIR_2266": {
									"entryPoint": null,
									"id": 2266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRICE_VALIDITY_PERIOD_2276": {
									"entryPoint": null,
									"id": 2276,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 2709,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_346": {
									"entryPoint": 3019,
									"id": 346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_284": {
									"entryPoint": 2958,
									"id": 284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_257": {
									"entryPoint": 3108,
									"id": 257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_268": {
									"entryPoint": 3178,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 2878,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_300": {
									"entryPoint": 2796,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addOracleSource_2654": {
									"entryPoint": 2067,
									"id": 2654,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@getAggregatedPrice_2513": {
									"entryPoint": 796,
									"id": 2513,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@getPrice_2494": {
									"entryPoint": 1399,
									"id": 2494,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@getSourcePrice_2597": {
									"entryPoint": 913,
									"id": 2597,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@latestPrices_2272": {
									"entryPoint": null,
									"id": 2272,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2697": {
									"entryPoint": 1996,
									"id": 2697,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_245": {
									"entryPoint": null,
									"id": 245,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceFeed_2259": {
									"entryPoint": null,
									"id": 2259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeOracleSource_2683": {
									"entryPoint": 651,
									"id": 2683,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_144": {
									"entryPoint": 1978,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toUint256_1314": {
									"entryPoint": 2754,
									"id": 1314,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_172": {
									"entryPoint": 2307,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2707": {
									"entryPoint": 1960,
									"id": 2707,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatePrice_2387": {
									"entryPoint": 2369,
									"id": 2387,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_addresst_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 3382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256": {
									"entryPoint": 3460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool_fromMemory": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 3611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9401:8",
										"nodeType": "YulBlock",
										"src": "0:9401:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:8",
													"nodeType": "YulBlock",
													"src": "63:124:8",
													"statements": [
														{
															"nativeSrc": "73:29:8",
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nativeSrc": "82:20:8",
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:8",
																"nodeType": "YulBlock",
																"src": "165:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:8",
																					"nodeType": "YulLiteral",
																					"src": "174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:8",
																					"nodeType": "YulLiteral",
																					"src": "177:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:8"
																			},
																			"nativeSrc": "167:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:8"
																		},
																		"nativeSrc": "167:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:8",
																										"nodeType": "YulLiteral",
																										"src": "150:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:8",
																										"nodeType": "YulLiteral",
																										"src": "155:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:8"
																								},
																								"nativeSrc": "146:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:8",
																								"nodeType": "YulLiteral",
																								"src": "159:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:8"
																						},
																						"nativeSrc": "142:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nativeSrc": "131:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nativeSrc": "121:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nativeSrc": "114:50:8",
																"nodeType": "YulFunctionCall",
																"src": "114:50:8"
															},
															"nativeSrc": "111:70:8",
															"nodeType": "YulIf",
															"src": "111:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:8",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:8",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:173:8"
											},
											{
												"body": {
													"nativeSrc": "279:213:8",
													"nodeType": "YulBlock",
													"src": "279:213:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:8",
																"nodeType": "YulBlock",
																"src": "325:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:8",
																					"nodeType": "YulLiteral",
																					"src": "334:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:8",
																					"nodeType": "YulLiteral",
																					"src": "337:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:8"
																			},
																			"nativeSrc": "327:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:8"
																		},
																		"nativeSrc": "327:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:8"
																		},
																		"nativeSrc": "296:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:8",
																		"nodeType": "YulLiteral",
																		"src": "321:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:8"
																},
																"nativeSrc": "292:32:8",
																"nodeType": "YulFunctionCall",
																"src": "292:32:8"
															},
															"nativeSrc": "289:52:8",
															"nodeType": "YulIf",
															"src": "289:52:8"
														},
														{
															"nativeSrc": "350:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "350:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "363:1:8",
																"nodeType": "YulLiteral",
																"src": "363:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "354:5:8",
																	"nodeType": "YulTypedName",
																	"src": "354:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "373:32:8",
															"nodeType": "YulAssignment",
															"src": "373:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "395:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "382:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "382:12:8"
																},
																"nativeSrc": "382:23:8",
																"nodeType": "YulFunctionCall",
																"src": "382:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "373:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "373:5:8"
																}
															]
														},
														{
															"nativeSrc": "414:15:8",
															"nodeType": "YulAssignment",
															"src": "414:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "424:5:8",
																"nodeType": "YulIdentifier",
																"src": "424:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "414:6:8"
																}
															]
														},
														{
															"nativeSrc": "438:48:8",
															"nodeType": "YulAssignment",
															"src": "438:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "471:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "471:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "482:2:8",
																				"nodeType": "YulLiteral",
																				"src": "482:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "467:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "467:3:8"
																		},
																		"nativeSrc": "467:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "467:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "448:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "448:18:8"
																},
																"nativeSrc": "448:38:8",
																"nodeType": "YulFunctionCall",
																"src": "448:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "438:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "192:300:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:8",
														"nodeType": "YulTypedName",
														"src": "237:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:8",
														"nodeType": "YulTypedName",
														"src": "248:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:8",
														"nodeType": "YulTypedName",
														"src": "260:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:8",
														"nodeType": "YulTypedName",
														"src": "268:6:8",
														"type": ""
													}
												],
												"src": "192:300:8"
											},
											{
												"body": {
													"nativeSrc": "567:156:8",
													"nodeType": "YulBlock",
													"src": "567:156:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "613:16:8",
																"nodeType": "YulBlock",
																"src": "613:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "622:1:8",
																					"nodeType": "YulLiteral",
																					"src": "622:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "625:1:8",
																					"nodeType": "YulLiteral",
																					"src": "625:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "615:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "615:6:8"
																			},
																			"nativeSrc": "615:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "615:12:8"
																		},
																		"nativeSrc": "615:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "615:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "588:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "597:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "584:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:8"
																		},
																		"nativeSrc": "584:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "584:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "609:2:8",
																		"nodeType": "YulLiteral",
																		"src": "609:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "580:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:8"
																},
																"nativeSrc": "580:32:8",
																"nodeType": "YulFunctionCall",
																"src": "580:32:8"
															},
															"nativeSrc": "577:52:8",
															"nodeType": "YulIf",
															"src": "577:52:8"
														},
														{
															"nativeSrc": "638:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "638:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "651:1:8",
																"nodeType": "YulLiteral",
																"src": "651:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "642:5:8",
																	"nodeType": "YulTypedName",
																	"src": "642:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "661:32:8",
															"nodeType": "YulAssignment",
															"src": "661:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "683:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "683:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "670:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "670:12:8"
																},
																"nativeSrc": "670:23:8",
																"nodeType": "YulFunctionCall",
																"src": "670:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "661:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "661:5:8"
																}
															]
														},
														{
															"nativeSrc": "702:15:8",
															"nodeType": "YulAssignment",
															"src": "702:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "712:5:8",
																"nodeType": "YulIdentifier",
																"src": "712:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "702:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "702:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "497:226:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "533:9:8",
														"nodeType": "YulTypedName",
														"src": "533:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "544:7:8",
														"nodeType": "YulTypedName",
														"src": "544:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "556:6:8",
														"nodeType": "YulTypedName",
														"src": "556:6:8",
														"type": ""
													}
												],
												"src": "497:226:8"
											},
											{
												"body": {
													"nativeSrc": "879:178:8",
													"nodeType": "YulBlock",
													"src": "879:178:8",
													"statements": [
														{
															"nativeSrc": "889:26:8",
															"nodeType": "YulAssignment",
															"src": "889:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "901:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "901:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "912:2:8",
																		"nodeType": "YulLiteral",
																		"src": "912:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "897:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "897:3:8"
																},
																"nativeSrc": "897:18:8",
																"nodeType": "YulFunctionCall",
																"src": "897:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "889:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "889:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "931:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "931:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "942:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "924:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:8"
																},
																"nativeSrc": "924:25:8",
																"nodeType": "YulFunctionCall",
																"src": "924:25:8"
															},
															"nativeSrc": "924:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "924:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "980:2:8",
																				"nodeType": "YulLiteral",
																				"src": "980:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "965:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:8"
																		},
																		"nativeSrc": "965:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "965:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "985:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "985:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "958:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:8"
																},
																"nativeSrc": "958:34:8",
																"nodeType": "YulFunctionCall",
																"src": "958:34:8"
															},
															"nativeSrc": "958:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "958:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1012:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1012:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1023:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1023:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1008:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1008:3:8"
																		},
																		"nativeSrc": "1008:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1008:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "1042:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1042:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1035:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1035:6:8"
																				},
																				"nativeSrc": "1035:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1035:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1028:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1028:6:8"
																		},
																		"nativeSrc": "1028:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1028:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1001:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1001:6:8"
																},
																"nativeSrc": "1001:50:8",
																"nodeType": "YulFunctionCall",
																"src": "1001:50:8"
															},
															"nativeSrc": "1001:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "1001:50:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "728:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "832:9:8",
														"nodeType": "YulTypedName",
														"src": "832:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "843:6:8",
														"nodeType": "YulTypedName",
														"src": "843:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "851:6:8",
														"nodeType": "YulTypedName",
														"src": "851:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "859:6:8",
														"nodeType": "YulTypedName",
														"src": "859:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "870:4:8",
														"nodeType": "YulTypedName",
														"src": "870:4:8",
														"type": ""
													}
												],
												"src": "728:329:8"
											},
											{
												"body": {
													"nativeSrc": "1132:116:8",
													"nodeType": "YulBlock",
													"src": "1132:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1178:16:8",
																"nodeType": "YulBlock",
																"src": "1178:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1187:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1190:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1180:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1180:6:8"
																			},
																			"nativeSrc": "1180:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1180:12:8"
																		},
																		"nativeSrc": "1180:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1180:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1153:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1153:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1162:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1162:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1149:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:8"
																		},
																		"nativeSrc": "1149:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1174:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1174:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1145:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1145:3:8"
																},
																"nativeSrc": "1145:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1145:32:8"
															},
															"nativeSrc": "1142:52:8",
															"nodeType": "YulIf",
															"src": "1142:52:8"
														},
														{
															"nativeSrc": "1203:39:8",
															"nodeType": "YulAssignment",
															"src": "1203:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1232:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1232:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1213:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1213:18:8"
																},
																"nativeSrc": "1213:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1213:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1203:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1203:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1062:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1098:9:8",
														"nodeType": "YulTypedName",
														"src": "1098:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1109:7:8",
														"nodeType": "YulTypedName",
														"src": "1109:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1121:6:8",
														"nodeType": "YulTypedName",
														"src": "1121:6:8",
														"type": ""
													}
												],
												"src": "1062:186:8"
											},
											{
												"body": {
													"nativeSrc": "1348:92:8",
													"nodeType": "YulBlock",
													"src": "1348:92:8",
													"statements": [
														{
															"nativeSrc": "1358:26:8",
															"nodeType": "YulAssignment",
															"src": "1358:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1370:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1370:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1381:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1381:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1366:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1366:3:8"
																},
																"nativeSrc": "1366:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1366:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1358:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1358:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1400:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1400:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1425:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1425:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1418:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1418:6:8"
																				},
																				"nativeSrc": "1418:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1418:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1411:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1411:6:8"
																		},
																		"nativeSrc": "1411:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1411:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1393:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:8"
																},
																"nativeSrc": "1393:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1393:41:8"
															},
															"nativeSrc": "1393:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1393:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1253:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1317:9:8",
														"nodeType": "YulTypedName",
														"src": "1317:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1328:6:8",
														"nodeType": "YulTypedName",
														"src": "1328:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1339:4:8",
														"nodeType": "YulTypedName",
														"src": "1339:4:8",
														"type": ""
													}
												],
												"src": "1253:187:8"
											},
											{
												"body": {
													"nativeSrc": "1546:76:8",
													"nodeType": "YulBlock",
													"src": "1546:76:8",
													"statements": [
														{
															"nativeSrc": "1556:26:8",
															"nodeType": "YulAssignment",
															"src": "1556:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1568:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1568:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1579:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1579:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1564:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1564:3:8"
																},
																"nativeSrc": "1564:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1564:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1556:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1556:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1598:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1598:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1609:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1609:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1591:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:8"
																},
																"nativeSrc": "1591:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1591:25:8"
															},
															"nativeSrc": "1591:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1591:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1445:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1515:9:8",
														"nodeType": "YulTypedName",
														"src": "1515:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1526:6:8",
														"nodeType": "YulTypedName",
														"src": "1526:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1537:4:8",
														"nodeType": "YulTypedName",
														"src": "1537:4:8",
														"type": ""
													}
												],
												"src": "1445:177:8"
											},
											{
												"body": {
													"nativeSrc": "1756:102:8",
													"nodeType": "YulBlock",
													"src": "1756:102:8",
													"statements": [
														{
															"nativeSrc": "1766:26:8",
															"nodeType": "YulAssignment",
															"src": "1766:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1778:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1778:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1789:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1789:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1774:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1774:3:8"
																},
																"nativeSrc": "1774:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1774:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1766:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1766:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1808:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1808:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1823:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1823:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1839:3:8",
																								"nodeType": "YulLiteral",
																								"src": "1839:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1844:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1844:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1835:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1835:3:8"
																						},
																						"nativeSrc": "1835:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1835:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1848:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1848:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1831:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1831:3:8"
																				},
																				"nativeSrc": "1831:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1831:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1819:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1819:3:8"
																		},
																		"nativeSrc": "1819:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1819:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1801:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1801:6:8"
																},
																"nativeSrc": "1801:51:8",
																"nodeType": "YulFunctionCall",
																"src": "1801:51:8"
															},
															"nativeSrc": "1801:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "1801:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "1627:231:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1725:9:8",
														"nodeType": "YulTypedName",
														"src": "1725:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1736:6:8",
														"nodeType": "YulTypedName",
														"src": "1736:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1747:4:8",
														"nodeType": "YulTypedName",
														"src": "1747:4:8",
														"type": ""
													}
												],
												"src": "1627:231:8"
											},
											{
												"body": {
													"nativeSrc": "1964:102:8",
													"nodeType": "YulBlock",
													"src": "1964:102:8",
													"statements": [
														{
															"nativeSrc": "1974:26:8",
															"nodeType": "YulAssignment",
															"src": "1974:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1986:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1986:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1997:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1997:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1982:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1982:3:8"
																},
																"nativeSrc": "1982:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1982:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1974:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1974:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2016:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2016:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2031:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2031:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2047:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2047:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2052:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2052:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2043:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2043:3:8"
																						},
																						"nativeSrc": "2043:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2043:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2056:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2056:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2039:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2039:3:8"
																				},
																				"nativeSrc": "2039:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2039:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2027:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2027:3:8"
																		},
																		"nativeSrc": "2027:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2027:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2009:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:8"
																},
																"nativeSrc": "2009:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2009:51:8"
															},
															"nativeSrc": "2009:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2009:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1863:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1933:9:8",
														"nodeType": "YulTypedName",
														"src": "1933:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1944:6:8",
														"nodeType": "YulTypedName",
														"src": "1944:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1955:4:8",
														"nodeType": "YulTypedName",
														"src": "1955:4:8",
														"type": ""
													}
												],
												"src": "1863:203:8"
											},
											{
												"body": {
													"nativeSrc": "2226:628:8",
													"nodeType": "YulBlock",
													"src": "2226:628:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2273:16:8",
																"nodeType": "YulBlock",
																"src": "2273:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2282:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2285:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2275:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:8"
																			},
																			"nativeSrc": "2275:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:8"
																		},
																		"nativeSrc": "2275:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2247:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2247:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2256:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2256:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2243:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2243:3:8"
																		},
																		"nativeSrc": "2243:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2243:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2268:3:8",
																		"nodeType": "YulLiteral",
																		"src": "2268:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2239:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2239:3:8"
																},
																"nativeSrc": "2239:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2239:33:8"
															},
															"nativeSrc": "2236:53:8",
															"nodeType": "YulIf",
															"src": "2236:53:8"
														},
														{
															"nativeSrc": "2298:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2298:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2311:1:8",
																"nodeType": "YulLiteral",
																"src": "2311:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2302:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2302:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2321:32:8",
															"nodeType": "YulAssignment",
															"src": "2321:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2343:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2343:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2330:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2330:12:8"
																},
																"nativeSrc": "2330:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2330:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2321:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2321:5:8"
																}
															]
														},
														{
															"nativeSrc": "2362:15:8",
															"nodeType": "YulAssignment",
															"src": "2362:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "2372:5:8",
																"nodeType": "YulIdentifier",
																"src": "2372:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2362:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:8"
																}
															]
														},
														{
															"nativeSrc": "2386:48:8",
															"nodeType": "YulAssignment",
															"src": "2386:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2419:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2419:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2430:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2430:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2415:3:8"
																		},
																		"nativeSrc": "2415:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2415:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2396:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2396:18:8"
																},
																"nativeSrc": "2396:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2396:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2386:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2386:6:8"
																}
															]
														},
														{
															"nativeSrc": "2443:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2443:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2458:1:8",
																"nodeType": "YulLiteral",
																"src": "2458:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2447:7:8",
																	"nodeType": "YulTypedName",
																	"src": "2447:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2468:43:8",
															"nodeType": "YulAssignment",
															"src": "2468:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2496:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2496:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2507:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2507:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2492:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:8"
																		},
																		"nativeSrc": "2492:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2492:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2479:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2479:12:8"
																},
																"nativeSrc": "2479:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2479:32:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2468:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2468:7:8"
																}
															]
														},
														{
															"nativeSrc": "2520:17:8",
															"nodeType": "YulAssignment",
															"src": "2520:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "2530:7:8",
																"nodeType": "YulIdentifier",
																"src": "2530:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2520:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2520:6:8"
																}
															]
														},
														{
															"nativeSrc": "2546:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2546:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2561:1:8",
																"nodeType": "YulLiteral",
																"src": "2561:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2550:7:8",
																	"nodeType": "YulTypedName",
																	"src": "2550:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2571:43:8",
															"nodeType": "YulAssignment",
															"src": "2571:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2599:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2599:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2610:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2610:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2595:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2595:3:8"
																		},
																		"nativeSrc": "2595:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2582:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2582:12:8"
																},
																"nativeSrc": "2582:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2582:32:8"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2571:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2571:7:8"
																}
															]
														},
														{
															"nativeSrc": "2623:17:8",
															"nodeType": "YulAssignment",
															"src": "2623:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "2633:7:8",
																"nodeType": "YulIdentifier",
																"src": "2633:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2623:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:8"
																}
															]
														},
														{
															"nativeSrc": "2649:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2649:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2664:1:8",
																"nodeType": "YulLiteral",
																"src": "2664:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "2653:7:8",
																	"nodeType": "YulTypedName",
																	"src": "2653:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2674:44:8",
															"nodeType": "YulAssignment",
															"src": "2674:44:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2702:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2713:3:8",
																				"nodeType": "YulLiteral",
																				"src": "2713:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2698:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:8"
																		},
																		"nativeSrc": "2698:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2685:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2685:12:8"
																},
																"nativeSrc": "2685:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2685:33:8"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "2674:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2674:7:8"
																}
															]
														},
														{
															"nativeSrc": "2727:17:8",
															"nodeType": "YulAssignment",
															"src": "2727:17:8",
															"value": {
																"name": "value_3",
																"nativeSrc": "2737:7:8",
																"nodeType": "YulIdentifier",
																"src": "2737:7:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2727:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2727:6:8"
																}
															]
														},
														{
															"nativeSrc": "2753:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2753:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2768:1:8",
																"nodeType": "YulLiteral",
																"src": "2768:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "2757:7:8",
																	"nodeType": "YulTypedName",
																	"src": "2757:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2778:44:8",
															"nodeType": "YulAssignment",
															"src": "2778:44:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2806:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2806:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2817:3:8",
																				"nodeType": "YulLiteral",
																				"src": "2817:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2802:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:8"
																		},
																		"nativeSrc": "2802:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2802:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2789:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2789:12:8"
																},
																"nativeSrc": "2789:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2789:33:8"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "2778:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2778:7:8"
																}
															]
														},
														{
															"nativeSrc": "2831:17:8",
															"nodeType": "YulAssignment",
															"src": "2831:17:8",
															"value": {
																"name": "value_4",
																"nativeSrc": "2841:7:8",
																"nodeType": "YulIdentifier",
																"src": "2841:7:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "2831:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_addresst_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "2071:783:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2152:9:8",
														"nodeType": "YulTypedName",
														"src": "2152:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2163:7:8",
														"nodeType": "YulTypedName",
														"src": "2163:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2175:6:8",
														"nodeType": "YulTypedName",
														"src": "2175:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2183:6:8",
														"nodeType": "YulTypedName",
														"src": "2183:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2191:6:8",
														"nodeType": "YulTypedName",
														"src": "2191:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2199:6:8",
														"nodeType": "YulTypedName",
														"src": "2199:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2207:6:8",
														"nodeType": "YulTypedName",
														"src": "2207:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2215:6:8",
														"nodeType": "YulTypedName",
														"src": "2215:6:8",
														"type": ""
													}
												],
												"src": "2071:783:8"
											},
											{
												"body": {
													"nativeSrc": "2960:76:8",
													"nodeType": "YulBlock",
													"src": "2960:76:8",
													"statements": [
														{
															"nativeSrc": "2970:26:8",
															"nodeType": "YulAssignment",
															"src": "2970:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2982:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2982:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2993:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2993:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2978:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2978:3:8"
																},
																"nativeSrc": "2978:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2978:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2970:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2970:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3012:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3012:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3023:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3005:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3005:6:8"
																},
																"nativeSrc": "3005:25:8",
																"nodeType": "YulFunctionCall",
																"src": "3005:25:8"
															},
															"nativeSrc": "3005:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "3005:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2859:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2929:9:8",
														"nodeType": "YulTypedName",
														"src": "2929:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2940:6:8",
														"nodeType": "YulTypedName",
														"src": "2940:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2951:4:8",
														"nodeType": "YulTypedName",
														"src": "2951:4:8",
														"type": ""
													}
												],
												"src": "2859:177:8"
											},
											{
												"body": {
													"nativeSrc": "3162:466:8",
													"nodeType": "YulBlock",
													"src": "3162:466:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3209:16:8",
																"nodeType": "YulBlock",
																"src": "3209:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3218:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3218:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3221:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3221:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3211:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3211:6:8"
																			},
																			"nativeSrc": "3211:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3211:12:8"
																		},
																		"nativeSrc": "3211:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3211:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3183:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3183:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3192:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3192:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3179:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3179:3:8"
																		},
																		"nativeSrc": "3179:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3179:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3204:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3204:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3175:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3175:3:8"
																},
																"nativeSrc": "3175:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3175:33:8"
															},
															"nativeSrc": "3172:53:8",
															"nodeType": "YulIf",
															"src": "3172:53:8"
														},
														{
															"nativeSrc": "3234:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3234:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3247:1:8",
																"nodeType": "YulLiteral",
																"src": "3247:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3238:5:8",
																	"nodeType": "YulTypedName",
																	"src": "3238:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3257:32:8",
															"nodeType": "YulAssignment",
															"src": "3257:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3279:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3279:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3266:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3266:12:8"
																},
																"nativeSrc": "3266:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3266:23:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3257:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3257:5:8"
																}
															]
														},
														{
															"nativeSrc": "3298:15:8",
															"nodeType": "YulAssignment",
															"src": "3298:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "3308:5:8",
																"nodeType": "YulIdentifier",
																"src": "3308:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3298:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3298:6:8"
																}
															]
														},
														{
															"nativeSrc": "3322:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3322:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3337:1:8",
																"nodeType": "YulLiteral",
																"src": "3337:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3326:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3326:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3347:43:8",
															"nodeType": "YulAssignment",
															"src": "3347:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3375:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3375:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3386:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3386:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3371:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3371:3:8"
																		},
																		"nativeSrc": "3371:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3371:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3358:12:8"
																},
																"nativeSrc": "3358:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3358:32:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3347:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3347:7:8"
																}
															]
														},
														{
															"nativeSrc": "3399:17:8",
															"nodeType": "YulAssignment",
															"src": "3399:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "3409:7:8",
																"nodeType": "YulIdentifier",
																"src": "3409:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3399:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:8"
																}
															]
														},
														{
															"nativeSrc": "3425:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3425:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3440:1:8",
																"nodeType": "YulLiteral",
																"src": "3440:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3429:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3429:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3450:43:8",
															"nodeType": "YulAssignment",
															"src": "3450:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3478:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3478:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3489:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3489:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3474:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:8"
																		},
																		"nativeSrc": "3474:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3474:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3461:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3461:12:8"
																},
																"nativeSrc": "3461:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3461:32:8"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "3450:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3450:7:8"
																}
															]
														},
														{
															"nativeSrc": "3502:17:8",
															"nodeType": "YulAssignment",
															"src": "3502:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "3512:7:8",
																"nodeType": "YulIdentifier",
																"src": "3512:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3502:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:8"
																}
															]
														},
														{
															"nativeSrc": "3528:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3528:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3543:1:8",
																"nodeType": "YulLiteral",
																"src": "3543:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3532:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3532:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3553:43:8",
															"nodeType": "YulAssignment",
															"src": "3553:43:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3581:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3581:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3592:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3592:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3577:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3577:3:8"
																		},
																		"nativeSrc": "3577:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3577:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3564:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3564:12:8"
																},
																"nativeSrc": "3564:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3564:32:8"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "3553:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3553:7:8"
																}
															]
														},
														{
															"nativeSrc": "3605:17:8",
															"nodeType": "YulAssignment",
															"src": "3605:17:8",
															"value": {
																"name": "value_3",
																"nativeSrc": "3615:7:8",
																"nodeType": "YulIdentifier",
																"src": "3615:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3605:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256",
												"nativeSrc": "3041:587:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3104:9:8",
														"nodeType": "YulTypedName",
														"src": "3104:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3115:7:8",
														"nodeType": "YulTypedName",
														"src": "3115:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3127:6:8",
														"nodeType": "YulTypedName",
														"src": "3127:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3135:6:8",
														"nodeType": "YulTypedName",
														"src": "3135:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3143:6:8",
														"nodeType": "YulTypedName",
														"src": "3143:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3151:6:8",
														"nodeType": "YulTypedName",
														"src": "3151:6:8",
														"type": ""
													}
												],
												"src": "3041:587:8"
											},
											{
												"body": {
													"nativeSrc": "3807:162:8",
													"nodeType": "YulBlock",
													"src": "3807:162:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3824:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3824:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3835:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3835:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3817:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3817:6:8"
																},
																"nativeSrc": "3817:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3817:21:8"
															},
															"nativeSrc": "3817:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3817:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3858:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3858:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3869:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3869:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3854:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3854:3:8"
																		},
																		"nativeSrc": "3854:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3854:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3874:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3874:2:8",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3847:6:8"
																},
																"nativeSrc": "3847:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3847:30:8"
															},
															"nativeSrc": "3847:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3847:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3897:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3897:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3908:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3908:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3893:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3893:3:8"
																		},
																		"nativeSrc": "3893:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3893:18:8"
																	},
																	{
																		"hexValue": "496e76616c69642070616972",
																		"kind": "string",
																		"nativeSrc": "3913:14:8",
																		"nodeType": "YulLiteral",
																		"src": "3913:14:8",
																		"type": "",
																		"value": "Invalid pair"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3886:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:8"
																},
																"nativeSrc": "3886:42:8",
																"nodeType": "YulFunctionCall",
																"src": "3886:42:8"
															},
															"nativeSrc": "3886:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "3886:42:8"
														},
														{
															"nativeSrc": "3937:26:8",
															"nodeType": "YulAssignment",
															"src": "3937:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3949:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3949:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3960:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3960:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:8"
																},
																"nativeSrc": "3945:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3945:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3937:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3937:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3633:336:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3784:9:8",
														"nodeType": "YulTypedName",
														"src": "3784:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3798:4:8",
														"nodeType": "YulTypedName",
														"src": "3798:4:8",
														"type": ""
													}
												],
												"src": "3633:336:8"
											},
											{
												"body": {
													"nativeSrc": "4148:164:8",
													"nodeType": "YulBlock",
													"src": "4148:164:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4165:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4165:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4176:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4176:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4158:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4158:6:8"
																},
																"nativeSrc": "4158:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4158:21:8"
															},
															"nativeSrc": "4158:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4158:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4199:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4199:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4210:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4210:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4195:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4195:3:8"
																		},
																		"nativeSrc": "4195:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4195:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4215:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4215:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4188:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4188:6:8"
																},
																"nativeSrc": "4188:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4188:30:8"
															},
															"nativeSrc": "4188:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4188:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4238:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4238:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4249:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4249:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4234:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4234:3:8"
																		},
																		"nativeSrc": "4234:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4234:18:8"
																	},
																	{
																		"hexValue": "496e76616c696420736f75726365",
																		"kind": "string",
																		"nativeSrc": "4254:16:8",
																		"nodeType": "YulLiteral",
																		"src": "4254:16:8",
																		"type": "",
																		"value": "Invalid source"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4227:6:8"
																},
																"nativeSrc": "4227:44:8",
																"nodeType": "YulFunctionCall",
																"src": "4227:44:8"
															},
															"nativeSrc": "4227:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "4227:44:8"
														},
														{
															"nativeSrc": "4280:26:8",
															"nodeType": "YulAssignment",
															"src": "4280:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4292:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4303:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4303:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4288:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4288:3:8"
																},
																"nativeSrc": "4288:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4288:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4280:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4280:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3974:338:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4125:9:8",
														"nodeType": "YulTypedName",
														"src": "4125:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4139:4:8",
														"nodeType": "YulTypedName",
														"src": "4139:4:8",
														"type": ""
													}
												],
												"src": "3974:338:8"
											},
											{
												"body": {
													"nativeSrc": "4429:393:8",
													"nodeType": "YulBlock",
													"src": "4429:393:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4475:16:8",
																"nodeType": "YulBlock",
																"src": "4475:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4484:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4484:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4487:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4487:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4477:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4477:6:8"
																			},
																			"nativeSrc": "4477:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4477:12:8"
																		},
																		"nativeSrc": "4477:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4477:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4450:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4450:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4459:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4446:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4446:3:8"
																		},
																		"nativeSrc": "4446:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4446:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4471:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4442:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4442:3:8"
																},
																"nativeSrc": "4442:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4442:32:8"
															},
															"nativeSrc": "4439:52:8",
															"nodeType": "YulIf",
															"src": "4439:52:8"
														},
														{
															"nativeSrc": "4500:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4500:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4513:1:8",
																"nodeType": "YulLiteral",
																"src": "4513:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4504:5:8",
																	"nodeType": "YulTypedName",
																	"src": "4504:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4523:25:8",
															"nodeType": "YulAssignment",
															"src": "4523:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4538:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4538:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4532:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4532:5:8"
																},
																"nativeSrc": "4532:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4532:16:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4523:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4523:5:8"
																}
															]
														},
														{
															"nativeSrc": "4557:15:8",
															"nodeType": "YulAssignment",
															"src": "4557:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "4567:5:8",
																"nodeType": "YulIdentifier",
																"src": "4567:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4557:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4557:6:8"
																}
															]
														},
														{
															"nativeSrc": "4581:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4581:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "4596:1:8",
																"nodeType": "YulLiteral",
																"src": "4596:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4585:7:8",
																	"nodeType": "YulTypedName",
																	"src": "4585:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4606:36:8",
															"nodeType": "YulAssignment",
															"src": "4606:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4627:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4627:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4638:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4638:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4623:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4623:3:8"
																		},
																		"nativeSrc": "4623:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4623:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4617:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4617:5:8"
																},
																"nativeSrc": "4617:25:8",
																"nodeType": "YulFunctionCall",
																"src": "4617:25:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4606:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4606:7:8"
																}
															]
														},
														{
															"nativeSrc": "4651:17:8",
															"nodeType": "YulAssignment",
															"src": "4651:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "4661:7:8",
																"nodeType": "YulIdentifier",
																"src": "4661:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4651:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:8"
																}
															]
														},
														{
															"nativeSrc": "4677:40:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4677:40:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4702:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4702:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4713:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4713:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4698:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:8"
																		},
																		"nativeSrc": "4698:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4698:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4692:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4692:5:8"
																},
																"nativeSrc": "4692:25:8",
																"nodeType": "YulFunctionCall",
																"src": "4692:25:8"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "4681:7:8",
																	"nodeType": "YulTypedName",
																	"src": "4681:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4774:16:8",
																"nodeType": "YulBlock",
																"src": "4774:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4783:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4783:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4786:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4786:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4776:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4776:6:8"
																			},
																			"nativeSrc": "4776:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4776:12:8"
																		},
																		"nativeSrc": "4776:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4776:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nativeSrc": "4739:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4739:7:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_2",
																								"nativeSrc": "4762:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "4762:7:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4755:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "4755:6:8"
																						},
																						"nativeSrc": "4755:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4755:15:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4748:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4748:6:8"
																				},
																				"nativeSrc": "4748:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4748:23:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4736:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4736:2:8"
																		},
																		"nativeSrc": "4736:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4736:36:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4729:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4729:6:8"
																},
																"nativeSrc": "4729:44:8",
																"nodeType": "YulFunctionCall",
																"src": "4729:44:8"
															},
															"nativeSrc": "4726:64:8",
															"nodeType": "YulIf",
															"src": "4726:64:8"
														},
														{
															"nativeSrc": "4799:17:8",
															"nodeType": "YulAssignment",
															"src": "4799:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "4809:7:8",
																"nodeType": "YulIdentifier",
																"src": "4809:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4799:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4799:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool_fromMemory",
												"nativeSrc": "4317:505:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4379:9:8",
														"nodeType": "YulTypedName",
														"src": "4379:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4390:7:8",
														"nodeType": "YulTypedName",
														"src": "4390:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4402:6:8",
														"nodeType": "YulTypedName",
														"src": "4402:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4410:6:8",
														"nodeType": "YulTypedName",
														"src": "4410:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4418:6:8",
														"nodeType": "YulTypedName",
														"src": "4418:6:8",
														"type": ""
													}
												],
												"src": "4317:505:8"
											},
											{
												"body": {
													"nativeSrc": "4886:120:8",
													"nodeType": "YulBlock",
													"src": "4886:120:8",
													"statements": [
														{
															"nativeSrc": "4896:22:8",
															"nodeType": "YulAssignment",
															"src": "4896:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4911:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4911:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4905:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4905:5:8"
																},
																"nativeSrc": "4905:13:8",
																"nodeType": "YulFunctionCall",
																"src": "4905:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4896:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4896:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4984:16:8",
																"nodeType": "YulBlock",
																"src": "4984:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4993:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4993:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4996:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4996:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4986:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4986:6:8"
																			},
																			"nativeSrc": "4986:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4986:12:8"
																		},
																		"nativeSrc": "4986:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4986:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4940:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4940:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4951:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4951:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4958:22:8",
																						"nodeType": "YulLiteral",
																						"src": "4958:22:8",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4947:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4947:3:8"
																				},
																				"nativeSrc": "4947:34:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4947:34:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4937:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4937:2:8"
																		},
																		"nativeSrc": "4937:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4937:45:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4930:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4930:6:8"
																},
																"nativeSrc": "4930:53:8",
																"nodeType": "YulFunctionCall",
																"src": "4930:53:8"
															},
															"nativeSrc": "4927:73:8",
															"nodeType": "YulIf",
															"src": "4927:73:8"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "4827:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4865:6:8",
														"nodeType": "YulTypedName",
														"src": "4865:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4876:5:8",
														"nodeType": "YulTypedName",
														"src": "4876:5:8",
														"type": ""
													}
												],
												"src": "4827:179:8"
											},
											{
												"body": {
													"nativeSrc": "5157:425:8",
													"nodeType": "YulBlock",
													"src": "5157:425:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5204:16:8",
																"nodeType": "YulBlock",
																"src": "5204:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5213:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5213:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5216:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5216:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5206:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5206:6:8"
																			},
																			"nativeSrc": "5206:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5206:12:8"
																		},
																		"nativeSrc": "5206:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5206:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5178:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5178:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5187:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5187:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5174:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5174:3:8"
																		},
																		"nativeSrc": "5174:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5174:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5199:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5199:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5170:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5170:3:8"
																},
																"nativeSrc": "5170:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5170:33:8"
															},
															"nativeSrc": "5167:53:8",
															"nodeType": "YulIf",
															"src": "5167:53:8"
														},
														{
															"nativeSrc": "5229:49:8",
															"nodeType": "YulAssignment",
															"src": "5229:49:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5268:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5268:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "5239:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "5239:28:8"
																},
																"nativeSrc": "5239:39:8",
																"nodeType": "YulFunctionCall",
																"src": "5239:39:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5229:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5229:6:8"
																}
															]
														},
														{
															"nativeSrc": "5287:35:8",
															"nodeType": "YulAssignment",
															"src": "5287:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5307:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5307:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5318:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5318:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5303:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5303:3:8"
																		},
																		"nativeSrc": "5303:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5303:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5297:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5297:5:8"
																},
																"nativeSrc": "5297:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5297:25:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5287:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5287:6:8"
																}
															]
														},
														{
															"nativeSrc": "5331:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5331:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5344:1:8",
																"nodeType": "YulLiteral",
																"src": "5344:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5335:5:8",
																	"nodeType": "YulTypedName",
																	"src": "5335:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5354:34:8",
															"nodeType": "YulAssignment",
															"src": "5354:34:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5373:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5373:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5384:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5384:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5369:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5369:3:8"
																		},
																		"nativeSrc": "5369:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5369:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5363:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5363:5:8"
																},
																"nativeSrc": "5363:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5363:25:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5354:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5354:5:8"
																}
															]
														},
														{
															"nativeSrc": "5397:15:8",
															"nodeType": "YulAssignment",
															"src": "5397:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "5407:5:8",
																"nodeType": "YulIdentifier",
																"src": "5407:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5397:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5397:6:8"
																}
															]
														},
														{
															"nativeSrc": "5421:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5421:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5436:1:8",
																"nodeType": "YulLiteral",
																"src": "5436:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5425:7:8",
																	"nodeType": "YulTypedName",
																	"src": "5425:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5446:36:8",
															"nodeType": "YulAssignment",
															"src": "5446:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5467:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5467:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5478:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5478:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5463:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5463:3:8"
																		},
																		"nativeSrc": "5463:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5463:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5457:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5457:5:8"
																},
																"nativeSrc": "5457:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5457:25:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "5446:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5446:7:8"
																}
															]
														},
														{
															"nativeSrc": "5491:17:8",
															"nodeType": "YulAssignment",
															"src": "5491:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "5501:7:8",
																"nodeType": "YulIdentifier",
																"src": "5501:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5491:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:8"
																}
															]
														},
														{
															"nativeSrc": "5517:59:8",
															"nodeType": "YulAssignment",
															"src": "5517:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5560:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5560:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5571:3:8",
																				"nodeType": "YulLiteral",
																				"src": "5571:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5556:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5556:3:8"
																		},
																		"nativeSrc": "5556:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5556:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "5527:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "5527:28:8"
																},
																"nativeSrc": "5527:49:8",
																"nodeType": "YulFunctionCall",
																"src": "5527:49:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "5517:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "5011:571:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5091:9:8",
														"nodeType": "YulTypedName",
														"src": "5091:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5102:7:8",
														"nodeType": "YulTypedName",
														"src": "5102:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5114:6:8",
														"nodeType": "YulTypedName",
														"src": "5114:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5122:6:8",
														"nodeType": "YulTypedName",
														"src": "5122:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5130:6:8",
														"nodeType": "YulTypedName",
														"src": "5130:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5138:6:8",
														"nodeType": "YulTypedName",
														"src": "5138:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5146:6:8",
														"nodeType": "YulTypedName",
														"src": "5146:6:8",
														"type": ""
													}
												],
												"src": "5011:571:8"
											},
											{
												"body": {
													"nativeSrc": "5761:174:8",
													"nodeType": "YulBlock",
													"src": "5761:174:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5778:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5778:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5789:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5789:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5771:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5771:6:8"
																},
																"nativeSrc": "5771:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5771:21:8"
															},
															"nativeSrc": "5771:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5771:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5812:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5812:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5823:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5823:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5808:3:8"
																		},
																		"nativeSrc": "5808:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5808:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5828:2:8",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5801:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5801:6:8"
																},
																"nativeSrc": "5801:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5801:30:8"
															},
															"nativeSrc": "5801:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5801:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5851:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5851:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5862:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5862:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5847:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:8"
																		},
																		"nativeSrc": "5847:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:18:8"
																	},
																	{
																		"hexValue": "436861696e6c696e6b3a20496e76616c6964207072696365",
																		"kind": "string",
																		"nativeSrc": "5867:26:8",
																		"nodeType": "YulLiteral",
																		"src": "5867:26:8",
																		"type": "",
																		"value": "Chainlink: Invalid price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5840:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5840:6:8"
																},
																"nativeSrc": "5840:54:8",
																"nodeType": "YulFunctionCall",
																"src": "5840:54:8"
															},
															"nativeSrc": "5840:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "5840:54:8"
														},
														{
															"nativeSrc": "5903:26:8",
															"nodeType": "YulAssignment",
															"src": "5903:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5915:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5915:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5926:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5926:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5911:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5911:3:8"
																},
																"nativeSrc": "5911:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5911:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5903:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5903:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5587:348:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5738:9:8",
														"nodeType": "YulTypedName",
														"src": "5738:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5752:4:8",
														"nodeType": "YulTypedName",
														"src": "5752:4:8",
														"type": ""
													}
												],
												"src": "5587:348:8"
											},
											{
												"body": {
													"nativeSrc": "6114:179:8",
													"nodeType": "YulBlock",
													"src": "6114:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6131:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6131:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6142:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6142:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6124:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6124:6:8"
																},
																"nativeSrc": "6124:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6124:21:8"
															},
															"nativeSrc": "6124:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6124:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6165:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6165:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6176:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6176:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6161:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6161:3:8"
																		},
																		"nativeSrc": "6161:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6161:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6181:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6181:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6154:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6154:6:8"
																},
																"nativeSrc": "6154:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6154:30:8"
															},
															"nativeSrc": "6154:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6154:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6204:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6204:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6215:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6215:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6200:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6200:3:8"
																		},
																		"nativeSrc": "6200:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6200:18:8"
																	},
																	{
																		"hexValue": "436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465",
																		"kind": "string",
																		"nativeSrc": "6220:31:8",
																		"nodeType": "YulLiteral",
																		"src": "6220:31:8",
																		"type": "",
																		"value": "Chainlink: Round not complete"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6193:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6193:6:8"
																},
																"nativeSrc": "6193:59:8",
																"nodeType": "YulFunctionCall",
																"src": "6193:59:8"
															},
															"nativeSrc": "6193:59:8",
															"nodeType": "YulExpressionStatement",
															"src": "6193:59:8"
														},
														{
															"nativeSrc": "6261:26:8",
															"nodeType": "YulAssignment",
															"src": "6261:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6273:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6273:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6284:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6284:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6269:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6269:3:8"
																},
																"nativeSrc": "6269:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6269:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6261:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6261:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5940:353:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6091:9:8",
														"nodeType": "YulTypedName",
														"src": "6091:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6105:4:8",
														"nodeType": "YulTypedName",
														"src": "6105:4:8",
														"type": ""
													}
												],
												"src": "5940:353:8"
											},
											{
												"body": {
													"nativeSrc": "6347:176:8",
													"nodeType": "YulBlock",
													"src": "6347:176:8",
													"statements": [
														{
															"nativeSrc": "6357:17:8",
															"nodeType": "YulAssignment",
															"src": "6357:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6369:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6369:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6372:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6372:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6365:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6365:3:8"
																},
																"nativeSrc": "6365:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6365:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6357:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6357:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6406:111:8",
																"nodeType": "YulBlock",
																"src": "6406:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6427:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6427:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6434:3:8",
																							"nodeType": "YulLiteral",
																							"src": "6434:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6439:10:8",
																							"nodeType": "YulLiteral",
																							"src": "6439:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6430:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6430:3:8"
																					},
																					"nativeSrc": "6430:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6430:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6420:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6420:6:8"
																			},
																			"nativeSrc": "6420:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6420:31:8"
																		},
																		"nativeSrc": "6420:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6420:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6471:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6471:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6474:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6474:4:8",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6464:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6464:6:8"
																			},
																			"nativeSrc": "6464:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6464:15:8"
																		},
																		"nativeSrc": "6464:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6464:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6499:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6499:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6502:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6502:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6492:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6492:6:8"
																			},
																			"nativeSrc": "6492:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6492:15:8"
																		},
																		"nativeSrc": "6492:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6492:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6389:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6389:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6395:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6395:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6386:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6386:2:8"
																},
																"nativeSrc": "6386:11:8",
																"nodeType": "YulFunctionCall",
																"src": "6386:11:8"
															},
															"nativeSrc": "6383:134:8",
															"nodeType": "YulIf",
															"src": "6383:134:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6298:225:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6329:1:8",
														"nodeType": "YulTypedName",
														"src": "6329:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6332:1:8",
														"nodeType": "YulTypedName",
														"src": "6332:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6338:4:8",
														"nodeType": "YulTypedName",
														"src": "6338:4:8",
														"type": ""
													}
												],
												"src": "6298:225:8"
											},
											{
												"body": {
													"nativeSrc": "6702:172:8",
													"nodeType": "YulBlock",
													"src": "6702:172:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6719:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6719:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6730:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6730:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6712:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6712:6:8"
																},
																"nativeSrc": "6712:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6712:21:8"
															},
															"nativeSrc": "6712:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6712:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6753:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6753:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6764:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6764:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6749:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6749:3:8"
																		},
																		"nativeSrc": "6749:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6749:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6769:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6769:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6742:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6742:6:8"
																},
																"nativeSrc": "6742:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6742:30:8"
															},
															"nativeSrc": "6742:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6742:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6792:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6792:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6803:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6803:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6788:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6788:3:8"
																		},
																		"nativeSrc": "6788:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6788:18:8"
																	},
																	{
																		"hexValue": "436861696e6c696e6b3a205374616c65207072696365",
																		"kind": "string",
																		"nativeSrc": "6808:24:8",
																		"nodeType": "YulLiteral",
																		"src": "6808:24:8",
																		"type": "",
																		"value": "Chainlink: Stale price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6781:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6781:6:8"
																},
																"nativeSrc": "6781:52:8",
																"nodeType": "YulFunctionCall",
																"src": "6781:52:8"
															},
															"nativeSrc": "6781:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "6781:52:8"
														},
														{
															"nativeSrc": "6842:26:8",
															"nodeType": "YulAssignment",
															"src": "6842:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6854:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6854:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6865:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6865:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6850:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:8"
																},
																"nativeSrc": "6850:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6850:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6842:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6842:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6528:346:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6679:9:8",
														"nodeType": "YulTypedName",
														"src": "6679:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6693:4:8",
														"nodeType": "YulTypedName",
														"src": "6693:4:8",
														"type": ""
													}
												],
												"src": "6528:346:8"
											},
											{
												"body": {
													"nativeSrc": "7053:172:8",
													"nodeType": "YulBlock",
													"src": "7053:172:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7070:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7070:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7081:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7081:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7063:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7063:6:8"
																},
																"nativeSrc": "7063:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7063:21:8"
															},
															"nativeSrc": "7063:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7063:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7104:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7104:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7115:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7115:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7100:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7100:3:8"
																		},
																		"nativeSrc": "7100:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7100:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7120:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7120:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7093:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7093:6:8"
																},
																"nativeSrc": "7093:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7093:30:8"
															},
															"nativeSrc": "7093:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7093:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7143:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7143:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7154:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7154:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7139:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7139:3:8"
																		},
																		"nativeSrc": "7139:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7139:18:8"
																	},
																	{
																		"hexValue": "496e76616c696420736f757263652061646472657373",
																		"kind": "string",
																		"nativeSrc": "7159:24:8",
																		"nodeType": "YulLiteral",
																		"src": "7159:24:8",
																		"type": "",
																		"value": "Invalid source address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7132:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7132:6:8"
																},
																"nativeSrc": "7132:52:8",
																"nodeType": "YulFunctionCall",
																"src": "7132:52:8"
															},
															"nativeSrc": "7132:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "7132:52:8"
														},
														{
															"nativeSrc": "7193:26:8",
															"nodeType": "YulAssignment",
															"src": "7193:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7205:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7205:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7216:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7216:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7201:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7201:3:8"
																},
																"nativeSrc": "7201:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7201:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7193:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7193:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6879:346:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7030:9:8",
														"nodeType": "YulTypedName",
														"src": "7030:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7044:4:8",
														"nodeType": "YulTypedName",
														"src": "7044:4:8",
														"type": ""
													}
												],
												"src": "6879:346:8"
											},
											{
												"body": {
													"nativeSrc": "7404:166:8",
													"nodeType": "YulBlock",
													"src": "7404:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7421:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7421:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7432:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7432:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7414:6:8"
																},
																"nativeSrc": "7414:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7414:21:8"
															},
															"nativeSrc": "7414:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7414:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7455:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7455:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7466:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7466:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7451:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7451:3:8"
																		},
																		"nativeSrc": "7451:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7451:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7471:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7471:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7444:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7444:6:8"
																},
																"nativeSrc": "7444:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7444:30:8"
															},
															"nativeSrc": "7444:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7444:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7494:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7494:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7505:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7505:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7490:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7490:3:8"
																		},
																		"nativeSrc": "7490:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7490:18:8"
																	},
																	{
																		"hexValue": "4675747572652074696d657374616d70",
																		"kind": "string",
																		"nativeSrc": "7510:18:8",
																		"nodeType": "YulLiteral",
																		"src": "7510:18:8",
																		"type": "",
																		"value": "Future timestamp"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7483:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7483:6:8"
																},
																"nativeSrc": "7483:46:8",
																"nodeType": "YulFunctionCall",
																"src": "7483:46:8"
															},
															"nativeSrc": "7483:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "7483:46:8"
														},
														{
															"nativeSrc": "7538:26:8",
															"nodeType": "YulAssignment",
															"src": "7538:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7550:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7550:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7561:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7561:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7546:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7546:3:8"
																},
																"nativeSrc": "7546:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7546:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7538:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7538:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7230:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7381:9:8",
														"nodeType": "YulTypedName",
														"src": "7381:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7395:4:8",
														"nodeType": "YulTypedName",
														"src": "7395:4:8",
														"type": ""
													}
												],
												"src": "7230:340:8"
											},
											{
												"body": {
													"nativeSrc": "7749:163:8",
													"nodeType": "YulBlock",
													"src": "7749:163:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7766:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7766:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7777:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7777:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7759:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7759:6:8"
																},
																"nativeSrc": "7759:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7759:21:8"
															},
															"nativeSrc": "7759:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7759:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7800:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7800:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7811:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7811:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7796:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7796:3:8"
																		},
																		"nativeSrc": "7796:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7796:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7816:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7816:2:8",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7789:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7789:6:8"
																},
																"nativeSrc": "7789:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7789:30:8"
															},
															"nativeSrc": "7789:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7789:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7839:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7839:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7850:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7850:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7835:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:8"
																		},
																		"nativeSrc": "7835:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7835:18:8"
																	},
																	{
																		"hexValue": "496e76616c6964207072696365",
																		"kind": "string",
																		"nativeSrc": "7855:15:8",
																		"nodeType": "YulLiteral",
																		"src": "7855:15:8",
																		"type": "",
																		"value": "Invalid price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7828:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:8"
																},
																"nativeSrc": "7828:43:8",
																"nodeType": "YulFunctionCall",
																"src": "7828:43:8"
															},
															"nativeSrc": "7828:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "7828:43:8"
														},
														{
															"nativeSrc": "7880:26:8",
															"nodeType": "YulAssignment",
															"src": "7880:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7892:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7892:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7903:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7903:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7888:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7888:3:8"
																},
																"nativeSrc": "7888:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7888:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7880:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7880:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7575:337:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7726:9:8",
														"nodeType": "YulTypedName",
														"src": "7726:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7740:4:8",
														"nodeType": "YulTypedName",
														"src": "7740:4:8",
														"type": ""
													}
												],
												"src": "7575:337:8"
											},
											{
												"body": {
													"nativeSrc": "8046:119:8",
													"nodeType": "YulBlock",
													"src": "8046:119:8",
													"statements": [
														{
															"nativeSrc": "8056:26:8",
															"nodeType": "YulAssignment",
															"src": "8056:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8068:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8068:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8079:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8079:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8064:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8064:3:8"
																},
																"nativeSrc": "8064:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8064:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8056:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8056:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8098:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8098:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8109:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8109:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8091:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8091:6:8"
																},
																"nativeSrc": "8091:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8091:25:8"
															},
															"nativeSrc": "8091:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "8091:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8136:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8136:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8147:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8147:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8132:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8132:3:8"
																		},
																		"nativeSrc": "8132:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8132:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8152:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8152:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8125:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8125:6:8"
																},
																"nativeSrc": "8125:34:8",
																"nodeType": "YulFunctionCall",
																"src": "8125:34:8"
															},
															"nativeSrc": "8125:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "8125:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7917:248:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8007:9:8",
														"nodeType": "YulTypedName",
														"src": "8007:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8018:6:8",
														"nodeType": "YulTypedName",
														"src": "8018:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8026:6:8",
														"nodeType": "YulTypedName",
														"src": "8026:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8037:4:8",
														"nodeType": "YulTypedName",
														"src": "8037:4:8",
														"type": ""
													}
												],
												"src": "7917:248:8"
											},
											{
												"body": {
													"nativeSrc": "8269:76:8",
													"nodeType": "YulBlock",
													"src": "8269:76:8",
													"statements": [
														{
															"nativeSrc": "8279:26:8",
															"nodeType": "YulAssignment",
															"src": "8279:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8291:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8291:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8302:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8302:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8287:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8287:3:8"
																},
																"nativeSrc": "8287:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8287:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8279:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8279:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8321:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8321:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8332:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8332:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8314:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8314:6:8"
																},
																"nativeSrc": "8314:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8314:25:8"
															},
															"nativeSrc": "8314:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "8314:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "8170:175:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8238:9:8",
														"nodeType": "YulTypedName",
														"src": "8238:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8249:6:8",
														"nodeType": "YulTypedName",
														"src": "8249:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8260:4:8",
														"nodeType": "YulTypedName",
														"src": "8260:4:8",
														"type": ""
													}
												],
												"src": "8170:175:8"
											},
											{
												"body": {
													"nativeSrc": "8524:181:8",
													"nodeType": "YulBlock",
													"src": "8524:181:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8541:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8541:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8552:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8552:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8534:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8534:6:8"
																},
																"nativeSrc": "8534:21:8",
																"nodeType": "YulFunctionCall",
																"src": "8534:21:8"
															},
															"nativeSrc": "8534:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "8534:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8575:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8575:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8586:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8586:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8571:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8571:3:8"
																		},
																		"nativeSrc": "8571:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8571:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8591:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8591:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8564:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:8"
																},
																"nativeSrc": "8564:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8564:30:8"
															},
															"nativeSrc": "8564:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8564:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8614:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8614:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8625:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8625:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8610:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8610:3:8"
																		},
																		"nativeSrc": "8610:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8610:18:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "8630:33:8",
																		"nodeType": "YulLiteral",
																		"src": "8630:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8603:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8603:6:8"
																},
																"nativeSrc": "8603:61:8",
																"nodeType": "YulFunctionCall",
																"src": "8603:61:8"
															},
															"nativeSrc": "8603:61:8",
															"nodeType": "YulExpressionStatement",
															"src": "8603:61:8"
														},
														{
															"nativeSrc": "8673:26:8",
															"nodeType": "YulAssignment",
															"src": "8673:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8685:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8685:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8696:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8696:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8681:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8681:3:8"
																},
																"nativeSrc": "8681:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8681:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8673:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8673:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8350:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8501:9:8",
														"nodeType": "YulTypedName",
														"src": "8501:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8515:4:8",
														"nodeType": "YulTypedName",
														"src": "8515:4:8",
														"type": ""
													}
												],
												"src": "8350:355:8"
											},
											{
												"body": {
													"nativeSrc": "8884:166:8",
													"nodeType": "YulBlock",
													"src": "8884:166:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8901:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8901:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8912:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8912:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8894:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8894:6:8"
																},
																"nativeSrc": "8894:21:8",
																"nodeType": "YulFunctionCall",
																"src": "8894:21:8"
															},
															"nativeSrc": "8894:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "8894:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8935:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8935:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8946:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8946:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8931:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8931:3:8"
																		},
																		"nativeSrc": "8931:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8931:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8951:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8951:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8924:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8924:6:8"
																},
																"nativeSrc": "8924:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8924:30:8"
															},
															"nativeSrc": "8924:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8924:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8974:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8974:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8985:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8985:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8970:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8970:3:8"
																		},
																		"nativeSrc": "8970:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8970:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "8990:18:8",
																		"nodeType": "YulLiteral",
																		"src": "8990:18:8",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8963:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8963:6:8"
																},
																"nativeSrc": "8963:46:8",
																"nodeType": "YulFunctionCall",
																"src": "8963:46:8"
															},
															"nativeSrc": "8963:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "8963:46:8"
														},
														{
															"nativeSrc": "9018:26:8",
															"nodeType": "YulAssignment",
															"src": "9018:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9030:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9030:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9041:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9041:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9026:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9026:3:8"
																},
																"nativeSrc": "9026:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9026:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9018:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9018:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8710:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8861:9:8",
														"nodeType": "YulTypedName",
														"src": "8861:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8875:4:8",
														"nodeType": "YulTypedName",
														"src": "8875:4:8",
														"type": ""
													}
												],
												"src": "8710:340:8"
											},
											{
												"body": {
													"nativeSrc": "9229:170:8",
													"nodeType": "YulBlock",
													"src": "9229:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9246:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9246:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9257:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9257:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9239:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9239:6:8"
																},
																"nativeSrc": "9239:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9239:21:8"
															},
															"nativeSrc": "9239:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "9239:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9280:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9280:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9291:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9291:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9276:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9276:3:8"
																		},
																		"nativeSrc": "9276:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9276:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9296:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9296:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9269:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9269:6:8"
																},
																"nativeSrc": "9269:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9269:30:8"
															},
															"nativeSrc": "9269:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9269:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9319:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9319:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9330:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9330:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9315:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9315:3:8"
																		},
																		"nativeSrc": "9315:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9315:18:8"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "9335:22:8",
																		"nodeType": "YulLiteral",
																		"src": "9335:22:8",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9308:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9308:6:8"
																},
																"nativeSrc": "9308:50:8",
																"nodeType": "YulFunctionCall",
																"src": "9308:50:8"
															},
															"nativeSrc": "9308:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "9308:50:8"
														},
														{
															"nativeSrc": "9367:26:8",
															"nodeType": "YulAssignment",
															"src": "9367:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9379:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9379:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9390:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9390:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9375:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9375:3:8"
																},
																"nativeSrc": "9375:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9375:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9367:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9367:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9055:344:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9206:9:8",
														"nodeType": "YulTypedName",
														"src": "9206:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9220:4:8",
														"nodeType": "YulTypedName",
														"src": "9220:4:8",
														"type": ""
													}
												],
												"src": "9055:344:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 96))\n        value3 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 128))\n        value4 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 160))\n        value5 := value_4\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Invalid pair\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid source\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(0, 0) }\n        value2 := value_2\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Chainlink: Invalid price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Chainlink: Round not complete\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Chainlink: Stale price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid source address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Future timestamp\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063741bef1a116100a2578063a5b5fb8811610071578063a5b5fb8814610219578063bc2698501461022a578063db7c1ad114610233578063f2fde38b14610265578063f3f699f11461027857600080fd5b8063741bef1a146101bd5780638456cb59146101ed5780638da5cb5b146101f55780639f97acb71461020657600080fd5b80633f4ba83a116100de5780633f4ba83a146101805780635c975abb146101885780636301a1431461019e578063715018a6146101b557600080fd5b806301e9492f146101105780631fde7f26146101255780632806bce21461015a57806331d98b3f1461016d575b600080fd5b61012361011e366004610ccf565b61028b565b005b610138610133366004610cfb565b61031c565b6040805193845260208401929092521515908201526060015b60405180910390f35b610138610168366004610d14565b610391565b61013861017b366004610cfb565b610577565b6101236107a8565b60025460ff166040519015158152602001610151565b6101a761038481565b604051908152602001610151565b6101236107ba565b6002546101d59061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6101236107cc565b6000546001600160a01b03166101d5565b610123610214366004610d36565b610813565b6101a7661155548bd554d160ca1b81565b6101a7610e1081565b610138610241366004610cfb565b60036020526000908152604090208054600182015460029092015490919060ff1683565b610123610273366004610d14565b610903565b610123610286366004610d84565b610941565b610293610a95565b661155548bd554d160ca1b82146102c55760405162461bcd60e51b81526004016102bc90610db6565b60405180910390fd5b6002546001600160a01b0382811661010090920416146103185760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420736f7572636560901b60448201526064016102bc565b5050565b6040516331d98b3f60e01b8152600481018290526000908190819030906331d98b3f90602401606060405180830381865afa15801561035f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103839190610ddc565b9250925092505b9193909250565b600254600090819081906001600160a01b0385811661010090920416146103eb5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420736f7572636560901b60448201526064016102bc565b600260019054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa92505050801561045a575060408051601f3d908101601f1916820190925261045791810190610e35565b60015b61046c5750600091508190508061038a565b600084136104b75760405162461bcd60e51b8152602060048201526018602482015277436861696e6c696e6b3a20496e76616c696420707269636560401b60448201526064016102bc565b816000036105075760405162461bcd60e51b815260206004820152601d60248201527f436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c65746500000060448201526064016102bc565b610e106105148342610e87565b111561055b5760405162461bcd60e51b8152602060048201526016602482015275436861696e6c696e6b3a205374616c6520707269636560501b60448201526064016102bc565b61056484610ac2565b826001975097509750505050505061038a565b6000806000661155548bd554d160ca1b84146105a55760405162461bcd60e51b81526004016102bc90610db6565b6000848152600360209081526040918290208251606081018452815481526001820154928101929092526002015460ff161580159282018390529091906105fd57506103848160200151426105fa9190610e87565b11155b1561061857805160209091015190935091506001905061038a565b600260019054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa925050508015610687575060408051601f3d908101601f1916820190925261068491810190610e35565b60015b61069c5760008060009350935093505061038a565b600084136106e75760405162461bcd60e51b8152602060048201526018602482015277436861696e6c696e6b3a20496e76616c696420707269636560401b60448201526064016102bc565b816000036107375760405162461bcd60e51b815260206004820152601d60248201527f436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c65746500000060448201526064016102bc565b610e106107448342610e87565b111561078b5760405162461bcd60e51b8152602060048201526016602482015275436861696e6c696e6b3a205374616c6520707269636560501b60448201526064016102bc565b61079484610ac2565b82600198509850985050505050505061038a565b6107b0610a95565b6107b8610aec565b565b6107c2610a95565b6107b86000610b3e565b6107d4610a95565b6107dc610b8e565b604051661155548bd554d160ca1b907fd373a1ac37410a4da6def2d7f3f2e704aca3e95e2e251322a031eedda7eb686c90600090a2565b61081b610a95565b610823610bcb565b661155548bd554d160ca1b861461084c5760405162461bcd60e51b81526004016102bc90610db6565b6001600160a01b03851661089b5760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420736f75726365206164647265737360501b60448201526064016102bc565b600280546001600160a01b03878116610100818102610100600160a81b031985161790945560405193909204169182907fa8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d32175353690600090a3506108fb60018055565b505050505050565b61090b610a95565b6001600160a01b03811661093557604051631e4fbdf760e01b8152600060048201526024016102bc565b61093e81610b3e565b50565b610949610a95565b610951610c24565b610959610bcb565b661155548bd554d160ca1b84146109825760405162461bcd60e51b81526004016102bc90610db6565b428211156109c55760405162461bcd60e51b815260206004820152601060248201526f04675747572652074696d657374616d760841b60448201526064016102bc565b60008311610a055760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420707269636560981b60448201526064016102bc565b604080516060810182528481526020808201858152600183850181815260008a81526003855286902094518555915190840155516002909201805460ff191692151592909217909155815185815290810184905285917fbcd10d64fce9dcf9568572ed92e371df336d32649e8960a045c9548794a44b26910160405180910390a2610a8f60018055565b50505050565b6000546001600160a01b031633146107b85760405163118cdaa760e01b81523360048201526024016102bc565b600080821215610ae857604051635467221960e11b8152600481018390526024016102bc565b5090565b610af4610c6a565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610b96610c24565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b213390565b600260015403610c1d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102bc565b6002600155565b60025460ff16156107b85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102bc565b60025460ff166107b85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102bc565b80356001600160a01b0381168114610cca57600080fd5b919050565b60008060408385031215610ce257600080fd5b82359150610cf260208401610cb3565b90509250929050565b600060208284031215610d0d57600080fd5b5035919050565b600060208284031215610d2657600080fd5b610d2f82610cb3565b9392505050565b60008060008060008060c08789031215610d4f57600080fd5b86359550610d5f60208801610cb3565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060008060808587031215610d9a57600080fd5b5050823594602084013594506040840135936060013592509050565b6020808252600c908201526b24b73b30b634b2103830b4b960a11b604082015260600190565b600080600060608486031215610df157600080fd5b83516020850151604086015191945092508015158114610e1057600080fd5b809150509250925092565b805169ffffffffffffffffffff81168114610cca57600080fd5b600080600080600060a08688031215610e4d57600080fd5b610e5686610e1b565b60208701516040880151606089015192975090955093509150610e7b60808701610e1b565b90509295509295909350565b81810381811115610ea857634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f09044adcec01968d4d90212f613dd84e48f926c7039a2534ca70cdddd3e6ee864736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x741BEF1A GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA5B5FB88 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA5B5FB88 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0xBC269850 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xDB7C1AD1 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xF3F699F1 EQ PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x9F97ACB7 EQ PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x6301A143 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E9492F EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x1FDE7F26 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x2806BCE2 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x31D98B3F EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x138 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH2 0x168 CALLDATASIZE PUSH1 0x4 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x384 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x151 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xD36 JUMP JUMPDEST PUSH2 0x813 JUMP JUMPDEST PUSH2 0x1A7 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0xD84 JUMP JUMPDEST PUSH2 0x941 JUMP JUMPDEST PUSH2 0x293 PUSH2 0xA95 JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP3 EQ PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420736F75726365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31D98B3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0x31D98B3F SWAP1 PUSH1 0x24 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x35F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420736F75726365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x45A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x457 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x46C JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x0 DUP5 SGT PUSH2 0x4B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436861696E6C696E6B3A20496E76616C6964207072696365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x514 DUP4 TIMESTAMP PUSH2 0xE87 JUMP JUMPDEST GT ISZERO PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436861696E6C696E6B3A205374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x564 DUP5 PUSH2 0xAC2 JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0x38A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP5 EQ PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH2 0x5FD JUMPI POP PUSH2 0x384 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0xE87 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x618 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH2 0x38A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x687 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x684 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x38A JUMP JUMPDEST PUSH1 0x0 DUP5 SGT PUSH2 0x6E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436861696E6C696E6B3A20496E76616C6964207072696365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x737 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x744 DUP4 TIMESTAMP PUSH2 0xE87 JUMP JUMPDEST GT ISZERO PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436861696E6C696E6B3A205374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x794 DUP5 PUSH2 0xAC2 JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP PUSH2 0x38A JUMP JUMPDEST PUSH2 0x7B0 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7B8 PUSH2 0xAEC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x7C2 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7B8 PUSH1 0x0 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0x7D4 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x7DC PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL SWAP1 PUSH32 0xD373A1AC37410A4DA6DEF2D7F3F2E704ACA3E95E2E251322A031EEDDA7EB686C SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x81B PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x823 PUSH2 0xBCB JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP7 EQ PUSH2 0x84C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x89B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420736F757263652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0xA8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x8FB PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x90B PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x93E DUP2 PUSH2 0xB3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x949 PUSH2 0xA95 JUMP JUMPDEST PUSH2 0x951 PUSH2 0xC24 JUMP JUMPDEST PUSH2 0x959 PUSH2 0xBCB JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP5 EQ PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xDB6 JUMP JUMPDEST TIMESTAMP DUP3 GT ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4675747572652074696D657374616D7 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x1 DUP4 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD SWAP1 DUP5 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP6 SWAP2 PUSH32 0xBCD10D64FCE9DCF9568572ED92E371DF336D32649E8960A045C9548794A44B26 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xA8F PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xAE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54672219 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2BC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xAF4 PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xB96 PUSH2 0xC24 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xB21 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xCF2 PUSH1 0x20 DUP5 ADD PUSH2 0xCB3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD2F DUP3 PUSH2 0xCB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH2 0xD5F PUSH1 0x20 DUP9 ADD PUSH2 0xCB3 JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xD9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103830B4B9 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 DUP7 ADD MLOAD SWAP2 SWAP5 POP SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xCCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE56 DUP7 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xE7B PUSH1 0x80 DUP8 ADD PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xEA8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SWAP1 DIFFICULTY 0xAD 0xCE 0xC0 NOT PUSH9 0xD4D90212F613DD84E4 DUP16 SWAP3 PUSH13 0x7039A2534CA70CDDDD3E6EE864 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "553:7260:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7240:273;;;;;;:::i;:::-;;:::i;:::-;;4728:214;;;;;;:::i;:::-;;:::i;:::-;;;;924:25:8;;;980:2;965:18;;958:34;;;;1035:14;1028:22;1008:18;;;1001:50;912:2;897:18;4728:214:7;;;;;;;;5237:822;;;;;;:::i;:::-;;:::i;3380:1044::-;;;;;;:::i;:::-;;:::i;7746:65::-;;;:::i;1616:84:2:-;1686:7;;;;1616:84;;1418:14:8;;1411:22;1393:41;;1381:2;1366:18;1616:84:2;1253:187:8;1235:58:7;;1283:10;1235:58;;;;;1591:25:8;;;1579:2;1564:18;1235:58:7;1445:177:8;2293:101:1;;;:::i;914:38:7:-;;;;;;;;-1:-1:-1;;;;;914:38:7;;;;;;-1:-1:-1;;;;;1819:32:8;;;1801:51;;1789:2;1774:18;914:38:7;1627:231:8;7584:104:7;;;:::i;1638:85:1:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;1638:85;;6543:503:7;;;;;;:::i;:::-;;:::i;1000:57::-;;-1:-1:-1;;;1000:57:7;;1374:63;;1430:7;1374:63;;1122:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2543:215:1;;;;;;:::i;:::-;;:::i;2545:548:7:-;;;;;;:::i;:::-;;:::i;7240:273::-;1531:13:1;:11;:13::i;:::-;-1:-1:-1;;;7349:4:7::1;:20;7341:45;;;;-1:-1:-1::0;;;7341:45:7::1;;;;;;;:::i;:::-;;;;;;;;;7422:9;::::0;-1:-1:-1;;;;;7404:28:7;;::::1;7422:9;::::0;;::::1;;7404:28;7396:55;;;::::0;-1:-1:-1;;;7396:55:7;;4176:2:8;7396:55:7::1;::::0;::::1;4158:21:8::0;4215:2;4195:18;;;4188:30;-1:-1:-1;;;4234:18:8;;;4227:44;4288:18;;7396:55:7::1;3974:338:8::0;7396:55:7::1;7240:273:::0;;:::o;4728:214::-;4916:19;;-1:-1:-1;;;4916:19:7;;;;;1591:25:8;;;4838:21:7;;;;;;4916:4;;:13;;1564:18:8;;4916:19:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4909:26;;;;;;4728:214;;;;;;:::o;5237:822::-;5434:9;;5345:13;;;;;;-1:-1:-1;;;;;5416:28:7;;;5434:9;;;;;5416:28;5408:55;;;;-1:-1:-1;;;5408:55:7;;4176:2:8;5408:55:7;;;4158:21:8;4215:2;4195:18;;;4188:30;-1:-1:-1;;;4234:18:8;;;4227:44;4288:18;;5408:55:7;3974:338:8;5408:55:7;5477:9;;;;;;;;;-1:-1:-1;;;;;5477:9:7;-1:-1:-1;;;;;5477:25:7;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5477:27:7;;;;;;;;-1:-1:-1;;5477:27:7;;;;;;;;;;;;:::i;:::-;;;5473:580;;-1:-1:-1;6030:1:7;;-1:-1:-1;6030:1:7;;-1:-1:-1;6030:1:7;6022:20;;5473:580;5671:1;5661:6;:11;5657:51;;5674:34;;-1:-1:-1;;;5674:34:7;;5789:2:8;5674:34:7;;;5771:21:8;5828:2;5808:18;;;5801:30;-1:-1:-1;;;5847:18:8;;;5840:54;5911:18;;5674:34:7;5587:348:8;5657:51:7;5726:9;5739:1;5726:14;5722:59;;5742:39;;-1:-1:-1;;;5742:39:7;;6142:2:8;5742:39:7;;;6124:21:8;6181:2;6161:18;;;6154:30;6220:31;6200:18;;;6193:59;6269:18;;5742:39:7;5940:353:8;5722:59:7;1430:7;5799:27;5817:9;5799:15;:27;:::i;:::-;:59;5795:130;;;5878:32;;-1:-1:-1;;;5878:32:7;;6730:2:8;5878:32:7;;;6712:21:8;6769:2;6749:18;;;6742:30;-1:-1:-1;;;6788:18:8;;;6781:52;6850:18;;5878:32:7;6528:346:8;5795:130:7;5946:26;5965:6;5946:18;:26::i;:::-;5974:9;5985:4;5938:52;;;;;;;;;;;;;3380:1044;3480:13;3495:17;3514:12;-1:-1:-1;;;3551:4:7;:20;3543:45;;;;-1:-1:-1;;;3543:45:7;;;;;;;:::i;:::-;3598:21;3622:18;;;:12;:18;;;;;;;;;3598:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3655:73;;;1283:10;3689:4;:14;;;3671:15;:32;;;;:::i;:::-;:57;;3655:73;3651:145;;;3752:10;;3764:14;;;;;3752:10;;-1:-1:-1;3764:14:7;-1:-1:-1;3780:4:7;;-1:-1:-1;3744:41:7;;3651:145;3842:9;;;;;;;;;-1:-1:-1;;;;;3842:9:7;-1:-1:-1;;;;;3842:25:7;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3842:27:7;;;;;;;;-1:-1:-1;;3842:27:7;;;;;;;;;;;;:::i;:::-;;;3838:580;;4395:1;4398;4401:5;4387:20;;;;;;;;;3838:580;4036:1;4026:6;:11;4022:51;;4039:34;;-1:-1:-1;;;4039:34:7;;5789:2:8;4039:34:7;;;5771:21:8;5828:2;5808:18;;;5801:30;-1:-1:-1;;;5847:18:8;;;5840:54;5911:18;;4039:34:7;5587:348:8;4022:51:7;4091:9;4104:1;4091:14;4087:59;;4107:39;;-1:-1:-1;;;4107:39:7;;6142:2:8;4107:39:7;;;6124:21:8;6181:2;6161:18;;;6154:30;6220:31;6200:18;;;6193:59;6269:18;;4107:39:7;5940:353:8;4087:59:7;1430:7;4164:27;4182:9;4164:15;:27;:::i;:::-;:59;4160:130;;;4243:32;;-1:-1:-1;;;4243:32:7;;6730:2:8;4243:32:7;;;6712:21:8;6769:2;6749:18;;;6742:30;-1:-1:-1;;;6788:18:8;;;6781:52;6850:18;;4243:32:7;6528:346:8;4160:130:7;4311:26;4330:6;4311:18;:26::i;:::-;4339:9;4350:4;4303:52;;;;;;;;;;;;;;7746:65;1531:13:1;:11;:13::i;:::-;7794:10:7::1;:8;:10::i;:::-;7746:65::o:0;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;7584:104:7:-:0;1531:13:1;:11;:13::i;:::-;7630:8:7::1;:6;:8::i;:::-;7653:28;::::0;-1:-1:-1;;;1039:18:7;7653:28:::1;::::0;;;::::1;7584:104::o:0;6543:503::-;1531:13:1;:11;:13::i;:::-;2262:21:3::1;:19;:21::i;:::-;-1:-1:-1::0;;;6791:4:7::2;:20;6783:45;;;;-1:-1:-1::0;;;6783:45:7::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6846:20:7;::::2;6838:55;;;::::0;-1:-1:-1;;;6838:55:7;;7081:2:8;6838:55:7::2;::::0;::::2;7063:21:8::0;7120:2;7100:18;;;7093:30;-1:-1:-1;;;7139:18:8;;;7132:52;7201:18;;6838:55:7::2;6879:346:8::0;6838:55:7::2;6930:9;::::0;;-1:-1:-1;;;;;6950:41:7;;::::2;6930:9;6950:41:::0;;::::2;-1:-1:-1::0;;;;;;6950:41:7;::::2;;::::0;;;7006:33:::2;::::0;6930:9;;;::::2;;::::0;;;7006:33:::2;::::0;6904:15:::2;::::0;7006:33:::2;6773:273;2304:20:3::1;1717:1:::0;2810:22;;2630:209;2304:20:::1;6543:503:7::0;;;;;;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:1;;2700:1:::1;2672:31;::::0;::::1;1801:51:8::0;1774:18;;2672:31:1::1;1627:231:8::0;2623:91:1::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2545:548:7:-;1531:13:1;:11;:13::i;:::-;1240:19:2::1;:17;:19::i;:::-;2262:21:3::2;:19;:21::i;:::-;-1:-1:-1::0;;;2745:4:7::3;:20;2737:45;;;;-1:-1:-1::0;;;2737:45:7::3;;;;;;;:::i;:::-;2813:15;2800:9;:28;;2792:57;;;::::0;-1:-1:-1;;;2792:57:7;;7432:2:8;2792:57:7::3;::::0;::::3;7414:21:8::0;7471:2;7451:18;;;7444:30;-1:-1:-1;;;7490:18:8;;;7483:46;7546:18;;2792:57:7::3;7230:340:8::0;2792:57:7::3;2875:1;2867:5;:9;2859:35;;;::::0;-1:-1:-1;;;2859:35:7;;7777:2:8;2859:35:7::3;::::0;::::3;7759:21:8::0;7816:2;7796:18;;;7789:30;-1:-1:-1;;;7835:18:8;;;7828:43;7888:18;;2859:35:7::3;7575:337:8::0;2859:35:7::3;2926:108;::::0;;::::3;::::0;::::3;::::0;;;;;::::3;::::0;;::::3;::::0;;;3019:4:::3;2926:108:::0;;;;;;-1:-1:-1;2905:18:7;;;:12:::3;:18:::0;;;;;:129;;;;;;;;::::3;::::0;;::::3;::::0;;::::3;::::0;;-1:-1:-1;;2905:129:7::3;::::0;::::3;;::::0;;;::::3;::::0;;;3050:36;;8091:25:8;;;8132:18;;;8125:34;;;2905:18:7;;3050:36:::3;::::0;8064:18:8;3050:36:7::3;;;;;;;2304:20:3::2;1717:1:::0;2810:22;;2630:209;2304:20:::2;2545:548:7::0;;;;:::o;1796:162:1:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;735:10:4;1855:23:1;1851:101;;1901:40;;-1:-1:-1;;;1901:40:1;;735:10:4;1901:40:1;;;1801:51:8;1774:18;;1901:40:1;1627:231:8;17171:193:5;17227:7;17258:1;17250:5;:9;17246:81;;;17282:34;;-1:-1:-1;;;17282:34:5;;;;;1591:25:8;;;1564:18;;17282:34:5;1445:177:8;17246:81:5;-1:-1:-1;17351:5:5;17171:193::o;2434:117:2:-;1487:16;:14;:16::i;:::-;2492:7:::1;:15:::0;;-1:-1:-1;;2492:15:2::1;::::0;;2522:22:::1;735:10:4::0;2531:12:2::1;2522:22;::::0;-1:-1:-1;;;;;1819:32:8;;;1801:51;;1789:2;1774:18;2522:22:2::1;;;;;;;2434:117::o:0;2912:187:1:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2187:115:2:-;1240:19;:17;:19::i;:::-;2246:7:::1;:14:::0;;-1:-1:-1;;2246:14:2::1;2256:4;2246:14;::::0;;2275:20:::1;2282:12;735:10:4::0;;656:96;2337:287:3;1760:1;2469:7;;:19;2461:63;;;;-1:-1:-1;;;2461:63:3;;8552:2:8;2461:63:3;;;8534:21:8;8591:2;8571:18;;;8564:30;8630:33;8610:18;;;8603:61;8681:18;;2461:63:3;8350:355:8;2461:63:3;1760:1;2599:7;:18;2337:287::o;1768:106:2:-;1686:7;;;;1837:9;1829:38;;;;-1:-1:-1;;;1829:38:2;;8912:2:8;1829:38:2;;;8894:21:8;8951:2;8931:18;;;8924:30;-1:-1:-1;;;8970:18:8;;;8963:46;9026:18;;1829:38:2;8710:340:8;1946:106:2;1686:7;;;;2004:41;;;;-1:-1:-1;;;2004:41:2;;9257:2:8;2004:41:2;;;9239:21:8;9296:2;9276:18;;;9269:30;-1:-1:-1;;;9315:18:8;;;9308:50;9375:18;;2004:41:2;9055:344:8;14:173;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:300::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;382:23;;;-1:-1:-1;448:38:8;482:2;467:18;;448:38;:::i;:::-;438:48;;192:300;;;;;:::o;497:226::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;670:23:8;;497:226;-1:-1:-1;497:226:8:o;1062:186::-;1121:6;1174:2;1162:9;1153:7;1149:23;1145:32;1142:52;;;1190:1;1187;1180:12;1142:52;1213:29;1232:9;1213:29;:::i;:::-;1203:39;1062:186;-1:-1:-1;;;1062:186:8:o;2071:783::-;2175:6;2183;2191;2199;2207;2215;2268:3;2256:9;2247:7;2243:23;2239:33;2236:53;;;2285:1;2282;2275:12;2236:53;2330:23;;;-1:-1:-1;2396:38:8;2430:2;2415:18;;2396:38;:::i;:::-;2071:783;;2386:48;;-1:-1:-1;;;;2507:2:8;2492:18;;2479:32;;2610:2;2595:18;;2582:32;;2713:3;2698:19;;2685:33;;-1:-1:-1;2817:3:8;2802:19;;;2789:33;;-1:-1:-1;2071:783:8:o;3041:587::-;3127:6;3135;3143;3151;3204:3;3192:9;3183:7;3179:23;3175:33;3172:53;;;3221:1;3218;3211:12;3172:53;-1:-1:-1;;3266:23:8;;;3386:2;3371:18;;3358:32;;-1:-1:-1;3489:2:8;3474:18;;3461:32;;3592:2;3577:18;3564:32;;-1:-1:-1;3041:587:8;-1:-1:-1;3041:587:8:o;3633:336::-;3835:2;3817:21;;;3874:2;3854:18;;;3847:30;-1:-1:-1;;;3908:2:8;3893:18;;3886:42;3960:2;3945:18;;3633:336::o;4317:505::-;4402:6;4410;4418;4471:2;4459:9;4450:7;4446:23;4442:32;4439:52;;;4487:1;4484;4477:12;4439:52;4532:16;;4638:2;4623:18;;4617:25;4713:2;4698:18;;4692:25;4532:16;;-1:-1:-1;4617:25:8;-1:-1:-1;4755:15:8;;4748:23;4736:36;;4726:64;;4786:1;4783;4776:12;4726:64;4809:7;4799:17;;;4317:505;;;;;:::o;4827:179::-;4905:13;;4958:22;4947:34;;4937:45;;4927:73;;4996:1;4993;4986:12;5011:571;5114:6;5122;5130;5138;5146;5199:3;5187:9;5178:7;5174:23;5170:33;5167:53;;;5216:1;5213;5206:12;5167:53;5239:39;5268:9;5239:39;:::i;:::-;5318:2;5303:18;;5297:25;5384:2;5369:18;;5363:25;5478:2;5463:18;;5457:25;5229:49;;-1:-1:-1;5297:25:8;;-1:-1:-1;5363:25:8;-1:-1:-1;5457:25:8;-1:-1:-1;5527:49:8;5571:3;5556:19;;5527:49;:::i;:::-;5517:59;;5011:571;;;;;;;;:::o;6298:225::-;6365:9;;;6386:11;;;6383:134;;;6439:10;6434:3;6430:20;6427:1;6420:31;6474:4;6471:1;6464:15;6502:4;6499:1;6492:15;6383:134;6298:225;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "762400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CHAINLINK_STALENESS_THRESHOLD()": "239",
								"EUR_USD_PAIR()": "223",
								"PRICE_VALIDITY_PERIOD()": "262",
								"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)": "57832",
								"getAggregatedPrice(bytes32)": "infinite",
								"getPrice(bytes32)": "infinite",
								"getSourcePrice(address)": "infinite",
								"latestPrices(bytes32)": "6780",
								"owner()": "2398",
								"pause()": "infinite",
								"paused()": "2337",
								"priceFeed()": "2371",
								"removeOracleSource(bytes32,address)": "4819",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28421",
								"unpause()": "infinite",
								"updatePrice(bytes32,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 553,
									"end": 7813,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2033,
									"end": 2244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2033,
									"end": 2244,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2095,
									"end": 2107,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1717,
									"end": 1718,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1822,
									"end": 1844,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1822,
									"end": 1844,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 997,
									"end": 1004,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2127,
									"end": 2151,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2127,
									"end": 2151,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2182,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2119,
									"end": 2182,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2182,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 904,
									"end": 906,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2119,
									"end": 2182,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2119,
									"end": 2182,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2119,
									"end": 2182,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 886,
									"end": 907,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 943,
									"end": 945,
									"name": "PUSH",
									"source": 8,
									"value": "1A"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 923,
									"end": 941,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 916,
									"end": 946,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 982,
									"end": 1010,
									"name": "PUSH",
									"source": 8,
									"value": "496E76616C696420707269636520666565642061646472657373000000000000"
								},
								{
									"begin": 962,
									"end": 980,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 962,
									"end": 980,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 962,
									"end": 980,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 955,
									"end": 1011,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1028,
									"end": 1046,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 1028,
									"end": 1046,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2182,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 702,
									"end": 1052,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2119,
									"end": 2182,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2119,
									"end": 2182,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2192,
									"end": 2201,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 2192,
									"end": 2237,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2192,
									"end": 2237,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 702,
									"end": 1052,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 702,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 553,
									"end": 7813,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f09044adcec01968d4d90212f613dd84e48f926c7039a2534ca70cdddd3e6ee864736f6c634300081c0033",
									".code": [
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "741BEF1A"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "A5B5FB88"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "A5B5FB88"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "BC269850"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "DB7C1AD1"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "F3F699F1"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "741BEF1A"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "9F97ACB7"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "6301A143"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "1E9492F"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "1FDE7F26"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "2806BCE2"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "31D98B3F"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 553,
											"end": 7813,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7240,
											"end": 7513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 7240,
											"end": 7513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 4728,
											"end": 4942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4728,
											"end": 4942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 924,
											"end": 949,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 924,
											"end": 949,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 924,
											"end": 949,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 980,
											"end": 982,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 958,
											"end": 992,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 958,
											"end": 992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 958,
											"end": 992,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 958,
											"end": 992,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1050,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 912,
											"end": 914,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 897,
											"end": 915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 5237,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5237,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3380,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7746,
											"end": 7811,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7746,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7746,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7746,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7746,
											"end": 7811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1418,
											"end": 1432,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1418,
											"end": 1432,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1434,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1393,
											"end": 1434,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1253,
											"end": 1440,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1283,
											"end": 1293,
											"name": "PUSH",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1581,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1235,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1445,
											"end": 1622,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 914,
											"end": 952,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 914,
											"end": 952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 914,
											"end": 952,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 914,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 914,
											"end": 952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 914,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 914,
											"end": 952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 914,
											"end": 952,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 914,
											"end": 952,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 914,
											"end": 952,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 914,
											"end": 952,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 914,
											"end": 952,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 914,
											"end": 952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 952,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1791,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 914,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1627,
											"end": 1858,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7688,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7584,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7584,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7584,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 7584,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 6543,
											"end": 7046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6543,
											"end": 7046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1057,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1000,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1000,
											"end": 1057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1000,
											"end": 1057,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1437,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1374,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "PUSH",
											"source": 7,
											"value": "E10"
										},
										{
											"begin": 1374,
											"end": 1437,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1437,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1122,
											"end": 1171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1122,
											"end": 1171,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2545,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2545,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7349,
											"end": 7353,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7349,
											"end": 7369,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7341,
											"end": 7386,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 7341,
											"end": 7386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7422,
											"end": 7431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7422,
											"end": 7431,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7404,
											"end": 7432,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7432,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7422,
											"end": 7431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7422,
											"end": 7431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7422,
											"end": 7431,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7422,
											"end": 7431,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7422,
											"end": 7431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7432,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 7396,
											"end": 7451,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7396,
											"end": 7451,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7396,
											"end": 7451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4178,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7396,
											"end": 7451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7396,
											"end": 7451,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7396,
											"end": 7451,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4179,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420736F75726365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3974,
											"end": 4312,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7396,
											"end": 7451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 7396,
											"end": 7451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31D98B3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4838,
											"end": 4859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "PUSH",
											"source": 7,
											"value": "31D98B3F"
										},
										{
											"begin": 4916,
											"end": 4929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 4916,
											"end": 4935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4909,
											"end": 4935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4728,
											"end": 4942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 5237,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5345,
											"end": 5358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5358,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5358,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5416,
											"end": 5444,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5444,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5444,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5416,
											"end": 5444,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4178,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4179,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4195,
											"end": 4213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4188,
											"end": 4218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420736F75726365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4234,
											"end": 4252,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4227,
											"end": 4271,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3974,
											"end": 4312,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 5408,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5477,
											"end": 5502,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5502,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 5477,
											"end": 5504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 5477,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5473,
											"end": 6053,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6030,
											"end": 6031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 6022,
											"end": 6042,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5473,
											"end": 6053,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5473,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5671,
											"end": 5672,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5667,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5661,
											"end": 5672,
											"name": "SGT",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5657,
											"end": 5708,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5708,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5674,
											"end": 5708,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5674,
											"end": 5708,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5708,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5674,
											"end": 5708,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5674,
											"end": 5708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5674,
											"end": 5708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5830,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5831,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436861696E6C696E6B3A20496E76616C6964207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5847,
											"end": 5865,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5847,
											"end": 5865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5894,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5929,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5911,
											"end": 5929,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5674,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5587,
											"end": 5935,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5657,
											"end": 5708,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5657,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5726,
											"end": 5735,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5739,
											"end": 5740,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5740,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5722,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5722,
											"end": 5781,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5781,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5781,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5742,
											"end": 5781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5781,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6144,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5742,
											"end": 5781,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5742,
											"end": 5781,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5781,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6183,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6154,
											"end": 6184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6220,
											"end": 6251,
											"name": "PUSH",
											"source": 8,
											"value": "436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000"
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6252,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5742,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5940,
											"end": 6293,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5722,
											"end": 5781,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 5722,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "PUSH",
											"source": 7,
											"value": "E10"
										},
										{
											"begin": 5799,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5817,
											"end": 5826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5814,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 5799,
											"end": 5826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5826,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 5799,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5858,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5925,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5795,
											"end": 5925,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6730,
											"end": 6732,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6733,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6769,
											"end": 6771,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436861696E6C696E6B3A205374616C65207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6781,
											"end": 6833,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6528,
											"end": 6874,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5925,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 5795,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5965,
											"end": 5971,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5946,
											"end": 5972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5972,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5946,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5974,
											"end": 5983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5985,
											"end": 5989,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5938,
											"end": 5990,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3380,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3512,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3555,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3571,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3543,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 3543,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3634,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3640,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3655,
											"end": 3728,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 3728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1293,
											"name": "PUSH",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 3689,
											"end": 3693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3689,
											"end": 3703,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3686,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3671,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3671,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3728,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 3728,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3655,
											"end": 3728,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 3655,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3796,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3651,
											"end": 3796,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3764,
											"end": 3778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3780,
											"end": 3784,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3780,
											"end": 3784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3744,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 3744,
											"end": 3785,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3796,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 3651,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3842,
											"end": 3867,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3867,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 3842,
											"end": 3869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3842,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3838,
											"end": 4418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4395,
											"end": 4396,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4399,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4387,
											"end": 4407,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3838,
											"end": 4418,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3838,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4036,
											"end": 4037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4037,
											"name": "SGT",
											"source": 7
										},
										{
											"begin": 4022,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4022,
											"end": 4073,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4073,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4039,
											"end": 4073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5792,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5828,
											"end": 5830,
											"name": "PUSH",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5808,
											"end": 5826,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5801,
											"end": 5831,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436861696E6C696E6B3A20496E76616C6964207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5847,
											"end": 5865,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5847,
											"end": 5865,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5840,
											"end": 5894,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5911,
											"end": 5929,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5911,
											"end": 5929,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4039,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5587,
											"end": 5935,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4022,
											"end": 4073,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 4022,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4105,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4087,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4087,
											"end": 4146,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4146,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4146,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4107,
											"end": 4146,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6142,
											"end": 6144,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4107,
											"end": 4146,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4107,
											"end": 4146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4146,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6124,
											"end": 6145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6183,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6154,
											"end": 6184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6220,
											"end": 6251,
											"name": "PUSH",
											"source": 8,
											"value": "436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000"
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6252,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4107,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5940,
											"end": 6293,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4087,
											"end": 4146,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 4087,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1430,
											"end": 1437,
											"name": "PUSH",
											"source": 7,
											"value": "E10"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 4182,
											"end": 4191,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4179,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4164,
											"end": 4191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 4164,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4223,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4290,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4160,
											"end": 4290,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6730,
											"end": 6732,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6712,
											"end": 6733,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6769,
											"end": 6771,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6742,
											"end": 6772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436861696E6C696E6B3A205374616C65207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6788,
											"end": 6806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6781,
											"end": 6833,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4243,
											"end": 4275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6528,
											"end": 6874,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4160,
											"end": 4290,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 4160,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4311,
											"end": 4337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4337,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 4311,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4339,
											"end": 4348,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4350,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 4303,
											"end": 4355,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7746,
											"end": 7811,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 7746,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7794,
											"end": 7802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7794,
											"end": 7804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 7794,
											"end": 7804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7746,
											"end": 7811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7584,
											"end": 7688,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 7584,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7630,
											"end": 7636,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 7630,
											"end": 7638,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7630,
											"end": 7638,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 7630,
											"end": 7638,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7653,
											"end": 7681,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1039,
											"end": 1057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D373A1AC37410A4DA6DEF2D7F3F2E704ACA3E95E2E251322A031EEDDA7EB686C"
										},
										{
											"begin": 7653,
											"end": 7681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7653,
											"end": 7681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7653,
											"end": 7681,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 7584,
											"end": 7688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2262,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6791,
											"end": 6795,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6791,
											"end": 6811,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 6783,
											"end": 6828,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6783,
											"end": 6828,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6846,
											"end": 6866,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6846,
											"end": 6866,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6838,
											"end": 6893,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6838,
											"end": 6893,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6838,
											"end": 6893,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6838,
											"end": 6893,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6838,
											"end": 6893,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7063,
											"end": 7084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7122,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 7100,
											"end": 7118,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7100,
											"end": 7118,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7118,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7093,
											"end": 7123,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420736F757263652061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7132,
											"end": 7184,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7201,
											"end": 7219,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7201,
											"end": 7219,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6838,
											"end": 6893,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 6879,
											"end": 7225,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6838,
											"end": 6893,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6838,
											"end": 6893,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6991,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6991,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6991,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6991,
											"modifierDepth": 2,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6950,
											"end": 6991,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"modifierDepth": 2,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 6939,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "A8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536"
										},
										{
											"begin": 7006,
											"end": 7039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6904,
											"end": 6919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7039,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 6773,
											"end": 7046,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2839,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6543,
											"end": 7046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1627,
											"end": 1858,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2262,
											"end": 2281,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2745,
											"end": 2749,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2745,
											"end": 2765,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 2737,
											"end": 2782,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 2737,
											"end": 2782,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2828,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2800,
											"end": 2809,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2800,
											"end": 2828,
											"modifierDepth": 3,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2800,
											"end": 2828,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2849,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2792,
											"end": 2849,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2849,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2792,
											"end": 2849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2792,
											"end": 2849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7432,
											"end": 7434,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2792,
											"end": 2849,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2792,
											"end": 2849,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2849,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7414,
											"end": 7435,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7471,
											"end": 7473,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7451,
											"end": 7469,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7444,
											"end": 7474,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4675747572652074696D657374616D7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7490,
											"end": 7508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7483,
											"end": 7529,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2849,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7230,
											"end": 7570,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2792,
											"end": 2849,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 2792,
											"end": 2849,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2876,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2872,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2867,
											"end": 2876,
											"modifierDepth": 3,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 2894,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2859,
											"end": 2894,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 2894,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2859,
											"end": 2894,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 2894,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 2894,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7777,
											"end": 7779,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2894,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2859,
											"end": 2894,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 2894,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7759,
											"end": 7780,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7816,
											"end": 7818,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7796,
											"end": 7814,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7789,
											"end": 7819,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7828,
											"end": 7871,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7888,
											"end": 7906,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7888,
											"end": 7906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2894,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 7575,
											"end": 7912,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2859,
											"end": 2894,
											"modifierDepth": 3,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 2859,
											"end": 2894,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3023,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2926,
											"end": 3034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2917,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 3034,
											"modifierDepth": 3,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"modifierDepth": 3,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 3034,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8091,
											"end": 8116,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8091,
											"end": 8116,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8159,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8125,
											"end": 8159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "BCD10D64FCE9DCF9568572ED92E371DF336D32649E8960A045C9548794A44B26"
										},
										{
											"begin": 3050,
											"end": 3086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8082,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3086,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2839,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 2,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 3093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1627,
											"end": 1858,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17171,
											"end": 17364,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 17171,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17227,
											"end": 17234,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17258,
											"end": 17259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17250,
											"end": 17255,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 17250,
											"end": 17259,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54672219"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1445,
											"end": 1622,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17351,
											"end": 17356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17171,
											"end": 17364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2551,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2434,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1487,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1487,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2507,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2531,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2531,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1819,
											"end": 1851,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1801,
											"end": 1852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1791,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2187,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2246,
											"end": 2260,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2282,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 2337,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2488,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8552,
											"end": 8554,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8534,
											"end": 8555,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8591,
											"end": 8593,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8564,
											"end": 8594,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8630,
											"end": 8663,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8603,
											"end": 8664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8681,
											"end": 8699,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8681,
											"end": 8699,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 8350,
											"end": 8705,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2337,
											"end": 2624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 1768,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8912,
											"end": 8914,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8894,
											"end": 8915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8951,
											"end": 8953,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8931,
											"end": 8949,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8924,
											"end": 8954,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8970,
											"end": 8988,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8963,
											"end": 9009,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9026,
											"end": 9044,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9026,
											"end": 9044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8710,
											"end": 9050,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 2052,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 1946,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9257,
											"end": 9259,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9239,
											"end": 9260,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9296,
											"end": 9298,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 9276,
											"end": 9294,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9276,
											"end": 9294,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9276,
											"end": 9294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9269,
											"end": 9299,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9315,
											"end": 9333,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9315,
											"end": 9333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9315,
											"end": 9333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9358,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 9055,
											"end": 9399,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 192,
											"end": 492,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 192,
											"end": 492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 382,
											"end": 405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 382,
											"end": 405,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 405,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 448,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 482,
											"end": 484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 467,
											"end": 485,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 467,
											"end": 485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 448,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 448,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 448,
											"end": 486,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 448,
											"end": 486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 438,
											"end": 486,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 438,
											"end": 486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 192,
											"end": 492,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 192,
											"end": 492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 192,
											"end": 492,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 192,
											"end": 492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 192,
											"end": 492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 192,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 497,
											"end": 723,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 497,
											"end": 723,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 556,
											"end": 562,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 584,
											"end": 607,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 577,
											"end": 629,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 577,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 615,
											"end": 627,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 577,
											"end": 629,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 670,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 670,
											"end": 693,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 497,
											"end": 723,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1248,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 1062,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1149,
											"end": 1172,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1145,
											"end": 1177,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1180,
											"end": 1192,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1213,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1242,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1213,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1203,
											"end": 1242,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1248,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1062,
											"end": 1248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2854,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2071,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2205,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2207,
											"end": 2213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2221,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2268,
											"end": 2271,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2247,
											"end": 2254,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2266,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2239,
											"end": 2272,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2289,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2236,
											"end": 2289,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2289,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2236,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2396,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2430,
											"end": 2432,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2415,
											"end": 2433,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2396,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2396,
											"end": 2434,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2396,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2854,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2071,
											"end": 2854,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2434,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2386,
											"end": 2434,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2507,
											"end": 2509,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2492,
											"end": 2510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2511,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2479,
											"end": 2511,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2610,
											"end": 2612,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2595,
											"end": 2613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2718,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2685,
											"end": 2718,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2817,
											"end": 2820,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2802,
											"end": 2821,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2821,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2802,
											"end": 2821,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2822,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3041,
											"end": 3628,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3041,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3127,
											"end": 3133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3141,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3143,
											"end": 3149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3204,
											"end": 3207,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3192,
											"end": 3201,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3183,
											"end": 3190,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3179,
											"end": 3202,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3175,
											"end": 3208,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3172,
											"end": 3225,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3172,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3172,
											"end": 3225,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3219,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3211,
											"end": 3223,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3172,
											"end": 3225,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3172,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3266,
											"end": 3289,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3289,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3266,
											"end": 3289,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3386,
											"end": 3388,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3390,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3390,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3493,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3577,
											"end": 3595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3564,
											"end": 3596,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3564,
											"end": 3596,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3969,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 3633,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3835,
											"end": 3837,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3817,
											"end": 3838,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3817,
											"end": 3838,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3817,
											"end": 3838,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3874,
											"end": 3876,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 3854,
											"end": 3872,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3854,
											"end": 3872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3847,
											"end": 3877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B2103830B4B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3910,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3893,
											"end": 3911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3886,
											"end": 3928,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3960,
											"end": 3962,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3945,
											"end": 3963,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 3963,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4317,
											"end": 4822,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 4317,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4402,
											"end": 4408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4416,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4418,
											"end": 4424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4473,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4459,
											"end": 4468,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4450,
											"end": 4457,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4446,
											"end": 4469,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4442,
											"end": 4474,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4487,
											"end": 4488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4485,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4477,
											"end": 4489,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4439,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4548,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4548,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4640,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4617,
											"end": 4642,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4713,
											"end": 4715,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4698,
											"end": 4716,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4692,
											"end": 4717,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4548,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 4642,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4755,
											"end": 4770,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4770,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4771,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4736,
											"end": 4772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4736,
											"end": 4772,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4726,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4726,
											"end": 4790,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4786,
											"end": 4787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4784,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4788,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4726,
											"end": 4790,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4726,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4809,
											"end": 4816,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4799,
											"end": 4816,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4799,
											"end": 4816,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4799,
											"end": 4816,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4317,
											"end": 4822,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4317,
											"end": 4822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4317,
											"end": 4822,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4317,
											"end": 4822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4317,
											"end": 4822,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4317,
											"end": 4822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 5006,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4827,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4905,
											"end": 4918,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4905,
											"end": 4918,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4958,
											"end": 4980,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4947,
											"end": 4981,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4981,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 4982,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 4982,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4927,
											"end": 5000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 4927,
											"end": 5000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4993,
											"end": 4994,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4986,
											"end": 4998,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5128,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5130,
											"end": 5136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5202,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 5187,
											"end": 5196,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5185,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5197,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5170,
											"end": 5203,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5220,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5167,
											"end": 5220,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5213,
											"end": 5214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5206,
											"end": 5218,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5220,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5167,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5268,
											"end": 5277,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5239,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5239,
											"end": 5278,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5239,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5318,
											"end": 5320,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5297,
											"end": 5322,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5369,
											"end": 5387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5363,
											"end": 5388,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5480,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5457,
											"end": 5482,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5278,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5278,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5297,
											"end": 5322,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5297,
											"end": 5322,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5363,
											"end": 5388,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5482,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5527,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5571,
											"end": 5574,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5556,
											"end": 5575,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5556,
											"end": 5575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5527,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5527,
											"end": 5576,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 5527,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5517,
											"end": 5576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5517,
											"end": 5576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5011,
											"end": 5582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6523,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 6298,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6374,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6386,
											"end": 6397,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6517,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6383,
											"end": 6517,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6439,
											"end": 6449,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 6434,
											"end": 6437,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6430,
											"end": 6450,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6427,
											"end": 6428,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6474,
											"end": 6478,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 6471,
											"end": 6472,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6464,
											"end": 6479,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6502,
											"end": 6506,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6507,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6383,
											"end": 6517,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6383,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6523,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6523,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"interfaces/IUBI4ALLOracle.sol",
								"oracle/UBI4ALLOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CHAINLINK_STALENESS_THRESHOLD()": "bc269850",
							"EUR_USD_PAIR()": "a5b5fb88",
							"PRICE_VALIDITY_PERIOD()": "6301a143",
							"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)": "9f97acb7",
							"getAggregatedPrice(bytes32)": "1fde7f26",
							"getPrice(bytes32)": "31d98b3f",
							"getSourcePrice(address)": "2806bce2",
							"latestPrices(bytes32)": "db7c1ad1",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"priceFeed()": "741bef1a",
							"removeOracleSource(bytes32,address)": "01e9492f",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updatePrice(bytes32,uint256,uint256,uint256)": "f3f699f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"EmergencyPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeed\",\"type\":\"address\"}],\"name\":\"PriceFeedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHAINLINK_STALENESS_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EUR_USD_PAIR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_VALIDITY_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"heartbeat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minConfidence\",\"type\":\"uint256\"}],\"name\":\"addOracleSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"getAggregatedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"getSourcePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"latestPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"removeOracleSource\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confidence\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"heartbeat\":\"Frequenza di aggiornamento della sorgente (non utilizzato)\",\"maxDeviation\":\"Deviazione massima consentita (non utilizzato)\",\"minConfidence\":\"Confidenza minima richiesta (non utilizzato)\",\"pair\":\"Coppia di asset (deve essere EUR_USD_PAIR)\",\"source\":\"Nuovo indirizzo del feed Chainlink\",\"weight\":\"Peso della sorgente (non utilizzato)\"}},\"constructor\":{\"params\":{\"_priceFeed\":\"Indirizzo del feed Chainlink per EUR/USD\",\"initialOwner\":\"Indirizzo del proprietario iniziale\"}},\"getAggregatedPrice(bytes32)\":{\"params\":{\"pair\":\"Coppia di asset (deve essere EUR_USD_PAIR)\"},\"returns\":{\"isValid\":\"True se il prezzo \\u00e8 valido\",\"timestamp\":\"Timestamp dell'aggiornamento\",\"weightedPrice\":\"Prezzo aggregato\"}},\"getPrice(bytes32)\":{\"params\":{\"pair\":\"Coppia di asset (deve essere EUR_USD_PAIR)\"},\"returns\":{\"isValid\":\"True se il prezzo \\u00e8 valido\",\"price\":\"Prezzo della coppia\",\"timestamp\":\"Timestamp dell'aggiornamento\"}},\"getSourcePrice(address)\":{\"params\":{\"source\":\"Indirizzo del feed (deve corrispondere a priceFeed)\"},\"returns\":{\"isValid\":\"True se il prezzo \\u00e8 valido\",\"price\":\"Prezzo della coppia\",\"timestamp\":\"Timestamp dell'aggiornamento\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeOracleSource(bytes32,address)\":{\"params\":{\"pair\":\"Coppia di asset (deve essere EUR_USD_PAIR)\",\"source\":\"Indirizzo del feed da rimuovere\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePrice(bytes32,uint256,uint256,uint256)\":{\"params\":{\"confidence\":\"Livello di confidenza del prezzo (non utilizzato)\",\"pair\":\"Coppia di asset (deve essere EUR_USD_PAIR)\",\"price\":\"Prezzo da impostare\",\"timestamp\":\"Timestamp del prezzo\"}}},\"stateVariables\":{\"CHAINLINK_STALENESS_THRESHOLD\":{\"details\":\"Periodo massimo di validit\\u00e0 per i dati di Chainlink (1 ora)\"},\"EUR_USD_PAIR\":{\"details\":\"Coppia supportata (EUR/USD)\"},\"PRICE_VALIDITY_PERIOD\":{\"details\":\"Periodo di validit\\u00e0 del prezzo (15 minuti)\"},\"latestPrices\":{\"details\":\"Mappatura dei prezzi pi\\u00f9 recenti per coppia\"},\"priceFeed\":{\"details\":\"Feed di prezzo Chainlink\"}},\"title\":\"UBI4ALLOracle - Oracolo per il prezzo EUR/USD\",\"version\":1},\"userdoc\":{\"events\":{\"EmergencyPause(bytes32)\":{\"notice\":\"Evento emesso quando il contratto viene messo in pausa\"},\"PriceFeedUpdated(address,address)\":{\"notice\":\"Evento emesso quando il feed di prezzo viene aggiornato\"},\"PriceUpdated(bytes32,uint256,uint256)\":{\"notice\":\"Evento emesso quando il prezzo viene aggiornato\"}},\"kind\":\"user\",\"methods\":{\"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Aggiunge o aggiorna il feed Chainlink per EUR/USD\"},\"constructor\":{\"notice\":\"Costruttore del contratto\"},\"getAggregatedPrice(bytes32)\":{\"notice\":\"Ottiene il prezzo aggregato (equivalente a getPrice per EUR/USD)\"},\"getPrice(bytes32)\":{\"notice\":\"Ottiene il prezzo pi\\u00f9 recente per la coppia EUR/USD\"},\"getSourcePrice(address)\":{\"notice\":\"Ottiene il prezzo direttamente dal feed Chainlink\"},\"pause()\":{\"notice\":\"Mette in pausa il contratto (blocca updatePrice)\"},\"removeOracleSource(bytes32,address)\":{\"notice\":\"Rimuove un feed (no-op per oracolo a sorgente singola)\"},\"unpause()\":{\"notice\":\"Ripristina il contratto dalla pausa\"},\"updatePrice(bytes32,uint256,uint256,uint256)\":{\"notice\":\"Aggiorna manualmente il prezzo per la coppia EUR/USD\"}},\"notice\":\"Fornisce prezzi aggiornati per la coppia EUR/USD, con fallback a Chainlink\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle/UBI4ALLOracle.sol\":\"UBI4ALLOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x15490c1ac7fb488198fce8a04211f15277ee816915367bc906110cbb57863bbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3273e1e51c1bfe12b50778dd98d3d322ca315cd8e1185593694a0ac828b820\",\"dweb:/ipfs/QmTyAWneXaURy9Ls4dovFWLV9yxzMkELmLsgLTWeubz8ZA\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xf4d28329285c89e85daf450fbe612ec5ceb19842ae0be976ab1569897940be90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a021f64d3d58a64fd3045afc6b192c82bca29d95cd594a3c0ed93d1c69ecc98\",\"dweb:/ipfs/QmegaH5RM4Sboa22unJm3FdMVTd3K9UUf8ogbvBwx1K8XJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x880e8b3325f624a5c4dfb9a754ed83bf0be1476d02c5063b215f3c3b9fdec331\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e14b50f3ca0b35d014b166235d94dfa8c9067bb3f5d65efdfb2193355a455\",\"dweb:/ipfs/QmNrM5LEwfCi7cxMovccBpFeL8T9MWfqA15dW9SobPDPfo\"]},\"interfaces/IUBI4ALLOracle.sol\":{\"keccak256\":\"0x49272c74047a783a16c9163a9cefa6f6ac19d1fc0611821df60335e8048af538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a191d8343caf8416dcb7c7c04f9c0fa361eaf321a303406a7b4a80024afa15\",\"dweb:/ipfs/QmeydCJh4nAkpNqqYuJCnF5g9Hid1GLYrNjokrxau95vXf\"]},\"oracle/UBI4ALLOracle.sol\":{\"keccak256\":\"0x6ff06ab7b4c3c0b5608366fbc18466a3eb3b2825cd575b89deda5469b04e0548\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba5a4ab5c684726462888b8fb3a900c1a91cd504e1514552382157476fc7b59\",\"dweb:/ipfs/QmU7knURBJFrdcSz1QBbs6i9ViQ7auo3N2vrSex5xdi7fD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 312,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 2259,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "priceFeed",
								"offset": 1,
								"slot": "2",
								"type": "t_contract(AggregatorV3Interface)45"
							},
							{
								"astId": 2272,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "latestPrices",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_struct(PriceData)2255_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_struct(PriceData)2255_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct UBI4ALLOracle.PriceData)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceData)2255_storage"
							},
							"t_struct(PriceData)2255_storage": {
								"encoding": "inplace",
								"label": "struct UBI4ALLOracle.PriceData",
								"members": [
									{
										"astId": 2250,
										"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
										"label": "price",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2252,
										"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2254,
										"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
										"label": "isValid",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"EmergencyPause(bytes32)": {
								"notice": "Evento emesso quando il contratto viene messo in pausa"
							},
							"PriceFeedUpdated(address,address)": {
								"notice": "Evento emesso quando il feed di prezzo viene aggiornato"
							},
							"PriceUpdated(bytes32,uint256,uint256)": {
								"notice": "Evento emesso quando il prezzo viene aggiornato"
							}
						},
						"kind": "user",
						"methods": {
							"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)": {
								"notice": "Aggiunge o aggiorna il feed Chainlink per EUR/USD"
							},
							"constructor": {
								"notice": "Costruttore del contratto"
							},
							"getAggregatedPrice(bytes32)": {
								"notice": "Ottiene il prezzo aggregato (equivalente a getPrice per EUR/USD)"
							},
							"getPrice(bytes32)": {
								"notice": "Ottiene il prezzo più recente per la coppia EUR/USD"
							},
							"getSourcePrice(address)": {
								"notice": "Ottiene il prezzo direttamente dal feed Chainlink"
							},
							"pause()": {
								"notice": "Mette in pausa il contratto (blocca updatePrice)"
							},
							"removeOracleSource(bytes32,address)": {
								"notice": "Rimuove un feed (no-op per oracolo a sorgente singola)"
							},
							"unpause()": {
								"notice": "Ripristina il contratto dalla pausa"
							},
							"updatePrice(bytes32,uint256,uint256,uint256)": {
								"notice": "Aggiorna manualmente il prezzo per la coppia EUR/USD"
							}
						},
						"notice": "Fornisce prezzi aggiornati per la coppia EUR/USD, con fallback a Chainlink",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> oracle/UBI4ALLOracle.sol:62:9:\n   |\n62 |         uint256 confidence\n   |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2665,
					"file": "oracle/UBI4ALLOracle.sol",
					"start": 2647
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> oracle/UBI4ALLOracle.sol:168:9:\n    |\n168 |         uint256 weight,\n    |         ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6637,
					"file": "oracle/UBI4ALLOracle.sol",
					"start": 6623
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> oracle/UBI4ALLOracle.sol:169:9:\n    |\n169 |         uint256 heartbeat,\n    |         ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6664,
					"file": "oracle/UBI4ALLOracle.sol",
					"start": 6647
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> oracle/UBI4ALLOracle.sol:170:9:\n    |\n170 |         uint256 maxDeviation,\n    |         ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6694,
					"file": "oracle/UBI4ALLOracle.sol",
					"start": 6674
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> oracle/UBI4ALLOracle.sol:171:9:\n    |\n171 |         uint256 minConfidence\n    |         ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6725,
					"file": "oracle/UBI4ALLOracle.sol",
					"start": 6704
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							396
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 397,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 396,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 396,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								396
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 378,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							396
						],
						"Pausable": [
							301
						]
					},
					"id": 302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 397,
							"src": "131:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 198,
										"name": "Context",
										"nameLocations": [
											"633:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 396,
										"src": "633:7:2"
									},
									"id": 199,
									"nodeType": "InheritanceSpecifier",
									"src": "633:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "163:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 301,
							"linearizedBaseContracts": [
								301,
								396
							],
							"name": "Pausable",
							"nameLocation": "621:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "647:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 204,
									"name": "Paused",
									"nameLocation": "731:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "738:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:2"
									},
									"src": "725:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "761:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 209,
									"name": "Unpaused",
									"nameLocation": "842:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "859:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "851:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:17:2"
									},
									"src": "836:32:2"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "887:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "874:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 210,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "874:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "987:32:2",
										"statements": [
											{
												"expression": {
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 215,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "997:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "997:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "997:15:2"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "901:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 220,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "984:2:2"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:2"
									},
									"scope": 301,
									"src": "973:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1230:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 223,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1240:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1240:19:2"
											},
											{
												"id": 226,
												"nodeType": "PlaceholderStatement",
												"src": "1269:1:2"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "1025:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 228,
									"name": "whenNotPaused",
									"nameLocation": "1214:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:2"
									},
									"src": "1205:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "1477:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 231,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "1487:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1487:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "1487:16:2"
											},
											{
												"id": 234,
												"nodeType": "PlaceholderStatement",
												"src": "1513:1:2"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1283:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 236,
									"name": "whenPaused",
									"nameLocation": "1464:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:2"
									},
									"src": "1455:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "1669:31:2",
										"statements": [
											{
												"expression": {
													"id": 242,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 211,
													"src": "1686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 241,
												"id": 243,
												"nodeType": "Return",
												"src": "1679:14:2"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1527:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1625:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:2"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "1663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:2"
									},
									"scope": 301,
									"src": "1616:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "1819:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1837:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 250,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "1838:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1838:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1848:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1829:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "1829:38:2"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "1706:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1777:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:2:2"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:2"
									},
									"scope": 301,
									"src": "1768:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "1994:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 262,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "2012:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2012:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2022:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2004:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2004:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "2004:41:2"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "1880:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1955:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1969:2:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:0:2"
									},
									"scope": 301,
									"src": "1946:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "2236:66:2",
										"statements": [
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 274,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2246:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2256:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2246:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "2246:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 279,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "2282:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2282:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 278,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2275:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "EmitStatement",
												"src": "2270:25:2"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "2058:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 271,
												"name": "whenNotPaused",
												"nameLocations": [
													"2222:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "2222:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2222:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2196:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2202:2:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2236:0:2"
									},
									"scope": 301,
									"src": "2187:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "2482:69:2",
										"statements": [
											{
												"expression": {
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2492:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2502:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2492:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 293,
												"nodeType": "ExpressionStatement",
												"src": "2492:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 295,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "2531:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2531:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 294,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "2522:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2522:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "EmitStatement",
												"src": "2517:27:2"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "2308:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 287,
												"name": "whenPaused",
												"nameLocations": [
													"2471:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 236,
												"src": "2471:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2471:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2443:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2482:0:2"
									},
									"scope": 301,
									"src": "2434:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 302,
							"src": "603:1950:2",
							"usedErrors": [],
							"usedEvents": [
								204,
								209
							]
						}
					],
					"src": "105:2449:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							366
						]
					},
					"id": 367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 304,
								"nodeType": "StructuredDocumentation",
								"src": "138:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 366,
							"linearizedBaseContracts": [
								366
							],
							"name": "ReentrancyGuard",
							"nameLocation": "907:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 307,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1702:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "1677:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 305,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1677:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 306,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1717:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 310,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1749:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "1724:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 308,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1724:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 309,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1760:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 312,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1784:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "1768:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 311,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "1812:39:3",
										"statements": [
											{
												"expression": {
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 315,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "1822:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 316,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "1832:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1822:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "1822:22:3"
											}
										]
									},
									"id": 320,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:2:3"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1812:0:3"
									},
									"scope": 366,
									"src": "1798:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2252:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 323,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2262:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "2262:21:3"
											},
											{
												"id": 326,
												"nodeType": "PlaceholderStatement",
												"src": "2293:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 327,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2304:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2304:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "2304:20:3"
											}
										]
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "1857:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 331,
									"name": "nonReentrant",
									"nameLocation": "2237:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:2:3"
									},
									"src": "2228:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "2376:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 335,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "2469:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 336,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "2480:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2469:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2490:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2461:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2461:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "2461:63:3"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 341,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "2599:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "2609:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2599:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2599:18:3"
											}
										]
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2346:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2365:2:3"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2376:0:3"
									},
									"scope": 366,
									"src": "2337:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2668:171:3",
										"statements": [
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "2810:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "2820:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2810:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "2810:22:3"
											}
										]
									},
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2639:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2657:2:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:3"
									},
									"scope": 366,
									"src": "2630:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "3082:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 360,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "3099:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 361,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "3110:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3099:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 359,
												"id": 363,
												"nodeType": "Return",
												"src": "3092:26:3"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2845:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3027:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:2:3"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "3076:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:3"
									},
									"scope": 366,
									"src": "3018:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 367,
							"src": "889:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3016:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							396
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 369,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 374,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 373,
												"id": 376,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 396,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 383,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 382,
												"id": 385,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 396,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 391,
												"id": 393,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 396,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 397,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							2161
						]
					},
					"id": 2162,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 398,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 399,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:5",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 2161,
							"linearizedBaseContracts": [
								2161
							],
							"name": "SafeCast",
							"nameLocation": "777:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:5",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 406,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "902:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 401,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "914:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:5"
									},
									"src": "865:64:5"
								},
								{
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:5",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 411,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "1049:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 408,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:5"
									},
									"src": "1015:48:5"
								},
								{
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:5",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 418,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1177:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 413,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1189:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 415,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:5"
									},
									"src": "1141:62:5"
								},
								{
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:5",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 423,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "1323:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:5"
									},
									"src": "1289:49:5"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "1695:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "1709:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 433,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 432,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "1705:105:5",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "1736:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 440,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 426,
																		"src": "1793:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 438,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1757:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 442,
															"nodeType": "RevertStatement",
															"src": "1750:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "1834:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 445,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 430,
												"id": 449,
												"nodeType": "Return",
												"src": "1819:21:5"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:5",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1648:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:5"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1686:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 428,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:5"
									},
									"scope": 2161,
									"src": "1629:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "2204:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 459,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "2218:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 460,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 472,
												"nodeType": "IfStatement",
												"src": "2214:105:5",
												"trueBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "2245:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 468,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "2302:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 466,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "2266:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 470,
															"nodeType": "RevertStatement",
															"src": "2259:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "2343:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 473,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 458,
												"id": 477,
												"nodeType": "Return",
												"src": "2328:21:5"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:5",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2157:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:5"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "2195:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 456,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:5"
									},
									"scope": 2161,
									"src": "2138:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2713:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 487,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "2727:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 489,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 488,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 500,
												"nodeType": "IfStatement",
												"src": "2723:105:5",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "2754:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 496,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2811:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 494,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "2775:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 498,
															"nodeType": "RevertStatement",
															"src": "2768:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 503,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2852:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 501,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 486,
												"id": 505,
												"nodeType": "Return",
												"src": "2837:21:5"
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:5",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2666:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:5"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2704:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 484,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:5"
									},
									"scope": 2161,
									"src": "2647:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "3222:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 515,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "3236:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 517,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 516,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 528,
												"nodeType": "IfStatement",
												"src": "3232:105:5",
												"trueBody": {
													"id": 527,
													"nodeType": "Block",
													"src": "3263:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 524,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3320:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 522,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "3284:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 526,
															"nodeType": "RevertStatement",
															"src": "3277:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3361:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 529,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 514,
												"id": 533,
												"nodeType": "Return",
												"src": "3346:21:5"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:5",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3175:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:5"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3213:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 512,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:5"
									},
									"scope": 2161,
									"src": "3156:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "3731:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 543,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3745:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 545,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 544,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 556,
												"nodeType": "IfStatement",
												"src": "3741:105:5",
												"trueBody": {
													"id": 555,
													"nodeType": "Block",
													"src": "3772:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 552,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "3829:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 550,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "3793:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 554,
															"nodeType": "RevertStatement",
															"src": "3786:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "3870:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 557,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 542,
												"id": 561,
												"nodeType": "Return",
												"src": "3855:21:5"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:5",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:5"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "3722:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 540,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:5"
									},
									"scope": 2161,
									"src": "3665:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "4240:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 571,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "4254:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 573,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 572,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "4250:105:5",
												"trueBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "4281:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 580,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 566,
																		"src": "4338:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 578,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4302:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 582,
															"nodeType": "RevertStatement",
															"src": "4295:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "4379:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 585,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 570,
												"id": 589,
												"nodeType": "Return",
												"src": "4364:21:5"
											}
										]
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:5",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "4193:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:5"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "4231:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 568,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:5"
									},
									"scope": 2161,
									"src": "4174:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4749:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 599,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4763:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 601,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 600,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 612,
												"nodeType": "IfStatement",
												"src": "4759:105:5",
												"trueBody": {
													"id": 611,
													"nodeType": "Block",
													"src": "4790:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 608,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 594,
																		"src": "4847:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 606,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4811:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 610,
															"nodeType": "RevertStatement",
															"src": "4804:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4888:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 613,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 598,
												"id": 617,
												"nodeType": "Return",
												"src": "4873:21:5"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:5",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4702:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:5"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4740:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 596,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:5"
									},
									"scope": 2161,
									"src": "4683:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "5258:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 627,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "5272:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 629,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 628,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 640,
												"nodeType": "IfStatement",
												"src": "5268:105:5",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "5299:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 636,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "5356:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 634,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "5320:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 638,
															"nodeType": "RevertStatement",
															"src": "5313:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5397:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 641,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 626,
												"id": 645,
												"nodeType": "Return",
												"src": "5382:21:5"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:5",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "5211:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:5"
									},
									"returnParameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "5249:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 624,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:5"
									},
									"scope": 2161,
									"src": "5192:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "5767:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 655,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5781:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 657,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 656,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 668,
												"nodeType": "IfStatement",
												"src": "5777:105:5",
												"trueBody": {
													"id": 667,
													"nodeType": "Block",
													"src": "5808:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 664,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "5865:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 662,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "5829:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 666,
															"nodeType": "RevertStatement",
															"src": "5822:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 671,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5906:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 670,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 669,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 654,
												"id": 673,
												"nodeType": "Return",
												"src": "5891:21:5"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:5",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "5720:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:5"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "5758:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 652,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:5"
									},
									"scope": 2161,
									"src": "5701:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "6276:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 683,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "6290:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 685,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 684,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 696,
												"nodeType": "IfStatement",
												"src": "6286:105:5",
												"trueBody": {
													"id": 695,
													"nodeType": "Block",
													"src": "6317:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 692,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 678,
																		"src": "6374:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 690,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "6338:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 694,
															"nodeType": "RevertStatement",
															"src": "6331:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "6415:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 697,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 682,
												"id": 701,
												"nodeType": "Return",
												"src": "6400:21:5"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:5",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6229:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:5"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "6267:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 680,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:5"
									},
									"scope": 2161,
									"src": "6210:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "6785:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 711,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "6799:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 713,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 712,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "6795:105:5",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "6826:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 720,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 706,
																		"src": "6883:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 718,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "6847:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "6840:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 727,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "6924:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 725,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 710,
												"id": 729,
												"nodeType": "Return",
												"src": "6909:21:5"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:5",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "6738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:5"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "6776:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 708,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:5"
									},
									"scope": 2161,
									"src": "6719:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "7294:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "7308:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "7304:105:5",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "7335:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 748,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "7392:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 746,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "7356:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "7349:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "7433:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 753,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 738,
												"id": 757,
												"nodeType": "Return",
												"src": "7418:21:5"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:5",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "7247:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:5"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "7285:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 736,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:5"
									},
									"scope": 2161,
									"src": "7228:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "7803:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "7817:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 780,
												"nodeType": "IfStatement",
												"src": "7813:105:5",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "7844:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 776,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "7901:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 774,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "7865:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 778,
															"nodeType": "RevertStatement",
															"src": "7858:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 783,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "7942:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 781,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 766,
												"id": 785,
												"nodeType": "Return",
												"src": "7927:21:5"
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:5",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7756:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:5"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "7794:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 764,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:5"
									},
									"scope": 2161,
									"src": "7737:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "8312:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 795,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "8326:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 797,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 796,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "8322:105:5",
												"trueBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "8353:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 804,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 790,
																		"src": "8410:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 802,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "8374:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 806,
															"nodeType": "RevertStatement",
															"src": "8367:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 811,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 790,
															"src": "8451:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 809,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 794,
												"id": 813,
												"nodeType": "Return",
												"src": "8436:21:5"
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:5",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "8265:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:5"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "8303:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 792,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:5"
									},
									"scope": 2161,
									"src": "8246:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "8821:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "8835:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 825,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 824,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 828,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "8831:105:5",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "8862:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 832,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "8919:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 830,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "8883:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 834,
															"nodeType": "RevertStatement",
															"src": "8876:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "8960:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 837,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 822,
												"id": 841,
												"nodeType": "Return",
												"src": "8945:21:5"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:5",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "8774:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:5"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "8812:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 820,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:5"
									},
									"scope": 2161,
									"src": "8755:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "9330:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 851,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "9344:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 853,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 852,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 864,
												"nodeType": "IfStatement",
												"src": "9340:105:5",
												"trueBody": {
													"id": 863,
													"nodeType": "Block",
													"src": "9371:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 860,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 846,
																		"src": "9428:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 858,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9392:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 862,
															"nodeType": "RevertStatement",
															"src": "9385:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "9469:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 865,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 850,
												"id": 869,
												"nodeType": "Return",
												"src": "9454:21:5"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:5",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "9283:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:5"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "9321:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 848,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:5"
									},
									"scope": 2161,
									"src": "9264:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "9839:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 879,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "9853:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 881,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 880,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "9849:105:5",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "9880:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 888,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "9937:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 886,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9901:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "9894:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "9978:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 893,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 878,
												"id": 897,
												"nodeType": "Return",
												"src": "9963:21:5"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:5",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "9792:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:5"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "9830:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 876,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:5"
									},
									"scope": 2161,
									"src": "9773:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "10348:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 907,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "10362:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 909,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 908,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 920,
												"nodeType": "IfStatement",
												"src": "10358:105:5",
												"trueBody": {
													"id": 919,
													"nodeType": "Block",
													"src": "10389:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 916,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "10446:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 914,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "10410:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 918,
															"nodeType": "RevertStatement",
															"src": "10403:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "10487:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 921,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 906,
												"id": 925,
												"nodeType": "Return",
												"src": "10472:21:5"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:5",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "10301:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:5"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "10339:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 904,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:5"
									},
									"scope": 2161,
									"src": "10282:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "10857:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 935,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "10871:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 937,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 936,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 948,
												"nodeType": "IfStatement",
												"src": "10867:105:5",
												"trueBody": {
													"id": 947,
													"nodeType": "Block",
													"src": "10898:74:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 944,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 930,
																		"src": "10955:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 942,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "10919:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 946,
															"nodeType": "RevertStatement",
															"src": "10912:49:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 951,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "10996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 949,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 934,
												"id": 953,
												"nodeType": "Return",
												"src": "10981:21:5"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:5",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "10810:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:5"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "10848:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 932,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:5"
									},
									"scope": 2161,
									"src": "10791:218:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 982,
										"nodeType": "Block",
										"src": "11360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 963,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "11374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 965,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 964,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "11370:103:5",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "11400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 972,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 958,
																		"src": "11456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "11421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 974,
															"nodeType": "RevertStatement",
															"src": "11414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 958,
															"src": "11496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 977,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 962,
												"id": 981,
												"nodeType": "Return",
												"src": "11482:20:5"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:5",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "11314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:5"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "11352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 960,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:5"
									},
									"scope": 2161,
									"src": "11296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "11860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 991,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "11874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 993,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 992,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "11870:103:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "11900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 1000,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "11956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 998,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "11921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1002,
															"nodeType": "RevertStatement",
															"src": "11914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1007,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "11996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 1005,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 990,
												"id": 1009,
												"nodeType": "Return",
												"src": "11982:20:5"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:5",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "11814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:5"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "11852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 988,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:5"
									},
									"scope": 2161,
									"src": "11796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "12360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1019,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "12374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 1021,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 1020,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12370:103:5",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "12400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 1028,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "12456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1026,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "12421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1030,
															"nodeType": "RevertStatement",
															"src": "12414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1035,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "12496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 1033,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1037,
												"nodeType": "Return",
												"src": "12482:20:5"
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:5",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "12314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "12352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1016,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:5"
									},
									"scope": 2161,
									"src": "12296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "12860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1047,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "12874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 1049,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 1048,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1060,
												"nodeType": "IfStatement",
												"src": "12870:103:5",
												"trueBody": {
													"id": 1059,
													"nodeType": "Block",
													"src": "12900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 1056,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "12956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1054,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "12921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1058,
															"nodeType": "RevertStatement",
															"src": "12914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1063,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "12996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 1061,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 1046,
												"id": 1065,
												"nodeType": "Return",
												"src": "12982:20:5"
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:5",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "12814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:5"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "12852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 1044,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:5"
									},
									"scope": 2161,
									"src": "12796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "13360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1075,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "13374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1077,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 1076,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1088,
												"nodeType": "IfStatement",
												"src": "13370:103:5",
												"trueBody": {
													"id": 1087,
													"nodeType": "Block",
													"src": "13400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 1084,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "13456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1082,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "13421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1086,
															"nodeType": "RevertStatement",
															"src": "13414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "13496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1089,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1074,
												"id": 1093,
												"nodeType": "Return",
												"src": "13482:20:5"
											}
										]
									},
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:5",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "13314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:5"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "13352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1072,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:5"
									},
									"scope": 2161,
									"src": "13296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "13860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1103,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "13874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 1105,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 1104,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "13870:103:5",
												"trueBody": {
													"id": 1115,
													"nodeType": "Block",
													"src": "13900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 1112,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "13956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1110,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "13921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1114,
															"nodeType": "RevertStatement",
															"src": "13914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1119,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "13996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 1117,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1121,
												"nodeType": "Return",
												"src": "13982:20:5"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:5",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "13814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:5"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "13852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 1100,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:5"
									},
									"scope": 2161,
									"src": "13796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "14360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1131,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "14374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 1133,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 1132,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1144,
												"nodeType": "IfStatement",
												"src": "14370:103:5",
												"trueBody": {
													"id": 1143,
													"nodeType": "Block",
													"src": "14400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 1140,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "14456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1138,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "14421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1142,
															"nodeType": "RevertStatement",
															"src": "14414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1147,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "14496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 1145,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 1130,
												"id": 1149,
												"nodeType": "Return",
												"src": "14482:20:5"
											}
										]
									},
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:5",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "14314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:5"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "14352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1128,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:5"
									},
									"scope": 2161,
									"src": "14296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "14860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1159,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "14874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 1161,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 1160,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "IfStatement",
												"src": "14870:103:5",
												"trueBody": {
													"id": 1171,
													"nodeType": "Block",
													"src": "14900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 1168,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "14956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1166,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "14921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1170,
															"nodeType": "RevertStatement",
															"src": "14914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1175,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "14996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 1173,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 1158,
												"id": 1177,
												"nodeType": "Return",
												"src": "14982:20:5"
											}
										]
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:5",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "14814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:5"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "14852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 1156,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:5"
									},
									"scope": 2161,
									"src": "14796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "15360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1187,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "15374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 1189,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 1188,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1200,
												"nodeType": "IfStatement",
												"src": "15370:103:5",
												"trueBody": {
													"id": 1199,
													"nodeType": "Block",
													"src": "15400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 1196,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1182,
																		"src": "15456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1194,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "15421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1198,
															"nodeType": "RevertStatement",
															"src": "15414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1203,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "15496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1201,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1186,
												"id": 1205,
												"nodeType": "Return",
												"src": "15482:20:5"
											}
										]
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:5",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "15314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:5"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "15352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1184,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:5"
									},
									"scope": 2161,
									"src": "15296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "15860:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "15874:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 1217,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 1216,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "15870:103:5",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "15900:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 1224,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1210,
																		"src": "15956:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1222,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "15921:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1226,
															"nodeType": "RevertStatement",
															"src": "15914:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "15996:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1229,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 1214,
												"id": 1233,
												"nodeType": "Return",
												"src": "15982:20:5"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:5",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "15814:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:5"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "15852:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1212,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:5"
									},
									"scope": 2161,
									"src": "15796:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "16360:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1243,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "16374:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 1245,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 1244,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "16370:103:5",
												"trueBody": {
													"id": 1255,
													"nodeType": "Block",
													"src": "16400:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 1252,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "16456:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1250,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "16421:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1254,
															"nodeType": "RevertStatement",
															"src": "16414:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1259,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "16496:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 1257,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1261,
												"nodeType": "Return",
												"src": "16482:20:5"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:5",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "16314:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:5"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "16352:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1240,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:5"
									},
									"scope": 2161,
									"src": "16296:213:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "16854:146:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1271,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "16868:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1273,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 1272,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "16864:101:5",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "16893:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 1280,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1266,
																		"src": "16948:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1278,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "16914:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1282,
															"nodeType": "RevertStatement",
															"src": "16907:47:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1287,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "16987:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1285,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:5",
															"typeDescriptions": {}
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1289,
												"nodeType": "Return",
												"src": "16974:19:5"
											}
										]
									},
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:5",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "16809:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:5"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "16847:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1268,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:5"
									},
									"scope": 2161,
									"src": "16792:208:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "17236:128:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1299,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "17250:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1307,
												"nodeType": "IfStatement",
												"src": "17246:81:5",
												"trueBody": {
													"id": 1306,
													"nodeType": "Block",
													"src": "17261:66:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1303,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "17310:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1302,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "17282:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1305,
															"nodeType": "RevertStatement",
															"src": "17275:41:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1310,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "17351:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:5",
															"typeDescriptions": {}
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1298,
												"id": 1312,
												"nodeType": "Return",
												"src": "17336:21:5"
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:5",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "17190:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1293,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:5"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "17227:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:5"
									},
									"scope": 2161,
									"src": "17171:193:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "17761:150:5",
										"statements": [
											{
												"expression": {
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1322,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "17771:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1325,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1317,
																"src": "17791:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 1323,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1329,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "17811:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1330,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "17825:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1338,
												"nodeType": "IfStatement",
												"src": "17807:98:5",
												"trueBody": {
													"id": 1337,
													"nodeType": "Block",
													"src": "17832:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 1334,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1317,
																		"src": "17888:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1332,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "17853:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1336,
															"nodeType": "RevertStatement",
															"src": "17846:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:5",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "17705:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1316,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:5"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "17742:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 1319,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:5"
									},
									"scope": 2161,
									"src": "17687:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "18308:150:5",
										"statements": [
											{
												"expression": {
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1348,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "18318:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1351,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "18338:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 1349,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1355,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "18358:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1356,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "18372:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1364,
												"nodeType": "IfStatement",
												"src": "18354:98:5",
												"trueBody": {
													"id": 1363,
													"nodeType": "Block",
													"src": "18379:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 1360,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "18435:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1358,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "18400:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1362,
															"nodeType": "RevertStatement",
															"src": "18393:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:5",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "18252:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1342,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:5"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "18289:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 1345,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:5"
									},
									"scope": 2161,
									"src": "18234:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "18855:150:5",
										"statements": [
											{
												"expression": {
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1374,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "18865:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1377,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1369,
																"src": "18885:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 1375,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "18905:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1382,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "18919:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1390,
												"nodeType": "IfStatement",
												"src": "18901:98:5",
												"trueBody": {
													"id": 1389,
													"nodeType": "Block",
													"src": "18926:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 1385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 1386,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1369,
																		"src": "18982:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1384,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "18947:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1388,
															"nodeType": "RevertStatement",
															"src": "18940:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:5",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "18799:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1368,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:5"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "18836:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 1371,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:5"
									},
									"scope": 2161,
									"src": "18781:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "19402:150:5",
										"statements": [
											{
												"expression": {
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1400,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "19412:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "19432:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 1401,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1407,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "19452:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1408,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "19466:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1416,
												"nodeType": "IfStatement",
												"src": "19448:98:5",
												"trueBody": {
													"id": 1415,
													"nodeType": "Block",
													"src": "19473:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 1412,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1395,
																		"src": "19529:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1410,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "19494:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1414,
															"nodeType": "RevertStatement",
															"src": "19487:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:5",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "19346:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1394,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:5"
									},
									"returnParameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "19383:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 1397,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:5"
									},
									"scope": 2161,
									"src": "19328:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "19949:150:5",
										"statements": [
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1426,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "19959:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1429,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "19979:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 1427,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1433,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "19999:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1434,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "20013:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1442,
												"nodeType": "IfStatement",
												"src": "19995:98:5",
												"trueBody": {
													"id": 1441,
													"nodeType": "Block",
													"src": "20020:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 1437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 1438,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1421,
																		"src": "20076:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1436,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "20041:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1440,
															"nodeType": "RevertStatement",
															"src": "20034:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:5",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "19893:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1420,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:5"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "19930:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 1423,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:5"
									},
									"scope": 2161,
									"src": "19875:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "20496:150:5",
										"statements": [
											{
												"expression": {
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1452,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "20506:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1455,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "20526:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 1453,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1459,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "20546:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1460,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "20560:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"nodeType": "IfStatement",
												"src": "20542:98:5",
												"trueBody": {
													"id": 1467,
													"nodeType": "Block",
													"src": "20567:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 1464,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "20623:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1462,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "20588:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1466,
															"nodeType": "RevertStatement",
															"src": "20581:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:5",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "20440:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1446,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:5"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "20477:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 1449,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:5"
									},
									"scope": 2161,
									"src": "20422:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "21043:150:5",
										"statements": [
											{
												"expression": {
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1478,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "21053:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1481,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "21073:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 1479,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1485,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1476,
														"src": "21093:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1486,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "21107:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1494,
												"nodeType": "IfStatement",
												"src": "21089:98:5",
												"trueBody": {
													"id": 1493,
													"nodeType": "Block",
													"src": "21114:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 1490,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "21170:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1488,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "21135:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1492,
															"nodeType": "RevertStatement",
															"src": "21128:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:5",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "20987:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1472,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:5"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "21024:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 1475,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:5"
									},
									"scope": 2161,
									"src": "20969:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "21590:150:5",
										"statements": [
											{
												"expression": {
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1504,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "21600:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1507,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "21620:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 1505,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 1510,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1511,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "21640:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1512,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "21654:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1520,
												"nodeType": "IfStatement",
												"src": "21636:98:5",
												"trueBody": {
													"id": 1519,
													"nodeType": "Block",
													"src": "21661:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 1516,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1499,
																		"src": "21717:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1514,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "21682:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1518,
															"nodeType": "RevertStatement",
															"src": "21675:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:5",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "21534:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1498,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:5"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "21571:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 1501,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:5"
									},
									"scope": 2161,
									"src": "21516:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "22137:150:5",
										"statements": [
											{
												"expression": {
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1530,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "22147:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "22167:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 1531,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1537,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "22187:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1538,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "22201:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1546,
												"nodeType": "IfStatement",
												"src": "22183:98:5",
												"trueBody": {
													"id": 1545,
													"nodeType": "Block",
													"src": "22208:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 1542,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "22264:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1540,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "22229:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1544,
															"nodeType": "RevertStatement",
															"src": "22222:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:5",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "22081:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1524,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:5"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "22118:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 1527,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:5"
									},
									"scope": 2161,
									"src": "22063:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "22684:150:5",
										"statements": [
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1556,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "22694:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1559,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1551,
																"src": "22714:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 1557,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1563,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "22734:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1564,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "22748:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1572,
												"nodeType": "IfStatement",
												"src": "22730:98:5",
												"trueBody": {
													"id": 1571,
													"nodeType": "Block",
													"src": "22755:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 1567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 1568,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "22811:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1566,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "22776:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1570,
															"nodeType": "RevertStatement",
															"src": "22769:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:5",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "22628:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1550,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:5"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "22665:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 1553,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:5"
									},
									"scope": 2161,
									"src": "22610:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1599,
										"nodeType": "Block",
										"src": "23231:150:5",
										"statements": [
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1582,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "23241:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1585,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1577,
																"src": "23261:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 1583,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1589,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "23281:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1590,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "23295:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1598,
												"nodeType": "IfStatement",
												"src": "23277:98:5",
												"trueBody": {
													"id": 1597,
													"nodeType": "Block",
													"src": "23302:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 1594,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "23358:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1592,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "23323:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1596,
															"nodeType": "RevertStatement",
															"src": "23316:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:5",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 1600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "23175:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1576,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:5"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1600,
												"src": "23212:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 1579,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:5"
									},
									"scope": 2161,
									"src": "23157:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1625,
										"nodeType": "Block",
										"src": "23778:150:5",
										"statements": [
											{
												"expression": {
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1608,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "23788:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1611,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "23808:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 1609,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 1614,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1615,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "23828:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1616,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "23842:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1624,
												"nodeType": "IfStatement",
												"src": "23824:98:5",
												"trueBody": {
													"id": 1623,
													"nodeType": "Block",
													"src": "23849:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 1620,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "23905:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1618,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "23870:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1622,
															"nodeType": "RevertStatement",
															"src": "23863:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:5",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 1626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "23722:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:5"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1626,
												"src": "23759:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 1605,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:5"
									},
									"scope": 2161,
									"src": "23704:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "24325:150:5",
										"statements": [
											{
												"expression": {
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1634,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "24335:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1637,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "24355:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 1635,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "24375:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "24389:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1650,
												"nodeType": "IfStatement",
												"src": "24371:98:5",
												"trueBody": {
													"id": 1649,
													"nodeType": "Block",
													"src": "24396:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 1646,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1629,
																		"src": "24452:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1644,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "24417:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1648,
															"nodeType": "RevertStatement",
															"src": "24410:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:5",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "24269:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1628,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:5"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "24306:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 1631,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:5"
									},
									"scope": 2161,
									"src": "24251:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "24872:150:5",
										"statements": [
											{
												"expression": {
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1660,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "24882:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1663,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "24902:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 1661,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1667,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "24922:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1668,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "24936:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "24918:98:5",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "24943:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 1672,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "24999:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1670,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "24964:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1674,
															"nodeType": "RevertStatement",
															"src": "24957:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:5",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "24816:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1654,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:5"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "24853:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 1657,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:5"
									},
									"scope": 2161,
									"src": "24798:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "25419:150:5",
										"statements": [
											{
												"expression": {
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1686,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "25429:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1689,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "25449:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 1687,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1693,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "25469:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1694,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "25483:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1702,
												"nodeType": "IfStatement",
												"src": "25465:98:5",
												"trueBody": {
													"id": 1701,
													"nodeType": "Block",
													"src": "25490:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 1698,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "25546:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1696,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "25511:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1700,
															"nodeType": "RevertStatement",
															"src": "25504:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:5",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "25363:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1680,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:5"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "25400:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 1683,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:5"
									},
									"scope": 2161,
									"src": "25345:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "25966:150:5",
										"statements": [
											{
												"expression": {
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1712,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "25976:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1715,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1707,
																"src": "25996:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 1713,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1719,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "26016:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1720,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "26030:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1728,
												"nodeType": "IfStatement",
												"src": "26012:98:5",
												"trueBody": {
													"id": 1727,
													"nodeType": "Block",
													"src": "26037:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 1724,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "26093:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1722,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "26058:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1726,
															"nodeType": "RevertStatement",
															"src": "26051:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:5",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "25910:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1706,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:5"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "25947:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1709,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:5"
									},
									"scope": 2161,
									"src": "25892:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "26513:150:5",
										"statements": [
											{
												"expression": {
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1738,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "26523:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1741,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1733,
																"src": "26543:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 1739,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1745,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "26563:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1746,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "26577:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1754,
												"nodeType": "IfStatement",
												"src": "26559:98:5",
												"trueBody": {
													"id": 1753,
													"nodeType": "Block",
													"src": "26584:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 1750,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1733,
																		"src": "26640:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1748,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "26605:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1752,
															"nodeType": "RevertStatement",
															"src": "26598:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:5",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "26457:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1732,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:5"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "26494:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 1735,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:5"
									},
									"scope": 2161,
									"src": "26439:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "27060:150:5",
										"statements": [
											{
												"expression": {
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1764,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "27070:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1767,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "27090:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 1765,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1771,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "27110:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1772,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "27124:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1780,
												"nodeType": "IfStatement",
												"src": "27106:98:5",
												"trueBody": {
													"id": 1779,
													"nodeType": "Block",
													"src": "27131:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 1776,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1759,
																		"src": "27187:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1774,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "27152:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1778,
															"nodeType": "RevertStatement",
															"src": "27145:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:5",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "27004:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1758,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:5"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "27041:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 1761,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:5"
									},
									"scope": 2161,
									"src": "26986:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "27607:150:5",
										"statements": [
											{
												"expression": {
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1790,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "27617:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1793,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "27637:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 1791,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:5",
																"typeDescriptions": {}
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1797,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "27657:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1798,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "27671:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1806,
												"nodeType": "IfStatement",
												"src": "27653:98:5",
												"trueBody": {
													"id": 1805,
													"nodeType": "Block",
													"src": "27678:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 1802,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1785,
																		"src": "27734:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1800,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "27699:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1804,
															"nodeType": "RevertStatement",
															"src": "27692:48:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:5",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "27551:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1784,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:5"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "27588:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 1787,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:5"
									},
									"scope": 2161,
									"src": "27533:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "28147:148:5",
										"statements": [
											{
												"expression": {
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1816,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "28157:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1819,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "28176:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 1817,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 1820,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 1822,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1823,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1814,
														"src": "28196:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1824,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "28210:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"nodeType": "IfStatement",
												"src": "28192:97:5",
												"trueBody": {
													"id": 1831,
													"nodeType": "Block",
													"src": "28217:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 1828,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "28272:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1826,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "28238:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1830,
															"nodeType": "RevertStatement",
															"src": "28231:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:5",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "28092:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1810,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:5"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "28129:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 1813,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:5"
									},
									"scope": 2161,
									"src": "28075:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "28685:148:5",
										"statements": [
											{
												"expression": {
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1842,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "28695:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1845,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "28714:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 1843,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 1848,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1849,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "28734:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1850,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "28748:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1858,
												"nodeType": "IfStatement",
												"src": "28730:97:5",
												"trueBody": {
													"id": 1857,
													"nodeType": "Block",
													"src": "28755:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 1853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 1854,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "28810:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1852,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "28776:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1856,
															"nodeType": "RevertStatement",
															"src": "28769:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:5",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "28630:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1836,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:5"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "28667:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 1839,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:5"
									},
									"scope": 2161,
									"src": "28613:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "29223:148:5",
										"statements": [
											{
												"expression": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1868,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "29233:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1871,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "29252:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 1869,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1875,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "29272:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1876,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1863,
														"src": "29286:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1884,
												"nodeType": "IfStatement",
												"src": "29268:97:5",
												"trueBody": {
													"id": 1883,
													"nodeType": "Block",
													"src": "29293:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 1880,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "29348:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1878,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "29314:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1882,
															"nodeType": "RevertStatement",
															"src": "29307:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:5",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "29168:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1862,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:5"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "29205:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 1865,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:5"
									},
									"scope": 2161,
									"src": "29151:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1911,
										"nodeType": "Block",
										"src": "29761:148:5",
										"statements": [
											{
												"expression": {
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1894,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "29771:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1897,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "29790:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 1895,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1901,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "29810:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1902,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "29824:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1910,
												"nodeType": "IfStatement",
												"src": "29806:97:5",
												"trueBody": {
													"id": 1909,
													"nodeType": "Block",
													"src": "29831:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 1906,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "29886:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1904,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "29852:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1908,
															"nodeType": "RevertStatement",
															"src": "29845:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1887,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:5",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 1912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "29706:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1888,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:5"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "29743:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 1891,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:5"
									},
									"scope": 2161,
									"src": "29689:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "30299:148:5",
										"statements": [
											{
												"expression": {
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1920,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "30309:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1923,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "30328:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 1921,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 1924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1927,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "30348:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1928,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "30362:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1936,
												"nodeType": "IfStatement",
												"src": "30344:97:5",
												"trueBody": {
													"id": 1935,
													"nodeType": "Block",
													"src": "30369:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 1931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 1932,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "30424:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1930,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "30390:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1934,
															"nodeType": "RevertStatement",
															"src": "30383:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1913,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:5",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "30244:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1914,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:5"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "30281:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1917,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:5"
									},
									"scope": 2161,
									"src": "30227:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "30837:148:5",
										"statements": [
											{
												"expression": {
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1946,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "30847:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1949,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1941,
																"src": "30866:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 1947,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 1952,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1953,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "30886:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1954,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "30900:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1962,
												"nodeType": "IfStatement",
												"src": "30882:97:5",
												"trueBody": {
													"id": 1961,
													"nodeType": "Block",
													"src": "30907:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 1958,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1941,
																		"src": "30962:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1956,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "30928:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1960,
															"nodeType": "RevertStatement",
															"src": "30921:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:5",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "30782:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1940,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:5"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "30819:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1943,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:5"
									},
									"scope": 2161,
									"src": "30765:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "31375:148:5",
										"statements": [
											{
												"expression": {
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1972,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "31385:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1975,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1967,
																"src": "31404:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 1973,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1979,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "31424:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1980,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "31438:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1988,
												"nodeType": "IfStatement",
												"src": "31420:97:5",
												"trueBody": {
													"id": 1987,
													"nodeType": "Block",
													"src": "31445:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 1983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 1984,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1967,
																		"src": "31500:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1982,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "31466:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1986,
															"nodeType": "RevertStatement",
															"src": "31459:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:5",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "31320:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1966,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:5"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "31357:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 1969,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:5"
									},
									"scope": 2161,
									"src": "31303:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "31913:148:5",
										"statements": [
											{
												"expression": {
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1998,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "31923:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2001,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "31942:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 1999,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 2004,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2005,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "31962:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2006,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "31976:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2014,
												"nodeType": "IfStatement",
												"src": "31958:97:5",
												"trueBody": {
													"id": 2013,
													"nodeType": "Block",
													"src": "31983:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 2009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 2010,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1993,
																		"src": "32038:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2008,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "32004:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2012,
															"nodeType": "RevertStatement",
															"src": "31997:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:5",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "31858:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1992,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:5"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "31895:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 1995,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:5"
									},
									"scope": 2161,
									"src": "31841:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "32451:148:5",
										"statements": [
											{
												"expression": {
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2024,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "32461:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2027,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2019,
																"src": "32480:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 2025,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 2028,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2031,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "32500:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2032,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "32514:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2040,
												"nodeType": "IfStatement",
												"src": "32496:97:5",
												"trueBody": {
													"id": 2039,
													"nodeType": "Block",
													"src": "32521:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 2035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 2036,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "32576:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2034,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "32542:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2038,
															"nodeType": "RevertStatement",
															"src": "32535:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:5",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "32396:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2018,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:5"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "32433:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 2021,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:5"
									},
									"scope": 2161,
									"src": "32379:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "32989:148:5",
										"statements": [
											{
												"expression": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2050,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "32999:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2053,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "33018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 2051,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2057,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "33038:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2058,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "33052:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2066,
												"nodeType": "IfStatement",
												"src": "33034:97:5",
												"trueBody": {
													"id": 2065,
													"nodeType": "Block",
													"src": "33059:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 2061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 2062,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2045,
																		"src": "33114:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2060,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "33080:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2064,
															"nodeType": "RevertStatement",
															"src": "33073:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:5",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "32934:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2044,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:5"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "32971:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2047,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:5"
									},
									"scope": 2161,
									"src": "32917:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "33527:148:5",
										"statements": [
											{
												"expression": {
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2076,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "33537:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2079,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2071,
																"src": "33556:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 2077,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:5",
																"typeDescriptions": {}
															}
														},
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 2082,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2083,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "33576:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2084,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2071,
														"src": "33590:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2092,
												"nodeType": "IfStatement",
												"src": "33572:97:5",
												"trueBody": {
													"id": 2091,
													"nodeType": "Block",
													"src": "33597:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 2088,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2071,
																		"src": "33652:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2086,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "33618:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2090,
															"nodeType": "RevertStatement",
															"src": "33611:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2069,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:5",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "33472:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2070,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:5"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "33509:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2073,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:5"
									},
									"scope": 2161,
									"src": "33455:220:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2119,
										"nodeType": "Block",
										"src": "34058:146:5",
										"statements": [
											{
												"expression": {
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2102,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2100,
														"src": "34068:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2105,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "34086:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 2103,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:5",
																"typeDescriptions": {}
															}
														},
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 2108,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2109,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2100,
														"src": "34106:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2110,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2097,
														"src": "34120:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2118,
												"nodeType": "IfStatement",
												"src": "34102:96:5",
												"trueBody": {
													"id": 2117,
													"nodeType": "Block",
													"src": "34127:71:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 2114,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "34181:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2112,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "34148:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2116,
															"nodeType": "RevertStatement",
															"src": "34141:46:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:5",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 2120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "34004:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2096,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:5"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "34041:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 2099,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:5"
									},
									"scope": 2161,
									"src": "33988:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "34444:250:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2128,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2123,
														"src": "34557:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 2132,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:5",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 2131,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 2135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:5",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2129,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2143,
												"nodeType": "IfStatement",
												"src": "34553:105:5",
												"trueBody": {
													"id": 2142,
													"nodeType": "Block",
													"src": "34592:66:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2139,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "34641:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2138,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "34613:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2141,
															"nodeType": "RevertStatement",
															"src": "34606:41:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2146,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2123,
															"src": "34681:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 2144,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2127,
												"id": 2148,
												"nodeType": "Return",
												"src": "34667:20:5"
											}
										]
									},
									"documentation": {
										"id": 2121,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:5",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "34398:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:5"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "34436:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2125,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:5"
									},
									"scope": 2161,
									"src": "34380:314:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "34853:87:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:5",
													"nodeType": "YulBlock",
													"src": "34888:46:5",
													"statements": [
														{
															"nativeSrc": "34902:22:5",
															"nodeType": "YulAssignment",
															"src": "34902:22:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:5"
																		},
																		"nativeSrc": "34914:9:5",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:5"
																},
																"nativeSrc": "34907:17:5",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:5"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:5",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2153,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:5",
														"valueSize": 1
													},
													{
														"declaration": 2156,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2158,
												"nodeType": "InlineAssembly",
												"src": "34863:71:5"
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:5",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "34811:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:5"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "34842:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:5"
									},
									"scope": 2161,
									"src": "34795:145:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2162,
							"src": "769:34173:5",
							"usedErrors": [
								406,
								411,
								418,
								423
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:5"
				},
				"id": 5
			},
			"interfaces/IUBI4ALLOracle.sol": {
				"ast": {
					"absolutePath": "interfaces/IUBI4ALLOracle.sol",
					"exportedSymbols": {
						"IUBI4ALLOracle": [
							2230
						]
					},
					"id": 2231,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2163,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUBI4ALLOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2230,
							"linearizedBaseContracts": [
								2230
							],
							"name": "IUBI4ALLOracle",
							"nameLocation": "68:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f3f699f1",
									"id": 2174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePrice",
									"nameLocation": "98:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "127:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "119:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "149:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "141:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "141:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "172:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "164:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "confidence",
												"nameLocation": "199:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "191:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:106:6"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:0:6"
									},
									"scope": 2230,
									"src": "89:136:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31d98b3f",
									"id": 2185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "240:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "257:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "249:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2175,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "249:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:14:6"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "318:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "310:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "310:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "333:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "325:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2183,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "349:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "344:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "344:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "309:48:6"
									},
									"scope": 2230,
									"src": "231:127:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1fde7f26",
									"id": 2196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAggregatedPrice",
									"nameLocation": "373:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "400:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "392:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "392:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "391:14:6"
									},
									"returnParameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "weightedPrice",
												"nameLocation": "461:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "453:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "484:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "476:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "500:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "495:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "495:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:56:6"
									},
									"scope": 2230,
									"src": "364:145:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2806bce2",
									"id": 2207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSourcePrice",
									"nameLocation": "524:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "547:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "539:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:16:6"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "610:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "602:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "625:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "617:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "641:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "636:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "636:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "601:48:6"
									},
									"scope": 2230,
									"src": "515:135:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9f97acb7",
									"id": 2222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addOracleSource",
									"nameLocation": "665:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "698:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "690:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2208,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "720:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "712:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "744:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "736:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "heartbeat",
												"nameLocation": "768:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "760:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "maxDeviation",
												"nameLocation": "795:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "787:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "minConfidence",
												"nameLocation": "825:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "817:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:164:6"
									},
									"returnParameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:0:6"
									},
									"scope": 2230,
									"src": "656:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "01e9492f",
									"id": 2229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeOracleSource",
									"nameLocation": "869:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "888:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2223,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "910:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "902:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:30:6"
									},
									"returnParameters": {
										"id": 2228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:6"
									},
									"scope": 2230,
									"src": "860:67:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2231,
							"src": "58:871:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:897:6"
				},
				"id": 6
			},
			"oracle/UBI4ALLOracle.sol": {
				"ast": {
					"absolutePath": "oracle/UBI4ALLOracle.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							396
						],
						"IUBI4ALLOracle": [
							2230
						],
						"Ownable": [
							193
						],
						"Pausable": [
							301
						],
						"ReentrancyGuard": [
							366
						],
						"SafeCast": [
							2161
						],
						"UBI4ALLOracle": [
							2708
						]
					},
					"id": 2709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2232,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2709,
							"sourceUnit": 194,
							"src": "58:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2234,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2709,
							"sourceUnit": 367,
							"src": "111:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2235,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2709,
							"sourceUnit": 302,
							"src": "174:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"id": 2236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2709,
							"sourceUnit": 2162,
							"src": "230:57:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 2237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2709,
							"sourceUnit": 46,
							"src": "288:76:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IUBI4ALLOracle.sol",
							"file": "../interfaces/IUBI4ALLOracle.sol",
							"id": 2238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2709,
							"sourceUnit": 2231,
							"src": "365:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2240,
										"name": "IUBI4ALLOracle",
										"nameLocations": [
											"579:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2230,
										"src": "579:14:7"
									},
									"id": 2241,
									"nodeType": "InheritanceSpecifier",
									"src": "579:14:7"
								},
								{
									"baseName": {
										"id": 2242,
										"name": "Ownable",
										"nameLocations": [
											"595:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "595:7:7"
									},
									"id": 2243,
									"nodeType": "InheritanceSpecifier",
									"src": "595:7:7"
								},
								{
									"baseName": {
										"id": 2244,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"604:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 366,
										"src": "604:15:7"
									},
									"id": 2245,
									"nodeType": "InheritanceSpecifier",
									"src": "604:15:7"
								},
								{
									"baseName": {
										"id": 2246,
										"name": "Pausable",
										"nameLocations": [
											"621:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 301,
										"src": "621:8:7"
									},
									"id": 2247,
									"nodeType": "InheritanceSpecifier",
									"src": "621:8:7"
								}
							],
							"canonicalName": "UBI4ALLOracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2239,
								"nodeType": "StructuredDocumentation",
								"src": "409:144:7",
								"text": "@title UBI4ALLOracle - Oracolo per il prezzo EUR/USD\n @notice Fornisce prezzi aggiornati per la coppia EUR/USD, con fallback a Chainlink"
							},
							"fullyImplemented": true,
							"id": 2708,
							"linearizedBaseContracts": [
								2708,
								301,
								366,
								193,
								396,
								2230
							],
							"name": "UBI4ALLOracle",
							"nameLocation": "562:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "UBI4ALLOracle.PriceData",
									"documentation": {
										"id": 2248,
										"nodeType": "StructuredDocumentation",
										"src": "636:40:7",
										"text": "@dev Struttura per i dati del prezzo"
									},
									"id": 2255,
									"members": [
										{
											"constant": false,
											"id": 2250,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "716:5:7",
											"nodeType": "VariableDeclaration",
											"scope": 2255,
											"src": "708:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2249,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "708:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2252,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "776:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 2255,
											"src": "768:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2251,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "768:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2254,
											"mutability": "mutable",
											"name": "isValid",
											"nameLocation": "832:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 2255,
											"src": "827:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2253,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "827:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PriceData",
									"nameLocation": "688:9:7",
									"nodeType": "StructDefinition",
									"scope": 2708,
									"src": "681:189:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "876:33:7",
										"text": "@dev Feed di prezzo Chainlink"
									},
									"functionSelector": "741bef1a",
									"id": 2259,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "943:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "914:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 2258,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2257,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"914:21:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "914:21:7"
										},
										"referencedDeclaration": 45,
										"src": "914:21:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "959:36:7",
										"text": "@dev Coppia supportata (EUR/USD)"
									},
									"functionSelector": "a5b5fb88",
									"id": 2266,
									"mutability": "constant",
									"name": "EUR_USD_PAIR",
									"nameLocation": "1024:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "1000:57:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2261,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1000:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4555522f555344",
												"id": 2264,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1047:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a9226449042e36bf6865099eec57482aa55e3ad026c315a0e4a692b776c318ca",
													"typeString": "literal_string \"EUR/USD\""
												},
												"value": "EUR/USD"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a9226449042e36bf6865099eec57482aa55e3ad026c315a0e4a692b776c318ca",
													"typeString": "literal_string \"EUR/USD\""
												}
											],
											"id": 2263,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1039:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 2262,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1039:7:7",
												"typeDescriptions": {}
											}
										},
										"id": 2265,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1039:18:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2267,
										"nodeType": "StructuredDocumentation",
										"src": "1064:53:7",
										"text": "@dev Mappatura dei prezzi più recenti per coppia"
									},
									"functionSelector": "db7c1ad1",
									"id": 2272,
									"mutability": "mutable",
									"name": "latestPrices",
									"nameLocation": "1159:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "1122:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PriceData_$2255_storage_$",
										"typeString": "mapping(bytes32 => struct UBI4ALLOracle.PriceData)"
									},
									"typeName": {
										"id": 2271,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2268,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1130:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1122:29:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PriceData_$2255_storage_$",
											"typeString": "mapping(bytes32 => struct UBI4ALLOracle.PriceData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2270,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2269,
												"name": "PriceData",
												"nameLocations": [
													"1141:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2255,
												"src": "1141:9:7"
											},
											"referencedDeclaration": 2255,
											"src": "1141:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PriceData_$2255_storage_ptr",
												"typeString": "struct UBI4ALLOracle.PriceData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2273,
										"nodeType": "StructuredDocumentation",
										"src": "1178:52:7",
										"text": "@dev Periodo di validità del prezzo (15 minuti)"
									},
									"functionSelector": "6301a143",
									"id": 2276,
									"mutability": "constant",
									"name": "PRICE_VALIDITY_PERIOD",
									"nameLocation": "1259:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "1235:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2274,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1235:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 2275,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1283:10:7",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_900_by_1",
											"typeString": "int_const 900"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "1300:69:7",
										"text": "@dev Periodo massimo di validità per i dati di Chainlink (1 ora)"
									},
									"functionSelector": "bc269850",
									"id": 2280,
									"mutability": "constant",
									"name": "CHAINLINK_STALENESS_THRESHOLD",
									"nameLocation": "1398:29:7",
									"nodeType": "VariableDeclaration",
									"scope": 2708,
									"src": "1374:63:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1374:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2279,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1430:7:7",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2281,
										"nodeType": "StructuredDocumentation",
										"src": "1444:59:7",
										"text": "@notice Evento emesso quando il prezzo viene aggiornato"
									},
									"eventSelector": "bcd10d64fce9dcf9568572ed92e371df336d32649e8960a045c9548794a44b26",
									"id": 2289,
									"name": "PriceUpdated",
									"nameLocation": "1514:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"indexed": true,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "1543:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "1527:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1557:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "1549:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1572:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "1564:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:56:7"
									},
									"src": "1508:75:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2290,
										"nodeType": "StructuredDocumentation",
										"src": "1589:67:7",
										"text": "@notice Evento emesso quando il feed di prezzo viene aggiornato"
									},
									"eventSelector": "a8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d321753536",
									"id": 2296,
									"name": "PriceFeedUpdated",
									"nameLocation": "1667:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldFeed",
												"nameLocation": "1700:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "1684:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2294,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFeed",
												"nameLocation": "1725:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2296,
												"src": "1709:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:50:7"
									},
									"src": "1661:73:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2297,
										"nodeType": "StructuredDocumentation",
										"src": "1740:66:7",
										"text": "@notice Evento emesso quando il contratto viene messo in pausa"
									},
									"eventSelector": "d373a1ac37410a4da6def2d7f3f2e704aca3e95e2e251322a031eedda7eb686c",
									"id": 2301,
									"name": "EmergencyPause",
									"nameLocation": "1817:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"indexed": true,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "1848:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "1832:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2298,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:22:7"
									},
									"src": "1811:43:7"
								},
								{
									"body": {
										"id": 2328,
										"nodeType": "Block",
										"src": "2109:135:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2313,
																"name": "_priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2304,
																"src": "2127:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2149:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2141:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2314,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2141:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2141:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2127:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420707269636520666565642061646472657373",
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2153:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
																"typeString": "literal_string \"Invalid price feed address\""
															},
															"value": "Invalid price feed address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
																"typeString": "literal_string \"Invalid price feed address\""
															}
														],
														"id": 2312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2119:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2119:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2321,
												"nodeType": "ExpressionStatement",
												"src": "2119:63:7"
											},
											{
												"expression": {
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2322,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "2192:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2324,
																"name": "_priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2304,
																"src": "2226:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2323,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "2204:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 2325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2204:33:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2192:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 2327,
												"nodeType": "ExpressionStatement",
												"src": "2192:45:7"
											}
										]
									},
									"documentation": {
										"id": 2302,
										"nodeType": "StructuredDocumentation",
										"src": "1860:168:7",
										"text": "@notice Costruttore del contratto\n @param _priceFeed Indirizzo del feed Chainlink per EUR/USD\n @param initialOwner Indirizzo del proprietario iniziale"
									},
									"id": 2329,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2309,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2306,
													"src": "2095:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2310,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2308,
												"name": "Ownable",
												"nameLocations": [
													"2087:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "2087:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2087:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "2053:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "2045:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2073:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "2065:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2044:42:7"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2109:0:7"
									},
									"scope": 2708,
									"src": "2033:211:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2174
									],
									"body": {
										"id": 2386,
										"nodeType": "Block",
										"src": "2727:366:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2349,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "2745:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2350,
																"name": "EUR_USD_PAIR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "2753:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2745:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616972",
															"id": 2352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2767:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															},
															"value": "Invalid pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															}
														],
														"id": 2348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2737:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2737:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2354,
												"nodeType": "ExpressionStatement",
												"src": "2737:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2356,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2336,
																"src": "2800:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 2357,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2813:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2819:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2813:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2800:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4675747572652074696d657374616d70",
															"id": 2360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2830:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add",
																"typeString": "literal_string \"Future timestamp\""
															},
															"value": "Future timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add",
																"typeString": "literal_string \"Future timestamp\""
															}
														],
														"id": 2355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2792:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2362,
												"nodeType": "ExpressionStatement",
												"src": "2792:57:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2364,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "2867:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2875:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2867:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207072696365",
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2878:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															},
															"value": "Invalid price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															}
														],
														"id": 2363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2859:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2859:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2369,
												"nodeType": "ExpressionStatement",
												"src": "2859:35:7"
											},
											{
												"expression": {
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2370,
															"name": "latestPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "2905:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PriceData_$2255_storage_$",
																"typeString": "mapping(bytes32 => struct UBI4ALLOracle.PriceData storage ref)"
															}
														},
														"id": 2372,
														"indexExpression": {
															"id": 2371,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "2918:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2905:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceData_$2255_storage",
															"typeString": "struct UBI4ALLOracle.PriceData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2374,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2334,
																"src": "2957:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2375,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2336,
																"src": "2987:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 2376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3019:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2373,
															"name": "PriceData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2255,
															"src": "2926:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PriceData_$2255_storage_ptr_$",
																"typeString": "type(struct UBI4ALLOracle.PriceData storage pointer)"
															}
														},
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2950:5:7",
															"2976:9:7",
															"3010:7:7"
														],
														"names": [
															"price",
															"timestamp",
															"isValid"
														],
														"nodeType": "FunctionCall",
														"src": "2926:108:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceData_$2255_memory_ptr",
															"typeString": "struct UBI4ALLOracle.PriceData memory"
														}
													},
													"src": "2905:129:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceData_$2255_storage",
														"typeString": "struct UBI4ALLOracle.PriceData storage ref"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "2905:129:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2381,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "3063:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2382,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "3069:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2383,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "3076:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2380,
														"name": "PriceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2289,
														"src": "3050:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,uint256)"
														}
													},
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3050:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2385,
												"nodeType": "EmitStatement",
												"src": "3045:41:7"
											}
										]
									},
									"documentation": {
										"id": 2330,
										"nodeType": "StructuredDocumentation",
										"src": "2250:290:7",
										"text": "@notice Aggiorna manualmente il prezzo per la coppia EUR/USD\n @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n @param price Prezzo da impostare\n @param timestamp Timestamp del prezzo\n @param confidence Livello di confidenza del prezzo (non utilizzato)"
									},
									"functionSelector": "f3f699f1",
									"id": 2387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2341,
												"name": "onlyOwner",
												"nameLocations": [
													"2690:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2690:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2690:9:7"
										},
										{
											"id": 2344,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2343,
												"name": "whenNotPaused",
												"nameLocations": [
													"2700:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 228,
												"src": "2700:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2700:13:7"
										},
										{
											"id": 2346,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2345,
												"name": "nonReentrant",
												"nameLocations": [
													"2714:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "2714:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2714:12:7"
										}
									],
									"name": "updatePrice",
									"nameLocation": "2554:11:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2340,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2681:8:7"
									},
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "2583:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2575:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2331,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2575:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2605:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2597:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2597:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2628:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2620:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "confidence",
												"nameLocation": "2655:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2387,
												"src": "2647:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2565:106:7"
									},
									"returnParameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:0:7"
									},
									"scope": 2708,
									"src": "2545:548:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2185
									],
									"body": {
										"id": 2493,
										"nodeType": "Block",
										"src": "3533:891:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2401,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2390,
																"src": "3551:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2402,
																"name": "EUR_USD_PAIR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "3559:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3551:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616972",
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3573:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															},
															"value": "Invalid pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															}
														],
														"id": 2400,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3543:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3543:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2406,
												"nodeType": "ExpressionStatement",
												"src": "3543:45:7"
											},
											{
												"assignments": [
													2409
												],
												"declarations": [
													{
														"constant": false,
														"id": 2409,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "3615:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 2493,
														"src": "3598:21:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceData_$2255_memory_ptr",
															"typeString": "struct UBI4ALLOracle.PriceData"
														},
														"typeName": {
															"id": 2408,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2407,
																"name": "PriceData",
																"nameLocations": [
																	"3598:9:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2255,
																"src": "3598:9:7"
															},
															"referencedDeclaration": 2255,
															"src": "3598:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceData_$2255_storage_ptr",
																"typeString": "struct UBI4ALLOracle.PriceData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2413,
												"initialValue": {
													"baseExpression": {
														"id": 2410,
														"name": "latestPrices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "3622:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PriceData_$2255_storage_$",
															"typeString": "mapping(bytes32 => struct UBI4ALLOracle.PriceData storage ref)"
														}
													},
													"id": 2412,
													"indexExpression": {
														"id": 2411,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2390,
														"src": "3635:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3622:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceData_$2255_storage",
														"typeString": "struct UBI4ALLOracle.PriceData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3598:42:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2414,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2409,
															"src": "3655:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceData_$2255_memory_ptr",
																"typeString": "struct UBI4ALLOracle.PriceData memory"
															}
														},
														"id": 2415,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3660:7:7",
														"memberName": "isValid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2254,
														"src": "3655:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2416,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3671:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3677:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3671:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 2418,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "3689:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PriceData_$2255_memory_ptr",
																		"typeString": "struct UBI4ALLOracle.PriceData memory"
																	}
																},
																"id": 2419,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3694:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2252,
																"src": "3689:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3671:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2421,
															"name": "PRICE_VALIDITY_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "3707:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3671:57:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3655:73:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2432,
												"nodeType": "IfStatement",
												"src": "3651:145:7",
												"trueBody": {
													"id": 2431,
													"nodeType": "Block",
													"src": "3730:66:7",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 2424,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2409,
																			"src": "3752:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PriceData_$2255_memory_ptr",
																				"typeString": "struct UBI4ALLOracle.PriceData memory"
																			}
																		},
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3757:5:7",
																		"memberName": "price",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2250,
																		"src": "3752:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2426,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2409,
																			"src": "3764:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PriceData_$2255_memory_ptr",
																				"typeString": "struct UBI4ALLOracle.PriceData memory"
																			}
																		},
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3769:9:7",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2252,
																		"src": "3764:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3780:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"id": 2429,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3751:34:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
																	"typeString": "tuple(uint256,uint256,bool)"
																}
															},
															"functionReturnParameters": 2399,
															"id": 2430,
															"nodeType": "Return",
															"src": "3744:41:7"
														}
													]
												}
											},
											{
												"clauses": [
													{
														"block": {
															"id": 2483,
															"nodeType": "Block",
															"src": "4008:358:7",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2447,
																			"name": "answer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2439,
																			"src": "4026:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4036:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4026:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2454,
																	"nodeType": "IfStatement",
																	"src": "4022:51:7",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "436861696e6c696e6b3a20496e76616c6964207072696365",
																					"id": 2451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4046:26:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46",
																						"typeString": "literal_string \"Chainlink: Invalid price\""
																					},
																					"value": "Chainlink: Invalid price"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46",
																						"typeString": "literal_string \"Chainlink: Invalid price\""
																					}
																				],
																				"id": 2450,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "4039:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4039:34:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2453,
																		"nodeType": "ExpressionStatement",
																		"src": "4039:34:7"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2455,
																			"name": "updatedAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2443,
																			"src": "4091:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4104:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4091:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2462,
																	"nodeType": "IfStatement",
																	"src": "4087:59:7",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465",
																					"id": 2459,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4114:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47",
																						"typeString": "literal_string \"Chainlink: Round not complete\""
																					},
																					"value": "Chainlink: Round not complete"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47",
																						"typeString": "literal_string \"Chainlink: Round not complete\""
																					}
																				],
																				"id": 2458,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "4107:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4107:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2461,
																		"nodeType": "ExpressionStatement",
																		"src": "4107:39:7"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2463,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4164:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4170:9:7",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4164:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2465,
																				"name": "updatedAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2443,
																				"src": "4182:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4164:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 2467,
																			"name": "CHAINLINK_STALENESS_THRESHOLD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "4194:29:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4164:59:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2474,
																	"nodeType": "IfStatement",
																	"src": "4160:130:7",
																	"trueBody": {
																		"id": 2473,
																		"nodeType": "Block",
																		"src": "4225:65:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "436861696e6c696e6b3a205374616c65207072696365",
																							"id": 2470,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "4250:24:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495",
																								"typeString": "literal_string \"Chainlink: Stale price\""
																							},
																							"value": "Chainlink: Stale price"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495",
																								"typeString": "literal_string \"Chainlink: Stale price\""
																							}
																						],
																						"id": 2469,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "4243:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2471,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4243:32:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2472,
																				"nodeType": "ExpressionStatement",
																				"src": "4243:32:7"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"components": [
																			{
																				"arguments": [
																					{
																						"id": 2477,
																						"name": "answer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2439,
																						"src": "4330:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"expression": {
																						"id": 2475,
																						"name": "SafeCast",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2161,
																						"src": "4311:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeCast_$2161_$",
																							"typeString": "type(library SafeCast)"
																						}
																					},
																					"id": 2476,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4320:9:7",
																					"memberName": "toUint256",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1314,
																					"src": "4311:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																						"typeString": "function (int256) pure returns (uint256)"
																					}
																				},
																				"id": 2478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4311:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2479,
																				"name": "updatedAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2443,
																				"src": "4339:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "74727565",
																				"id": 2480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4350:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			}
																		],
																		"id": 2481,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4310:45:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
																			"typeString": "tuple(uint256,uint256,bool)"
																		}
																	},
																	"functionReturnParameters": 2399,
																	"id": 2482,
																	"nodeType": "Return",
																	"src": "4303:52:7"
																}
															]
														},
														"errorName": "",
														"id": 2484,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2446,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2437,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2484,
																	"src": "3892:6:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	},
																	"typeName": {
																		"id": 2436,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "3892:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint80",
																			"typeString": "uint80"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2439,
																	"mutability": "mutable",
																	"name": "answer",
																	"nameLocation": "3919:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2484,
																	"src": "3912:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 2438,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3912:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2441,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2484,
																	"src": "3939:7:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2440,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3939:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2443,
																	"mutability": "mutable",
																	"name": "updatedAt",
																	"nameLocation": "3968:9:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2484,
																	"src": "3960:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2442,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3960:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2445,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2484,
																	"src": "3991:6:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	},
																	"typeName": {
																		"id": 2444,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "3991:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint80",
																			"typeString": "uint80"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "3878:129:7"
														},
														"src": "3870:496:7"
													},
													{
														"block": {
															"id": 2490,
															"nodeType": "Block",
															"src": "4373:45:7",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"hexValue": "30",
																				"id": 2485,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4395:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "30",
																				"id": 2486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4398:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 2487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4401:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"id": 2488,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4394:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_bool_$",
																			"typeString": "tuple(int_const 0,int_const 0,bool)"
																		}
																	},
																	"functionReturnParameters": 2399,
																	"id": 2489,
																	"nodeType": "Return",
																	"src": "4387:20:7"
																}
															]
														},
														"errorName": "",
														"id": 2491,
														"nodeType": "TryCatchClause",
														"src": "4367:51:7"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2433,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "3842:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3852:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "3842:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3842:27:7",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"id": 2492,
												"nodeType": "TryStatement",
												"src": "3838:580:7"
											}
										]
									},
									"documentation": {
										"id": 2388,
										"nodeType": "StructuredDocumentation",
										"src": "3099:276:7",
										"text": "@notice Ottiene il prezzo più recente per la coppia EUR/USD\n @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n @return price Prezzo della coppia\n @return timestamp Timestamp dell'aggiornamento\n @return isValid True se il prezzo è valido"
									},
									"functionSelector": "31d98b3f",
									"id": 2494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "3389:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3453:8:7"
									},
									"parameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "3406:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "3398:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2389,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3398:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3397:14:7"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3488:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "3480:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3503:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "3495:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "3519:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "3514:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3514:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:48:7"
									},
									"scope": 2708,
									"src": "3380:1044:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2196
									],
									"body": {
										"id": 2512,
										"nodeType": "Block",
										"src": "4899:43:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2509,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "4930:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2507,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "4916:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_UBI4ALLOracle_$2708",
																"typeString": "contract UBI4ALLOracle"
															}
														},
														"id": 2508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4921:8:7",
														"memberName": "getPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2494,
														"src": "4916:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_uint256_$_t_uint256_$_t_bool_$",
															"typeString": "function (bytes32) view external returns (uint256,uint256,bool)"
														}
													},
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,bool)"
													}
												},
												"functionReturnParameters": 2506,
												"id": 2511,
												"nodeType": "Return",
												"src": "4909:26:7"
											}
										]
									},
									"documentation": {
										"id": 2495,
										"nodeType": "StructuredDocumentation",
										"src": "4430:293:7",
										"text": "@notice Ottiene il prezzo aggregato (equivalente a getPrice per EUR/USD)\n @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n @return weightedPrice Prezzo aggregato\n @return timestamp Timestamp dell'aggiornamento\n @return isValid True se il prezzo è valido"
									},
									"functionSelector": "1fde7f26",
									"id": 2513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAggregatedPrice",
									"nameLocation": "4737:18:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2499,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4811:8:7"
									},
									"parameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "4764:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "4756:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2496,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4755:14:7"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2501,
												"mutability": "mutable",
												"name": "weightedPrice",
												"nameLocation": "4846:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "4838:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4869:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "4861:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "4885:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "4880:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4880:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4837:56:7"
									},
									"scope": 2708,
									"src": "4728:214:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2207
									],
									"body": {
										"id": 2596,
										"nodeType": "Block",
										"src": "5398:661:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2527,
																"name": "source",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2516,
																"src": "5416:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2530,
																		"name": "priceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2259,
																		"src": "5434:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	],
																	"id": 2529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5426:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2528,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5426:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5426:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5416:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736f75726365",
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5446:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e",
																"typeString": "literal_string \"Invalid source\""
															},
															"value": "Invalid source"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e",
																"typeString": "literal_string \"Invalid source\""
															}
														],
														"id": 2526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5408:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2535,
												"nodeType": "ExpressionStatement",
												"src": "5408:55:7"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 2586,
															"nodeType": "Block",
															"src": "5643:358:7",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2550,
																			"name": "answer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "5661:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5671:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5661:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2557,
																	"nodeType": "IfStatement",
																	"src": "5657:51:7",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "436861696e6c696e6b3a20496e76616c6964207072696365",
																					"id": 2554,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5681:26:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46",
																						"typeString": "literal_string \"Chainlink: Invalid price\""
																					},
																					"value": "Chainlink: Invalid price"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46",
																						"typeString": "literal_string \"Chainlink: Invalid price\""
																					}
																				],
																				"id": 2553,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "5674:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5674:34:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2556,
																		"nodeType": "ExpressionStatement",
																		"src": "5674:34:7"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2558,
																			"name": "updatedAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2546,
																			"src": "5726:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5739:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5726:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2565,
																	"nodeType": "IfStatement",
																	"src": "5722:59:7",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465",
																					"id": 2562,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5749:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47",
																						"typeString": "literal_string \"Chainlink: Round not complete\""
																					},
																					"value": "Chainlink: Round not complete"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47",
																						"typeString": "literal_string \"Chainlink: Round not complete\""
																					}
																				],
																				"id": 2561,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "5742:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5742:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2564,
																		"nodeType": "ExpressionStatement",
																		"src": "5742:39:7"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2566,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "5799:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5805:9:7",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "5799:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2568,
																				"name": "updatedAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2546,
																				"src": "5817:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5799:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 2570,
																			"name": "CHAINLINK_STALENESS_THRESHOLD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "5829:29:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5799:59:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2577,
																	"nodeType": "IfStatement",
																	"src": "5795:130:7",
																	"trueBody": {
																		"id": 2576,
																		"nodeType": "Block",
																		"src": "5860:65:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "436861696e6c696e6b3a205374616c65207072696365",
																							"id": 2573,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5885:24:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495",
																								"typeString": "literal_string \"Chainlink: Stale price\""
																							},
																							"value": "Chainlink: Stale price"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495",
																								"typeString": "literal_string \"Chainlink: Stale price\""
																							}
																						],
																						"id": 2572,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "5878:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2574,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5878:32:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2575,
																				"nodeType": "ExpressionStatement",
																				"src": "5878:32:7"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"components": [
																			{
																				"arguments": [
																					{
																						"id": 2580,
																						"name": "answer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2542,
																						"src": "5965:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"expression": {
																						"id": 2578,
																						"name": "SafeCast",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2161,
																						"src": "5946:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeCast_$2161_$",
																							"typeString": "type(library SafeCast)"
																						}
																					},
																					"id": 2579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5955:9:7",
																					"memberName": "toUint256",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1314,
																					"src": "5946:18:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																						"typeString": "function (int256) pure returns (uint256)"
																					}
																				},
																				"id": 2581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5946:26:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2582,
																				"name": "updatedAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2546,
																				"src": "5974:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "74727565",
																				"id": 2583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5985:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			}
																		],
																		"id": 2584,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5945:45:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
																			"typeString": "tuple(uint256,uint256,bool)"
																		}
																	},
																	"functionReturnParameters": 2525,
																	"id": 2585,
																	"nodeType": "Return",
																	"src": "5938:52:7"
																}
															]
														},
														"errorName": "",
														"id": 2587,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2549,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2540,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2587,
																	"src": "5527:6:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	},
																	"typeName": {
																		"id": 2539,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "5527:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint80",
																			"typeString": "uint80"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2542,
																	"mutability": "mutable",
																	"name": "answer",
																	"nameLocation": "5554:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2587,
																	"src": "5547:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 2541,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2544,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2587,
																	"src": "5574:7:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2543,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5574:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2546,
																	"mutability": "mutable",
																	"name": "updatedAt",
																	"nameLocation": "5603:9:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 2587,
																	"src": "5595:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2545,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5595:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2548,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2587,
																	"src": "5626:6:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	},
																	"typeName": {
																		"id": 2547,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "5626:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint80",
																			"typeString": "uint80"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "5513:129:7"
														},
														"src": "5505:496:7"
													},
													{
														"block": {
															"id": 2593,
															"nodeType": "Block",
															"src": "6008:45:7",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"hexValue": "30",
																				"id": 2588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6030:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "30",
																				"id": 2589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6033:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 2590,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6036:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"id": 2591,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6029:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_bool_$",
																			"typeString": "tuple(int_const 0,int_const 0,bool)"
																		}
																	},
																	"functionReturnParameters": 2525,
																	"id": 2592,
																	"nodeType": "Return",
																	"src": "6022:20:7"
																}
															]
														},
														"errorName": "",
														"id": 2594,
														"nodeType": "TryCatchClause",
														"src": "6002:51:7"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2536,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "5477:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 2537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5487:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "5477:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5477:27:7",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"id": 2595,
												"nodeType": "TryStatement",
												"src": "5473:580:7"
											}
										]
									},
									"documentation": {
										"id": 2514,
										"nodeType": "StructuredDocumentation",
										"src": "4948:284:7",
										"text": "@notice Ottiene il prezzo direttamente dal feed Chainlink\n @param source Indirizzo del feed (deve corrispondere a priceFeed)\n @return price Prezzo della coppia\n @return timestamp Timestamp dell'aggiornamento\n @return isValid True se il prezzo è valido"
									},
									"functionSelector": "2806bce2",
									"id": 2597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSourcePrice",
									"nameLocation": "5246:14:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2518,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5318:8:7"
									},
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "5269:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "5261:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:16:7"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "5353:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "5345:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5345:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5368:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "5360:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5360:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "5384:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2597,
												"src": "5379:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5379:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5344:48:7"
									},
									"scope": 2708,
									"src": "5237:822:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2222
									],
									"body": {
										"id": 2653,
										"nodeType": "Block",
										"src": "6773:273:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2619,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2600,
																"src": "6791:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2620,
																"name": "EUR_USD_PAIR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "6799:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "6791:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616972",
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6813:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															},
															"value": "Invalid pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															}
														],
														"id": 2618,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6783:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6783:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2624,
												"nodeType": "ExpressionStatement",
												"src": "6783:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2626,
																"name": "source",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2602,
																"src": "6846:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6864:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6856:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2627,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6856:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6856:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6846:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736f757263652061646472657373",
															"id": 2632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6868:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc",
																"typeString": "literal_string \"Invalid source address\""
															},
															"value": "Invalid source address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc",
																"typeString": "literal_string \"Invalid source address\""
															}
														],
														"id": 2625,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6838:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6838:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2634,
												"nodeType": "ExpressionStatement",
												"src": "6838:55:7"
											},
											{
												"assignments": [
													2636
												],
												"declarations": [
													{
														"constant": false,
														"id": 2636,
														"mutability": "mutable",
														"name": "oldFeed",
														"nameLocation": "6912:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 2653,
														"src": "6904:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6904:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2641,
												"initialValue": {
													"arguments": [
														{
															"id": 2639,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "6930:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														],
														"id": 2638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6922:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2637,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6922:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6922:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6904:36:7"
											},
											{
												"expression": {
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2642,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "6950:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2644,
																"name": "source",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2602,
																"src": "6984:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2643,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "6962:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 2645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6962:29:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "6950:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "6950:41:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2649,
															"name": "oldFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2636,
															"src": "7023:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2650,
															"name": "source",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2602,
															"src": "7032:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2648,
														"name": "PriceFeedUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2296,
														"src": "7006:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7006:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2652,
												"nodeType": "EmitStatement",
												"src": "7001:38:7"
											}
										]
									},
									"documentation": {
										"id": 2598,
										"nodeType": "StructuredDocumentation",
										"src": "6065:473:7",
										"text": "@notice Aggiunge o aggiorna il feed Chainlink per EUR/USD\n @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n @param source Nuovo indirizzo del feed Chainlink\n @param weight Peso della sorgente (non utilizzato)\n @param heartbeat Frequenza di aggiornamento della sorgente (non utilizzato)\n @param maxDeviation Deviazione massima consentita (non utilizzato)\n @param minConfidence Confidenza minima richiesta (non utilizzato)"
									},
									"functionSelector": "9f97acb7",
									"id": 2654,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2614,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2613,
												"name": "onlyOwner",
												"nameLocations": [
													"6750:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "6750:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6750:9:7"
										},
										{
											"id": 2616,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2615,
												"name": "nonReentrant",
												"nameLocations": [
													"6760:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 331,
												"src": "6760:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6760:12:7"
										}
									],
									"name": "addOracleSource",
									"nameLocation": "6552:15:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2612,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6741:8:7"
									},
									"parameters": {
										"id": 2611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "6585:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "6577:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2599,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "6607:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "6599:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6599:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2604,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "6631:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "6623:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "heartbeat",
												"nameLocation": "6655:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "6647:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6647:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "maxDeviation",
												"nameLocation": "6682:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "6674:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "minConfidence",
												"nameLocation": "6712:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 2654,
												"src": "6704:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6567:164:7"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6773:0:7"
									},
									"scope": 2708,
									"src": "6543:503:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2229
									],
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "7331:182:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2666,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2657,
																"src": "7349:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2667,
																"name": "EUR_USD_PAIR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "7357:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "7349:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616972",
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7371:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															},
															"value": "Invalid pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															}
														],
														"id": 2665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7341:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7341:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2671,
												"nodeType": "ExpressionStatement",
												"src": "7341:45:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2673,
																"name": "source",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2659,
																"src": "7404:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2676,
																		"name": "priceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2259,
																		"src": "7422:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	],
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7414:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2674,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7414:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7414:18:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7404:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736f75726365",
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7434:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e",
																"typeString": "literal_string \"Invalid source\""
															},
															"value": "Invalid source"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e",
																"typeString": "literal_string \"Invalid source\""
															}
														],
														"id": 2672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7396:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "7396:55:7"
											}
										]
									},
									"documentation": {
										"id": 2655,
										"nodeType": "StructuredDocumentation",
										"src": "7052:183:7",
										"text": "@notice Rimuove un feed (no-op per oracolo a sorgente singola)\n @param pair Coppia di asset (deve essere EUR_USD_PAIR)\n @param source Indirizzo del feed da rimuovere"
									},
									"functionSelector": "01e9492f",
									"id": 2683,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2663,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2662,
												"name": "onlyOwner",
												"nameLocations": [
													"7321:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "7321:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7321:9:7"
										}
									],
									"name": "removeOracleSource",
									"nameLocation": "7249:18:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2661,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7312:8:7"
									},
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "7276:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "7268:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2656,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7268:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "7290:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "7282:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7282:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7267:30:7"
									},
									"returnParameters": {
										"id": 2664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7331:0:7"
									},
									"scope": 2708,
									"src": "7240:273:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2696,
										"nodeType": "Block",
										"src": "7620:68:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2689,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "7630:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7630:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2691,
												"nodeType": "ExpressionStatement",
												"src": "7630:8:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2693,
															"name": "EUR_USD_PAIR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2266,
															"src": "7668:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2692,
														"name": "EmergencyPause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "7653:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7653:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2695,
												"nodeType": "EmitStatement",
												"src": "7648:33:7"
											}
										]
									},
									"documentation": {
										"id": 2684,
										"nodeType": "StructuredDocumentation",
										"src": "7519:60:7",
										"text": "@notice Mette in pausa il contratto (blocca updatePrice)"
									},
									"functionSelector": "8456cb59",
									"id": 2697,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2687,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2686,
												"name": "onlyOwner",
												"nameLocations": [
													"7610:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "7610:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7610:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "7593:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7598:2:7"
									},
									"returnParameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7620:0:7"
									},
									"scope": 2708,
									"src": "7584:104:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2706,
										"nodeType": "Block",
										"src": "7784:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2703,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "7794:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7794:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2705,
												"nodeType": "ExpressionStatement",
												"src": "7794:10:7"
											}
										]
									},
									"documentation": {
										"id": 2698,
										"nodeType": "StructuredDocumentation",
										"src": "7694:47:7",
										"text": "@notice Ripristina il contratto dalla pausa"
									},
									"functionSelector": "3f4ba83a",
									"id": 2707,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2701,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2700,
												"name": "onlyOwner",
												"nameLocations": [
													"7774:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "7774:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7774:9:7"
										}
									],
									"name": "unpause",
									"nameLocation": "7755:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7762:2:7"
									},
									"returnParameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7784:0:7"
									},
									"scope": 2708,
									"src": "7746:65:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2709,
							"src": "553:7260:7",
							"usedErrors": [
								59,
								64,
								411
							],
							"usedEvents": [
								70,
								204,
								209,
								2289,
								2296,
								2301
							]
						}
					],
					"src": "32:7781:7"
				},
				"id": 7
			}
		}
	}
}