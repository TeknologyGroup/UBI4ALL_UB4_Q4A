{
	"id": "5af2601567e2c3b49c9c8688ea2e9497",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"quantum/UBI4ALLQuantumFinance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"../interfaces/IUBI4ALLQuantum.sol\";\nimport \"../oracle/UBI4ALLOracle.sol\";\nimport \"../interfaces/IUBI4ALLQuantumFinance.sol\";\n\n/// @title UBI4ALLQuantumFinance - Contratto di staking e finanza per il token Q4A\n/// @notice Gestisce lo staking di token Q4A con APY variabile basato su VRF Chainlink e volatilità dell'oracolo\ncontract UBI4ALLQuantumFinance is Ownable, VRFConsumerBaseV2, IUBI4ALLQuantumFinance {\n    IUBI4ALLQuantum public immutable quantumToken;\n    IUBI4ALLOracle public immutable oracle;\n    VRFCoordinatorV2Interface public immutable COORDINATOR;\n\n    /// @dev APY base (10%, in base 10000)\n    uint256 public constant BASE_APY = 10_00;\n    /// @dev APY per DAO (12%, in base 10000)\n    uint256 public constant DAO_APY = 12_00;\n    /// @dev Bonus massimo per volatilità (2%, in base 10000)\n    uint256 public constant VOLATILITY_BONUS = 2_00;\n    /// @dev APY minimo per staking standard (8%, in base 10000)\n    uint256 public constant SUPERPOSITION_MIN = 8_00;\n    /// @dev APY massimo per staking standard (14%, in base 10000)\n    uint256 public constant SUPERPOSITION_MAX = 14_00;\n    /// @dev APY minimo per staking DAO (10%, in base 10000)\n    uint256 public constant DAO_SUPERPOSITION_MIN = 10_00;\n    /// @dev APY massimo per staking DAO (16%, in base 10000)\n    uint256 public constant DAO_SUPERPOSITION_MAX = 16_00;\n    /// @dev Intervallo di aggiornamento APY (30 giorni)\n    uint256 public constant UPDATE_INTERVAL = 30 days;\n\n    /// @dev Struttura per lo stake di un utente\n    struct Stake {\n        uint256 amount; // Importo staked standard\n        uint256 daoAmount; // Importo staked per DAO\n        uint256 lastUpdate; // Timestamp dell'ultimo aggiornamento\n        uint256 accumulatedReward; // Ricompense accumulate\n        uint256 currentAPY; // APY corrente\n    }\n\n    /// @dev Mappatura degli stake per utente\n    mapping(address => Stake) public stakes;\n    /// @dev Totale dei token staked\n    uint256 public totalValueLocked;\n    /// @dev Mappatura delle richieste VRF per utente\n    mapping(uint256 => address) public requestToUser;\n    /// @dev Gas key per VRF\n    bytes32 public immutable keyHash;\n    /// @dev ID della sottoscrizione VRF\n    uint64 public immutable subscriptionId;\n    /// @dev Limite di gas per il callback VRF\n    uint32 public callbackGasLimit = 100_000;\n    /// @dev Numero di conferme richieste per VRF\n    uint16 public requestConfirmations = 3;\n    /// @dev Numero di parole casuali richieste\n    uint32 public numWords = 1;\n\n    /// @notice Evento emesso quando un utente stake token\n    event Staked(address indexed user, uint256 amount, bool isDAO);\n    /// @notice Evento emesso quando un utente preleva token\n    event Withdrawn(address indexed user, uint256 amount);\n    /// @notice Evento emesso quando un utente reclama ricompense\n    event RewardClaimed(address indexed user, uint256 amount);\n    /// @notice Evento emesso quando l'APY di un utente viene aggiornato\n    event APYUpdated(address indexed user, uint256 newAPY);\n    /// @notice Evento emesso quando viene richiesta una nuova APY casuale\n    event RandomAPYRequested(address indexed user, uint256 requestId);\n\n    /// @notice Costruttore del contratto\n    /// @param _quantumToken Indirizzo del contratto Q4A\n    /// @param _oracle Indirizzo dell'oracolo\n    /// @param _vrfCoordinator Indirizzo del coordinatore VRF Chainlink\n    /// @param _keyHash Gas key per VRF\n    /// @param _subscriptionId ID della sottoscrizione VRF\n    /// @param initialOwner Indirizzo del proprietario iniziale\n    constructor(\n        address _quantumToken,\n        address _oracle,\n        address _vrfCoordinator,\n        bytes32 _keyHash,\n        uint64 _subscriptionId,\n        address initialOwner\n    ) Ownable(initialOwner) VRFConsumerBaseV2(_vrfCoordinator) {\n        require(_quantumToken != address(0), \"Invalid token address\");\n        require(_oracle != address(0), \"Invalid oracle address\");\n        require(_vrfCoordinator != address(0), \"Invalid VRF coordinator address\");\n        quantumToken = IUBI4ALLQuantum(_quantumToken);\n        oracle = IUBI4ALLOracle(_oracle);\n        COORDINATOR = VRFCoordinatorV2Interface(_vrfCoordinator);\n        keyHash = _keyHash;\n        subscriptionId = _subscriptionId;\n    }\n\n    /// @notice Effettua lo staking di token Q4A\n    /// @param amount Quantità di token da stakare\n    function stake(uint256 amount) external {\n        require(amount > 0, \"Invalid amount\");\n        updateStake(msg.sender);\n        stakes[msg.sender].amount += amount;\n        totalValueLocked += amount;\n        require(quantumToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\n        requestSuperpositionAPY(msg.sender);\n        emit Staked(msg.sender, amount, false);\n    }\n\n    /// @notice Effettua lo staking di token Q4A per la DAO\n    /// @param amount Quantità di token da stakare\n    function stakeForDAO(uint256 amount) external {\n        require(amount > 0, \"Invalid amount\");\n        updateStake(msg.sender);\n        stakes[msg.sender].daoAmount += amount;\n        totalValueLocked += amount;\n        require(quantumToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\");\n        quantumToken.lockForDAO(amount);\n        requestSuperpositionAPY(msg.sender);\n        emit Staked(msg.sender, amount, true);\n    }\n\n    /// @notice Preleva token staked\n    /// @param amount Quantità di token da prelevare\n    function withdraw(uint256 amount) external {\n        updateStake(msg.sender);\n        require(stakes[msg.sender].amount >= amount, \"Insufficient staked amount\");\n        stakes[msg.sender].amount -= amount;\n        totalValueLocked -= amount;\n        require(quantumToken.transfer(msg.sender, amount), \"Transfer failed\");\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    /// @notice Reclama le ricompense accumulate\n    function claimReward() external {\n        updateStake(msg.sender);\n        uint256 reward = stakes[msg.sender].accumulatedReward;\n        require(reward > 0, \"No rewards to claim\");\n        stakes[msg.sender].accumulatedReward = 0;\n        require(quantumToken.transfer(msg.sender, reward), \"Transfer failed\");\n        emit RewardClaimed(msg.sender, reward);\n    }\n\n    /// @notice Richiede un nuovo APY casuale tramite VRF Chainlink\n    /// @param user Indirizzo dell'utente\n    function requestSuperpositionAPY(address user) internal {\n        if (block.timestamp >= stakes[user].lastUpdate + UPDATE_INTERVAL) {\n            uint256 requestId = COORDINATOR.requestRandomWords(\n                keyHash,\n                subscriptionId,\n                requestConfirmations,\n                callbackGasLimit,\n                numWords\n            );\n            requestToUser[requestId] = user;\n            emit RandomAPYRequested(user, requestId);\n        }\n    }\n\n    /// @notice Callback VRF per aggiornare l'APY\n    /// @param requestId ID della richiesta VRF\n    /// @param randomWords Parole casuali generate\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n        address user = requestToUser[requestId];\n        require(user != address(0), \"Invalid request ID\");\n        uint256 randomValue = randomWords[0] % 100;\n        uint256 apyRange = stakes[user].daoAmount > 0 ? DAO_SUPERPOSITION_MAX - DAO_SUPERPOSITION_MIN : SUPERPOSITION_MAX - SUPERPOSITION_MIN;\n        uint256 newAPY = (randomValue * apyRange / 100) + (stakes[user].daoAmount > 0 ? DAO_SUPERPOSITION_MIN : SUPERPOSITION_MIN);\n        stakes[user].currentAPY = newAPY;\n        stakes[user].lastUpdate = block.timestamp;\n        delete requestToUser[requestId];\n        emit APYUpdated(user, newAPY);\n    }\n\n    /// @notice Aggiorna lo stake di un utente\n    /// @param user Indirizzo dell'utente\nfunction updateStake(address user) internal {\n    Stake storage userStake = stakes[user];\n    if (userStake.amount > 0 || userStake.daoAmount > 0) {    \n        uint256 baseReward = calculateReward(user, userStake.amount, userStake.currentAPY);\n        uint256 daoReward = calculateReward(user, userStake.daoAmount, userStake.currentAPY);\n        userStake.accumulatedReward += baseReward + daoReward;\n        userStake.lastUpdate = block.timestamp;\n    }\n}\n\n    /// @notice Calcola le ricompense per un importo staked\n    /// @param user Indirizzo dell'utente\n    /// @param amount Importo staked\n    /// @param apy APY corrente\n    /// @return Ricompensa calcolata\n    function calculateReward(address user, uint256 amount, uint256 apy) internal view returns (uint256) {\n        if (amount == 0) return 0;\n        uint256 volatilityBonus = predictVolatility();\n        uint256 totalAPY = apy + volatilityBonus;\n        Stake storage userStake = stakes[user];\n        uint256 timeElapsed = block.timestamp - userStake.lastUpdate;\n        return (amount * totalAPY * timeElapsed / 365 days) / 10_000;\n    }\n\n    /// @notice Predice la volatilità basata sull'oracolo\n    /// @return Bonus di volatilità\n    function predictVolatility() internal view returns (uint256) {\n        int256 price = oracle.getLatestPrice();\n        if (price <= 0) return 0;\n        // Simulazione volatilità (EMA 7 giorni)\n        return VOLATILITY_BONUS / 2;\n    }\n\n    /// @notice Ottiene il saldo staked di un utente\n    /// @param user Indirizzo dell'utente\n    /// @return Saldo staked totale (standard + DAO)\n    function getStakedBalance(address user) external view returns (uint256) {\n        return stakes[user].amount + stakes[user].daoAmount;\n    }\n\n    /// @notice Ottiene il totale dei token staked\n    /// @return Totale dei token staked\n    function getTotalValueLocked() external view returns (uint256) {\n        return totalValueLocked;\n    }\n\n    /// @notice Calcola le ricompense totali per un utente\n    /// @param user Indirizzo dell'utente\n    /// @return Ricompense totali (accumulate + in attesa)\n    function calculateReward(address user) external view returns (uint256) {\n        Stake storage userStake = stakes[user];\n        uint256 baseReward = calculateReward(user, userStake.amount, userStake.currentAPY);\n        uint256 daoReward = calculateReward(user, userStake.daoAmount, userStake.currentAPY);\n        return userStake.accumulatedReward + baseReward + daoReward;\n    }\n\n    /// @notice Aggiorna i parametri VRF\n    /// @param _callbackGasLimit Nuovo limite di gas per il callback\n    /// @param _requestConfirmations Nuovo numero di conferme\n    function updateVRFParams(uint32 _callbackGasLimit, uint16 _requestConfirmations) external onlyOwner {\n        callbackGasLimit = _callbackGasLimit;\n        requestConfirmations = _requestConfirmations;\n    }\n\n    /// @notice Trasferisce la proprietà del contratto a un nuovo proprietario\n    /// @param newOwner Indirizzo del nuovo proprietario\n    function transferOwnership(address newOwner) public override(Ownable, IUBI4ALLQuantumFinance) onlyOwner {\n        super.transferOwnership(newOwner);\n    }\n}"
			},
			"interfaces/IUBI4ALLQuantumFinance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface IUBI4ALLQuantumFinance {\n    function transferOwnership(address newOwner) external;\n}"
			},
			"oracle/UBI4ALLOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n/// @title IUBI4ALLOracle - Interfaccia per l'oracolo del prezzo EUR/USD\ninterface IUBI4ALLOracle {\n    /// @notice Emesso quando il prezzo viene aggiornato\n    event PriceUpdated(bytes32 indexed pair, uint256 price, uint256 timestamp);\n\n    /// @notice Aggiorna manualmente il prezzo per una coppia\n    function updatePrice(\n        bytes32 pair,\n        uint256 price,\n        uint256 timestamp,\n        uint256 confidence\n    ) external;\n\n    /// @notice Ottiene il prezzo più recente per una coppia\n    function getPrice(bytes32 pair) external view returns (uint256 price, uint256 timestamp, bool isValid);\n\n    /// @notice Ottiene il prezzo aggregato per una coppia\n    function getAggregatedPrice(bytes32 pair) external view returns (uint256 weightedPrice, uint256 timestamp, bool isValid);\n\n    /// @notice Ottiene il prezzo direttamente dal feed Chainlink\n    function getSourcePrice(address source) external view returns (uint256 price, uint256 timestamp, bool isValid);\n\n    /// @notice Aggiunge o aggiorna un feed Chainlink\n    function addOracleSource(\n        bytes32 pair,\n        address source,\n        uint256 weight,\n        uint256 heartbeat,\n        uint256 maxDeviation,\n        uint256 minConfidence\n    ) external;\n\n    /// @notice Rimuove un feed Chainlink\n    function removeOracleSource(bytes32 pair, address source) external;\n\n    /// @notice Ottiene il prezzo più recente per la coppia EUR/USD\n    /// @return Prezzo più recente come int256\n    function getLatestPrice() external view returns (int256);\n}\n\n/// @title UBI4ALLOracle - Oracolo per il prezzo EUR/USD\n/// @notice Fornisce prezzi aggiornati per la coppia EUR/USD, con fallback a Chainlink\ncontract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {\n    /// @dev Struttura per i dati del prezzo\n    struct PriceData {\n        uint256 price;\n        uint256 timestamp;\n        bool isValid;\n    }\n\n    AggregatorV3Interface public priceFeed;\n    bytes32 public constant EUR_USD_PAIR = bytes32(\"EUR/USD\");\n    mapping(bytes32 => PriceData) public latestPrices;\n    uint256 public constant PRICE_VALIDITY_PERIOD = 15 minutes;\n    uint256 public constant CHAINLINK_STALENESS_THRESHOLD = 1 hours;\n\n    event PriceFeedUpdated(address indexed oldFeed, address indexed newFeed);\n    event EmergencyPause(bytes32 indexed pair);\n\n    constructor(address _priceFeed, address initialOwner) Ownable(initialOwner) {\n        require(_priceFeed != address(0), \"Invalid price feed address\");\n        priceFeed = AggregatorV3Interface(_priceFeed);\n    }\n\n    function getPrice(bytes32 pair) \n        public \n        view \n        override \n        returns (uint256 price, uint256 timestamp, bool isValid) \n    {\n        require(pair == EUR_USD_PAIR, \"Invalid pair\");\n        PriceData memory data = latestPrices[pair];\n\n        if (data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD) {\n            return (data.price, data.timestamp, true);\n        }\n\n        try priceFeed.latestRoundData() returns (\n            uint80,\n            int256 answer,\n            uint256,\n            uint256 updatedAt,\n            uint80\n        ) {\n            if (answer <= 0) revert(\"Chainlink: Invalid price\");\n            if (updatedAt == 0) revert(\"Chainlink: Round not complete\");\n            if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {\n                revert(\"Chainlink: Stale price\");\n            }\n            return (SafeCast.toUint256(answer), updatedAt, true);\n        } catch {\n            return (0, 0, false);\n        }\n    }\n\n    function updatePrice(\n        bytes32 pair,\n        uint256 price,\n        uint256 timestamp,\n        uint256 /*confidence*/\n    ) external override onlyOwner whenNotPaused nonReentrant {\n        require(pair == EUR_USD_PAIR, \"Invalid pair\");\n        require(timestamp <= block.timestamp, \"Future timestamp\");\n        require(price > 0, \"Invalid price\");\n\n        latestPrices[pair] = PriceData({\n            price: price,\n            timestamp: timestamp,\n            isValid: true\n        });\n\n        emit PriceUpdated(pair, price, timestamp);\n    }\n\n    function getLatestPrice() external view override returns (int256) {\n        (uint256 price, , bool isValid) = getPrice(EUR_USD_PAIR);\n        require(isValid, \"Invalid or stale price\");\n        return SafeCast.toInt256(price);\n    }\n\n    function getAggregatedPrice(bytes32 pair) \n        external \n        view \n        override \n        returns (uint256 weightedPrice, uint256 timestamp, bool isValid) \n    {\n        return getPrice(pair);\n    }\n\n    function getSourcePrice(address source) \n        external \n        view \n        override \n        returns (uint256 price, uint256 timestamp, bool isValid) \n    {\n        require(source == address(priceFeed), \"Invalid source\");\n        try priceFeed.latestRoundData() returns (\n            uint80,\n            int256 answer,\n            uint256,\n            uint256 updatedAt,\n            uint80\n        ) {\n            if (answer <= 0) revert(\"Chainlink: Invalid price\");\n            if (updatedAt == 0) revert(\"Chainlink: Round not complete\");\n            if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {\n                revert(\"Chainlink: Stale price\");\n            }\n            return (SafeCast.toUint256(answer), updatedAt, true);\n        } catch {\n            return (0, 0, false);\n        }\n    }\n\n    function addOracleSource(\n        bytes32 pair,\n        address source,\n        uint256 /*weight*/,\n        uint256 /*heartbeat*/,\n        uint256 /*maxDeviation*/,\n        uint256 /*minConfidence*/\n    ) external override onlyOwner nonReentrant {\n        require(pair == EUR_USD_PAIR, \"Invalid pair\");\n        require(source != address(0), \"Invalid source address\");\n\n        address oldFeed = address(priceFeed);\n        priceFeed = AggregatorV3Interface(source);\n        emit PriceFeedUpdated(oldFeed, source);\n    }\n\n    function removeOracleSource(bytes32 pair, address source) external view override onlyOwner {\n        require(pair == EUR_USD_PAIR, \"Invalid pair\");\n        require(source == address(priceFeed), \"Invalid source\");\n        // No-op: l'oracolo supporta una sola sorgente\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n        emit EmergencyPause(EUR_USD_PAIR);\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n}"
			},
			"interfaces/IUBI4ALLQuantum.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface IUBI4ALLQuantum {\n    event QuantumTransfer(address indexed from, address indexed to, uint256 amount);\n    event TokensLockedForDAO(address indexed account, uint256 amount);\n    event TokensUnlockedForDAO(address indexed account, uint256 amount);\n    event TokensBurned(address indexed account, uint256 amount);\n    event EmergencyRecovery(address indexed token, address indexed to, uint256 amount);\n    event WalletUpdated(string walletType, address indexed newWallet);\n    event VestingReleased(address indexed wallet, uint256 amount);\n    event LeveragedTransfer(address indexed from, address indexed to, uint256 amount, uint256 leverage);\n\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 amount) external returns (bool);\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n    function getTotalSupply() external pure returns (uint256);\n    function getAllocations() external pure returns (\n        uint256 treasury,\n        uint256 ecosystem,\n        uint256 community,\n        uint256 liquidity,\n        uint256 reserve\n    );\n    function getWallets() external view returns (\n        address treasury,\n        address ecosystem,\n        address community,\n        address liquidity,\n        address reserve\n    );\n    function mint(address to, uint256 amount) external;\n    function burn(uint256 amount) external;\n    function emergencyRecoverTokens(address token, address to) external;\n    function lockForDAO(uint256 amount) external;\n    function lockedForDAO(address account) external view returns (uint256);\n    function totalLockedForDAO() external view returns (uint256);\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.28;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.28;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.28;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
				"VRFConsumerBaseV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_vrfCoordinator": "address of VRFCoordinator contract"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "****************************************************************************Interface for contracts using VRF randomness *****************************************************************************",
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"VRFCoordinatorV2Interface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "acceptSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "addConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "cancelSubscription",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createSubscription",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRequestConfig",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								},
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "getSubscription",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "balance",
									"type": "uint96"
								},
								{
									"internalType": "uint64",
									"name": "reqCount",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "consumers",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								}
							],
							"name": "pendingRequestExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "consumer",
									"type": "address"
								}
							],
							"name": "removeConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "keyHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "uint16",
									"name": "minimumRequestConfirmations",
									"type": "uint16"
								},
								{
									"internalType": "uint32",
									"name": "callbackGasLimit",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "numWords",
									"type": "uint32"
								}
							],
							"name": "requestRandomWords",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "subId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "requestSubscriptionOwnerTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"details": "will revert if original owner of subId has not requested that msg.sender become the new owner.",
								"params": {
									"subId": "- ID of the subscription"
								}
							},
							"addConsumer(uint64,address)": {
								"params": {
									"consumer": "- New consumer which can use the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"cancelSubscription(uint64,address)": {
								"params": {
									"subId": "- ID of the subscription",
									"to": "- Where to send the remaining LINK to"
								}
							},
							"createSubscription()": {
								"details": "You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));",
								"returns": {
									"subId": "- A unique subscription id."
								}
							},
							"getRequestConfig()": {
								"returns": {
									"_0": "minimumRequestConfirmations global min for request confirmations",
									"_1": "maxGasLimit global max for request gas limit",
									"_2": "s_provingKeyHashes list of registered key hashes"
								}
							},
							"getSubscription(uint64)": {
								"params": {
									"subId": "- ID of the subscription"
								},
								"returns": {
									"balance": "- LINK balance of the subscription in juels.",
									"consumers": "- list of consumer address which are able to use this subscription.",
									"owner": "- owner of the subscription.",
									"reqCount": "- number of requests for this subscription, determines fee tier."
								}
							},
							"removeConsumer(uint64,address)": {
								"params": {
									"consumer": "- Consumer to remove from the subscription",
									"subId": "- ID of the subscription"
								}
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"params": {
									"callbackGasLimit": "- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]",
									"keyHash": "- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.",
									"minimumRequestConfirmations": "- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].",
									"numWords": "- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.",
									"subId": "- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."
								},
								"returns": {
									"requestId": "- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."
								}
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"params": {
									"newOwner": "- proposed new owner of the subscription",
									"subId": "- ID of the subscription"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptSubscriptionOwnerTransfer(uint64)": "82359740",
							"addConsumer(uint64,address)": "7341c10c",
							"cancelSubscription(uint64,address)": "d7ae1d30",
							"createSubscription()": "a21a23e4",
							"getRequestConfig()": "00012291",
							"getSubscription(uint64)": "a47c7696",
							"pendingRequestExists(uint64)": "e82ad7d4",
							"removeConsumer(uint64,address)": "9f87fad7",
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": "5d3b1d30",
							"requestSubscriptionOwnerTransfer(uint64,address)": "04c357cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptSubscriptionOwnerTransfer(uint64)": {
								"notice": "Request subscription owner transfer."
							},
							"addConsumer(uint64,address)": {
								"notice": "Add a consumer to a VRF subscription."
							},
							"cancelSubscription(uint64,address)": {
								"notice": "Cancel a subscription"
							},
							"createSubscription()": {
								"notice": "Create a VRF subscription."
							},
							"getRequestConfig()": {
								"notice": "Get configuration relevant for making requests"
							},
							"getSubscription(uint64)": {
								"notice": "Get a VRF subscription."
							},
							"removeConsumer(uint64,address)": {
								"notice": "Remove a consumer from a VRF subscription."
							},
							"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": {
								"notice": "Request a set of random words."
							},
							"requestSubscriptionOwnerTransfer(uint64,address)": {
								"notice": "Request subscription owner transfer."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 208,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x15490c1ac7fb488198fce8a04211f15277ee816915367bc906110cbb57863bbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3273e1e51c1bfe12b50778dd98d3d322ca315cd8e1185593694a0ac828b820\",\"dweb:/ipfs/QmTyAWneXaURy9Ls4dovFWLV9yxzMkELmLsgLTWeubz8ZA\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 365,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xf4d28329285c89e85daf450fbe612ec5ceb19842ae0be976ab1569897940be90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a021f64d3d58a64fd3045afc6b192c82bca29d95cd594a3c0ed93d1c69ecc98\",\"dweb:/ipfs/QmegaH5RM4Sboa22unJm3FdMVTd3K9UUf8ogbvBwx1K8XJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 466,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203fbf807b9946e12a44522b0bc5758f4a12d0763b6b3999ed33d89dda76f621de64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203fbf807b9946e12a44522b0bc5758f4a12d0763b6b3999ed33d89dda76f621de64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xBF DUP1 PUSH28 0x9946E12A44522B0BC5758F4A12D0763B6B3999ED33D89DDA76F621DE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203fbf807b9946e12a44522b0bc5758f4a12d0763b6b3999ed33d89dda76f621de64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xBF DUP1 PUSH28 0x9946E12A44522B0BC5758F4A12D0763B6B3999ED33D89DDA76F621DE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "769:34173:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203fbf807b9946e12a44522b0bc5758f4a12d0763b6b3999ed33d89dda76f621de64736f6c634300081c0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"interfaces/IUBI4ALLQuantum.sol",
								"interfaces/IUBI4ALLQuantumFinance.sol",
								"oracle/UBI4ALLOracle.sol",
								"quantum/UBI4ALLQuantumFinance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x880e8b3325f624a5c4dfb9a754ed83bf0be1476d02c5063b215f3c3b9fdec331\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e14b50f3ca0b35d014b166235d94dfa8c9067bb3f5d65efdfb2193355a455\",\"dweb:/ipfs/QmNrM5LEwfCi7cxMovccBpFeL8T9MWfqA15dW9SobPDPfo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUBI4ALLQuantum.sol": {
				"IUBI4ALLQuantum": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyRecovery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leverage",
									"type": "uint256"
								}
							],
							"name": "LeveragedTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "QuantumTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensLockedForDAO",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnlockedForDAO",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "VestingReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "walletType",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newWallet",
									"type": "address"
								}
							],
							"name": "WalletUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "emergencyRecoverTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllocations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "treasury",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ecosystem",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "community",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWallets",
							"outputs": [
								{
									"internalType": "address",
									"name": "treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ecosystem",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "community",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidity",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "lockForDAO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "lockedForDAO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLockedForDAO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"emergencyRecoverTokens(address,address)": "b7e26a2e",
							"getAllocations()": "65ed6e23",
							"getTotalSupply()": "c4e41b22",
							"getWallets()": "db7a4605",
							"lockForDAO(uint256)": "9576a374",
							"lockedForDAO(address)": "2af44592",
							"mint(address,uint256)": "40c10f19",
							"totalLockedForDAO()": "4a0ced96",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyRecovery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"}],\"name\":\"LeveragedTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"QuantumTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensLockedForDAO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnlockedForDAO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VestingReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"walletType\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"WalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"emergencyRecoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"treasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ecosystem\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"community\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ecosystem\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockForDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"lockedForDAO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedForDAO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUBI4ALLQuantum.sol\":\"IUBI4ALLQuantum\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IUBI4ALLQuantum.sol\":{\"keccak256\":\"0xed4773a40ea1b8e51e4bc875b3aa1aea35d6500956eb7d463dfc053b53634386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28c1598fb65f0cf11408fd768e911c119e239ffe14dc2cefd6b87295f7c85e7e\",\"dweb:/ipfs/QmSBDSFE5A6ky3kF8sDPXeiEahFJzHNPBnt5jkCP7bN5Gt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUBI4ALLQuantumFinance.sol": {
				"IUBI4ALLQuantumFinance": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUBI4ALLQuantumFinance.sol\":\"IUBI4ALLQuantumFinance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IUBI4ALLQuantumFinance.sol\":{\"keccak256\":\"0x0bd9f04b0733542af47bd627d0a711abdd0358bc5163a8339141270c3cac4c31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://461ac6d507cbde9e7a135c6ed5c28bd613eb9d90603cd5482a5471502fccded2\",\"dweb:/ipfs/QmPgpYCFd5bbfUmtqunRFrzVpiGnDcZMDjrBDVYbX22kND\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"oracle/UBI4ALLOracle.sol": {
				"IUBI4ALLOracle": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PriceUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "heartbeat",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxDeviation",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minConfidence",
									"type": "uint256"
								}
							],
							"name": "addOracleSource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "getAggregatedPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "weightedPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "getSourcePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "removeOracleSource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "confidence",
									"type": "uint256"
								}
							],
							"name": "updatePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getLatestPrice()": {
								"returns": {
									"_0": "Prezzo più recente come int256"
								}
							}
						},
						"title": "IUBI4ALLOracle - Interfaccia per l'oracolo del prezzo EUR/USD",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)": "9f97acb7",
							"getAggregatedPrice(bytes32)": "1fde7f26",
							"getLatestPrice()": "8e15f473",
							"getPrice(bytes32)": "31d98b3f",
							"getSourcePrice(address)": "2806bce2",
							"removeOracleSource(bytes32,address)": "01e9492f",
							"updatePrice(bytes32,uint256,uint256,uint256)": "f3f699f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"heartbeat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviation\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minConfidence\",\"type\":\"uint256\"}],\"name\":\"addOracleSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"getAggregatedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"getSourcePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"removeOracleSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"confidence\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getLatestPrice()\":{\"returns\":{\"_0\":\"Prezzo pi\\u00f9 recente come int256\"}}},\"title\":\"IUBI4ALLOracle - Interfaccia per l'oracolo del prezzo EUR/USD\",\"version\":1},\"userdoc\":{\"events\":{\"PriceUpdated(bytes32,uint256,uint256)\":{\"notice\":\"Emesso quando il prezzo viene aggiornato\"}},\"kind\":\"user\",\"methods\":{\"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Aggiunge o aggiorna un feed Chainlink\"},\"getAggregatedPrice(bytes32)\":{\"notice\":\"Ottiene il prezzo aggregato per una coppia\"},\"getLatestPrice()\":{\"notice\":\"Ottiene il prezzo pi\\u00f9 recente per la coppia EUR/USD\"},\"getPrice(bytes32)\":{\"notice\":\"Ottiene il prezzo pi\\u00f9 recente per una coppia\"},\"getSourcePrice(address)\":{\"notice\":\"Ottiene il prezzo direttamente dal feed Chainlink\"},\"removeOracleSource(bytes32,address)\":{\"notice\":\"Rimuove un feed Chainlink\"},\"updatePrice(bytes32,uint256,uint256,uint256)\":{\"notice\":\"Aggiorna manualmente il prezzo per una coppia\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle/UBI4ALLOracle.sol\":\"IUBI4ALLOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x15490c1ac7fb488198fce8a04211f15277ee816915367bc906110cbb57863bbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3273e1e51c1bfe12b50778dd98d3d322ca315cd8e1185593694a0ac828b820\",\"dweb:/ipfs/QmTyAWneXaURy9Ls4dovFWLV9yxzMkELmLsgLTWeubz8ZA\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xf4d28329285c89e85daf450fbe612ec5ceb19842ae0be976ab1569897940be90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a021f64d3d58a64fd3045afc6b192c82bca29d95cd594a3c0ed93d1c69ecc98\",\"dweb:/ipfs/QmegaH5RM4Sboa22unJm3FdMVTd3K9UUf8ogbvBwx1K8XJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x880e8b3325f624a5c4dfb9a754ed83bf0be1476d02c5063b215f3c3b9fdec331\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e14b50f3ca0b35d014b166235d94dfa8c9067bb3f5d65efdfb2193355a455\",\"dweb:/ipfs/QmNrM5LEwfCi7cxMovccBpFeL8T9MWfqA15dW9SobPDPfo\"]},\"oracle/UBI4ALLOracle.sol\":{\"keccak256\":\"0x335403fa9c74cda036c3e823ffdd382fab3f83600367a7f42c7e12dae4a9819e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d11cc984b2676f7ac61bc567701427cfe34ab198df4d3ca197a726990c40088\",\"dweb:/ipfs/QmSY2DTcsnZb2zfZ6gpfwTYF4GKER58NReCx5785xf5EGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"PriceUpdated(bytes32,uint256,uint256)": {
								"notice": "Emesso quando il prezzo viene aggiornato"
							}
						},
						"kind": "user",
						"methods": {
							"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)": {
								"notice": "Aggiunge o aggiorna un feed Chainlink"
							},
							"getAggregatedPrice(bytes32)": {
								"notice": "Ottiene il prezzo aggregato per una coppia"
							},
							"getLatestPrice()": {
								"notice": "Ottiene il prezzo più recente per la coppia EUR/USD"
							},
							"getPrice(bytes32)": {
								"notice": "Ottiene il prezzo più recente per una coppia"
							},
							"getSourcePrice(address)": {
								"notice": "Ottiene il prezzo direttamente dal feed Chainlink"
							},
							"removeOracleSource(bytes32,address)": {
								"notice": "Rimuove un feed Chainlink"
							},
							"updatePrice(bytes32,uint256,uint256,uint256)": {
								"notice": "Aggiorna manualmente il prezzo per una coppia"
							}
						},
						"version": 1
					}
				},
				"UBI4ALLOracle": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_priceFeed",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "EmergencyPause",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldFeed",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newFeed",
									"type": "address"
								}
							],
							"name": "PriceFeedUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CHAINLINK_STALENESS_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EUR_USD_PAIR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRICE_VALIDITY_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "addOracleSource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "getAggregatedPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "weightedPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "getSourcePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "latestPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceFeed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "source",
									"type": "address"
								}
							],
							"name": "removeOracleSource",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "pair",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "updatePrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"getLatestPrice()": {
								"returns": {
									"_0": "Prezzo più recente come int256"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "UBI4ALLOracle - Oracolo per il prezzo EUR/USD",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"oracle/UBI4ALLOracle.sol\":2047:6753  contract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"oracle/UBI4ALLOracle.sol\":2700:2911  constructor(address _priceFeed, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"oracle/UBI4ALLOracle.sol\":2762:2774  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1822:1844  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":997:1004  _paused */\n  0x02\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":997:1012  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"oracle/UBI4ALLOracle.sol\":2794:2818  _priceFeed != address(0) */\n  dup3\n  and\n    /* \"oracle/UBI4ALLOracle.sol\":2786:2849  require(_priceFeed != address(0), \"Invalid price feed address\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":904:906   */\n  0x20\n    /* \"oracle/UBI4ALLOracle.sol\":2786:2849  require(_priceFeed != address(0), \"Invalid price feed address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":886:907   */\n  mstore\n    /* \"#utility.yul\":943:945   */\n  0x1a\n    /* \"#utility.yul\":923:941   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":916:946   */\n  mstore\n    /* \"#utility.yul\":982:1010   */\n  0x496e76616c696420707269636520666565642061646472657373000000000000\n    /* \"#utility.yul\":962:980   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":955:1011   */\n  mstore\n    /* \"#utility.yul\":1028:1046   */\n  0x64\n  add\n    /* \"oracle/UBI4ALLOracle.sol\":2786:2849  require(_priceFeed != address(0), \"Invalid price feed address\") */\n  tag_10\n    /* \"#utility.yul\":702:1052   */\n  jump\n    /* \"oracle/UBI4ALLOracle.sol\":2786:2849  require(_priceFeed != address(0), \"Invalid price feed address\") */\ntag_17:\n  pop\n    /* \"oracle/UBI4ALLOracle.sol\":2859:2868  priceFeed */\n  0x02\n    /* \"oracle/UBI4ALLOracle.sol\":2859:2904  priceFeed = AggregatorV3Interface(_priceFeed) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  swap3\n  and\n  0x0100\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"oracle/UBI4ALLOracle.sol\":2047:6753  contract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_22:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_25:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_27:\n    /* \"#utility.yul\":375:415   */\n  tag_28\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_22\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_29\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_22\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":702:1052   */\ntag_23:\n    /* \"oracle/UBI4ALLOracle.sol\":2047:6753  contract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"oracle/UBI4ALLOracle.sol\":2047:6753  contract UBI4ALLOracle is IUBI4ALLOracle, Ownable, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa5b5fb88\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa5b5fb88\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xbc269850\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdb7c1ad1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf3f699f1\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x8456cb59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8e15f473\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f97acb7\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6301a143\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x741bef1a\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x01e9492f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1fde7f26\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2806bce2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x31d98b3f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"oracle/UBI4ALLOracle.sol\":6297:6570  function removeOracleSource(bytes32 pair, address source) external view override onlyOwner {... */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"oracle/UBI4ALLOracle.sol\":4729:4938  function getAggregatedPrice(bytes32 pair) ... */\n    tag_4:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":924:949   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":980:982   */\n      0x20\n        /* \"#utility.yul\":965:983   */\n      dup5\n      add\n        /* \"#utility.yul\":958:992   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1035:1049   */\n      iszero\n        /* \"#utility.yul\":1028:1050   */\n      iszero\n        /* \"#utility.yul\":1008:1026   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1001:1051   */\n      mstore\n        /* \"#utility.yul\":912:914   */\n      0x60\n        /* \"#utility.yul\":897:915   */\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4729:4938  function getAggregatedPrice(bytes32 pair) ... */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"oracle/UBI4ALLOracle.sol\":4944:5766  function getSourcePrice(address source) ... */\n    tag_5:\n      tag_28\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":2917:3927  function getPrice(bytes32 pair) ... */\n    tag_6:\n      tag_28\n      tag_40\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":6686:6751  function unpause() external onlyOwner {... */\n    tag_7:\n      tag_24\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1616:1700  function paused() public view virtual returns (bool) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1686:1693  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1616:1700  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":1418:1432   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1411:1433   */\n      iszero\n        /* \"#utility.yul\":1393:1434   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1381:1383   */\n      0x20\n        /* \"#utility.yul\":1366:1384   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1616:1700  function paused() public view virtual returns (bool) {... */\n      tag_32\n        /* \"#utility.yul\":1253:1440   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":2439:2497  uint256 public constant PRICE_VALIDITY_PERIOD = 15 minutes */\n    tag_9:\n      tag_49\n        /* \"oracle/UBI4ALLOracle.sol\":2487:2497  15 minutes */\n      0x0384\n        /* \"oracle/UBI4ALLOracle.sol\":2439:2497  uint256 public constant PRICE_VALIDITY_PERIOD = 15 minutes */\n      dup2\n      jump\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":1591:1616   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1579:1581   */\n      0x20\n        /* \"#utility.yul\":1564:1582   */\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":2439:2497  uint256 public constant PRICE_VALIDITY_PERIOD = 15 minutes */\n      tag_32\n        /* \"#utility.yul\":1445:1622   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_24\n      tag_54\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":2277:2315  AggregatorV3Interface public priceFeed */\n    tag_11:\n      sload(0x02)\n      tag_55\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_55:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1820:1852   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1802:1853   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1790:1792   */\n      0x20\n        /* \"#utility.yul\":1775:1793   */\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":2277:2315  AggregatorV3Interface public priceFeed */\n      tag_32\n        /* \"#utility.yul\":1627:1859   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":6576:6680  function pause() external onlyOwner {... */\n    tag_12:\n      tag_24\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_55)\n        /* \"oracle/UBI4ALLOracle.sol\":4491:4723  function getLatestPrice() external view override returns (int256) {... */\n    tag_14:\n      tag_49\n      tag_66\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":5772:6291  function addOracleSource(... */\n    tag_15:\n      tag_24\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":2321:2378  bytes32 public constant EUR_USD_PAIR = bytes32(\"EUR/USD\") */\n    tag_16:\n      tag_49\n      shl(0xca, 0x1155548bd554d1)\n      dup2\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":2503:2566  uint256 public constant CHAINLINK_STALENESS_THRESHOLD = 1 hours */\n    tag_17:\n      tag_49\n        /* \"oracle/UBI4ALLOracle.sol\":2559:2566  1 hours */\n      0x0e10\n        /* \"oracle/UBI4ALLOracle.sol\":2503:2566  uint256 public constant CHAINLINK_STALENESS_THRESHOLD = 1 hours */\n      dup2\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":2384:2433  mapping(bytes32 => PriceData) public latestPrices */\n    tag_18:\n      tag_28\n      tag_81\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_81:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      0xff\n      and\n      dup4\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_24\n      tag_85\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":3933:4485  function updatePrice(... */\n    tag_20:\n      tag_24\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":6297:6570  function removeOracleSource(bytes32 pair, address source) external view override onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_92:\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":6406:6410  pair */\n      dup3\n        /* \"oracle/UBI4ALLOracle.sol\":6406:6426  pair == EUR_USD_PAIR */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":6398:6443  require(pair == EUR_USD_PAIR, \"Invalid pair\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"oracle/UBI4ALLOracle.sol\":6479:6488  priceFeed */\n      sload(0x02)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":6461:6489  source == address(priceFeed) */\n      dup3\n      dup2\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":6479:6488  priceFeed */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":6461:6489  source == address(priceFeed) */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":6453:6508  require(source == address(priceFeed), \"Invalid source\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4357:4359   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":6453:6508  require(source == address(priceFeed), \"Invalid source\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4339:4360   */\n      mstore\n        /* \"#utility.yul\":4396:4398   */\n      0x0e\n        /* \"#utility.yul\":4376:4394   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4369:4399   */\n      mstore\n      shl(0x90, 0x496e76616c696420736f75726365)\n        /* \"#utility.yul\":4415:4433   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4408:4452   */\n      mstore\n        /* \"#utility.yul\":4469:4487   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":6453:6508  require(source == address(priceFeed), \"Invalid source\") */\n      tag_96\n        /* \"#utility.yul\":4155:4493   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":6453:6508  require(source == address(priceFeed), \"Invalid source\") */\n    tag_98:\n        /* \"oracle/UBI4ALLOracle.sol\":6297:6570  function removeOracleSource(bytes32 pair, address source) external view override onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"oracle/UBI4ALLOracle.sol\":4729:4938  function getAggregatedPrice(bytes32 pair) ... */\n    tag_31:\n        /* \"oracle/UBI4ALLOracle.sol\":4839:4860  uint256 weightedPrice */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4862:4879  uint256 timestamp */\n      dup1\n        /* \"oracle/UBI4ALLOracle.sol\":4881:4893  bool isValid */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4917:4931  getPrice(pair) */\n      tag_102\n        /* \"oracle/UBI4ALLOracle.sol\":4926:4930  pair */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":4917:4925  getPrice */\n      tag_41\n        /* \"oracle/UBI4ALLOracle.sol\":4917:4931  getPrice(pair) */\n      jump\t// in\n    tag_102:\n        /* \"oracle/UBI4ALLOracle.sol\":4910:4931  return getPrice(pair) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":4729:4938  function getAggregatedPrice(bytes32 pair) ... */\n    tag_101:\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"oracle/UBI4ALLOracle.sol\":4944:5766  function getSourcePrice(address source) ... */\n    tag_37:\n        /* \"oracle/UBI4ALLOracle.sol\":5141:5150  priceFeed */\n      sload(0x02)\n        /* \"oracle/UBI4ALLOracle.sol\":5052:5065  uint256 price */\n      0x00\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":5123:5151  source == address(priceFeed) */\n      dup6\n      dup2\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":5141:5150  priceFeed */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":5123:5151  source == address(priceFeed) */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":5115:5170  require(source == address(priceFeed), \"Invalid source\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4357:4359   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":5115:5170  require(source == address(priceFeed), \"Invalid source\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4339:4360   */\n      mstore\n        /* \"#utility.yul\":4396:4398   */\n      0x0e\n        /* \"#utility.yul\":4376:4394   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4369:4399   */\n      mstore\n      shl(0x90, 0x496e76616c696420736f75726365)\n        /* \"#utility.yul\":4415:4433   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4408:4452   */\n      mstore\n        /* \"#utility.yul\":4469:4487   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":5115:5170  require(source == address(priceFeed), \"Invalid source\") */\n      tag_96\n        /* \"#utility.yul\":4155:4493   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":5115:5170  require(source == address(priceFeed), \"Invalid source\") */\n    tag_104:\n        /* \"oracle/UBI4ALLOracle.sol\":5184:5193  priceFeed */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":5184:5209  priceFeed.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"oracle/UBI4ALLOracle.sol\":5184:5211  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_106\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_107\n      swap2\n      dup2\n      add\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      0x01\n    tag_106:\n        /* \"oracle/UBI4ALLOracle.sol\":5180:5760  try priceFeed.latestRoundData() returns (... */\n      tag_109\n      jumpi\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":5737:5738  0 */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n      dup1\n        /* \"oracle/UBI4ALLOracle.sol\":5729:5749  return (0, 0, false) */\n      jump(tag_101)\n        /* \"oracle/UBI4ALLOracle.sol\":5180:5760  try priceFeed.latestRoundData() returns (... */\n    tag_109:\n        /* \"oracle/UBI4ALLOracle.sol\":5378:5379  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":5368:5374  answer */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":5368:5379  answer <= 0 */\n      sgt\n        /* \"oracle/UBI4ALLOracle.sol\":5364:5415  if (answer <= 0) revert(\"Chainlink: Invalid price\") */\n      tag_114\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":5381:5415  revert(\"Chainlink: Invalid price\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5460:5462   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":5381:5415  revert(\"Chainlink: Invalid price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5442:5463   */\n      mstore\n        /* \"#utility.yul\":5499:5501   */\n      0x18\n        /* \"#utility.yul\":5479:5497   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5472:5502   */\n      mstore\n      shl(0x40, 0x436861696e6c696e6b3a20496e76616c6964207072696365)\n        /* \"#utility.yul\":5518:5536   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5511:5565   */\n      mstore\n        /* \"#utility.yul\":5582:5600   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":5381:5415  revert(\"Chainlink: Invalid price\") */\n      tag_96\n        /* \"#utility.yul\":5258:5606   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":5364:5415  if (answer <= 0) revert(\"Chainlink: Invalid price\") */\n    tag_114:\n        /* \"oracle/UBI4ALLOracle.sol\":5433:5442  updatedAt */\n      dup2\n        /* \"oracle/UBI4ALLOracle.sol\":5446:5447  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":5433:5447  updatedAt == 0 */\n      sub\n        /* \"oracle/UBI4ALLOracle.sol\":5429:5488  if (updatedAt == 0) revert(\"Chainlink: Round not complete\") */\n      tag_117\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":5449:5488  revert(\"Chainlink: Round not complete\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5813:5815   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":5449:5488  revert(\"Chainlink: Round not complete\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5795:5816   */\n      mstore\n        /* \"#utility.yul\":5852:5854   */\n      0x1d\n        /* \"#utility.yul\":5832:5850   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5825:5855   */\n      mstore\n        /* \"#utility.yul\":5891:5922   */\n      0x436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465000000\n        /* \"#utility.yul\":5871:5889   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5864:5923   */\n      mstore\n        /* \"#utility.yul\":5940:5958   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":5449:5488  revert(\"Chainlink: Round not complete\") */\n      tag_96\n        /* \"#utility.yul\":5611:5964   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":5429:5488  if (updatedAt == 0) revert(\"Chainlink: Round not complete\") */\n    tag_117:\n        /* \"oracle/UBI4ALLOracle.sol\":2559:2566  1 hours */\n      0x0e10\n        /* \"oracle/UBI4ALLOracle.sol\":5506:5533  block.timestamp - updatedAt */\n      tag_120\n        /* \"oracle/UBI4ALLOracle.sol\":5524:5533  updatedAt */\n      dup4\n        /* \"oracle/UBI4ALLOracle.sol\":5506:5521  block.timestamp */\n      timestamp\n        /* \"oracle/UBI4ALLOracle.sol\":5506:5533  block.timestamp - updatedAt */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"oracle/UBI4ALLOracle.sol\":5506:5565  block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD */\n      gt\n        /* \"oracle/UBI4ALLOracle.sol\":5502:5632  if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":5585:5617  revert(\"Chainlink: Stale price\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6401:6403   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":5585:5617  revert(\"Chainlink: Stale price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6383:6404   */\n      mstore\n        /* \"#utility.yul\":6440:6442   */\n      0x16\n        /* \"#utility.yul\":6420:6438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6413:6443   */\n      mstore\n      shl(0x50, 0x436861696e6c696e6b3a205374616c65207072696365)\n        /* \"#utility.yul\":6459:6477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6452:6504   */\n      mstore\n        /* \"#utility.yul\":6521:6539   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":5585:5617  revert(\"Chainlink: Stale price\") */\n      tag_96\n        /* \"#utility.yul\":6199:6545   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":5502:5632  if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {... */\n    tag_122:\n        /* \"oracle/UBI4ALLOracle.sol\":5653:5679  SafeCast.toUint256(answer) */\n      tag_125\n        /* \"oracle/UBI4ALLOracle.sol\":5672:5678  answer */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":5653:5671  SafeCast.toUint256 */\n      tag_126\n        /* \"oracle/UBI4ALLOracle.sol\":5653:5679  SafeCast.toUint256(answer) */\n      jump\t// in\n    tag_125:\n        /* \"oracle/UBI4ALLOracle.sol\":5681:5690  updatedAt */\n      dup3\n        /* \"oracle/UBI4ALLOracle.sol\":5692:5696  true */\n      0x01\n        /* \"oracle/UBI4ALLOracle.sol\":5645:5697  return (SafeCast.toUint256(answer), updatedAt, true) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_101)\n        /* \"oracle/UBI4ALLOracle.sol\":2917:3927  function getPrice(bytes32 pair) ... */\n    tag_41:\n        /* \"oracle/UBI4ALLOracle.sol\":3015:3028  uint256 price */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":3030:3047  uint256 timestamp */\n      dup1\n        /* \"oracle/UBI4ALLOracle.sol\":3049:3061  bool isValid */\n      0x00\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":3086:3090  pair */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":3086:3106  pair == EUR_USD_PAIR */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":3078:3123  require(pair == EUR_USD_PAIR, \"Invalid pair\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_128:\n        /* \"oracle/UBI4ALLOracle.sol\":3133:3154  PriceData memory data */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":3157:3175  latestPrices[pair] */\n      dup5\n      dup2\n      mstore\n        /* \"oracle/UBI4ALLOracle.sol\":3157:3169  latestPrices */\n      0x03\n        /* \"oracle/UBI4ALLOracle.sol\":3157:3175  latestPrices[pair] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"oracle/UBI4ALLOracle.sol\":3133:3175  PriceData memory data = latestPrices[pair] */\n      dup3\n      mload\n      0x60\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      add\n      sload\n      0xff\n      and\n      iszero\n      dup1\n      iszero\n      swap3\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n      swap1\n      swap2\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":3190:3263  data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD */\n      tag_130\n      jumpi\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":2487:2497  15 minutes */\n      0x0384\n        /* \"oracle/UBI4ALLOracle.sol\":3224:3228  data */\n      dup2\n        /* \"oracle/UBI4ALLOracle.sol\":3224:3238  data.timestamp */\n      0x20\n      add\n      mload\n        /* \"oracle/UBI4ALLOracle.sol\":3206:3221  block.timestamp */\n      timestamp\n        /* \"oracle/UBI4ALLOracle.sol\":3206:3238  block.timestamp - data.timestamp */\n      tag_131\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_131:\n        /* \"oracle/UBI4ALLOracle.sol\":3206:3263  block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD */\n      gt\n      iszero\n        /* \"oracle/UBI4ALLOracle.sol\":3190:3263  data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD */\n    tag_130:\n        /* \"oracle/UBI4ALLOracle.sol\":3186:3331  if (data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":3287:3297  data.price */\n      dup1\n      mload\n        /* \"oracle/UBI4ALLOracle.sol\":3299:3313  data.timestamp */\n      0x20\n      swap1\n      swap2\n      add\n      mload\n        /* \"oracle/UBI4ALLOracle.sol\":3287:3297  data.price */\n      swap1\n      swap4\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":3299:3313  data.timestamp */\n      swap2\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":3315:3319  true */\n      0x01\n      swap1\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":3279:3320  return (data.price, data.timestamp, true) */\n      jump(tag_101)\n        /* \"oracle/UBI4ALLOracle.sol\":3186:3331  if (data.isValid && block.timestamp - data.timestamp <= PRICE_VALIDITY_PERIOD) {... */\n    tag_132:\n        /* \"oracle/UBI4ALLOracle.sol\":3345:3354  priceFeed */\n      0x02\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":3345:3370  priceFeed.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"oracle/UBI4ALLOracle.sol\":3345:3372  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_133\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_134\n      swap2\n      dup2\n      add\n      swap1\n      tag_108\n      jump\t// in\n    tag_134:\n      0x01\n    tag_133:\n        /* \"oracle/UBI4ALLOracle.sol\":3341:3921  try priceFeed.latestRoundData() returns (... */\n      tag_135\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":3898:3899  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":3901:3902  0 */\n      dup1\n        /* \"oracle/UBI4ALLOracle.sol\":3904:3909  false */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":3890:3910  return (0, 0, false) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_101)\n        /* \"oracle/UBI4ALLOracle.sol\":3341:3921  try priceFeed.latestRoundData() returns (... */\n    tag_135:\n        /* \"oracle/UBI4ALLOracle.sol\":3539:3540  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":3529:3535  answer */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":3529:3540  answer <= 0 */\n      sgt\n        /* \"oracle/UBI4ALLOracle.sol\":3525:3576  if (answer <= 0) revert(\"Chainlink: Invalid price\") */\n      tag_140\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":3542:3576  revert(\"Chainlink: Invalid price\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5460:5462   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":3542:3576  revert(\"Chainlink: Invalid price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5442:5463   */\n      mstore\n        /* \"#utility.yul\":5499:5501   */\n      0x18\n        /* \"#utility.yul\":5479:5497   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5472:5502   */\n      mstore\n      shl(0x40, 0x436861696e6c696e6b3a20496e76616c6964207072696365)\n        /* \"#utility.yul\":5518:5536   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5511:5565   */\n      mstore\n        /* \"#utility.yul\":5582:5600   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":3542:3576  revert(\"Chainlink: Invalid price\") */\n      tag_96\n        /* \"#utility.yul\":5258:5606   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":3525:3576  if (answer <= 0) revert(\"Chainlink: Invalid price\") */\n    tag_140:\n        /* \"oracle/UBI4ALLOracle.sol\":3594:3603  updatedAt */\n      dup2\n        /* \"oracle/UBI4ALLOracle.sol\":3607:3608  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":3594:3608  updatedAt == 0 */\n      sub\n        /* \"oracle/UBI4ALLOracle.sol\":3590:3649  if (updatedAt == 0) revert(\"Chainlink: Round not complete\") */\n      tag_142\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":3610:3649  revert(\"Chainlink: Round not complete\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5813:5815   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":3610:3649  revert(\"Chainlink: Round not complete\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5795:5816   */\n      mstore\n        /* \"#utility.yul\":5852:5854   */\n      0x1d\n        /* \"#utility.yul\":5832:5850   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5825:5855   */\n      mstore\n        /* \"#utility.yul\":5891:5922   */\n      0x436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465000000\n        /* \"#utility.yul\":5871:5889   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5864:5923   */\n      mstore\n        /* \"#utility.yul\":5940:5958   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":3610:3649  revert(\"Chainlink: Round not complete\") */\n      tag_96\n        /* \"#utility.yul\":5611:5964   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":3590:3649  if (updatedAt == 0) revert(\"Chainlink: Round not complete\") */\n    tag_142:\n        /* \"oracle/UBI4ALLOracle.sol\":2559:2566  1 hours */\n      0x0e10\n        /* \"oracle/UBI4ALLOracle.sol\":3667:3694  block.timestamp - updatedAt */\n      tag_144\n        /* \"oracle/UBI4ALLOracle.sol\":3685:3694  updatedAt */\n      dup4\n        /* \"oracle/UBI4ALLOracle.sol\":3667:3682  block.timestamp */\n      timestamp\n        /* \"oracle/UBI4ALLOracle.sol\":3667:3694  block.timestamp - updatedAt */\n      tag_121\n      jump\t// in\n    tag_144:\n        /* \"oracle/UBI4ALLOracle.sol\":3667:3726  block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD */\n      gt\n        /* \"oracle/UBI4ALLOracle.sol\":3663:3793  if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {... */\n      iszero\n      tag_145\n      jumpi\n        /* \"oracle/UBI4ALLOracle.sol\":3746:3778  revert(\"Chainlink: Stale price\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6401:6403   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":3746:3778  revert(\"Chainlink: Stale price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6383:6404   */\n      mstore\n        /* \"#utility.yul\":6440:6442   */\n      0x16\n        /* \"#utility.yul\":6420:6438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6413:6443   */\n      mstore\n      shl(0x50, 0x436861696e6c696e6b3a205374616c65207072696365)\n        /* \"#utility.yul\":6459:6477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6452:6504   */\n      mstore\n        /* \"#utility.yul\":6521:6539   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":3746:3778  revert(\"Chainlink: Stale price\") */\n      tag_96\n        /* \"#utility.yul\":6199:6545   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":3663:3793  if (block.timestamp - updatedAt > CHAINLINK_STALENESS_THRESHOLD) {... */\n    tag_145:\n        /* \"oracle/UBI4ALLOracle.sol\":3814:3840  SafeCast.toUint256(answer) */\n      tag_147\n        /* \"oracle/UBI4ALLOracle.sol\":3833:3839  answer */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":3814:3832  SafeCast.toUint256 */\n      tag_126\n        /* \"oracle/UBI4ALLOracle.sol\":3814:3840  SafeCast.toUint256(answer) */\n      jump\t// in\n    tag_147:\n        /* \"oracle/UBI4ALLOracle.sol\":3842:3851  updatedAt */\n      dup3\n        /* \"oracle/UBI4ALLOracle.sol\":3853:3857  true */\n      0x01\n        /* \"oracle/UBI4ALLOracle.sol\":3806:3858  return (SafeCast.toUint256(answer), updatedAt, true) */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_101)\n        /* \"oracle/UBI4ALLOracle.sol\":6686:6751  function unpause() external onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"oracle/UBI4ALLOracle.sol\":6734:6744  _unpause() */\n      tag_151\n        /* \"oracle/UBI4ALLOracle.sol\":6734:6742  _unpause */\n      tag_152\n        /* \"oracle/UBI4ALLOracle.sol\":6734:6744  _unpause() */\n      jump\t// in\n    tag_151:\n        /* \"oracle/UBI4ALLOracle.sol\":6686:6751  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"oracle/UBI4ALLOracle.sol\":6576:6680  function pause() external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"oracle/UBI4ALLOracle.sol\":6622:6630  _pause() */\n      tag_162\n        /* \"oracle/UBI4ALLOracle.sol\":6622:6628  _pause */\n      tag_163\n        /* \"oracle/UBI4ALLOracle.sol\":6622:6630  _pause() */\n      jump\t// in\n    tag_162:\n        /* \"oracle/UBI4ALLOracle.sol\":6645:6673  EmergencyPause(EUR_USD_PAIR) */\n      mload(0x40)\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":2360:2378  bytes32(\"EUR/USD\") */\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":6645:6673  EmergencyPause(EUR_USD_PAIR) */\n      0xd373a1ac37410a4da6def2d7f3f2e704aca3e95e2e251322a031eedda7eb686c\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"oracle/UBI4ALLOracle.sol\":6576:6680  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"oracle/UBI4ALLOracle.sol\":4491:4723  function getLatestPrice() external view override returns (int256) {... */\n    tag_66:\n        /* \"oracle/UBI4ALLOracle.sol\":4549:4555  int256 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4568:4581  uint256 price */\n      dup1\n        /* \"oracle/UBI4ALLOracle.sol\":4585:4597  bool isValid */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4601:4623  getPrice(EUR_USD_PAIR) */\n      tag_166\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":4601:4609  getPrice */\n      tag_41\n        /* \"oracle/UBI4ALLOracle.sol\":4601:4623  getPrice(EUR_USD_PAIR) */\n      jump\t// in\n    tag_166:\n        /* \"oracle/UBI4ALLOracle.sol\":4567:4623  (uint256 price, , bool isValid) = getPrice(EUR_USD_PAIR) */\n      swap3\n      pop\n      pop\n      swap2\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":4641:4648  isValid */\n      dup1\n        /* \"oracle/UBI4ALLOracle.sol\":4633:4675  require(isValid, \"Invalid or stale price\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6752:6754   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":4633:4675  require(isValid, \"Invalid or stale price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6734:6755   */\n      mstore\n        /* \"#utility.yul\":6791:6793   */\n      0x16\n        /* \"#utility.yul\":6771:6789   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6764:6794   */\n      mstore\n      shl(0x50, 0x496e76616c6964206f72207374616c65207072696365)\n        /* \"#utility.yul\":6810:6828   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6803:6855   */\n      mstore\n        /* \"#utility.yul\":6872:6890   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4633:4675  require(isValid, \"Invalid or stale price\") */\n      tag_96\n        /* \"#utility.yul\":6550:6896   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":4633:4675  require(isValid, \"Invalid or stale price\") */\n    tag_167:\n        /* \"oracle/UBI4ALLOracle.sol\":4692:4716  SafeCast.toInt256(price) */\n      tag_170\n        /* \"oracle/UBI4ALLOracle.sol\":4710:4715  price */\n      dup3\n        /* \"oracle/UBI4ALLOracle.sol\":4692:4709  SafeCast.toInt256 */\n      tag_171\n        /* \"oracle/UBI4ALLOracle.sol\":4692:4716  SafeCast.toInt256(price) */\n      jump\t// in\n    tag_170:\n        /* \"oracle/UBI4ALLOracle.sol\":4685:4716  return SafeCast.toInt256(price) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"oracle/UBI4ALLOracle.sol\":4491:4723  function getLatestPrice() external view override returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"oracle/UBI4ALLOracle.sol\":5772:6291  function addOracleSource(... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_173\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_176\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_175:\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":6036:6040  pair */\n      dup7\n        /* \"oracle/UBI4ALLOracle.sol\":6036:6056  pair == EUR_USD_PAIR */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":6028:6073  require(pair == EUR_USD_PAIR, \"Invalid pair\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":6091:6111  source != address(0) */\n      dup6\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":6083:6138  require(source != address(0), \"Invalid source address\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7103:7105   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":6083:6138  require(source != address(0), \"Invalid source address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7085:7106   */\n      mstore\n        /* \"#utility.yul\":7142:7144   */\n      0x16\n        /* \"#utility.yul\":7122:7140   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7115:7145   */\n      mstore\n      shl(0x50, 0x496e76616c696420736f757263652061646472657373)\n        /* \"#utility.yul\":7161:7179   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7154:7206   */\n      mstore\n        /* \"#utility.yul\":7223:7241   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":6083:6138  require(source != address(0), \"Invalid source address\") */\n      tag_96\n        /* \"#utility.yul\":6901:7247   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":6083:6138  require(source != address(0), \"Invalid source address\") */\n    tag_180:\n        /* \"oracle/UBI4ALLOracle.sol\":6175:6184  priceFeed */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"oracle/UBI4ALLOracle.sol\":6195:6236  priceFeed = AggregatorV3Interface(source) */\n      dup8\n      dup2\n      and\n        /* \"oracle/UBI4ALLOracle.sol\":6175:6184  priceFeed */\n      0x0100\n        /* \"oracle/UBI4ALLOracle.sol\":6195:6236  priceFeed = AggregatorV3Interface(source) */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"oracle/UBI4ALLOracle.sol\":6251:6284  PriceFeedUpdated(oldFeed, source) */\n      mload(0x40)\n        /* \"oracle/UBI4ALLOracle.sol\":6175:6184  priceFeed */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":6251:6284  PriceFeedUpdated(oldFeed, source) */\n      0xa8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d321753536\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":6149:6164  address oldFeed */\n      0x00\n      swap1\n        /* \"oracle/UBI4ALLOracle.sol\":6251:6284  PriceFeedUpdated(oldFeed, source) */\n      log3\n        /* \"oracle/UBI4ALLOracle.sol\":6018:6291  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2832  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2630:2839  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n    tag_183:\n        /* \"oracle/UBI4ALLOracle.sol\":5772:6291  function addOracleSource(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1802:1853   */\n      mstore\n        /* \"#utility.yul\":1775:1793   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_96\n        /* \"#utility.yul\":1627:1859   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"oracle/UBI4ALLOracle.sol\":3933:4485  function updatePrice(... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_194\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_195\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_197\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_176\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_197:\n      shl(0xca, 0x1155548bd554d1)\n        /* \"oracle/UBI4ALLOracle.sol\":4137:4141  pair */\n      dup5\n        /* \"oracle/UBI4ALLOracle.sol\":4137:4157  pair == EUR_USD_PAIR */\n      eq\n        /* \"oracle/UBI4ALLOracle.sol\":4129:4174  require(pair == EUR_USD_PAIR, \"Invalid pair\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_199:\n        /* \"oracle/UBI4ALLOracle.sol\":4205:4220  block.timestamp */\n      timestamp\n        /* \"oracle/UBI4ALLOracle.sol\":4192:4201  timestamp */\n      dup3\n        /* \"oracle/UBI4ALLOracle.sol\":4192:4220  timestamp <= block.timestamp */\n      gt\n      iszero\n        /* \"oracle/UBI4ALLOracle.sol\":4184:4241  require(timestamp <= block.timestamp, \"Future timestamp\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7454:7456   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":4184:4241  require(timestamp <= block.timestamp, \"Future timestamp\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7436:7457   */\n      mstore\n        /* \"#utility.yul\":7493:7495   */\n      0x10\n        /* \"#utility.yul\":7473:7491   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7466:7496   */\n      mstore\n      shl(0x84, 0x04675747572652074696d657374616d7)\n        /* \"#utility.yul\":7512:7530   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7505:7551   */\n      mstore\n        /* \"#utility.yul\":7568:7586   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4184:4241  require(timestamp <= block.timestamp, \"Future timestamp\") */\n      tag_96\n        /* \"#utility.yul\":7252:7592   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":4184:4241  require(timestamp <= block.timestamp, \"Future timestamp\") */\n    tag_201:\n        /* \"oracle/UBI4ALLOracle.sol\":4267:4268  0 */\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4259:4264  price */\n      dup4\n        /* \"oracle/UBI4ALLOracle.sol\":4259:4268  price > 0 */\n      gt\n        /* \"oracle/UBI4ALLOracle.sol\":4251:4286  require(price > 0, \"Invalid price\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7799:7801   */\n      0x20\n        /* \"oracle/UBI4ALLOracle.sol\":4251:4286  require(price > 0, \"Invalid price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7781:7802   */\n      mstore\n        /* \"#utility.yul\":7838:7840   */\n      0x0d\n        /* \"#utility.yul\":7818:7836   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7811:7841   */\n      mstore\n      shl(0x98, 0x496e76616c6964207072696365)\n        /* \"#utility.yul\":7857:7875   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7850:7893   */\n      mstore\n        /* \"#utility.yul\":7910:7928   */\n      0x64\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4251:4286  require(price > 0, \"Invalid price\") */\n      tag_96\n        /* \"#utility.yul\":7597:7934   */\n      jump\n        /* \"oracle/UBI4ALLOracle.sol\":4251:4286  require(price > 0, \"Invalid price\") */\n    tag_204:\n        /* \"oracle/UBI4ALLOracle.sol\":4318:4426  PriceData({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      dup2\n      mstore\n        /* \"oracle/UBI4ALLOracle.sol\":4411:4415  true */\n      0x01\n        /* \"oracle/UBI4ALLOracle.sol\":4318:4426  PriceData({... */\n      dup4\n      dup6\n      add\n      dup2\n      dup2\n      mstore\n      0x00\n        /* \"oracle/UBI4ALLOracle.sol\":4297:4315  latestPrices[pair] */\n      dup11\n      dup2\n      mstore\n        /* \"oracle/UBI4ALLOracle.sol\":4297:4309  latestPrices */\n      0x03\n        /* \"oracle/UBI4ALLOracle.sol\":4297:4315  latestPrices[pair] */\n      dup6\n      mstore\n      dup7\n      swap1\n      keccak256\n        /* \"oracle/UBI4ALLOracle.sol\":4297:4426  latestPrices[pair] = PriceData({... */\n      swap5\n      mload\n      dup6\n      sstore\n      swap2\n      mload\n      swap1\n      dup5\n      add\n      sstore\n      mload\n      0x02\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"oracle/UBI4ALLOracle.sol\":4442:4478  PriceUpdated(pair, price, timestamp) */\n      dup2\n      mload\n        /* \"#utility.yul\":8113:8138   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":8154:8172   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":8147:8181   */\n      dup5\n      swap1\n      mstore\n        /* \"oracle/UBI4ALLOracle.sol\":4297:4315  latestPrices[pair] */\n      dup6\n      swap2\n        /* \"oracle/UBI4ALLOracle.sol\":4442:4478  PriceUpdated(pair, price, timestamp) */\n      0xbcd10d64fce9dcf9568572ed92e371df336d32649e8960a045c9548794a44b26\n      swap2\n        /* \"#utility.yul\":8086:8104   */\n      add\n        /* \"oracle/UBI4ALLOracle.sol\":4442:4478  PriceUpdated(pair, price, timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n      tag_209\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2832  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2630:2839  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n    tag_209:\n        /* \"oracle/UBI4ALLOracle.sol\":3933:4485  function updatePrice(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1802:1853   */\n      mstore\n        /* \"#utility.yul\":1775:1793   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_96\n        /* \"#utility.yul\":1627:1859   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17171:17364  function toUint256(int256 value) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17227:17234  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17258:17259  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17250:17255  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17250:17259  value < 0 */\n      slt\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17246:17327  if (value < 0) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17282:17316  SafeCastOverflowedIntToUint(value) */\n      mload(0x40)\n      shl(0xe1, 0x54672219)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1591:1616   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":1564:1582   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17282:17316  SafeCastOverflowedIntToUint(value) */\n      tag_96\n        /* \"#utility.yul\":1445:1622   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17246:17327  if (value < 0) {... */\n    tag_218:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17351:17356  value */\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":17171:17364  function toUint256(int256 value) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2434:2551  function _unpause() internal virtual whenPaused {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1487:1503  _requirePaused() */\n      tag_221\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1487:1501  _requirePaused */\n      tag_222\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1487:1503  _requirePaused() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2492:2499  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2492:2507  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2522:2544  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2531:2543  _msgSender() */\n    tag_224:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2522:2544  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1820:1852   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1802:1853   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1790:1792   */\n      0x20\n        /* \"#utility.yul\":1775:1793   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2522:2544  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2434:2551  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2187:2302  function _pause() internal virtual whenNotPaused {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_228\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_195\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2246:2253  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2246:2260  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2256:2260  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2246:2260  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2275:2295  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2282:2294  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34380:34694  function toInt256(uint256 value) internal pure returns (int256) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34436:34442  int256 */\n      0x00\n      sub(shl(0xff, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34557:34562  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34557:34590  value > uint256(type(int256).max) */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34553:34658  if (value > uint256(type(int256).max)) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34613:34647  SafeCastOverflowedUintToInt(value) */\n      mload(0x40)\n      shl(0xe1, 0x123baf03)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1591:1616   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":1564:1582   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34613:34647  SafeCastOverflowedUintToInt(value) */\n      tag_96\n        /* \"#utility.yul\":1445:1622   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2337:2624  function _nonReentrantBefore() private {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1760:1761  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2469:2476  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2469:2488  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8394:8396   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8376:8397   */\n      mstore\n        /* \"#utility.yul\":8433:8435   */\n      0x1f\n        /* \"#utility.yul\":8413:8431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8406:8436   */\n      mstore\n        /* \"#utility.yul\":8472:8505   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8452:8470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8445:8506   */\n      mstore\n        /* \"#utility.yul\":8523:8541   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_96\n        /* \"#utility.yul\":8192:8547   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_236:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1760:1761  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2599:2606  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2599:2617  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2337:2624  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1768:1874  function _requireNotPaused() internal view virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1686:1693  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1846  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1829:1867  require(!paused(), \"Pausable: paused\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8754:8756   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1829:1867  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8736:8757   */\n      mstore\n        /* \"#utility.yul\":8793:8795   */\n      0x10\n        /* \"#utility.yul\":8773:8791   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8766:8796   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":8812:8830   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8805:8851   */\n      mstore\n        /* \"#utility.yul\":8868:8886   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1829:1867  require(!paused(), \"Pausable: paused\") */\n      tag_96\n        /* \"#utility.yul\":8552:8892   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1946:2052  function _requirePaused() internal view virtual {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1686:1693  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2004:2045  require(paused(), \"Pausable: not paused\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9099:9101   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2004:2045  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9081:9102   */\n      mstore\n        /* \"#utility.yul\":9138:9140   */\n      0x14\n        /* \"#utility.yul\":9118:9136   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9111:9141   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9157:9175   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9150:9200   */\n      mstore\n        /* \"#utility.yul\":9217:9235   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2004:2045  require(paused(), \"Pausable: not paused\") */\n      tag_96\n        /* \"#utility.yul\":8897:9241   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_251:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_255:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:492   */\n    tag_26:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_257:\n        /* \"#utility.yul\":382:405   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":448:486   */\n      tag_258\n        /* \"#utility.yul\":482:484   */\n      0x20\n        /* \"#utility.yul\":467:485   */\n      dup5\n      add\n        /* \"#utility.yul\":448:486   */\n      tag_251\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":438:486   */\n      swap1\n      pop\n        /* \"#utility.yul\":192:492   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:723   */\n    tag_30:\n        /* \"#utility.yul\":556:562   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":597:606   */\n      dup3\n        /* \"#utility.yul\":588:595   */\n      dup5\n        /* \"#utility.yul\":584:607   */\n      sub\n        /* \"#utility.yul\":580:612   */\n      slt\n        /* \"#utility.yul\":577:629   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":622:623   */\n      dup1\n        /* \"#utility.yul\":615:627   */\n      revert\n        /* \"#utility.yul\":577:629   */\n    tag_260:\n      pop\n        /* \"#utility.yul\":670:693   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":497:723   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1062:1248   */\n    tag_36:\n        /* \"#utility.yul\":1121:1127   */\n      0x00\n        /* \"#utility.yul\":1174:1176   */\n      0x20\n        /* \"#utility.yul\":1162:1171   */\n      dup3\n        /* \"#utility.yul\":1153:1160   */\n      dup5\n        /* \"#utility.yul\":1149:1172   */\n      sub\n        /* \"#utility.yul\":1145:1177   */\n      slt\n        /* \"#utility.yul\":1142:1194   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1190:1191   */\n      0x00\n        /* \"#utility.yul\":1187:1188   */\n      dup1\n        /* \"#utility.yul\":1180:1192   */\n      revert\n        /* \"#utility.yul\":1142:1194   */\n    tag_263:\n        /* \"#utility.yul\":1213:1242   */\n      tag_264\n        /* \"#utility.yul\":1232:1241   */\n      dup3\n        /* \"#utility.yul\":1213:1242   */\n      tag_251\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1203:1242   */\n      swap4\n        /* \"#utility.yul\":1062:1248   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2252:3035   */\n    tag_71:\n        /* \"#utility.yul\":2356:2362   */\n      0x00\n        /* \"#utility.yul\":2364:2370   */\n      dup1\n        /* \"#utility.yul\":2372:2378   */\n      0x00\n        /* \"#utility.yul\":2380:2386   */\n      dup1\n        /* \"#utility.yul\":2388:2394   */\n      0x00\n        /* \"#utility.yul\":2396:2402   */\n      dup1\n        /* \"#utility.yul\":2449:2452   */\n      0xc0\n        /* \"#utility.yul\":2437:2446   */\n      dup8\n        /* \"#utility.yul\":2428:2435   */\n      dup10\n        /* \"#utility.yul\":2424:2447   */\n      sub\n        /* \"#utility.yul\":2420:2453   */\n      slt\n        /* \"#utility.yul\":2417:2470   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":2466:2467   */\n      0x00\n        /* \"#utility.yul\":2463:2464   */\n      dup1\n        /* \"#utility.yul\":2456:2468   */\n      revert\n        /* \"#utility.yul\":2417:2470   */\n    tag_271:\n        /* \"#utility.yul\":2511:2534   */\n      dup7\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2577:2615   */\n      tag_272\n        /* \"#utility.yul\":2611:2613   */\n      0x20\n        /* \"#utility.yul\":2596:2614   */\n      dup9\n      add\n        /* \"#utility.yul\":2577:2615   */\n      tag_251\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2252:3035   */\n      swap6\n      swap9\n        /* \"#utility.yul\":2567:2615   */\n      swap6\n      swap8\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2688:2690   */\n      0x40\n        /* \"#utility.yul\":2673:2691   */\n      dup5\n      add\n        /* \"#utility.yul\":2660:2692   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2791:2793   */\n      0x60\n        /* \"#utility.yul\":2776:2794   */\n      dup2\n      add\n        /* \"#utility.yul\":2763:2795   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2894:2897   */\n      0x80\n        /* \"#utility.yul\":2879:2898   */\n      dup3\n      add\n        /* \"#utility.yul\":2866:2899   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2998:3001   */\n      0xa0\n        /* \"#utility.yul\":2983:3002   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2970:3003   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2252:3035   */\n      jump\t// out\n        /* \"#utility.yul\":3222:3809   */\n    tag_89:\n        /* \"#utility.yul\":3308:3314   */\n      0x00\n        /* \"#utility.yul\":3316:3322   */\n      dup1\n        /* \"#utility.yul\":3324:3330   */\n      0x00\n        /* \"#utility.yul\":3332:3338   */\n      dup1\n        /* \"#utility.yul\":3385:3388   */\n      0x80\n        /* \"#utility.yul\":3373:3382   */\n      dup6\n        /* \"#utility.yul\":3364:3371   */\n      dup8\n        /* \"#utility.yul\":3360:3383   */\n      sub\n        /* \"#utility.yul\":3356:3389   */\n      slt\n        /* \"#utility.yul\":3353:3406   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":3402:3403   */\n      0x00\n        /* \"#utility.yul\":3399:3400   */\n      dup1\n        /* \"#utility.yul\":3392:3404   */\n      revert\n        /* \"#utility.yul\":3353:3406   */\n    tag_275:\n      pop\n      pop\n        /* \"#utility.yul\":3447:3470   */\n      dup3\n      calldataload\n      swap5\n        /* \"#utility.yul\":3567:3569   */\n      0x20\n        /* \"#utility.yul\":3552:3570   */\n      dup5\n      add\n        /* \"#utility.yul\":3539:3571   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3670:3672   */\n      0x40\n        /* \"#utility.yul\":3655:3673   */\n      dup5\n      add\n        /* \"#utility.yul\":3642:3674   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3773:3775   */\n      0x60\n        /* \"#utility.yul\":3758:3776   */\n      add\n        /* \"#utility.yul\":3745:3777   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":3222:3809   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3814:4150   */\n    tag_97:\n        /* \"#utility.yul\":4016:4018   */\n      0x20\n        /* \"#utility.yul\":3998:4019   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4055:4057   */\n      0x0c\n        /* \"#utility.yul\":4035:4053   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4028:4058   */\n      mstore\n      shl(0xa1, 0x24b73b30b634b2103830b4b9)\n        /* \"#utility.yul\":4089:4091   */\n      0x40\n        /* \"#utility.yul\":4074:4092   */\n      dup3\n      add\n        /* \"#utility.yul\":4067:4109   */\n      mstore\n        /* \"#utility.yul\":4141:4143   */\n      0x60\n        /* \"#utility.yul\":4126:4144   */\n      add\n      swap1\n        /* \"#utility.yul\":3814:4150   */\n      jump\t// out\n        /* \"#utility.yul\":4498:4677   */\n    tag_252:\n        /* \"#utility.yul\":4576:4589   */\n      dup1\n      mload\n        /* \"#utility.yul\":4629:4651   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":4618:4652   */\n      dup2\n      and\n        /* \"#utility.yul\":4608:4653   */\n      dup2\n      eq\n        /* \"#utility.yul\":4598:4671   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":4667:4668   */\n      0x00\n        /* \"#utility.yul\":4664:4665   */\n      dup1\n        /* \"#utility.yul\":4657:4669   */\n      revert\n        /* \"#utility.yul\":4682:5253   */\n    tag_108:\n        /* \"#utility.yul\":4785:4791   */\n      0x00\n        /* \"#utility.yul\":4793:4799   */\n      dup1\n        /* \"#utility.yul\":4801:4807   */\n      0x00\n        /* \"#utility.yul\":4809:4815   */\n      dup1\n        /* \"#utility.yul\":4817:4823   */\n      0x00\n        /* \"#utility.yul\":4870:4873   */\n      0xa0\n        /* \"#utility.yul\":4858:4867   */\n      dup7\n        /* \"#utility.yul\":4849:4856   */\n      dup9\n        /* \"#utility.yul\":4845:4868   */\n      sub\n        /* \"#utility.yul\":4841:4874   */\n      slt\n        /* \"#utility.yul\":4838:4891   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":4887:4888   */\n      0x00\n        /* \"#utility.yul\":4884:4885   */\n      dup1\n        /* \"#utility.yul\":4877:4889   */\n      revert\n        /* \"#utility.yul\":4838:4891   */\n    tag_281:\n        /* \"#utility.yul\":4910:4949   */\n      tag_282\n        /* \"#utility.yul\":4939:4948   */\n      dup7\n        /* \"#utility.yul\":4910:4949   */\n      tag_252\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4989:4991   */\n      0x20\n        /* \"#utility.yul\":4974:4992   */\n      dup8\n      add\n        /* \"#utility.yul\":4968:4993   */\n      mload\n        /* \"#utility.yul\":5055:5057   */\n      0x40\n        /* \"#utility.yul\":5040:5058   */\n      dup9\n      add\n        /* \"#utility.yul\":5034:5059   */\n      mload\n        /* \"#utility.yul\":5149:5151   */\n      0x60\n        /* \"#utility.yul\":5134:5152   */\n      dup10\n      add\n        /* \"#utility.yul\":5128:5153   */\n      mload\n        /* \"#utility.yul\":4900:4949   */\n      swap3\n      swap8\n      pop\n        /* \"#utility.yul\":4968:4993   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":5034:5059   */\n      swap4\n      pop\n        /* \"#utility.yul\":5128:5153   */\n      swap2\n      pop\n        /* \"#utility.yul\":5198:5247   */\n      tag_283\n        /* \"#utility.yul\":5242:5245   */\n      0x80\n        /* \"#utility.yul\":5227:5246   */\n      dup8\n      add\n        /* \"#utility.yul\":5198:5247   */\n      tag_252\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5188:5247   */\n      swap1\n      pop\n        /* \"#utility.yul\":4682:5253   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5969:6194   */\n    tag_121:\n        /* \"#utility.yul\":6036:6045   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6057:6068   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6054:6188   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":6110:6120   */\n      0x4e487b71\n        /* \"#utility.yul\":6105:6108   */\n      0xe0\n        /* \"#utility.yul\":6101:6121   */\n      shl\n        /* \"#utility.yul\":6098:6099   */\n      0x00\n        /* \"#utility.yul\":6091:6122   */\n      mstore\n        /* \"#utility.yul\":6145:6149   */\n      0x11\n        /* \"#utility.yul\":6142:6143   */\n      0x04\n        /* \"#utility.yul\":6135:6150   */\n      mstore\n        /* \"#utility.yul\":6173:6177   */\n      0x24\n        /* \"#utility.yul\":6170:6171   */\n      0x00\n        /* \"#utility.yul\":6163:6178   */\n      revert\n        /* \"#utility.yul\":6054:6188   */\n    tag_287:\n        /* \"#utility.yul\":5969:6194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207291fd4fe34ff81e0314001620c823d0c3e4eb32da25a4fb0628886433539f4f64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_250": {
									"entryPoint": null,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2646": {
									"entryPoint": null,
									"id": 2646,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_374": {
									"entryPoint": null,
									"id": 374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_474": {
									"entryPoint": null,
									"id": 474,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_346": {
									"entryPoint": 249,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1054:12",
										"nodeType": "YulBlock",
										"src": "0:1054:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:12",
													"nodeType": "YulBlock",
													"src": "74:117:12",
													"statements": [
														{
															"nativeSrc": "84:22:12",
															"nodeType": "YulAssignment",
															"src": "84:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:12"
																},
																"nativeSrc": "93:13:12",
																"nodeType": "YulFunctionCall",
																"src": "93:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:12",
																"nodeType": "YulBlock",
																"src": "169:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:12",
																					"nodeType": "YulLiteral",
																					"src": "178:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:12",
																					"nodeType": "YulLiteral",
																					"src": "181:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:12"
																			},
																			"nativeSrc": "171:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:12"
																		},
																		"nativeSrc": "171:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:12",
																										"nodeType": "YulLiteral",
																										"src": "154:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:12",
																										"nodeType": "YulLiteral",
																										"src": "159:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:12"
																								},
																								"nativeSrc": "150:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:12",
																								"nodeType": "YulLiteral",
																								"src": "163:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:12"
																						},
																						"nativeSrc": "146:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:12"
																				},
																				"nativeSrc": "135:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:12"
																		},
																		"nativeSrc": "125:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:12"
																},
																"nativeSrc": "118:50:12",
																"nodeType": "YulFunctionCall",
																"src": "118:50:12"
															},
															"nativeSrc": "115:70:12",
															"nodeType": "YulIf",
															"src": "115:70:12"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:12",
														"nodeType": "YulTypedName",
														"src": "53:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:12",
														"nodeType": "YulTypedName",
														"src": "64:5:12",
														"type": ""
													}
												],
												"src": "14:177:12"
											},
											{
												"body": {
													"nativeSrc": "294:195:12",
													"nodeType": "YulBlock",
													"src": "294:195:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:12",
																"nodeType": "YulBlock",
																"src": "340:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:12",
																					"nodeType": "YulLiteral",
																					"src": "349:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:12",
																					"nodeType": "YulLiteral",
																					"src": "352:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:12"
																			},
																			"nativeSrc": "342:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:12"
																		},
																		"nativeSrc": "342:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:12"
																		},
																		"nativeSrc": "311:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:12",
																		"nodeType": "YulLiteral",
																		"src": "336:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:12"
																},
																"nativeSrc": "307:32:12",
																"nodeType": "YulFunctionCall",
																"src": "307:32:12"
															},
															"nativeSrc": "304:52:12",
															"nodeType": "YulIf",
															"src": "304:52:12"
														},
														{
															"nativeSrc": "365:50:12",
															"nodeType": "YulAssignment",
															"src": "365:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:12"
																},
																"nativeSrc": "375:40:12",
																"nodeType": "YulFunctionCall",
																"src": "375:40:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:12"
																}
															]
														},
														{
															"nativeSrc": "424:59:12",
															"nodeType": "YulAssignment",
															"src": "424:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:12",
																				"nodeType": "YulLiteral",
																				"src": "479:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:12"
																		},
																		"nativeSrc": "464:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:12"
																},
																"nativeSrc": "434:49:12",
																"nodeType": "YulFunctionCall",
																"src": "434:49:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:12",
														"nodeType": "YulTypedName",
														"src": "252:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:12",
														"nodeType": "YulTypedName",
														"src": "263:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:12",
														"nodeType": "YulTypedName",
														"src": "275:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:12",
														"nodeType": "YulTypedName",
														"src": "283:6:12",
														"type": ""
													}
												],
												"src": "196:293:12"
											},
											{
												"body": {
													"nativeSrc": "595:102:12",
													"nodeType": "YulBlock",
													"src": "595:102:12",
													"statements": [
														{
															"nativeSrc": "605:26:12",
															"nodeType": "YulAssignment",
															"src": "605:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:12",
																		"nodeType": "YulLiteral",
																		"src": "628:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:12"
																},
																"nativeSrc": "613:18:12",
																"nodeType": "YulFunctionCall",
																"src": "613:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:12",
																								"nodeType": "YulLiteral",
																								"src": "678:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:12",
																								"nodeType": "YulLiteral",
																								"src": "683:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:12"
																						},
																						"nativeSrc": "674:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:12",
																						"nodeType": "YulLiteral",
																						"src": "687:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:12"
																				},
																				"nativeSrc": "670:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:12"
																		},
																		"nativeSrc": "658:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:12"
																},
																"nativeSrc": "640:51:12",
																"nodeType": "YulFunctionCall",
																"src": "640:51:12"
															},
															"nativeSrc": "640:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:12",
														"nodeType": "YulTypedName",
														"src": "564:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:12",
														"nodeType": "YulTypedName",
														"src": "575:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:12",
														"nodeType": "YulTypedName",
														"src": "586:4:12",
														"type": ""
													}
												],
												"src": "494:203:12"
											},
											{
												"body": {
													"nativeSrc": "876:176:12",
													"nodeType": "YulBlock",
													"src": "876:176:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "893:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "893:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "904:2:12",
																		"nodeType": "YulLiteral",
																		"src": "904:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "886:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "886:6:12"
																},
																"nativeSrc": "886:21:12",
																"nodeType": "YulFunctionCall",
																"src": "886:21:12"
															},
															"nativeSrc": "886:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "886:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "927:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "938:2:12",
																				"nodeType": "YulLiteral",
																				"src": "938:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "923:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:12"
																		},
																		"nativeSrc": "923:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "943:2:12",
																		"nodeType": "YulLiteral",
																		"src": "943:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "916:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:12"
																},
																"nativeSrc": "916:30:12",
																"nodeType": "YulFunctionCall",
																"src": "916:30:12"
															},
															"nativeSrc": "916:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "916:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "977:2:12",
																				"nodeType": "YulLiteral",
																				"src": "977:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "962:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "962:3:12"
																		},
																		"nativeSrc": "962:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "962:18:12"
																	},
																	{
																		"hexValue": "496e76616c696420707269636520666565642061646472657373",
																		"kind": "string",
																		"nativeSrc": "982:28:12",
																		"nodeType": "YulLiteral",
																		"src": "982:28:12",
																		"type": "",
																		"value": "Invalid price feed address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "955:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:12"
																},
																"nativeSrc": "955:56:12",
																"nodeType": "YulFunctionCall",
																"src": "955:56:12"
															},
															"nativeSrc": "955:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "955:56:12"
														},
														{
															"nativeSrc": "1020:26:12",
															"nodeType": "YulAssignment",
															"src": "1020:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1032:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1032:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1043:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1043:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1028:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1028:3:12"
																},
																"nativeSrc": "1028:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1028:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1020:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1020:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "702:350:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "853:9:12",
														"nodeType": "YulTypedName",
														"src": "853:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "867:4:12",
														"nodeType": "YulTypedName",
														"src": "867:4:12",
														"type": ""
													}
												],
												"src": "702:350:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid price feed address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x10A6 CODESIZE SUB DUP1 PUSH2 0x10A6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x165 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x68 DUP2 PUSH2 0xF9 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420707269636520666565642061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56 JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x198 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x181 DUP4 PUSH2 0x149 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F PUSH1 0x20 DUP5 ADD PUSH2 0x149 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xEFF DUP1 PUSH2 0x1A7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA5B5FB88 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA5B5FB88 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xBC269850 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xDB7C1AD1 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xF3F699F1 EQ PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x9F97ACB7 EQ PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6301A143 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E9492F EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x1FDE7F26 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x2806BCE2 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x31D98B3F EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xD29 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH2 0x143 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x762 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x384 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x774 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1E0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x786 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x12E PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xD90 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH2 0x1B2 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP2 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0xAC2 JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP3 EQ PUSH2 0x2D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CF SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420736F75726365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x33D DUP5 PUSH2 0x531 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x3A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420736F75726365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x414 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x411 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x426 JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x0 DUP5 SGT PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436861696E6C696E6B3A20496E76616C6964207072696365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x4CE DUP4 TIMESTAMP PUSH2 0xEA2 JUMP JUMPDEST GT ISZERO PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436861696E6C696E6B3A205374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x51E DUP5 PUSH2 0xAEF JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP5 EQ PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CF SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH2 0x5B7 JUMPI POP PUSH2 0x384 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x5D2 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x641 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x63E SWAP2 DUP2 ADD SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x0 DUP5 SGT PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436861696E6C696E6B3A20496E76616C6964207072696365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x6FE DUP4 TIMESTAMP PUSH2 0xEA2 JUMP JUMPDEST GT ISZERO PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436861696E6C696E6B3A205374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x74E DUP5 PUSH2 0xAEF JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH2 0x76A PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x772 PUSH2 0xB19 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x77C PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x772 PUSH1 0x0 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x78E PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL SWAP1 PUSH32 0xD373A1AC37410A4DA6DEF2D7F3F2E704ACA3E95E2E251322A031EEDDA7EB686C SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x7E5 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL PUSH2 0x531 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP DUP1 PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F72207374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x839 DUP3 PUSH2 0xBF8 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x848 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x850 PUSH2 0xC25 JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP7 EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CF SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420736F757263652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0xA8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x928 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x938 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x96B DUP2 PUSH2 0xB6B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x976 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x97E PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x986 PUSH2 0xC25 JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP5 EQ PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CF SWAP1 PUSH2 0xE10 JUMP JUMPDEST TIMESTAMP DUP3 GT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4675747572652074696D657374616D7 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x1 DUP4 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD SWAP1 DUP5 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP6 SWAP2 PUSH32 0xBCD10D64FCE9DCF9568572ED92E371DF336D32649E8960A045C9548794A44B26 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xABC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54672219 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB21 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBC3 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xB4E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x123BAF03 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xD4C PUSH1 0x20 DUP5 ADD PUSH2 0xD0D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD89 DUP3 PUSH2 0xD0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH2 0xDB9 PUSH1 0x20 DUP9 ADD PUSH2 0xD0D JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103830B4B9 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE71 DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xE96 PUSH1 0x80 DUP8 ADD PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xEC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x91FD4FE34FF81E0314001620C823D0C3E4EB32 0xDA 0x25 LOG4 0xFB MOD 0x28 DUP9 PUSH5 0x33539F4F64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "2047:4706:10:-:0;;;2700:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2762:12;-1:-1:-1;;;;;1273:26:3;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:3;;1350:1;1322:31;;;640:51:12;613:18;;1322:31:3;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1717:1:5;1822:22;;997:7:4;:15;;-1:-1:-1;;997:15:4;;;-1:-1:-1;;;;;2794:24:10;::::1;2786:63;;;::::0;-1:-1:-1;;;2786:63:10;;904:2:12;2786:63:10::1;::::0;::::1;886:21:12::0;943:2;923:18;;;916:30;982:28;962:18;;;955:56;1028:18;;2786:63:10::1;702:350:12::0;2786:63:10::1;-1:-1:-1::0;2859:9:10::1;:45:::0;;-1:-1:-1;;;;;2859:45:10;;::::1;;;-1:-1:-1::0;;;;;;2859:45:10;;::::1;::::0;;;::::1;::::0;;2047:4706;;2912:187:3;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:3;;;-1:-1:-1;;;;;;3020:17:3;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:12:-;93:13;;-1:-1:-1;;;;;135:31:12;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;702:350::-;2047:4706:10;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CHAINLINK_STALENESS_THRESHOLD_2609": {
									"entryPoint": null,
									"id": 2609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@EUR_USD_PAIR_2598": {
									"entryPoint": null,
									"id": 2598,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRICE_VALIDITY_PERIOD_2606": {
									"entryPoint": null,
									"id": 2606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_284": {
									"entryPoint": 2754,
									"id": 284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_532": {
									"entryPoint": null,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_508": {
									"entryPoint": null,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_500": {
									"entryPoint": 3109,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_438": {
									"entryPoint": 3003,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_411": {
									"entryPoint": 3198,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_422": {
									"entryPoint": 3268,
									"id": 422,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_346": {
									"entryPoint": 2923,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_454": {
									"entryPoint": 2841,
									"id": 454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addOracleSource_2990": {
									"entryPoint": 2112,
									"id": 2990,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@getAggregatedPrice_2851": {
									"entryPoint": 815,
									"id": 2851,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@getLatestPrice_2834": {
									"entryPoint": 1997,
									"id": 2834,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPrice_2752": {
									"entryPoint": 1329,
									"id": 2752,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@getSourcePrice_2934": {
									"entryPoint": 843,
									"id": 2934,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@latestPrices_2603": {
									"entryPoint": null,
									"id": 2603,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_267": {
									"entryPoint": null,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3031": {
									"entryPoint": 1926,
									"id": 3031,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_399": {
									"entryPoint": null,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceFeed_2592": {
									"entryPoint": null,
									"id": 2592,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeOracleSource_3018": {
									"entryPoint": 670,
									"id": 3018,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_298": {
									"entryPoint": 1908,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toInt256_2304": {
									"entryPoint": 3064,
									"id": 2304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toUint256_1468": {
									"entryPoint": 2799,
									"id": 1468,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_326": {
									"entryPoint": 2352,
									"id": 326,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_3040": {
									"entryPoint": 1890,
									"id": 3040,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatePrice_2809": {
									"entryPoint": 2414,
									"id": 2809,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3438,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_addresst_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 3472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256": {
									"entryPoint": 3550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 3638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$103__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_226d2380e1281b8903155ae89694da3c8345f097a03e6d22e2f854af5bb0464e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9243:12",
										"nodeType": "YulBlock",
										"src": "0:9243:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:12",
													"nodeType": "YulBlock",
													"src": "63:124:12",
													"statements": [
														{
															"nativeSrc": "73:29:12",
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nativeSrc": "82:20:12",
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:12",
																"nodeType": "YulBlock",
																"src": "165:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:12",
																					"nodeType": "YulLiteral",
																					"src": "174:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:12",
																					"nodeType": "YulLiteral",
																					"src": "177:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:12"
																			},
																			"nativeSrc": "167:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:12"
																		},
																		"nativeSrc": "167:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:12",
																										"nodeType": "YulLiteral",
																										"src": "150:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:12",
																										"nodeType": "YulLiteral",
																										"src": "155:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:12"
																								},
																								"nativeSrc": "146:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:12",
																								"nodeType": "YulLiteral",
																								"src": "159:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:12"
																						},
																						"nativeSrc": "142:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nativeSrc": "131:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nativeSrc": "121:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nativeSrc": "114:50:12",
																"nodeType": "YulFunctionCall",
																"src": "114:50:12"
															},
															"nativeSrc": "111:70:12",
															"nodeType": "YulIf",
															"src": "111:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:12",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:12",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:173:12"
											},
											{
												"body": {
													"nativeSrc": "279:213:12",
													"nodeType": "YulBlock",
													"src": "279:213:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "325:16:12",
																"nodeType": "YulBlock",
																"src": "325:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "334:1:12",
																					"nodeType": "YulLiteral",
																					"src": "334:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "337:1:12",
																					"nodeType": "YulLiteral",
																					"src": "337:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "327:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:12"
																			},
																			"nativeSrc": "327:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:12"
																		},
																		"nativeSrc": "327:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "300:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "296:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:12"
																		},
																		"nativeSrc": "296:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "321:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "292:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:12"
																},
																"nativeSrc": "292:32:12",
																"nodeType": "YulFunctionCall",
																"src": "292:32:12"
															},
															"nativeSrc": "289:52:12",
															"nodeType": "YulIf",
															"src": "289:52:12"
														},
														{
															"nativeSrc": "350:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "350:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "363:1:12",
																"nodeType": "YulLiteral",
																"src": "363:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "354:5:12",
																	"nodeType": "YulTypedName",
																	"src": "354:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "373:32:12",
															"nodeType": "YulAssignment",
															"src": "373:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "395:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "382:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "382:12:12"
																},
																"nativeSrc": "382:23:12",
																"nodeType": "YulFunctionCall",
																"src": "382:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "373:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "373:5:12"
																}
															]
														},
														{
															"nativeSrc": "414:15:12",
															"nodeType": "YulAssignment",
															"src": "414:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "424:5:12",
																"nodeType": "YulIdentifier",
																"src": "424:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "414:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "414:6:12"
																}
															]
														},
														{
															"nativeSrc": "438:48:12",
															"nodeType": "YulAssignment",
															"src": "438:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "471:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "471:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "482:2:12",
																				"nodeType": "YulLiteral",
																				"src": "482:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "467:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "467:3:12"
																		},
																		"nativeSrc": "467:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "467:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "448:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "448:18:12"
																},
																"nativeSrc": "448:38:12",
																"nodeType": "YulFunctionCall",
																"src": "448:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "438:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "192:300:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "237:9:12",
														"nodeType": "YulTypedName",
														"src": "237:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "248:7:12",
														"nodeType": "YulTypedName",
														"src": "248:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "260:6:12",
														"nodeType": "YulTypedName",
														"src": "260:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "268:6:12",
														"nodeType": "YulTypedName",
														"src": "268:6:12",
														"type": ""
													}
												],
												"src": "192:300:12"
											},
											{
												"body": {
													"nativeSrc": "567:156:12",
													"nodeType": "YulBlock",
													"src": "567:156:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "613:16:12",
																"nodeType": "YulBlock",
																"src": "613:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "622:1:12",
																					"nodeType": "YulLiteral",
																					"src": "622:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "625:1:12",
																					"nodeType": "YulLiteral",
																					"src": "625:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "615:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "615:6:12"
																			},
																			"nativeSrc": "615:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "615:12:12"
																		},
																		"nativeSrc": "615:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "615:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "588:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "597:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "584:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:12"
																		},
																		"nativeSrc": "584:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "584:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "609:2:12",
																		"nodeType": "YulLiteral",
																		"src": "609:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "580:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:12"
																},
																"nativeSrc": "580:32:12",
																"nodeType": "YulFunctionCall",
																"src": "580:32:12"
															},
															"nativeSrc": "577:52:12",
															"nodeType": "YulIf",
															"src": "577:52:12"
														},
														{
															"nativeSrc": "638:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "638:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "651:1:12",
																"nodeType": "YulLiteral",
																"src": "651:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "642:5:12",
																	"nodeType": "YulTypedName",
																	"src": "642:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "661:32:12",
															"nodeType": "YulAssignment",
															"src": "661:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "683:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "683:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "670:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "670:12:12"
																},
																"nativeSrc": "670:23:12",
																"nodeType": "YulFunctionCall",
																"src": "670:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "661:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "661:5:12"
																}
															]
														},
														{
															"nativeSrc": "702:15:12",
															"nodeType": "YulAssignment",
															"src": "702:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "712:5:12",
																"nodeType": "YulIdentifier",
																"src": "712:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "702:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "702:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "497:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "533:9:12",
														"nodeType": "YulTypedName",
														"src": "533:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "544:7:12",
														"nodeType": "YulTypedName",
														"src": "544:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "556:6:12",
														"nodeType": "YulTypedName",
														"src": "556:6:12",
														"type": ""
													}
												],
												"src": "497:226:12"
											},
											{
												"body": {
													"nativeSrc": "879:178:12",
													"nodeType": "YulBlock",
													"src": "879:178:12",
													"statements": [
														{
															"nativeSrc": "889:26:12",
															"nodeType": "YulAssignment",
															"src": "889:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "901:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "901:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "912:2:12",
																		"nodeType": "YulLiteral",
																		"src": "912:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "897:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "897:3:12"
																},
																"nativeSrc": "897:18:12",
																"nodeType": "YulFunctionCall",
																"src": "897:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "889:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "889:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "931:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "931:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "942:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "924:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "924:6:12"
																},
																"nativeSrc": "924:25:12",
																"nodeType": "YulFunctionCall",
																"src": "924:25:12"
															},
															"nativeSrc": "924:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "924:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "980:2:12",
																				"nodeType": "YulLiteral",
																				"src": "980:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "965:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "965:3:12"
																		},
																		"nativeSrc": "965:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "965:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "985:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "985:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "958:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "958:6:12"
																},
																"nativeSrc": "958:34:12",
																"nodeType": "YulFunctionCall",
																"src": "958:34:12"
															},
															"nativeSrc": "958:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "958:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1012:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1012:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1023:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1023:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1008:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1008:3:12"
																		},
																		"nativeSrc": "1008:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1008:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "1042:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1042:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1035:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1035:6:12"
																				},
																				"nativeSrc": "1035:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1035:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1028:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1028:6:12"
																		},
																		"nativeSrc": "1028:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1028:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1001:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1001:6:12"
																},
																"nativeSrc": "1001:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1001:50:12"
															},
															"nativeSrc": "1001:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "1001:50:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "728:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "832:9:12",
														"nodeType": "YulTypedName",
														"src": "832:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "843:6:12",
														"nodeType": "YulTypedName",
														"src": "843:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "851:6:12",
														"nodeType": "YulTypedName",
														"src": "851:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "859:6:12",
														"nodeType": "YulTypedName",
														"src": "859:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "870:4:12",
														"nodeType": "YulTypedName",
														"src": "870:4:12",
														"type": ""
													}
												],
												"src": "728:329:12"
											},
											{
												"body": {
													"nativeSrc": "1132:116:12",
													"nodeType": "YulBlock",
													"src": "1132:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1178:16:12",
																"nodeType": "YulBlock",
																"src": "1178:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1187:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1190:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1190:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1180:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1180:6:12"
																			},
																			"nativeSrc": "1180:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1180:12:12"
																		},
																		"nativeSrc": "1180:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1180:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1153:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1153:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1162:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1162:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1149:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1149:3:12"
																		},
																		"nativeSrc": "1149:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1174:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1174:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1145:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1145:3:12"
																},
																"nativeSrc": "1145:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1145:32:12"
															},
															"nativeSrc": "1142:52:12",
															"nodeType": "YulIf",
															"src": "1142:52:12"
														},
														{
															"nativeSrc": "1203:39:12",
															"nodeType": "YulAssignment",
															"src": "1203:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1232:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1232:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1213:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1213:18:12"
																},
																"nativeSrc": "1213:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1213:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1203:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1203:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1062:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1098:9:12",
														"nodeType": "YulTypedName",
														"src": "1098:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1109:7:12",
														"nodeType": "YulTypedName",
														"src": "1109:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1121:6:12",
														"nodeType": "YulTypedName",
														"src": "1121:6:12",
														"type": ""
													}
												],
												"src": "1062:186:12"
											},
											{
												"body": {
													"nativeSrc": "1348:92:12",
													"nodeType": "YulBlock",
													"src": "1348:92:12",
													"statements": [
														{
															"nativeSrc": "1358:26:12",
															"nodeType": "YulAssignment",
															"src": "1358:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1370:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1370:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1381:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1381:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1366:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1366:3:12"
																},
																"nativeSrc": "1366:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1366:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1358:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1358:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1400:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1400:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1425:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1425:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1418:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1418:6:12"
																				},
																				"nativeSrc": "1418:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1418:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1411:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1411:6:12"
																		},
																		"nativeSrc": "1411:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1411:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1393:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:12"
																},
																"nativeSrc": "1393:41:12",
																"nodeType": "YulFunctionCall",
																"src": "1393:41:12"
															},
															"nativeSrc": "1393:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "1393:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1253:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1317:9:12",
														"nodeType": "YulTypedName",
														"src": "1317:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1328:6:12",
														"nodeType": "YulTypedName",
														"src": "1328:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1339:4:12",
														"nodeType": "YulTypedName",
														"src": "1339:4:12",
														"type": ""
													}
												],
												"src": "1253:187:12"
											},
											{
												"body": {
													"nativeSrc": "1546:76:12",
													"nodeType": "YulBlock",
													"src": "1546:76:12",
													"statements": [
														{
															"nativeSrc": "1556:26:12",
															"nodeType": "YulAssignment",
															"src": "1556:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1568:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1568:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1579:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1579:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1564:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1564:3:12"
																},
																"nativeSrc": "1564:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1564:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1556:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1556:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1598:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1598:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1609:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1609:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1591:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1591:6:12"
																},
																"nativeSrc": "1591:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1591:25:12"
															},
															"nativeSrc": "1591:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1591:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1445:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1515:9:12",
														"nodeType": "YulTypedName",
														"src": "1515:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1526:6:12",
														"nodeType": "YulTypedName",
														"src": "1526:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1537:4:12",
														"nodeType": "YulTypedName",
														"src": "1537:4:12",
														"type": ""
													}
												],
												"src": "1445:177:12"
											},
											{
												"body": {
													"nativeSrc": "1757:102:12",
													"nodeType": "YulBlock",
													"src": "1757:102:12",
													"statements": [
														{
															"nativeSrc": "1767:26:12",
															"nodeType": "YulAssignment",
															"src": "1767:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1779:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1779:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1790:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1790:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1775:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1775:3:12"
																},
																"nativeSrc": "1775:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1775:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1767:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1767:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1809:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1809:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1824:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1840:3:12",
																								"nodeType": "YulLiteral",
																								"src": "1840:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1845:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1845:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1836:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1836:3:12"
																						},
																						"nativeSrc": "1836:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1836:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1849:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1849:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1832:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1832:3:12"
																				},
																				"nativeSrc": "1832:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1832:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1820:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1820:3:12"
																		},
																		"nativeSrc": "1820:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1820:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1802:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1802:6:12"
																},
																"nativeSrc": "1802:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1802:51:12"
															},
															"nativeSrc": "1802:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1802:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$103__to_t_address__fromStack_reversed",
												"nativeSrc": "1627:232:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1726:9:12",
														"nodeType": "YulTypedName",
														"src": "1726:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1737:6:12",
														"nodeType": "YulTypedName",
														"src": "1737:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1748:4:12",
														"nodeType": "YulTypedName",
														"src": "1748:4:12",
														"type": ""
													}
												],
												"src": "1627:232:12"
											},
											{
												"body": {
													"nativeSrc": "1965:102:12",
													"nodeType": "YulBlock",
													"src": "1965:102:12",
													"statements": [
														{
															"nativeSrc": "1975:26:12",
															"nodeType": "YulAssignment",
															"src": "1975:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1987:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1987:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1998:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1998:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1983:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:12"
																},
																"nativeSrc": "1983:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1983:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1975:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1975:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2017:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2017:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2032:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2032:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2048:3:12",
																								"nodeType": "YulLiteral",
																								"src": "2048:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2053:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2053:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2044:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2044:3:12"
																						},
																						"nativeSrc": "2044:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2044:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2057:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2057:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2040:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2040:3:12"
																				},
																				"nativeSrc": "2040:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2040:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2028:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:12"
																		},
																		"nativeSrc": "2028:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2028:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2010:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2010:6:12"
																},
																"nativeSrc": "2010:51:12",
																"nodeType": "YulFunctionCall",
																"src": "2010:51:12"
															},
															"nativeSrc": "2010:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "2010:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1864:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1934:9:12",
														"nodeType": "YulTypedName",
														"src": "1934:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1945:6:12",
														"nodeType": "YulTypedName",
														"src": "1945:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1956:4:12",
														"nodeType": "YulTypedName",
														"src": "1956:4:12",
														"type": ""
													}
												],
												"src": "1864:203:12"
											},
											{
												"body": {
													"nativeSrc": "2171:76:12",
													"nodeType": "YulBlock",
													"src": "2171:76:12",
													"statements": [
														{
															"nativeSrc": "2181:26:12",
															"nodeType": "YulAssignment",
															"src": "2181:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2193:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2193:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2204:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2204:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2189:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:12"
																},
																"nativeSrc": "2189:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2189:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2181:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2181:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2223:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2223:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2234:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2234:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2216:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2216:6:12"
																},
																"nativeSrc": "2216:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2216:25:12"
															},
															"nativeSrc": "2216:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "2216:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "2072:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2140:9:12",
														"nodeType": "YulTypedName",
														"src": "2140:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2151:6:12",
														"nodeType": "YulTypedName",
														"src": "2151:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2162:4:12",
														"nodeType": "YulTypedName",
														"src": "2162:4:12",
														"type": ""
													}
												],
												"src": "2072:175:12"
											},
											{
												"body": {
													"nativeSrc": "2407:628:12",
													"nodeType": "YulBlock",
													"src": "2407:628:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2454:16:12",
																"nodeType": "YulBlock",
																"src": "2454:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2463:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2463:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2466:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2466:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2456:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2456:6:12"
																			},
																			"nativeSrc": "2456:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2456:12:12"
																		},
																		"nativeSrc": "2456:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2456:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2428:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2428:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2437:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2437:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2424:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2424:3:12"
																		},
																		"nativeSrc": "2424:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2424:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2449:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2449:3:12",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2420:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2420:3:12"
																},
																"nativeSrc": "2420:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2420:33:12"
															},
															"nativeSrc": "2417:53:12",
															"nodeType": "YulIf",
															"src": "2417:53:12"
														},
														{
															"nativeSrc": "2479:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2479:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2492:1:12",
																"nodeType": "YulLiteral",
																"src": "2492:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2483:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2483:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2502:32:12",
															"nodeType": "YulAssignment",
															"src": "2502:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2524:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2524:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2511:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2511:12:12"
																},
																"nativeSrc": "2511:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2511:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2502:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2502:5:12"
																}
															]
														},
														{
															"nativeSrc": "2543:15:12",
															"nodeType": "YulAssignment",
															"src": "2543:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "2553:5:12",
																"nodeType": "YulIdentifier",
																"src": "2553:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2543:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:12"
																}
															]
														},
														{
															"nativeSrc": "2567:48:12",
															"nodeType": "YulAssignment",
															"src": "2567:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2600:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2600:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2611:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2611:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2596:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2596:3:12"
																		},
																		"nativeSrc": "2596:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2596:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2577:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2577:18:12"
																},
																"nativeSrc": "2577:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2577:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2567:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:12"
																}
															]
														},
														{
															"nativeSrc": "2624:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2624:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2639:1:12",
																"nodeType": "YulLiteral",
																"src": "2639:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2628:7:12",
																	"nodeType": "YulTypedName",
																	"src": "2628:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2649:43:12",
															"nodeType": "YulAssignment",
															"src": "2649:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2677:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2677:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2688:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2688:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2673:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2673:3:12"
																		},
																		"nativeSrc": "2673:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2673:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2660:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2660:12:12"
																},
																"nativeSrc": "2660:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2660:32:12"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2649:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2649:7:12"
																}
															]
														},
														{
															"nativeSrc": "2701:17:12",
															"nodeType": "YulAssignment",
															"src": "2701:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "2711:7:12",
																"nodeType": "YulIdentifier",
																"src": "2711:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2701:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2701:6:12"
																}
															]
														},
														{
															"nativeSrc": "2727:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2727:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2742:1:12",
																"nodeType": "YulLiteral",
																"src": "2742:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2731:7:12",
																	"nodeType": "YulTypedName",
																	"src": "2731:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2752:43:12",
															"nodeType": "YulAssignment",
															"src": "2752:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2780:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2780:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2791:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2791:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2776:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2776:3:12"
																		},
																		"nativeSrc": "2776:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2776:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2763:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2763:12:12"
																},
																"nativeSrc": "2763:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2763:32:12"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2752:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2752:7:12"
																}
															]
														},
														{
															"nativeSrc": "2804:17:12",
															"nodeType": "YulAssignment",
															"src": "2804:17:12",
															"value": {
																"name": "value_2",
																"nativeSrc": "2814:7:12",
																"nodeType": "YulIdentifier",
																"src": "2814:7:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2804:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2804:6:12"
																}
															]
														},
														{
															"nativeSrc": "2830:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2830:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2845:1:12",
																"nodeType": "YulLiteral",
																"src": "2845:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "2834:7:12",
																	"nodeType": "YulTypedName",
																	"src": "2834:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2855:44:12",
															"nodeType": "YulAssignment",
															"src": "2855:44:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2883:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2883:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2894:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2894:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2879:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2879:3:12"
																		},
																		"nativeSrc": "2879:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2879:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2866:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2866:12:12"
																},
																"nativeSrc": "2866:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2866:33:12"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "2855:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2855:7:12"
																}
															]
														},
														{
															"nativeSrc": "2908:17:12",
															"nodeType": "YulAssignment",
															"src": "2908:17:12",
															"value": {
																"name": "value_3",
																"nativeSrc": "2918:7:12",
																"nodeType": "YulIdentifier",
																"src": "2918:7:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2908:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:12"
																}
															]
														},
														{
															"nativeSrc": "2934:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2934:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2949:1:12",
																"nodeType": "YulLiteral",
																"src": "2949:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "2938:7:12",
																	"nodeType": "YulTypedName",
																	"src": "2938:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2959:44:12",
															"nodeType": "YulAssignment",
															"src": "2959:44:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2987:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2987:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2998:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2998:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2983:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2983:3:12"
																		},
																		"nativeSrc": "2983:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2970:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2970:12:12"
																},
																"nativeSrc": "2970:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2970:33:12"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "2959:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2959:7:12"
																}
															]
														},
														{
															"nativeSrc": "3012:17:12",
															"nodeType": "YulAssignment",
															"src": "3012:17:12",
															"value": {
																"name": "value_4",
																"nativeSrc": "3022:7:12",
																"nodeType": "YulIdentifier",
																"src": "3022:7:12"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "3012:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3012:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_addresst_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "2252:783:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2333:9:12",
														"nodeType": "YulTypedName",
														"src": "2333:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2344:7:12",
														"nodeType": "YulTypedName",
														"src": "2344:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2356:6:12",
														"nodeType": "YulTypedName",
														"src": "2356:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2364:6:12",
														"nodeType": "YulTypedName",
														"src": "2364:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2372:6:12",
														"nodeType": "YulTypedName",
														"src": "2372:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2380:6:12",
														"nodeType": "YulTypedName",
														"src": "2380:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2388:6:12",
														"nodeType": "YulTypedName",
														"src": "2388:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2396:6:12",
														"nodeType": "YulTypedName",
														"src": "2396:6:12",
														"type": ""
													}
												],
												"src": "2252:783:12"
											},
											{
												"body": {
													"nativeSrc": "3141:76:12",
													"nodeType": "YulBlock",
													"src": "3141:76:12",
													"statements": [
														{
															"nativeSrc": "3151:26:12",
															"nodeType": "YulAssignment",
															"src": "3151:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3163:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3163:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3174:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3174:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3159:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3159:3:12"
																},
																"nativeSrc": "3159:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3159:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3151:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3151:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3193:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3193:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3204:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3204:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:12"
																},
																"nativeSrc": "3186:25:12",
																"nodeType": "YulFunctionCall",
																"src": "3186:25:12"
															},
															"nativeSrc": "3186:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "3186:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3040:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3110:9:12",
														"nodeType": "YulTypedName",
														"src": "3110:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3121:6:12",
														"nodeType": "YulTypedName",
														"src": "3121:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3132:4:12",
														"nodeType": "YulTypedName",
														"src": "3132:4:12",
														"type": ""
													}
												],
												"src": "3040:177:12"
											},
											{
												"body": {
													"nativeSrc": "3343:466:12",
													"nodeType": "YulBlock",
													"src": "3343:466:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3390:16:12",
																"nodeType": "YulBlock",
																"src": "3390:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3399:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3399:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3402:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3402:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3392:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3392:6:12"
																			},
																			"nativeSrc": "3392:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3392:12:12"
																		},
																		"nativeSrc": "3392:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3392:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3364:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3364:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3373:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3373:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3360:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3360:3:12"
																		},
																		"nativeSrc": "3360:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3360:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3385:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3385:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3356:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3356:3:12"
																},
																"nativeSrc": "3356:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3356:33:12"
															},
															"nativeSrc": "3353:53:12",
															"nodeType": "YulIf",
															"src": "3353:53:12"
														},
														{
															"nativeSrc": "3415:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3415:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3428:1:12",
																"nodeType": "YulLiteral",
																"src": "3428:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3419:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3419:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3438:32:12",
															"nodeType": "YulAssignment",
															"src": "3438:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3460:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3460:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3447:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3447:12:12"
																},
																"nativeSrc": "3447:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3447:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3438:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3438:5:12"
																}
															]
														},
														{
															"nativeSrc": "3479:15:12",
															"nodeType": "YulAssignment",
															"src": "3479:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3489:5:12",
																"nodeType": "YulIdentifier",
																"src": "3489:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3479:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3479:6:12"
																}
															]
														},
														{
															"nativeSrc": "3503:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3503:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3518:1:12",
																"nodeType": "YulLiteral",
																"src": "3518:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3507:7:12",
																	"nodeType": "YulTypedName",
																	"src": "3507:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3528:43:12",
															"nodeType": "YulAssignment",
															"src": "3528:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3556:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3556:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3567:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3567:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3552:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3552:3:12"
																		},
																		"nativeSrc": "3552:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3552:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3539:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3539:12:12"
																},
																"nativeSrc": "3539:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3539:32:12"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3528:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3528:7:12"
																}
															]
														},
														{
															"nativeSrc": "3580:17:12",
															"nodeType": "YulAssignment",
															"src": "3580:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "3590:7:12",
																"nodeType": "YulIdentifier",
																"src": "3590:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3580:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3580:6:12"
																}
															]
														},
														{
															"nativeSrc": "3606:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3606:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3621:1:12",
																"nodeType": "YulLiteral",
																"src": "3621:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3610:7:12",
																	"nodeType": "YulTypedName",
																	"src": "3610:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3631:43:12",
															"nodeType": "YulAssignment",
															"src": "3631:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3659:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3659:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3670:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3670:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3655:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3655:3:12"
																		},
																		"nativeSrc": "3655:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3655:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3642:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3642:12:12"
																},
																"nativeSrc": "3642:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3642:32:12"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "3631:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:12"
																}
															]
														},
														{
															"nativeSrc": "3683:17:12",
															"nodeType": "YulAssignment",
															"src": "3683:17:12",
															"value": {
																"name": "value_2",
																"nativeSrc": "3693:7:12",
																"nodeType": "YulIdentifier",
																"src": "3693:7:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3683:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3683:6:12"
																}
															]
														},
														{
															"nativeSrc": "3709:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3709:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3724:1:12",
																"nodeType": "YulLiteral",
																"src": "3724:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3713:7:12",
																	"nodeType": "YulTypedName",
																	"src": "3713:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3734:43:12",
															"nodeType": "YulAssignment",
															"src": "3734:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3762:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3762:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3773:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3773:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3758:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3758:3:12"
																		},
																		"nativeSrc": "3758:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3758:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3745:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3745:12:12"
																},
																"nativeSrc": "3745:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3745:32:12"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "3734:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3734:7:12"
																}
															]
														},
														{
															"nativeSrc": "3786:17:12",
															"nodeType": "YulAssignment",
															"src": "3786:17:12",
															"value": {
																"name": "value_3",
																"nativeSrc": "3796:7:12",
																"nodeType": "YulIdentifier",
																"src": "3796:7:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3786:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3786:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256",
												"nativeSrc": "3222:587:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3285:9:12",
														"nodeType": "YulTypedName",
														"src": "3285:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3296:7:12",
														"nodeType": "YulTypedName",
														"src": "3296:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3308:6:12",
														"nodeType": "YulTypedName",
														"src": "3308:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3316:6:12",
														"nodeType": "YulTypedName",
														"src": "3316:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3324:6:12",
														"nodeType": "YulTypedName",
														"src": "3324:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3332:6:12",
														"nodeType": "YulTypedName",
														"src": "3332:6:12",
														"type": ""
													}
												],
												"src": "3222:587:12"
											},
											{
												"body": {
													"nativeSrc": "3988:162:12",
													"nodeType": "YulBlock",
													"src": "3988:162:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4005:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4005:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4016:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4016:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3998:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:12"
																},
																"nativeSrc": "3998:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3998:21:12"
															},
															"nativeSrc": "3998:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "3998:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4039:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4039:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4050:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4050:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4035:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4035:3:12"
																		},
																		"nativeSrc": "4035:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4035:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4055:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:12",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4028:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4028:6:12"
																},
																"nativeSrc": "4028:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4028:30:12"
															},
															"nativeSrc": "4028:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4028:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4078:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4078:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4089:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4089:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4074:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:12"
																		},
																		"nativeSrc": "4074:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4074:18:12"
																	},
																	{
																		"hexValue": "496e76616c69642070616972",
																		"kind": "string",
																		"nativeSrc": "4094:14:12",
																		"nodeType": "YulLiteral",
																		"src": "4094:14:12",
																		"type": "",
																		"value": "Invalid pair"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4067:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4067:6:12"
																},
																"nativeSrc": "4067:42:12",
																"nodeType": "YulFunctionCall",
																"src": "4067:42:12"
															},
															"nativeSrc": "4067:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "4067:42:12"
														},
														{
															"nativeSrc": "4118:26:12",
															"nodeType": "YulAssignment",
															"src": "4118:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4130:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4130:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4141:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4141:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4126:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4126:3:12"
																},
																"nativeSrc": "4126:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4126:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4118:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3814:336:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3965:9:12",
														"nodeType": "YulTypedName",
														"src": "3965:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3979:4:12",
														"nodeType": "YulTypedName",
														"src": "3979:4:12",
														"type": ""
													}
												],
												"src": "3814:336:12"
											},
											{
												"body": {
													"nativeSrc": "4329:164:12",
													"nodeType": "YulBlock",
													"src": "4329:164:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4346:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4346:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4357:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4357:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4339:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4339:6:12"
																},
																"nativeSrc": "4339:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4339:21:12"
															},
															"nativeSrc": "4339:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "4339:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4380:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4380:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4391:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4391:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4376:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4376:3:12"
																		},
																		"nativeSrc": "4376:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4376:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4396:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4396:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4369:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4369:6:12"
																},
																"nativeSrc": "4369:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4369:30:12"
															},
															"nativeSrc": "4369:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4369:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4419:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4419:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4430:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4430:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4415:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:12"
																		},
																		"nativeSrc": "4415:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4415:18:12"
																	},
																	{
																		"hexValue": "496e76616c696420736f75726365",
																		"kind": "string",
																		"nativeSrc": "4435:16:12",
																		"nodeType": "YulLiteral",
																		"src": "4435:16:12",
																		"type": "",
																		"value": "Invalid source"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4408:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4408:6:12"
																},
																"nativeSrc": "4408:44:12",
																"nodeType": "YulFunctionCall",
																"src": "4408:44:12"
															},
															"nativeSrc": "4408:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "4408:44:12"
														},
														{
															"nativeSrc": "4461:26:12",
															"nodeType": "YulAssignment",
															"src": "4461:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4473:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4473:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4484:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4484:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4469:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4469:3:12"
																},
																"nativeSrc": "4469:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4469:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4461:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4461:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4155:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4306:9:12",
														"nodeType": "YulTypedName",
														"src": "4306:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4320:4:12",
														"nodeType": "YulTypedName",
														"src": "4320:4:12",
														"type": ""
													}
												],
												"src": "4155:338:12"
											},
											{
												"body": {
													"nativeSrc": "4557:120:12",
													"nodeType": "YulBlock",
													"src": "4557:120:12",
													"statements": [
														{
															"nativeSrc": "4567:22:12",
															"nodeType": "YulAssignment",
															"src": "4567:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4582:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4582:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4576:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4576:5:12"
																},
																"nativeSrc": "4576:13:12",
																"nodeType": "YulFunctionCall",
																"src": "4576:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4567:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4567:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4655:16:12",
																"nodeType": "YulBlock",
																"src": "4655:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4664:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4664:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4667:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4667:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4657:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4657:6:12"
																			},
																			"nativeSrc": "4657:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4657:12:12"
																		},
																		"nativeSrc": "4657:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4657:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4611:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4611:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4622:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4622:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4629:22:12",
																						"nodeType": "YulLiteral",
																						"src": "4629:22:12",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4618:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4618:3:12"
																				},
																				"nativeSrc": "4618:34:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4618:34:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4608:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4608:2:12"
																		},
																		"nativeSrc": "4608:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4608:45:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4601:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4601:6:12"
																},
																"nativeSrc": "4601:53:12",
																"nodeType": "YulFunctionCall",
																"src": "4601:53:12"
															},
															"nativeSrc": "4598:73:12",
															"nodeType": "YulIf",
															"src": "4598:73:12"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "4498:179:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4536:6:12",
														"nodeType": "YulTypedName",
														"src": "4536:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4547:5:12",
														"nodeType": "YulTypedName",
														"src": "4547:5:12",
														"type": ""
													}
												],
												"src": "4498:179:12"
											},
											{
												"body": {
													"nativeSrc": "4828:425:12",
													"nodeType": "YulBlock",
													"src": "4828:425:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4875:16:12",
																"nodeType": "YulBlock",
																"src": "4875:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4884:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4884:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4887:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4887:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4877:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4877:6:12"
																			},
																			"nativeSrc": "4877:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4877:12:12"
																		},
																		"nativeSrc": "4877:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4877:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4849:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4849:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4858:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4858:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4845:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4845:3:12"
																		},
																		"nativeSrc": "4845:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4845:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4870:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4870:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4841:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:12"
																},
																"nativeSrc": "4841:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4841:33:12"
															},
															"nativeSrc": "4838:53:12",
															"nodeType": "YulIf",
															"src": "4838:53:12"
														},
														{
															"nativeSrc": "4900:49:12",
															"nodeType": "YulAssignment",
															"src": "4900:49:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4939:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4939:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "4910:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "4910:28:12"
																},
																"nativeSrc": "4910:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4910:39:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4900:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4900:6:12"
																}
															]
														},
														{
															"nativeSrc": "4958:35:12",
															"nodeType": "YulAssignment",
															"src": "4958:35:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4978:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4989:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4989:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4974:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:12"
																		},
																		"nativeSrc": "4974:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4974:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4968:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4968:5:12"
																},
																"nativeSrc": "4968:25:12",
																"nodeType": "YulFunctionCall",
																"src": "4968:25:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4958:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4958:6:12"
																}
															]
														},
														{
															"nativeSrc": "5002:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5002:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5015:1:12",
																"nodeType": "YulLiteral",
																"src": "5015:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5006:5:12",
																	"nodeType": "YulTypedName",
																	"src": "5006:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5025:34:12",
															"nodeType": "YulAssignment",
															"src": "5025:34:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5044:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5044:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5055:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5055:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5040:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5040:3:12"
																		},
																		"nativeSrc": "5040:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5040:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5034:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5034:5:12"
																},
																"nativeSrc": "5034:25:12",
																"nodeType": "YulFunctionCall",
																"src": "5034:25:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5025:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5025:5:12"
																}
															]
														},
														{
															"nativeSrc": "5068:15:12",
															"nodeType": "YulAssignment",
															"src": "5068:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "5078:5:12",
																"nodeType": "YulIdentifier",
																"src": "5078:5:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5068:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:12"
																}
															]
														},
														{
															"nativeSrc": "5092:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5092:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5107:1:12",
																"nodeType": "YulLiteral",
																"src": "5107:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5096:7:12",
																	"nodeType": "YulTypedName",
																	"src": "5096:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5117:36:12",
															"nodeType": "YulAssignment",
															"src": "5117:36:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5138:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5138:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5149:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5149:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5134:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5134:3:12"
																		},
																		"nativeSrc": "5134:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5134:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5128:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5128:5:12"
																},
																"nativeSrc": "5128:25:12",
																"nodeType": "YulFunctionCall",
																"src": "5128:25:12"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "5117:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5117:7:12"
																}
															]
														},
														{
															"nativeSrc": "5162:17:12",
															"nodeType": "YulAssignment",
															"src": "5162:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "5172:7:12",
																"nodeType": "YulIdentifier",
																"src": "5172:7:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5162:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5162:6:12"
																}
															]
														},
														{
															"nativeSrc": "5188:59:12",
															"nodeType": "YulAssignment",
															"src": "5188:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5231:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5231:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5242:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5242:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5227:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5227:3:12"
																		},
																		"nativeSrc": "5227:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5227:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "5198:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "5198:28:12"
																},
																"nativeSrc": "5198:49:12",
																"nodeType": "YulFunctionCall",
																"src": "5198:49:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "5188:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "4682:571:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4762:9:12",
														"nodeType": "YulTypedName",
														"src": "4762:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4773:7:12",
														"nodeType": "YulTypedName",
														"src": "4773:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4785:6:12",
														"nodeType": "YulTypedName",
														"src": "4785:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4793:6:12",
														"nodeType": "YulTypedName",
														"src": "4793:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4801:6:12",
														"nodeType": "YulTypedName",
														"src": "4801:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4809:6:12",
														"nodeType": "YulTypedName",
														"src": "4809:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4817:6:12",
														"nodeType": "YulTypedName",
														"src": "4817:6:12",
														"type": ""
													}
												],
												"src": "4682:571:12"
											},
											{
												"body": {
													"nativeSrc": "5432:174:12",
													"nodeType": "YulBlock",
													"src": "5432:174:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5449:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5449:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5460:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5460:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5442:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5442:6:12"
																},
																"nativeSrc": "5442:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5442:21:12"
															},
															"nativeSrc": "5442:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5442:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5483:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5483:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5494:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5494:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5479:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5479:3:12"
																		},
																		"nativeSrc": "5479:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5479:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5499:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5499:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5472:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5472:6:12"
																},
																"nativeSrc": "5472:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5472:30:12"
															},
															"nativeSrc": "5472:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5472:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5522:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5522:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5533:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5533:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5518:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5518:3:12"
																		},
																		"nativeSrc": "5518:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5518:18:12"
																	},
																	{
																		"hexValue": "436861696e6c696e6b3a20496e76616c6964207072696365",
																		"kind": "string",
																		"nativeSrc": "5538:26:12",
																		"nodeType": "YulLiteral",
																		"src": "5538:26:12",
																		"type": "",
																		"value": "Chainlink: Invalid price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5511:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:12"
																},
																"nativeSrc": "5511:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5511:54:12"
															},
															"nativeSrc": "5511:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "5511:54:12"
														},
														{
															"nativeSrc": "5574:26:12",
															"nodeType": "YulAssignment",
															"src": "5574:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5586:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5586:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5597:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5597:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5582:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5582:3:12"
																},
																"nativeSrc": "5582:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5582:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5574:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5574:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5258:348:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5409:9:12",
														"nodeType": "YulTypedName",
														"src": "5409:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5423:4:12",
														"nodeType": "YulTypedName",
														"src": "5423:4:12",
														"type": ""
													}
												],
												"src": "5258:348:12"
											},
											{
												"body": {
													"nativeSrc": "5785:179:12",
													"nodeType": "YulBlock",
													"src": "5785:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5802:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5802:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5813:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5795:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5795:6:12"
																},
																"nativeSrc": "5795:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5795:21:12"
															},
															"nativeSrc": "5795:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5795:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5836:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5836:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5847:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5847:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5832:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5832:3:12"
																		},
																		"nativeSrc": "5832:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5832:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5852:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5852:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5825:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5825:6:12"
																},
																"nativeSrc": "5825:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5825:30:12"
															},
															"nativeSrc": "5825:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5825:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5875:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5875:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5886:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5886:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5871:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5871:3:12"
																		},
																		"nativeSrc": "5871:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5871:18:12"
																	},
																	{
																		"hexValue": "436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465",
																		"kind": "string",
																		"nativeSrc": "5891:31:12",
																		"nodeType": "YulLiteral",
																		"src": "5891:31:12",
																		"type": "",
																		"value": "Chainlink: Round not complete"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5864:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5864:6:12"
																},
																"nativeSrc": "5864:59:12",
																"nodeType": "YulFunctionCall",
																"src": "5864:59:12"
															},
															"nativeSrc": "5864:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "5864:59:12"
														},
														{
															"nativeSrc": "5932:26:12",
															"nodeType": "YulAssignment",
															"src": "5932:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5944:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5944:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5955:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5955:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5940:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5940:3:12"
																},
																"nativeSrc": "5940:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5940:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5932:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5932:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5611:353:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5762:9:12",
														"nodeType": "YulTypedName",
														"src": "5762:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5776:4:12",
														"nodeType": "YulTypedName",
														"src": "5776:4:12",
														"type": ""
													}
												],
												"src": "5611:353:12"
											},
											{
												"body": {
													"nativeSrc": "6018:176:12",
													"nodeType": "YulBlock",
													"src": "6018:176:12",
													"statements": [
														{
															"nativeSrc": "6028:17:12",
															"nodeType": "YulAssignment",
															"src": "6028:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6040:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6040:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6043:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6043:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6036:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6036:3:12"
																},
																"nativeSrc": "6036:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6036:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6028:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6028:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6077:111:12",
																"nodeType": "YulBlock",
																"src": "6077:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6098:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6098:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6105:3:12",
																							"nodeType": "YulLiteral",
																							"src": "6105:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6110:10:12",
																							"nodeType": "YulLiteral",
																							"src": "6110:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6101:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "6101:3:12"
																					},
																					"nativeSrc": "6101:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6101:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6091:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6091:6:12"
																			},
																			"nativeSrc": "6091:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6091:31:12"
																		},
																		"nativeSrc": "6091:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6091:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6142:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6142:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6145:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6145:4:12",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6135:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6135:6:12"
																			},
																			"nativeSrc": "6135:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6135:15:12"
																		},
																		"nativeSrc": "6135:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6135:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6170:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6170:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6173:4:12",
																					"nodeType": "YulLiteral",
																					"src": "6173:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6163:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6163:6:12"
																			},
																			"nativeSrc": "6163:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6163:15:12"
																		},
																		"nativeSrc": "6163:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6163:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6060:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6060:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6066:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6066:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6057:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6057:2:12"
																},
																"nativeSrc": "6057:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6057:11:12"
															},
															"nativeSrc": "6054:134:12",
															"nodeType": "YulIf",
															"src": "6054:134:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5969:225:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6000:1:12",
														"nodeType": "YulTypedName",
														"src": "6000:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6003:1:12",
														"nodeType": "YulTypedName",
														"src": "6003:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6009:4:12",
														"nodeType": "YulTypedName",
														"src": "6009:4:12",
														"type": ""
													}
												],
												"src": "5969:225:12"
											},
											{
												"body": {
													"nativeSrc": "6373:172:12",
													"nodeType": "YulBlock",
													"src": "6373:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6390:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6390:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6401:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6401:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:12"
																},
																"nativeSrc": "6383:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6383:21:12"
															},
															"nativeSrc": "6383:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6383:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6435:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:12"
																		},
																		"nativeSrc": "6420:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6440:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6440:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6413:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6413:6:12"
																},
																"nativeSrc": "6413:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6413:30:12"
															},
															"nativeSrc": "6413:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6413:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6463:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6463:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6474:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6474:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6459:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6459:3:12"
																		},
																		"nativeSrc": "6459:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6459:18:12"
																	},
																	{
																		"hexValue": "436861696e6c696e6b3a205374616c65207072696365",
																		"kind": "string",
																		"nativeSrc": "6479:24:12",
																		"nodeType": "YulLiteral",
																		"src": "6479:24:12",
																		"type": "",
																		"value": "Chainlink: Stale price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6452:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6452:6:12"
																},
																"nativeSrc": "6452:52:12",
																"nodeType": "YulFunctionCall",
																"src": "6452:52:12"
															},
															"nativeSrc": "6452:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "6452:52:12"
														},
														{
															"nativeSrc": "6513:26:12",
															"nodeType": "YulAssignment",
															"src": "6513:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6525:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6525:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6536:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6536:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6521:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6521:3:12"
																},
																"nativeSrc": "6521:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6521:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6513:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6513:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6199:346:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6350:9:12",
														"nodeType": "YulTypedName",
														"src": "6350:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6364:4:12",
														"nodeType": "YulTypedName",
														"src": "6364:4:12",
														"type": ""
													}
												],
												"src": "6199:346:12"
											},
											{
												"body": {
													"nativeSrc": "6724:172:12",
													"nodeType": "YulBlock",
													"src": "6724:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6741:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6741:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6752:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6752:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6734:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6734:6:12"
																},
																"nativeSrc": "6734:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6734:21:12"
															},
															"nativeSrc": "6734:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6734:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6775:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6775:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6786:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6786:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6771:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6771:3:12"
																		},
																		"nativeSrc": "6771:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6791:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6791:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6764:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6764:6:12"
																},
																"nativeSrc": "6764:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6764:30:12"
															},
															"nativeSrc": "6764:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6764:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6814:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6814:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6825:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6825:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6810:3:12"
																		},
																		"nativeSrc": "6810:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6810:18:12"
																	},
																	{
																		"hexValue": "496e76616c6964206f72207374616c65207072696365",
																		"kind": "string",
																		"nativeSrc": "6830:24:12",
																		"nodeType": "YulLiteral",
																		"src": "6830:24:12",
																		"type": "",
																		"value": "Invalid or stale price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6803:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6803:6:12"
																},
																"nativeSrc": "6803:52:12",
																"nodeType": "YulFunctionCall",
																"src": "6803:52:12"
															},
															"nativeSrc": "6803:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "6803:52:12"
														},
														{
															"nativeSrc": "6864:26:12",
															"nodeType": "YulAssignment",
															"src": "6864:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6876:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6876:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6887:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6887:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6872:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6872:3:12"
																},
																"nativeSrc": "6872:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6872:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6864:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6864:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_226d2380e1281b8903155ae89694da3c8345f097a03e6d22e2f854af5bb0464e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6550:346:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6701:9:12",
														"nodeType": "YulTypedName",
														"src": "6701:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6715:4:12",
														"nodeType": "YulTypedName",
														"src": "6715:4:12",
														"type": ""
													}
												],
												"src": "6550:346:12"
											},
											{
												"body": {
													"nativeSrc": "7075:172:12",
													"nodeType": "YulBlock",
													"src": "7075:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7092:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7092:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7103:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7103:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7085:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7085:6:12"
																},
																"nativeSrc": "7085:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7085:21:12"
															},
															"nativeSrc": "7085:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7085:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7126:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7126:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7137:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7137:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7122:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7122:3:12"
																		},
																		"nativeSrc": "7122:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7122:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7142:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7142:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7115:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7115:6:12"
																},
																"nativeSrc": "7115:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7115:30:12"
															},
															"nativeSrc": "7115:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7115:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7165:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7165:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7176:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7176:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7161:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7161:3:12"
																		},
																		"nativeSrc": "7161:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7161:18:12"
																	},
																	{
																		"hexValue": "496e76616c696420736f757263652061646472657373",
																		"kind": "string",
																		"nativeSrc": "7181:24:12",
																		"nodeType": "YulLiteral",
																		"src": "7181:24:12",
																		"type": "",
																		"value": "Invalid source address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:12"
																},
																"nativeSrc": "7154:52:12",
																"nodeType": "YulFunctionCall",
																"src": "7154:52:12"
															},
															"nativeSrc": "7154:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "7154:52:12"
														},
														{
															"nativeSrc": "7215:26:12",
															"nodeType": "YulAssignment",
															"src": "7215:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7227:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7227:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7238:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7238:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7223:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7223:3:12"
																},
																"nativeSrc": "7223:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7223:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7215:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7215:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6901:346:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7052:9:12",
														"nodeType": "YulTypedName",
														"src": "7052:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7066:4:12",
														"nodeType": "YulTypedName",
														"src": "7066:4:12",
														"type": ""
													}
												],
												"src": "6901:346:12"
											},
											{
												"body": {
													"nativeSrc": "7426:166:12",
													"nodeType": "YulBlock",
													"src": "7426:166:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7443:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7443:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7454:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7454:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7436:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:12"
																},
																"nativeSrc": "7436:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7436:21:12"
															},
															"nativeSrc": "7436:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7436:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7477:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7477:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7488:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7488:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7473:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7473:3:12"
																		},
																		"nativeSrc": "7473:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7473:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7493:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7493:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7466:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7466:6:12"
																},
																"nativeSrc": "7466:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7466:30:12"
															},
															"nativeSrc": "7466:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7466:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7516:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7527:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7527:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7512:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:12"
																		},
																		"nativeSrc": "7512:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7512:18:12"
																	},
																	{
																		"hexValue": "4675747572652074696d657374616d70",
																		"kind": "string",
																		"nativeSrc": "7532:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7532:18:12",
																		"type": "",
																		"value": "Future timestamp"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7505:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:12"
																},
																"nativeSrc": "7505:46:12",
																"nodeType": "YulFunctionCall",
																"src": "7505:46:12"
															},
															"nativeSrc": "7505:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "7505:46:12"
														},
														{
															"nativeSrc": "7560:26:12",
															"nodeType": "YulAssignment",
															"src": "7560:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7572:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7572:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7583:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7583:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7568:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7568:3:12"
																},
																"nativeSrc": "7568:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7568:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7560:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7560:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7252:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7403:9:12",
														"nodeType": "YulTypedName",
														"src": "7403:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7417:4:12",
														"nodeType": "YulTypedName",
														"src": "7417:4:12",
														"type": ""
													}
												],
												"src": "7252:340:12"
											},
											{
												"body": {
													"nativeSrc": "7771:163:12",
													"nodeType": "YulBlock",
													"src": "7771:163:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7788:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7788:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7799:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7799:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7781:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7781:6:12"
																},
																"nativeSrc": "7781:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7781:21:12"
															},
															"nativeSrc": "7781:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7781:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7822:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7822:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7833:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7833:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7818:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7818:3:12"
																		},
																		"nativeSrc": "7818:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7818:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7838:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7838:2:12",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7811:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7811:6:12"
																},
																"nativeSrc": "7811:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7811:30:12"
															},
															"nativeSrc": "7811:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7811:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7861:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7861:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7872:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7872:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7857:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7857:3:12"
																		},
																		"nativeSrc": "7857:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7857:18:12"
																	},
																	{
																		"hexValue": "496e76616c6964207072696365",
																		"kind": "string",
																		"nativeSrc": "7877:15:12",
																		"nodeType": "YulLiteral",
																		"src": "7877:15:12",
																		"type": "",
																		"value": "Invalid price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7850:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7850:6:12"
																},
																"nativeSrc": "7850:43:12",
																"nodeType": "YulFunctionCall",
																"src": "7850:43:12"
															},
															"nativeSrc": "7850:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "7850:43:12"
														},
														{
															"nativeSrc": "7902:26:12",
															"nodeType": "YulAssignment",
															"src": "7902:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7914:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7914:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7925:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7925:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7910:3:12"
																},
																"nativeSrc": "7910:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7910:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7902:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7902:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7597:337:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7748:9:12",
														"nodeType": "YulTypedName",
														"src": "7748:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7762:4:12",
														"nodeType": "YulTypedName",
														"src": "7762:4:12",
														"type": ""
													}
												],
												"src": "7597:337:12"
											},
											{
												"body": {
													"nativeSrc": "8068:119:12",
													"nodeType": "YulBlock",
													"src": "8068:119:12",
													"statements": [
														{
															"nativeSrc": "8078:26:12",
															"nodeType": "YulAssignment",
															"src": "8078:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8090:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8090:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8101:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8101:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8086:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8086:3:12"
																},
																"nativeSrc": "8086:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8086:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8078:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8078:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8120:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8120:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8131:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8131:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8113:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8113:6:12"
																},
																"nativeSrc": "8113:25:12",
																"nodeType": "YulFunctionCall",
																"src": "8113:25:12"
															},
															"nativeSrc": "8113:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "8113:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8158:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8158:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8169:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8169:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8154:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8154:3:12"
																		},
																		"nativeSrc": "8154:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8154:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8174:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8174:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8147:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8147:6:12"
																},
																"nativeSrc": "8147:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8147:34:12"
															},
															"nativeSrc": "8147:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8147:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7939:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8029:9:12",
														"nodeType": "YulTypedName",
														"src": "8029:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8040:6:12",
														"nodeType": "YulTypedName",
														"src": "8040:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8048:6:12",
														"nodeType": "YulTypedName",
														"src": "8048:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8059:4:12",
														"nodeType": "YulTypedName",
														"src": "8059:4:12",
														"type": ""
													}
												],
												"src": "7939:248:12"
											},
											{
												"body": {
													"nativeSrc": "8366:181:12",
													"nodeType": "YulBlock",
													"src": "8366:181:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8383:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8383:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8394:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8394:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8376:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8376:6:12"
																},
																"nativeSrc": "8376:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8376:21:12"
															},
															"nativeSrc": "8376:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8376:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8417:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8417:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8428:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8428:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8413:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:12"
																		},
																		"nativeSrc": "8413:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8433:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8433:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8406:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:12"
																},
																"nativeSrc": "8406:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8406:30:12"
															},
															"nativeSrc": "8406:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8406:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8456:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8456:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8467:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8467:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8452:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8452:3:12"
																		},
																		"nativeSrc": "8452:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8452:18:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "8472:33:12",
																		"nodeType": "YulLiteral",
																		"src": "8472:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8445:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8445:6:12"
																},
																"nativeSrc": "8445:61:12",
																"nodeType": "YulFunctionCall",
																"src": "8445:61:12"
															},
															"nativeSrc": "8445:61:12",
															"nodeType": "YulExpressionStatement",
															"src": "8445:61:12"
														},
														{
															"nativeSrc": "8515:26:12",
															"nodeType": "YulAssignment",
															"src": "8515:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8527:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8527:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8538:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8538:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8523:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8523:3:12"
																},
																"nativeSrc": "8523:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8523:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8515:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8515:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8192:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8343:9:12",
														"nodeType": "YulTypedName",
														"src": "8343:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8357:4:12",
														"nodeType": "YulTypedName",
														"src": "8357:4:12",
														"type": ""
													}
												],
												"src": "8192:355:12"
											},
											{
												"body": {
													"nativeSrc": "8726:166:12",
													"nodeType": "YulBlock",
													"src": "8726:166:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8743:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8743:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8754:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8754:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8736:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8736:6:12"
																},
																"nativeSrc": "8736:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8736:21:12"
															},
															"nativeSrc": "8736:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8736:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8777:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8777:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8788:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8788:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8773:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8773:3:12"
																		},
																		"nativeSrc": "8773:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8773:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8793:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8793:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8766:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8766:6:12"
																},
																"nativeSrc": "8766:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8766:30:12"
															},
															"nativeSrc": "8766:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8766:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8816:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8816:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8827:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8827:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8812:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:12"
																		},
																		"nativeSrc": "8812:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8812:18:12"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "8832:18:12",
																		"nodeType": "YulLiteral",
																		"src": "8832:18:12",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8805:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8805:6:12"
																},
																"nativeSrc": "8805:46:12",
																"nodeType": "YulFunctionCall",
																"src": "8805:46:12"
															},
															"nativeSrc": "8805:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "8805:46:12"
														},
														{
															"nativeSrc": "8860:26:12",
															"nodeType": "YulAssignment",
															"src": "8860:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8872:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8872:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8883:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8883:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8868:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8868:3:12"
																},
																"nativeSrc": "8868:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8868:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8860:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8860:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8552:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8703:9:12",
														"nodeType": "YulTypedName",
														"src": "8703:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8717:4:12",
														"nodeType": "YulTypedName",
														"src": "8717:4:12",
														"type": ""
													}
												],
												"src": "8552:340:12"
											},
											{
												"body": {
													"nativeSrc": "9071:170:12",
													"nodeType": "YulBlock",
													"src": "9071:170:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9088:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9088:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9099:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9099:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9081:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9081:6:12"
																},
																"nativeSrc": "9081:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9081:21:12"
															},
															"nativeSrc": "9081:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9081:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9122:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9122:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9133:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9133:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9118:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9118:3:12"
																		},
																		"nativeSrc": "9118:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9118:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9138:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9138:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9111:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9111:6:12"
																},
																"nativeSrc": "9111:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9111:30:12"
															},
															"nativeSrc": "9111:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9111:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9161:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9161:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9172:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9172:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9157:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9157:3:12"
																		},
																		"nativeSrc": "9157:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9157:18:12"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "9177:22:12",
																		"nodeType": "YulLiteral",
																		"src": "9177:22:12",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9150:6:12"
																},
																"nativeSrc": "9150:50:12",
																"nodeType": "YulFunctionCall",
																"src": "9150:50:12"
															},
															"nativeSrc": "9150:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "9150:50:12"
														},
														{
															"nativeSrc": "9209:26:12",
															"nodeType": "YulAssignment",
															"src": "9209:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9221:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9221:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9232:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9232:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9217:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9217:3:12"
																},
																"nativeSrc": "9217:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9217:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9209:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9209:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8897:344:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9048:9:12",
														"nodeType": "YulTypedName",
														"src": "9048:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9062:4:12",
														"nodeType": "YulTypedName",
														"src": "9062:4:12",
														"type": ""
													}
												],
												"src": "8897:344:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$103__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 96))\n        value3 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 128))\n        value4 := value_3\n        let value_4 := 0\n        value_4 := calldataload(add(headStart, 160))\n        value5 := value_4\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 96))\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Invalid pair\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid source\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Chainlink: Invalid price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Chainlink: Round not complete\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Chainlink: Stale price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_226d2380e1281b8903155ae89694da3c8345f097a03e6d22e2f854af5bb0464e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid or stale price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid source address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Future timestamp\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c80638456cb59116100a2578063a5b5fb8811610071578063a5b5fb881461022c578063bc2698501461023d578063db7c1ad114610246578063f2fde38b14610278578063f3f699f11461028b57600080fd5b80638456cb59146101f85780638da5cb5b146102005780638e15f473146102115780639f97acb71461021957600080fd5b80633f4ba83a116100e95780633f4ba83a1461018b5780635c975abb146101935780636301a143146101a9578063715018a6146101c0578063741bef1a146101c857600080fd5b806301e9492f1461011b5780631fde7f26146101305780632806bce21461016557806331d98b3f14610178575b600080fd5b61012e610129366004610d29565b61029e565b005b61014361013e366004610d55565b61032f565b6040805193845260208401929092521515908201526060015b60405180910390f35b610143610173366004610d6e565b61034b565b610143610186366004610d55565b610531565b61012e610762565b60025460ff16604051901515815260200161015c565b6101b261038481565b60405190815260200161015c565b61012e610774565b6002546101e09061010090046001600160a01b031681565b6040516001600160a01b03909116815260200161015c565b61012e610786565b6000546001600160a01b03166101e0565b6101b26107cd565b61012e610227366004610d90565b610840565b6101b2661155548bd554d160ca1b81565b6101b2610e1081565b610143610254366004610d55565b60036020526000908152604090208054600182015460029092015490919060ff1683565b61012e610286366004610d6e565b610930565b61012e610299366004610dde565b61096e565b6102a6610ac2565b661155548bd554d160ca1b82146102d85760405162461bcd60e51b81526004016102cf90610e10565b60405180910390fd5b6002546001600160a01b03828116610100909204161461032b5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420736f7572636560901b60448201526064016102cf565b5050565b600080600061033d84610531565b9250925092505b9193909250565b600254600090819081906001600160a01b0385811661010090920416146103a55760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420736f7572636560901b60448201526064016102cf565b600260019054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa925050508015610414575060408051601f3d908101601f1916820190925261041191810190610e50565b60015b61042657506000915081905080610344565b600084136104715760405162461bcd60e51b8152602060048201526018602482015277436861696e6c696e6b3a20496e76616c696420707269636560401b60448201526064016102cf565b816000036104c15760405162461bcd60e51b815260206004820152601d60248201527f436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c65746500000060448201526064016102cf565b610e106104ce8342610ea2565b11156105155760405162461bcd60e51b8152602060048201526016602482015275436861696e6c696e6b3a205374616c6520707269636560501b60448201526064016102cf565b61051e84610aef565b8260019750975097505050505050610344565b6000806000661155548bd554d160ca1b841461055f5760405162461bcd60e51b81526004016102cf90610e10565b6000848152600360209081526040918290208251606081018452815481526001820154928101929092526002015460ff161580159282018390529091906105b757506103848160200151426105b49190610ea2565b11155b156105d2578051602090910151909350915060019050610344565b600260019054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa925050508015610641575060408051601f3d908101601f1916820190925261063e91810190610e50565b60015b61065657600080600093509350935050610344565b600084136106a15760405162461bcd60e51b8152602060048201526018602482015277436861696e6c696e6b3a20496e76616c696420707269636560401b60448201526064016102cf565b816000036106f15760405162461bcd60e51b815260206004820152601d60248201527f436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c65746500000060448201526064016102cf565b610e106106fe8342610ea2565b11156107455760405162461bcd60e51b8152602060048201526016602482015275436861696e6c696e6b3a205374616c6520707269636560501b60448201526064016102cf565b61074e84610aef565b826001985098509850505050505050610344565b61076a610ac2565b610772610b19565b565b61077c610ac2565b6107726000610b6b565b61078e610ac2565b610796610bbb565b604051661155548bd554d160ca1b907fd373a1ac37410a4da6def2d7f3f2e704aca3e95e2e251322a031eedda7eb686c90600090a2565b60008060006107e5661155548bd554d160ca1b610531565b9250509150806108305760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f72207374616c6520707269636560501b60448201526064016102cf565b61083982610bf8565b9250505090565b610848610ac2565b610850610c25565b661155548bd554d160ca1b86146108795760405162461bcd60e51b81526004016102cf90610e10565b6001600160a01b0385166108c85760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420736f75726365206164647265737360501b60448201526064016102cf565b600280546001600160a01b03878116610100818102610100600160a81b031985161790945560405193909204169182907fa8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d32175353690600090a35061092860018055565b505050505050565b610938610ac2565b6001600160a01b03811661096257604051631e4fbdf760e01b8152600060048201526024016102cf565b61096b81610b6b565b50565b610976610ac2565b61097e610c7e565b610986610c25565b661155548bd554d160ca1b84146109af5760405162461bcd60e51b81526004016102cf90610e10565b428211156109f25760405162461bcd60e51b815260206004820152601060248201526f04675747572652074696d657374616d760841b60448201526064016102cf565b60008311610a325760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420707269636560981b60448201526064016102cf565b604080516060810182528481526020808201858152600183850181815260008a81526003855286902094518555915190840155516002909201805460ff191692151592909217909155815185815290810184905285917fbcd10d64fce9dcf9568572ed92e371df336d32649e8960a045c9548794a44b26910160405180910390a2610abc60018055565b50505050565b6000546001600160a01b031633146107725760405163118cdaa760e01b81523360048201526024016102cf565b600080821215610b1557604051635467221960e11b8152600481018390526024016102cf565b5090565b610b21610cc4565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610bc3610c7e565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b4e3390565b60006001600160ff1b03821115610b155760405163123baf0360e11b8152600481018390526024016102cf565b600260015403610c775760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102cf565b6002600155565b60025460ff16156107725760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102cf565b60025460ff166107725760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102cf565b80356001600160a01b0381168114610d2457600080fd5b919050565b60008060408385031215610d3c57600080fd5b82359150610d4c60208401610d0d565b90509250929050565b600060208284031215610d6757600080fd5b5035919050565b600060208284031215610d8057600080fd5b610d8982610d0d565b9392505050565b60008060008060008060c08789031215610da957600080fd5b86359550610db960208801610d0d565b95989597505050506040840135936060810135936080820135935060a0909101359150565b60008060008060808587031215610df457600080fd5b5050823594602084013594506040840135936060013592509050565b6020808252600c908201526b24b73b30b634b2103830b4b960a11b604082015260600190565b805169ffffffffffffffffffff81168114610d2457600080fd5b600080600080600060a08688031215610e6857600080fd5b610e7186610e36565b60208701516040880151606089015192975090955093509150610e9660808701610e36565b90509295509295909350565b81810381811115610ec357634e487b7160e01b600052601160045260246000fd5b9291505056fea26469706673582212207291fd4fe34ff81e0314001620c823d0c3e4eb32da25a4fb0628886433539f4f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA5B5FB88 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA5B5FB88 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xBC269850 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xDB7C1AD1 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xF3F699F1 EQ PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x8E15F473 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x9F97ACB7 EQ PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x6301A143 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E9492F EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x1FDE7F26 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x2806BCE2 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x31D98B3F EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xD29 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x143 PUSH2 0x13E CALLDATASIZE PUSH1 0x4 PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x143 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH2 0x143 PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xD55 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x762 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x384 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x774 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1E0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15C JUMP JUMPDEST PUSH2 0x12E PUSH2 0x786 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0x7CD JUMP JUMPDEST PUSH2 0x12E PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0xD90 JUMP JUMPDEST PUSH2 0x840 JUMP JUMPDEST PUSH2 0x1B2 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP2 JUMP JUMPDEST PUSH2 0x1B2 PUSH2 0xE10 DUP2 JUMP JUMPDEST PUSH2 0x143 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0xD6E JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x96E JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0xAC2 JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP3 EQ PUSH2 0x2D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CF SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x32B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420736F75726365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x33D DUP5 PUSH2 0x531 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ PUSH2 0x3A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420736F75726365 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x414 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x411 SWAP2 DUP2 ADD SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x426 JUMPI POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x0 DUP5 SGT PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436861696E6C696E6B3A20496E76616C6964207072696365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x4C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x4CE DUP4 TIMESTAMP PUSH2 0xEA2 JUMP JUMPDEST GT ISZERO PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436861696E6C696E6B3A205374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x51E DUP5 PUSH2 0xAEF JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP5 EQ PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CF SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 SWAP2 SWAP1 PUSH2 0x5B7 JUMPI POP PUSH2 0x384 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0x5B4 SWAP2 SWAP1 PUSH2 0xEA2 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x5D2 JUMPI DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP4 POP SWAP2 POP PUSH1 0x1 SWAP1 POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x641 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x63E SWAP2 DUP2 ADD SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x344 JUMP JUMPDEST PUSH1 0x0 DUP5 SGT PUSH2 0x6A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x436861696E6C696E6B3A20496E76616C6964207072696365 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0xE10 PUSH2 0x6FE DUP4 TIMESTAMP PUSH2 0xEA2 JUMP JUMPDEST GT ISZERO PUSH2 0x745 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x436861696E6C696E6B3A205374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x74E DUP5 PUSH2 0xAEF JUMP JUMPDEST DUP3 PUSH1 0x1 SWAP9 POP SWAP9 POP SWAP9 POP POP POP POP POP POP POP PUSH2 0x344 JUMP JUMPDEST PUSH2 0x76A PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x772 PUSH2 0xB19 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x77C PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x772 PUSH1 0x0 PUSH2 0xB6B JUMP JUMPDEST PUSH2 0x78E PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x796 PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL SWAP1 PUSH32 0xD373A1AC37410A4DA6DEF2D7F3F2E704ACA3E95E2E251322A031EEDDA7EB686C SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x7E5 PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL PUSH2 0x531 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP DUP1 PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F72207374616C65207072696365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x839 DUP3 PUSH2 0xBF8 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x848 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x850 PUSH2 0xC25 JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP7 EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CF SWAP1 PUSH2 0xE10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420736F757263652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0xA8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP PUSH2 0x928 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x938 PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x962 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x96B DUP2 PUSH2 0xB6B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x976 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x97E PUSH2 0xC7E JUMP JUMPDEST PUSH2 0x986 PUSH2 0xC25 JUMP JUMPDEST PUSH7 0x1155548BD554D1 PUSH1 0xCA SHL DUP5 EQ PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CF SWAP1 PUSH2 0xE10 JUMP JUMPDEST TIMESTAMP DUP3 GT ISZERO PUSH2 0x9F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4675747572652074696D657374616D7 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x1 DUP4 DUP6 ADD DUP2 DUP2 MSTORE PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x3 DUP6 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD SWAP1 DUP5 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP6 SWAP2 PUSH32 0xBCD10D64FCE9DCF9568572ED92E371DF336D32649E8960A045C9548794A44B26 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xABC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54672219 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB21 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBC3 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xB4E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x123BAF03 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x772 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2CF JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xD4C PUSH1 0x20 DUP5 ADD PUSH2 0xD0D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD89 DUP3 PUSH2 0xD0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xDA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH2 0xDB9 PUSH1 0x20 DUP9 ADD PUSH2 0xD0D JUMP JUMPDEST SWAP6 SWAP9 SWAP6 SWAP8 POP POP POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP4 PUSH1 0x80 DUP3 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x24B73B30B634B2103830B4B9 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE71 DUP7 PUSH2 0xE36 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0xE96 PUSH1 0x80 DUP8 ADD PUSH2 0xE36 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xEC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x91FD4FE34FF81E0314001620C823D0C3E4EB32 0xDA 0x25 LOG4 0xFB MOD 0x28 DUP9 PUSH5 0x33539F4F64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "2047:4706:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6297:273;;;;;;:::i;:::-;;:::i;:::-;;4729:209;;;;;;:::i;:::-;;:::i;:::-;;;;924:25:12;;;980:2;965:18;;958:34;;;;1035:14;1028:22;1008:18;;;1001:50;912:2;897:18;4729:209:10;;;;;;;;4944:822;;;;;;:::i;:::-;;:::i;2917:1010::-;;;;;;:::i;:::-;;:::i;6686:65::-;;;:::i;1616:84:4:-;1686:7;;;;1616:84;;1418:14:12;;1411:22;1393:41;;1381:2;1366:18;1616:84:4;1253:187:12;2439:58:10;;2487:10;2439:58;;;;;1591:25:12;;;1579:2;1564:18;2439:58:10;1445:177:12;2293:101:3;;;:::i;2277:38:10:-;;;;;;;;-1:-1:-1;;;;;2277:38:10;;;;;;-1:-1:-1;;;;;1820:32:12;;;1802:51;;1790:2;1775:18;2277:38:10;1627:232:12;6576:104:10;;;:::i;1638:85:3:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:3;1638:85;;4491:232:10;;;:::i;5772:519::-;;;;;;:::i;:::-;;:::i;2321:57::-;;-1:-1:-1;;;2321:57:10;;2503:63;;2559:7;2503:63;;2384:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2543:215:3;;;;;;:::i;:::-;;:::i;3933:552:10:-;;;;;;:::i;:::-;;:::i;6297:273::-;1531:13:3;:11;:13::i;:::-;-1:-1:-1;;;6406:4:10::1;:20;6398:45;;;;-1:-1:-1::0;;;6398:45:10::1;;;;;;;:::i;:::-;;;;;;;;;6479:9;::::0;-1:-1:-1;;;;;6461:28:10;;::::1;6479:9;::::0;;::::1;;6461:28;6453:55;;;::::0;-1:-1:-1;;;6453:55:10;;4357:2:12;6453:55:10::1;::::0;::::1;4339:21:12::0;4396:2;4376:18;;;4369:30;-1:-1:-1;;;4415:18:12;;;4408:44;4469:18;;6453:55:10::1;4155:338:12::0;6453:55:10::1;6297:273:::0;;:::o;4729:209::-;4839:21;4862:17;4881:12;4917:14;4926:4;4917:8;:14::i;:::-;4910:21;;;;;;4729:209;;;;;;:::o;4944:822::-;5141:9;;5052:13;;;;;;-1:-1:-1;;;;;5123:28:10;;;5141:9;;;;;5123:28;5115:55;;;;-1:-1:-1;;;5115:55:10;;4357:2:12;5115:55:10;;;4339:21:12;4396:2;4376:18;;;4369:30;-1:-1:-1;;;4415:18:12;;;4408:44;4469:18;;5115:55:10;4155:338:12;5115:55:10;5184:9;;;;;;;;;-1:-1:-1;;;;;5184:9:10;-1:-1:-1;;;;;5184:25:10;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5184:27:10;;;;;;;;-1:-1:-1;;5184:27:10;;;;;;;;;;;;:::i;:::-;;;5180:580;;-1:-1:-1;5737:1:10;;-1:-1:-1;5737:1:10;;-1:-1:-1;5737:1:10;5729:20;;5180:580;5378:1;5368:6;:11;5364:51;;5381:34;;-1:-1:-1;;;5381:34:10;;5460:2:12;5381:34:10;;;5442:21:12;5499:2;5479:18;;;5472:30;-1:-1:-1;;;5518:18:12;;;5511:54;5582:18;;5381:34:10;5258:348:12;5364:51:10;5433:9;5446:1;5433:14;5429:59;;5449:39;;-1:-1:-1;;;5449:39:10;;5813:2:12;5449:39:10;;;5795:21:12;5852:2;5832:18;;;5825:30;5891:31;5871:18;;;5864:59;5940:18;;5449:39:10;5611:353:12;5429:59:10;2559:7;5506:27;5524:9;5506:15;:27;:::i;:::-;:59;5502:130;;;5585:32;;-1:-1:-1;;;5585:32:10;;6401:2:12;5585:32:10;;;6383:21:12;6440:2;6420:18;;;6413:30;-1:-1:-1;;;6459:18:12;;;6452:52;6521:18;;5585:32:10;6199:346:12;5502:130:10;5653:26;5672:6;5653:18;:26::i;:::-;5681:9;5692:4;5645:52;;;;;;;;;;;;;2917:1010;3015:13;3030:17;3049:12;-1:-1:-1;;;3086:4:10;:20;3078:45;;;;-1:-1:-1;;;3078:45:10;;;;;;;:::i;:::-;3133:21;3157:18;;;:12;:18;;;;;;;;;3133:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3190:73;;;2487:10;3224:4;:14;;;3206:15;:32;;;;:::i;:::-;:57;;3190:73;3186:145;;;3287:10;;3299:14;;;;;3287:10;;-1:-1:-1;3299:14:10;-1:-1:-1;3315:4:10;;-1:-1:-1;3279:41:10;;3186:145;3345:9;;;;;;;;;-1:-1:-1;;;;;3345:9:10;-1:-1:-1;;;;;3345:25:10;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3345:27:10;;;;;;;;-1:-1:-1;;3345:27:10;;;;;;;;;;;;:::i;:::-;;;3341:580;;3898:1;3901;3904:5;3890:20;;;;;;;;;3341:580;3539:1;3529:6;:11;3525:51;;3542:34;;-1:-1:-1;;;3542:34:10;;5460:2:12;3542:34:10;;;5442:21:12;5499:2;5479:18;;;5472:30;-1:-1:-1;;;5518:18:12;;;5511:54;5582:18;;3542:34:10;5258:348:12;3525:51:10;3594:9;3607:1;3594:14;3590:59;;3610:39;;-1:-1:-1;;;3610:39:10;;5813:2:12;3610:39:10;;;5795:21:12;5852:2;5832:18;;;5825:30;5891:31;5871:18;;;5864:59;5940:18;;3610:39:10;5611:353:12;3590:59:10;2559:7;3667:27;3685:9;3667:15;:27;:::i;:::-;:59;3663:130;;;3746:32;;-1:-1:-1;;;3746:32:10;;6401:2:12;3746:32:10;;;6383:21:12;6440:2;6420:18;;;6413:30;-1:-1:-1;;;6459:18:12;;;6452:52;6521:18;;3746:32:10;6199:346:12;3663:130:10;3814:26;3833:6;3814:18;:26::i;:::-;3842:9;3853:4;3806:52;;;;;;;;;;;;;;6686:65;1531:13:3;:11;:13::i;:::-;6734:10:10::1;:8;:10::i;:::-;6686:65::o:0;2293:101:3:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;6576:104:10:-:0;1531:13:3;:11;:13::i;:::-;6622:8:10::1;:6;:8::i;:::-;6645:28;::::0;-1:-1:-1;;;2360:18:10;6645:28:::1;::::0;;;::::1;6576:104::o:0;4491:232::-;4549:6;4568:13;4585:12;4601:22;-1:-1:-1;;;4601:8:10;:22::i;:::-;4567:56;;;;;4641:7;4633:42;;;;-1:-1:-1;;;4633:42:10;;6752:2:12;4633:42:10;;;6734:21:12;6791:2;6771:18;;;6764:30;-1:-1:-1;;;6810:18:12;;;6803:52;6872:18;;4633:42:10;6550:346:12;4633:42:10;4692:24;4710:5;4692:17;:24::i;:::-;4685:31;;;;4491:232;:::o;5772:519::-;1531:13:3;:11;:13::i;:::-;2262:21:5::1;:19;:21::i;:::-;-1:-1:-1::0;;;6036:4:10::2;:20;6028:45;;;;-1:-1:-1::0;;;6028:45:10::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6091:20:10;::::2;6083:55;;;::::0;-1:-1:-1;;;6083:55:10;;7103:2:12;6083:55:10::2;::::0;::::2;7085:21:12::0;7142:2;7122:18;;;7115:30;-1:-1:-1;;;7161:18:12;;;7154:52;7223:18;;6083:55:10::2;6901:346:12::0;6083:55:10::2;6175:9;::::0;;-1:-1:-1;;;;;6195:41:10;;::::2;6175:9;6195:41:::0;;::::2;-1:-1:-1::0;;;;;;6195:41:10;::::2;;::::0;;;6251:33:::2;::::0;6175:9;;;::::2;;::::0;;;6251:33:::2;::::0;6149:15:::2;::::0;6251:33:::2;6018:273;2304:20:5::1;1717:1:::0;2810:22;;2630:209;2304:20:::1;5772:519:10::0;;;;;;:::o;2543:215:3:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:3;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:3;;2700:1:::1;2672:31;::::0;::::1;1802:51:12::0;1775:18;;2672:31:3::1;1627:232:12::0;2623:91:3::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3933:552:10:-;1531:13:3;:11;:13::i;:::-;1240:19:4::1;:17;:19::i;:::-;2262:21:5::2;:19;:21::i;:::-;-1:-1:-1::0;;;4137:4:10::3;:20;4129:45;;;;-1:-1:-1::0;;;4129:45:10::3;;;;;;;:::i;:::-;4205:15;4192:9;:28;;4184:57;;;::::0;-1:-1:-1;;;4184:57:10;;7454:2:12;4184:57:10::3;::::0;::::3;7436:21:12::0;7493:2;7473:18;;;7466:30;-1:-1:-1;;;7512:18:12;;;7505:46;7568:18;;4184:57:10::3;7252:340:12::0;4184:57:10::3;4267:1;4259:5;:9;4251:35;;;::::0;-1:-1:-1;;;4251:35:10;;7799:2:12;4251:35:10::3;::::0;::::3;7781:21:12::0;7838:2;7818:18;;;7811:30;-1:-1:-1;;;7857:18:12;;;7850:43;7910:18;;4251:35:10::3;7597:337:12::0;4251:35:10::3;4318:108;::::0;;::::3;::::0;::::3;::::0;;;;;::::3;::::0;;::::3;::::0;;;4411:4:::3;4318:108:::0;;;;;;-1:-1:-1;4297:18:10;;;:12:::3;:18:::0;;;;;:129;;;;;;;;::::3;::::0;;::::3;::::0;;::::3;::::0;;-1:-1:-1;;4297:129:10::3;::::0;::::3;;::::0;;;::::3;::::0;;;4442:36;;8113:25:12;;;8154:18;;;8147:34;;;4297:18:10;;4442:36:::3;::::0;8086:18:12;4442:36:10::3;;;;;;;2304:20:5::2;1717:1:::0;2810:22;;2630:209;2304:20:::2;3933:552:10::0;;;;:::o;1796:162:3:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:3;735:10:6;1855:23:3;1851:101;;1901:40;;-1:-1:-1;;;1901:40:3;;735:10:6;1901:40:3;;;1802:51:12;1775:18;;1901:40:3;1627:232:12;17171:193:7;17227:7;17258:1;17250:5;:9;17246:81;;;17282:34;;-1:-1:-1;;;17282:34:7;;;;;1591:25:12;;;1564:18;;17282:34:7;1445:177:12;17246:81:7;-1:-1:-1;17351:5:7;17171:193::o;2434:117:4:-;1487:16;:14;:16::i;:::-;2492:7:::1;:15:::0;;-1:-1:-1;;2492:15:4::1;::::0;;2522:22:::1;735:10:6::0;2531:12:4::1;2522:22;::::0;-1:-1:-1;;;;;1820:32:12;;;1802:51;;1790:2;1775:18;2522:22:4::1;;;;;;;2434:117::o:0;2912:187:3:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:3;;;-1:-1:-1;;;;;;3020:17:3;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2187:115:4:-;1240:19;:17;:19::i;:::-;2246:7:::1;:14:::0;;-1:-1:-1;;2246:14:4::1;2256:4;2246:14;::::0;;2275:20:::1;2282:12;735:10:6::0;;656:96;34380:314:7;34436:6;-1:-1:-1;;;;;34557:5:7;:33;34553:105;;;34613:34;;-1:-1:-1;;;34613:34:7;;;;;1591:25:12;;;1564:18;;34613:34:7;1445:177:12;2337:287:5;1760:1;2469:7;;:19;2461:63;;;;-1:-1:-1;;;2461:63:5;;8394:2:12;2461:63:5;;;8376:21:12;8433:2;8413:18;;;8406:30;8472:33;8452:18;;;8445:61;8523:18;;2461:63:5;8192:355:12;2461:63:5;1760:1;2599:7;:18;2337:287::o;1768:106:4:-;1686:7;;;;1837:9;1829:38;;;;-1:-1:-1;;;1829:38:4;;8754:2:12;1829:38:4;;;8736:21:12;8793:2;8773:18;;;8766:30;-1:-1:-1;;;8812:18:12;;;8805:46;8868:18;;1829:38:4;8552:340:12;1946:106:4;1686:7;;;;2004:41;;;;-1:-1:-1;;;2004:41:4;;9099:2:12;2004:41:4;;;9081:21:12;9138:2;9118:18;;;9111:30;-1:-1:-1;;;9157:18:12;;;9150:50;9217:18;;2004:41:4;8897:344:12;14:173;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:300::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;382:23;;;-1:-1:-1;448:38:12;482:2;467:18;;448:38;:::i;:::-;438:48;;192:300;;;;;:::o;497:226::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;670:23:12;;497:226;-1:-1:-1;497:226:12:o;1062:186::-;1121:6;1174:2;1162:9;1153:7;1149:23;1145:32;1142:52;;;1190:1;1187;1180:12;1142:52;1213:29;1232:9;1213:29;:::i;:::-;1203:39;1062:186;-1:-1:-1;;;1062:186:12:o;2252:783::-;2356:6;2364;2372;2380;2388;2396;2449:3;2437:9;2428:7;2424:23;2420:33;2417:53;;;2466:1;2463;2456:12;2417:53;2511:23;;;-1:-1:-1;2577:38:12;2611:2;2596:18;;2577:38;:::i;:::-;2252:783;;2567:48;;-1:-1:-1;;;;2688:2:12;2673:18;;2660:32;;2791:2;2776:18;;2763:32;;2894:3;2879:19;;2866:33;;-1:-1:-1;2998:3:12;2983:19;;;2970:33;;-1:-1:-1;2252:783:12:o;3222:587::-;3308:6;3316;3324;3332;3385:3;3373:9;3364:7;3360:23;3356:33;3353:53;;;3402:1;3399;3392:12;3353:53;-1:-1:-1;;3447:23:12;;;3567:2;3552:18;;3539:32;;-1:-1:-1;3670:2:12;3655:18;;3642:32;;3773:2;3758:18;3745:32;;-1:-1:-1;3222:587:12;-1:-1:-1;3222:587:12:o;3814:336::-;4016:2;3998:21;;;4055:2;4035:18;;;4028:30;-1:-1:-1;;;4089:2:12;4074:18;;4067:42;4141:2;4126:18;;3814:336::o;4498:179::-;4576:13;;4629:22;4618:34;;4608:45;;4598:73;;4667:1;4664;4657:12;4682:571;4785:6;4793;4801;4809;4817;4870:3;4858:9;4849:7;4845:23;4841:33;4838:53;;;4887:1;4884;4877:12;4838:53;4910:39;4939:9;4910:39;:::i;:::-;4989:2;4974:18;;4968:25;5055:2;5040:18;;5034:25;5149:2;5134:18;;5128:25;4900:49;;-1:-1:-1;4968:25:12;;-1:-1:-1;5034:25:12;-1:-1:-1;5128:25:12;-1:-1:-1;5198:49:12;5242:3;5227:19;;5198:49;:::i;:::-;5188:59;;4682:571;;;;;;;;:::o;5969:225::-;6036:9;;;6057:11;;;6054:134;;;6110:10;6105:3;6101:20;6098:1;6091:31;6145:4;6142:1;6135:15;6173:4;6170:1;6163:15;6054:134;5969:225;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "767800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CHAINLINK_STALENESS_THRESHOLD()": "239",
								"EUR_USD_PAIR()": "223",
								"PRICE_VALIDITY_PERIOD()": "262",
								"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)": "57832",
								"getAggregatedPrice(bytes32)": "infinite",
								"getLatestPrice()": "infinite",
								"getPrice(bytes32)": "infinite",
								"getSourcePrice(address)": "infinite",
								"latestPrices(bytes32)": "6780",
								"owner()": "2376",
								"pause()": "infinite",
								"paused()": "2337",
								"priceFeed()": "2459",
								"removeOracleSource(bytes32,address)": "4819",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28421",
								"unpause()": "infinite",
								"updatePrice(bytes32,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2047,
									"end": 6753,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2700,
									"end": 2911,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2700,
									"end": 2911,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2762,
									"end": 2774,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1717,
									"end": 1718,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1822,
									"end": 1844,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1822,
									"end": 1844,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 997,
									"end": 1004,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2794,
									"end": 2818,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2794,
									"end": 2818,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2786,
									"end": 2849,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2786,
									"end": 2849,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2786,
									"end": 2849,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2786,
									"end": 2849,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2786,
									"end": 2849,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2786,
									"end": 2849,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 904,
									"end": 906,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2786,
									"end": 2849,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2786,
									"end": 2849,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2786,
									"end": 2849,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 886,
									"end": 907,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 943,
									"end": 945,
									"name": "PUSH",
									"source": 12,
									"value": "1A"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 923,
									"end": 941,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 923,
									"end": 941,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 916,
									"end": 946,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 982,
									"end": 1010,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C696420707269636520666565642061646472657373000000000000"
								},
								{
									"begin": 962,
									"end": 980,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 962,
									"end": 980,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 962,
									"end": 980,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1011,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1028,
									"end": 1046,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1028,
									"end": 1046,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2849,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 702,
									"end": 1052,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2786,
									"end": 2849,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2786,
									"end": 2849,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2859,
									"end": 2868,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2859,
									"end": 2904,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2904,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1052,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 702,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 6753,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207291fd4fe34ff81e0314001620c823d0c3e4eb32da25a4fb0628886433539f4f64736f6c634300081c0033",
									".code": [
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "A5B5FB88"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "A5B5FB88"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "BC269850"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "DB7C1AD1"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "F3F699F1"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "8E15F473"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "9F97ACB7"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "6301A143"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "741BEF1A"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "1E9492F"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "1FDE7F26"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "2806BCE2"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "31D98B3F"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2047,
											"end": 6753,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 6297,
											"end": 6570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 6297,
											"end": 6570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 4729,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 4729,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 924,
											"end": 949,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 924,
											"end": 949,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 924,
											"end": 949,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 980,
											"end": 982,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 965,
											"end": 983,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 965,
											"end": 983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 958,
											"end": 992,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 958,
											"end": 992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 958,
											"end": 992,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 958,
											"end": 992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1028,
											"end": 1050,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1051,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 912,
											"end": 914,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 897,
											"end": 915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4944,
											"end": 5766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4944,
											"end": 5766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2917,
											"end": 3927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2917,
											"end": 3927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6751,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 6686,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6686,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6686,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1418,
											"end": 1432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1432,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1393,
											"end": 1434,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1393,
											"end": 1434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1253,
											"end": 1440,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2487,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1581,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1445,
											"end": 1622,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1790,
											"end": 1792,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2277,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1627,
											"end": 1859,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6576,
											"end": 6680,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 6576,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6576,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6576,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6576,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4491,
											"end": 4723,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 4491,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 4491,
											"end": 4723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4491,
											"end": 4723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 5772,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5772,
											"end": 6291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2378,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2321,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2378,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2378,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2566,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2503,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2559,
											"end": 2566,
											"name": "PUSH",
											"source": 10,
											"value": "E10"
										},
										{
											"begin": 2503,
											"end": 2566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2566,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2384,
											"end": 2433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2433,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 3933,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 3933,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6410,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6406,
											"end": 6426,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 6398,
											"end": 6443,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 6398,
											"end": 6443,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6479,
											"end": 6488,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6461,
											"end": 6489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6461,
											"end": 6489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6461,
											"end": 6489,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6479,
											"end": 6488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6488,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6488,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6479,
											"end": 6488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6461,
											"end": 6489,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 6453,
											"end": 6508,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6453,
											"end": 6508,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6453,
											"end": 6508,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6508,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6453,
											"end": 6508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6453,
											"end": 6508,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6453,
											"end": 6508,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4360,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4399,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420736F75726365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4452,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4469,
											"end": 4487,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4469,
											"end": 4487,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6453,
											"end": 6508,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4155,
											"end": 4493,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6453,
											"end": 6508,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 6453,
											"end": 6508,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6297,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4839,
											"end": 4860,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4879,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 4926,
											"end": 4930,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 4925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 4917,
											"end": 4931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4917,
											"end": 4931,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 4917,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4931,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4729,
											"end": 4938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 4944,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5052,
											"end": 5065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5151,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5151,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5141,
											"end": 5150,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5123,
											"end": 5151,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4339,
											"end": 4360,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4394,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4399,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420736F75726365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4452,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4469,
											"end": 4487,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4469,
											"end": 4487,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4155,
											"end": 4493,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5115,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5209,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5209,
											"name": "PUSH",
											"source": 10,
											"value": "FEAF968C"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 5184,
											"end": 5211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 5180,
											"end": 5760,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5737,
											"end": 5738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5738,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5737,
											"end": 5738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5737,
											"end": 5738,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5737,
											"end": 5738,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5180,
											"end": 5760,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 5180,
											"end": 5760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5378,
											"end": 5379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5379,
											"name": "SGT",
											"source": 10
										},
										{
											"begin": 5364,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 5364,
											"end": 5415,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5381,
											"end": 5415,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5381,
											"end": 5415,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5381,
											"end": 5415,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5381,
											"end": 5415,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5460,
											"end": 5462,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5381,
											"end": 5415,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5381,
											"end": 5415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5381,
											"end": 5415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5463,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436861696E6C696E6B3A20496E76616C6964207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5511,
											"end": 5565,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5381,
											"end": 5415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5258,
											"end": 5606,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5364,
											"end": 5415,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 5364,
											"end": 5415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5446,
											"end": 5447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5447,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5429,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5429,
											"end": 5488,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5488,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5449,
											"end": 5488,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5449,
											"end": 5488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5488,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5449,
											"end": 5488,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5449,
											"end": 5488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5488,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5795,
											"end": 5816,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5854,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 5832,
											"end": 5850,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5832,
											"end": 5850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5891,
											"end": 5922,
											"name": "PUSH",
											"source": 12,
											"value": "436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000"
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5923,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5449,
											"end": 5488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5611,
											"end": 5964,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5429,
											"end": 5488,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 5429,
											"end": 5488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2566,
											"name": "PUSH",
											"source": 10,
											"value": "E10"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 5524,
											"end": 5533,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5521,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 5506,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 5506,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5565,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 5502,
											"end": 5632,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6401,
											"end": 6403,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6404,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6440,
											"end": 6442,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436861696E6C696E6B3A205374616C65207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6452,
											"end": 6504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5585,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6199,
											"end": 6545,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5502,
											"end": 5632,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 5502,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5653,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 5672,
											"end": 5678,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5653,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 5653,
											"end": 5679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5653,
											"end": 5679,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 5653,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5681,
											"end": 5690,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5692,
											"end": 5696,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5645,
											"end": 5697,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2917,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3015,
											"end": 3028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3047,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3049,
											"end": 3061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3086,
											"end": 3090,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3106,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3078,
											"end": 3123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 3078,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3175,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2497,
											"name": "PUSH",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 3224,
											"end": 3228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3238,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3238,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3224,
											"end": 3238,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3221,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3206,
											"end": 3238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3263,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3206,
											"end": 3263,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3331,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3186,
											"end": 3331,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3297,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3297,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3297,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3287,
											"end": 3297,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3313,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3319,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3315,
											"end": 3319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3279,
											"end": 3320,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3331,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 3186,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3345,
											"end": 3354,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3345,
											"end": 3370,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3370,
											"name": "PUSH",
											"source": 10,
											"value": "FEAF968C"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 3345,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 3345,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3341,
											"end": 3921,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3904,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3890,
											"end": 3910,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3921,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 3341,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3535,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3540,
											"name": "SGT",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3525,
											"end": 3576,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5460,
											"end": 5462,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5463,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5499,
											"end": 5501,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5479,
											"end": 5497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5472,
											"end": 5502,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436861696E6C696E6B3A20496E76616C6964207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5518,
											"end": 5536,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5511,
											"end": 5565,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3542,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5258,
											"end": 5606,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3576,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3525,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3608,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3590,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3590,
											"end": 3649,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3649,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3649,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3610,
											"end": 3649,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3649,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3649,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3649,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5795,
											"end": 5816,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5854,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 5832,
											"end": 5850,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5832,
											"end": 5850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5850,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5891,
											"end": 5922,
											"name": "PUSH",
											"source": 12,
											"value": "436861696E6C696E6B3A20526F756E64206E6F7420636F6D706C657465000000"
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5871,
											"end": 5889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5923,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3610,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5611,
											"end": 5964,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3590,
											"end": 3649,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3590,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2566,
											"name": "PUSH",
											"source": 10,
											"value": "E10"
										},
										{
											"begin": 3667,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3685,
											"end": 3694,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3667,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 3667,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3667,
											"end": 3694,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3667,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3667,
											"end": 3726,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3793,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3663,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3663,
											"end": 3793,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3746,
											"end": 3778,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 3778,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3746,
											"end": 3778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3746,
											"end": 3778,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6401,
											"end": 6403,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3746,
											"end": 3778,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3746,
											"end": 3778,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3746,
											"end": 3778,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6383,
											"end": 6404,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6440,
											"end": 6442,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6420,
											"end": 6438,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6413,
											"end": 6443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "436861696E6C696E6B3A205374616C65207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6459,
											"end": 6477,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6452,
											"end": 6504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3746,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6199,
											"end": 6545,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3663,
											"end": 3793,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3663,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3833,
											"end": 3839,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 3814,
											"end": 3840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "SWAP9",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3806,
											"end": 3858,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6751,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6686,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6734,
											"end": 6742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 6734,
											"end": 6744,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 6734,
											"end": 6744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6686,
											"end": 6751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6576,
											"end": 6680,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6576,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6622,
											"end": 6630,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6622,
											"end": 6628,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 6622,
											"end": 6630,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6622,
											"end": 6630,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 6622,
											"end": 6630,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6645,
											"end": 6673,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2360,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "D373A1AC37410A4DA6DEF2D7F3F2E704ACA3E95E2E251322A031EEDDA7EB686C"
										},
										{
											"begin": 6645,
											"end": 6673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6645,
											"end": 6673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6645,
											"end": 6673,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 6576,
											"end": 6680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4723,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4491,
											"end": 4723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4581,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4585,
											"end": 4597,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4601,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 4601,
											"end": 4623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 4601,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4623,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4567,
											"end": 4623,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4641,
											"end": 4648,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6752,
											"end": 6754,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6734,
											"end": 6755,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6791,
											"end": 6793,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 6771,
											"end": 6789,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6771,
											"end": 6789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6771,
											"end": 6789,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 6794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206F72207374616C65207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6803,
											"end": 6855,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6872,
											"end": 6890,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6550,
											"end": 6896,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 4633,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4710,
											"end": 4715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4709,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4692,
											"end": 4716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4692,
											"end": 4716,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 4692,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4716,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4716,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2262,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6040,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6036,
											"end": 6056,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 6028,
											"end": 6073,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 6028,
											"end": 6073,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6091,
											"end": 6111,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6091,
											"end": 6111,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6138,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 6083,
											"end": 6138,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6083,
											"end": 6138,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6083,
											"end": 6138,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6138,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7103,
											"end": 7105,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6083,
											"end": 6138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6083,
											"end": 6138,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6138,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7085,
											"end": 7106,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7142,
											"end": 7144,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7115,
											"end": 7145,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420736F757263652061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7161,
											"end": 7179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7154,
											"end": 7206,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7223,
											"end": 7241,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6083,
											"end": 6138,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6901,
											"end": 7247,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6083,
											"end": 6138,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 6083,
											"end": 6138,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6195,
											"end": 6236,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6236,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6236,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6195,
											"end": 6236,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6236,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6236,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6195,
											"end": 6236,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6236,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6236,
											"modifierDepth": 2,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6236,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6195,
											"end": 6236,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6284,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6284,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6284,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A8ABE0398416476DB5B05737CD4DA3B3CBDE5012D978A6A6C3FD49D321753536"
										},
										{
											"begin": 6251,
											"end": 6284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6149,
											"end": 6164,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6149,
											"end": 6164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6284,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6291,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2839,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5772,
											"end": 6291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1627,
											"end": 1859,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1240,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2262,
											"end": 2281,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1155548BD554D1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4141,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4157,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 4129,
											"end": 4174,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 4129,
											"end": 4174,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4205,
											"end": 4220,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4201,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4220,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4220,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4241,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 4184,
											"end": 4241,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4241,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4184,
											"end": 4241,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4184,
											"end": 4241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7454,
											"end": 7456,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4184,
											"end": 4241,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4184,
											"end": 4241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4184,
											"end": 4241,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7436,
											"end": 7457,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7493,
											"end": 7495,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7466,
											"end": 7496,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4675747572652074696D657374616D7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7505,
											"end": 7551,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7568,
											"end": 7586,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7568,
											"end": 7586,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4241,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7252,
											"end": 7592,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4241,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 4184,
											"end": 4241,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4267,
											"end": 4268,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4264,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4259,
											"end": 4268,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4286,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4251,
											"end": 4286,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4286,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4251,
											"end": 4286,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4286,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4286,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7799,
											"end": 7801,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4251,
											"end": 4286,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4251,
											"end": 4286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4251,
											"end": 4286,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7781,
											"end": 7802,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7841,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207072696365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7850,
											"end": 7893,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7910,
											"end": 7928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4251,
											"end": 4286,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7597,
											"end": 7934,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4251,
											"end": 4286,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4251,
											"end": 4286,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4415,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4318,
											"end": 4426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4309,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4297,
											"end": 4426,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"modifierDepth": 3,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4426,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4478,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4478,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8113,
											"end": 8138,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8113,
											"end": 8138,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8113,
											"end": 8138,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8154,
											"end": 8172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8147,
											"end": 8181,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8147,
											"end": 8181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8147,
											"end": 8181,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4478,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "BCD10D64FCE9DCF9568572ED92E371DF336D32649E8960A045C9548794A44B26"
										},
										{
											"begin": 4442,
											"end": 4478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4442,
											"end": 4478,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4442,
											"end": 4478,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4478,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4478,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4478,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4478,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4442,
											"end": 4478,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2839,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 2,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 4485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3933,
											"end": 4485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1627,
											"end": 1859,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17171,
											"end": 17364,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 17171,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17227,
											"end": 17234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17258,
											"end": 17259,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 17250,
											"end": 17255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17250,
											"end": 17259,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54672219"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17282,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1445,
											"end": 1622,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 17246,
											"end": 17327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17351,
											"end": 17356,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17171,
											"end": 17364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2434,
											"end": 2551,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2434,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1487,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1487,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2507,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2531,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2544,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1853,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1790,
											"end": 1792,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2302,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 2187,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2256,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2246,
											"end": 2260,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2275,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2282,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 34380,
											"end": 34694,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 34380,
											"end": 34694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 34436,
											"end": 34442,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34557,
											"end": 34562,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 34557,
											"end": 34590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 34553,
											"end": 34658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 34553,
											"end": 34658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 34553,
											"end": 34658,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 34613,
											"end": 34647,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 34613,
											"end": 34647,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "123BAF03"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34613,
											"end": 34647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 34613,
											"end": 34647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 34613,
											"end": 34647,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 34613,
											"end": 34647,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 34613,
											"end": 34647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1564,
											"end": 1582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 34613,
											"end": 34647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1445,
											"end": 1622,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2337,
											"end": 2624,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2337,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8394,
											"end": 8396,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8376,
											"end": 8397,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8433,
											"end": 8435,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8406,
											"end": 8436,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8472,
											"end": 8505,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8445,
											"end": 8506,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8192,
											"end": 8547,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1768,
											"end": 1874,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1768,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8754,
											"end": 8756,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8736,
											"end": 8757,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8793,
											"end": 8795,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 8796,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8805,
											"end": 8851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8552,
											"end": 8892,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1946,
											"end": 2052,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1946,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9099,
											"end": 9101,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9081,
											"end": 9102,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9138,
											"end": 9140,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9118,
											"end": 9136,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9111,
											"end": 9141,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9150,
											"end": 9200,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9217,
											"end": 9235,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9217,
											"end": 9235,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 8897,
											"end": 9241,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 192,
											"end": 492,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 192,
											"end": 492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 382,
											"end": 405,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 382,
											"end": 405,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 382,
											"end": 405,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 448,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 482,
											"end": 484,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 467,
											"end": 485,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 467,
											"end": 485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 448,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 448,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 448,
											"end": 486,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 448,
											"end": 486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 438,
											"end": 486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 438,
											"end": 486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 192,
											"end": 492,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 192,
											"end": 492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 192,
											"end": 492,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 192,
											"end": 492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 192,
											"end": 492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 192,
											"end": 492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 497,
											"end": 723,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 497,
											"end": 723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 556,
											"end": 562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 606,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 584,
											"end": 607,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 577,
											"end": 629,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 577,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 615,
											"end": 627,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 577,
											"end": 629,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 670,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 670,
											"end": 693,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 497,
											"end": 723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1248,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1062,
											"end": 1248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1176,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1149,
											"end": 1172,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1145,
											"end": 1177,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1190,
											"end": 1191,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1180,
											"end": 1192,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 1142,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1213,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1242,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 1213,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1203,
											"end": 1242,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1248,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1062,
											"end": 1248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2252,
											"end": 3035,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 2252,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2356,
											"end": 2362,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2370,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2372,
											"end": 2378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2402,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2428,
											"end": 2435,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2424,
											"end": 2447,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2420,
											"end": 2453,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2417,
											"end": 2470,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2417,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2417,
											"end": 2470,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2466,
											"end": 2467,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2456,
											"end": 2468,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2417,
											"end": 2470,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 2417,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 2611,
											"end": 2613,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2577,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2577,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2577,
											"end": 2615,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 2577,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2252,
											"end": 3035,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2252,
											"end": 3035,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2615,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2615,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2688,
											"end": 2690,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2673,
											"end": 2691,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2660,
											"end": 2692,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2660,
											"end": 2692,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2791,
											"end": 2793,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2776,
											"end": 2794,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2794,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2763,
											"end": 2795,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2763,
											"end": 2795,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2897,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2879,
											"end": 2898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2879,
											"end": 2898,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2866,
											"end": 2899,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2970,
											"end": 3003,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2970,
											"end": 3003,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2252,
											"end": 3035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3809,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 3222,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3314,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3322,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3324,
											"end": 3330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3388,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3373,
											"end": 3382,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3383,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3356,
											"end": 3389,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3406,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 3353,
											"end": 3406,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3403,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3400,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3404,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3353,
											"end": 3406,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 3353,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3447,
											"end": 3470,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3447,
											"end": 3470,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3447,
											"end": 3470,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3569,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3571,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3571,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3672,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3655,
											"end": 3673,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3655,
											"end": 3673,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3674,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3674,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3773,
											"end": 3775,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3745,
											"end": 3777,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3745,
											"end": 3777,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3809,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 4150,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 3814,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4016,
											"end": 4018,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4019,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 4035,
											"end": 4053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4053,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4028,
											"end": 4058,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B2103830B4B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4091,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4074,
											"end": 4092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4109,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4141,
											"end": 4143,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4126,
											"end": 4144,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4126,
											"end": 4144,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 4150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 4677,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4498,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4589,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4576,
											"end": 4589,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4629,
											"end": 4651,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4618,
											"end": 4652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4652,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4653,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4608,
											"end": 4653,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 4598,
											"end": 4671,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4667,
											"end": 4668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4665,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4657,
											"end": 4669,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4793,
											"end": 4799,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4815,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4817,
											"end": 4823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4873,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4858,
											"end": 4867,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4849,
											"end": 4856,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4868,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4841,
											"end": 4874,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4838,
											"end": 4891,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4838,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 4838,
											"end": 4891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4887,
											"end": 4888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4885,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4838,
											"end": 4891,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 4838,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4910,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 4939,
											"end": 4948,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4910,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4910,
											"end": 4949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4910,
											"end": 4949,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 4910,
											"end": 4949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4989,
											"end": 4991,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 4993,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5057,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5040,
											"end": 5058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5034,
											"end": 5059,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5134,
											"end": 5152,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5134,
											"end": 5152,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5128,
											"end": 5153,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4900,
											"end": 4949,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4900,
											"end": 4949,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4968,
											"end": 4993,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4968,
											"end": 4993,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5034,
											"end": 5059,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5128,
											"end": 5153,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5198,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 5242,
											"end": 5245,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5227,
											"end": 5246,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5198,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 5198,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5198,
											"end": 5247,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 5198,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5188,
											"end": 5247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 5253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5969,
											"end": 6194,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 5969,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6036,
											"end": 6045,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6068,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6068,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6057,
											"end": 6068,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6188,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 6054,
											"end": 6188,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6110,
											"end": 6120,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 6105,
											"end": 6108,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 6101,
											"end": 6121,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6099,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6149,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 6142,
											"end": 6143,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6173,
											"end": 6177,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6170,
											"end": 6171,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6178,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6054,
											"end": 6188,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 6054,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5969,
											"end": 6194,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5969,
											"end": 6194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5969,
											"end": 6194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5969,
											"end": 6194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5969,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"interfaces/IUBI4ALLQuantum.sol",
								"interfaces/IUBI4ALLQuantumFinance.sol",
								"oracle/UBI4ALLOracle.sol",
								"quantum/UBI4ALLQuantumFinance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CHAINLINK_STALENESS_THRESHOLD()": "bc269850",
							"EUR_USD_PAIR()": "a5b5fb88",
							"PRICE_VALIDITY_PERIOD()": "6301a143",
							"addOracleSource(bytes32,address,uint256,uint256,uint256,uint256)": "9f97acb7",
							"getAggregatedPrice(bytes32)": "1fde7f26",
							"getLatestPrice()": "8e15f473",
							"getPrice(bytes32)": "31d98b3f",
							"getSourcePrice(address)": "2806bce2",
							"latestPrices(bytes32)": "db7c1ad1",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"priceFeed()": "741bef1a",
							"removeOracleSource(bytes32,address)": "01e9492f",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updatePrice(bytes32,uint256,uint256,uint256)": "f3f699f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"EmergencyPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeed\",\"type\":\"address\"}],\"name\":\"PriceFeedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CHAINLINK_STALENESS_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EUR_USD_PAIR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_VALIDITY_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addOracleSource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"getAggregatedPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"getSourcePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"latestPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"removeOracleSource\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pair\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getLatestPrice()\":{\"returns\":{\"_0\":\"Prezzo pi\\u00f9 recente come int256\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"UBI4ALLOracle - Oracolo per il prezzo EUR/USD\",\"version\":1},\"userdoc\":{\"events\":{\"PriceUpdated(bytes32,uint256,uint256)\":{\"notice\":\"Emesso quando il prezzo viene aggiornato\"}},\"kind\":\"user\",\"methods\":{\"getAggregatedPrice(bytes32)\":{\"notice\":\"Ottiene il prezzo aggregato per una coppia\"},\"getLatestPrice()\":{\"notice\":\"Ottiene il prezzo pi\\u00f9 recente per la coppia EUR/USD\"},\"getPrice(bytes32)\":{\"notice\":\"Ottiene il prezzo pi\\u00f9 recente per una coppia\"},\"getSourcePrice(address)\":{\"notice\":\"Ottiene il prezzo direttamente dal feed Chainlink\"},\"removeOracleSource(bytes32,address)\":{\"notice\":\"Rimuove un feed Chainlink\"}},\"notice\":\"Fornisce prezzi aggiornati per la coppia EUR/USD, con fallback a Chainlink\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"oracle/UBI4ALLOracle.sol\":\"UBI4ALLOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x15490c1ac7fb488198fce8a04211f15277ee816915367bc906110cbb57863bbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3273e1e51c1bfe12b50778dd98d3d322ca315cd8e1185593694a0ac828b820\",\"dweb:/ipfs/QmTyAWneXaURy9Ls4dovFWLV9yxzMkELmLsgLTWeubz8ZA\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xf4d28329285c89e85daf450fbe612ec5ceb19842ae0be976ab1569897940be90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a021f64d3d58a64fd3045afc6b192c82bca29d95cd594a3c0ed93d1c69ecc98\",\"dweb:/ipfs/QmegaH5RM4Sboa22unJm3FdMVTd3K9UUf8ogbvBwx1K8XJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x880e8b3325f624a5c4dfb9a754ed83bf0be1476d02c5063b215f3c3b9fdec331\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e14b50f3ca0b35d014b166235d94dfa8c9067bb3f5d65efdfb2193355a455\",\"dweb:/ipfs/QmNrM5LEwfCi7cxMovccBpFeL8T9MWfqA15dW9SobPDPfo\"]},\"oracle/UBI4ALLOracle.sol\":{\"keccak256\":\"0x335403fa9c74cda036c3e823ffdd382fab3f83600367a7f42c7e12dae4a9819e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d11cc984b2676f7ac61bc567701427cfe34ab198df4d3ca197a726990c40088\",\"dweb:/ipfs/QmSY2DTcsnZb2zfZ6gpfwTYF4GKER58NReCx5785xf5EGh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 208,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 466,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 365,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 2592,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "priceFeed",
								"offset": 1,
								"slot": "2",
								"type": "t_contract(AggregatorV3Interface)103"
							},
							{
								"astId": 2603,
								"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
								"label": "latestPrices",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_struct(PriceData)2589_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(AggregatorV3Interface)103": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_struct(PriceData)2589_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct UBI4ALLOracle.PriceData)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceData)2589_storage"
							},
							"t_struct(PriceData)2589_storage": {
								"encoding": "inplace",
								"label": "struct UBI4ALLOracle.PriceData",
								"members": [
									{
										"astId": 2584,
										"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
										"label": "price",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2586,
										"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
										"label": "timestamp",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2588,
										"contract": "oracle/UBI4ALLOracle.sol:UBI4ALLOracle",
										"label": "isValid",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"PriceUpdated(bytes32,uint256,uint256)": {
								"notice": "Emesso quando il prezzo viene aggiornato"
							}
						},
						"kind": "user",
						"methods": {
							"getAggregatedPrice(bytes32)": {
								"notice": "Ottiene il prezzo aggregato per una coppia"
							},
							"getLatestPrice()": {
								"notice": "Ottiene il prezzo più recente per la coppia EUR/USD"
							},
							"getPrice(bytes32)": {
								"notice": "Ottiene il prezzo più recente per una coppia"
							},
							"getSourcePrice(address)": {
								"notice": "Ottiene il prezzo direttamente dal feed Chainlink"
							},
							"removeOracleSource(bytes32,address)": {
								"notice": "Rimuove un feed Chainlink"
							}
						},
						"notice": "Fornisce prezzi aggiornati per la coppia EUR/USD, con fallback a Chainlink",
						"version": 1
					}
				}
			},
			"quantum/UBI4ALLQuantumFinance.sol": {
				"UBI4ALLQuantumFinance": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_quantumToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_vrfCoordinator",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_keyHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "_subscriptionId",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "have",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "want",
									"type": "address"
								}
							],
							"name": "OnlyCoordinatorCanFulfill",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAPY",
									"type": "uint256"
								}
							],
							"name": "APYUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "RandomAPYRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isDAO",
									"type": "bool"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BASE_APY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COORDINATOR",
							"outputs": [
								{
									"internalType": "contract VRFCoordinatorV2Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DAO_APY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DAO_SUPERPOSITION_MAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DAO_SUPERPOSITION_MIN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SUPERPOSITION_MAX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SUPERPOSITION_MIN",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPDATE_INTERVAL",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VOLATILITY_BONUS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "callbackGasLimit",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getStakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalValueLocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "keyHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numWords",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"internalType": "contract IUBI4ALLOracle",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "quantumToken",
							"outputs": [
								{
									"internalType": "contract IUBI4ALLQuantum",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestConfirmations",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "requestToUser",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeForDAO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "daoAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accumulatedReward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "currentAPY",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "subscriptionId",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalValueLocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_callbackGasLimit",
									"type": "uint32"
								},
								{
									"internalType": "uint16",
									"name": "_requestConfirmations",
									"type": "uint16"
								}
							],
							"name": "updateVRFParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"calculateReward(address)": {
								"params": {
									"user": "Indirizzo dell'utente"
								},
								"returns": {
									"_0": "Ricompense totali (accumulate + in attesa)"
								}
							},
							"constructor": {
								"params": {
									"_keyHash": "Gas key per VRF",
									"_oracle": "Indirizzo dell'oracolo",
									"_quantumToken": "Indirizzo del contratto Q4A",
									"_subscriptionId": "ID della sottoscrizione VRF",
									"_vrfCoordinator": "Indirizzo del coordinatore VRF Chainlink",
									"initialOwner": "Indirizzo del proprietario iniziale"
								}
							},
							"getStakedBalance(address)": {
								"params": {
									"user": "Indirizzo dell'utente"
								},
								"returns": {
									"_0": "Saldo staked totale (standard + DAO)"
								}
							},
							"getTotalValueLocked()": {
								"returns": {
									"_0": "Totale dei token staked"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"stake(uint256)": {
								"params": {
									"amount": "Quantità di token da stakare"
								}
							},
							"stakeForDAO(uint256)": {
								"params": {
									"amount": "Quantità di token da stakare"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"newOwner": "Indirizzo del nuovo proprietario"
								}
							},
							"updateVRFParams(uint32,uint16)": {
								"params": {
									"_callbackGasLimit": "Nuovo limite di gas per il callback",
									"_requestConfirmations": "Nuovo numero di conferme"
								}
							},
							"withdraw(uint256)": {
								"params": {
									"amount": "Quantità di token da prelevare"
								}
							}
						},
						"stateVariables": {
							"BASE_APY": {
								"details": "APY base (10%, in base 10000)"
							},
							"DAO_APY": {
								"details": "APY per DAO (12%, in base 10000)"
							},
							"DAO_SUPERPOSITION_MAX": {
								"details": "APY massimo per staking DAO (16%, in base 10000)"
							},
							"DAO_SUPERPOSITION_MIN": {
								"details": "APY minimo per staking DAO (10%, in base 10000)"
							},
							"SUPERPOSITION_MAX": {
								"details": "APY massimo per staking standard (14%, in base 10000)"
							},
							"SUPERPOSITION_MIN": {
								"details": "APY minimo per staking standard (8%, in base 10000)"
							},
							"UPDATE_INTERVAL": {
								"details": "Intervallo di aggiornamento APY (30 giorni)"
							},
							"VOLATILITY_BONUS": {
								"details": "Bonus massimo per volatilità (2%, in base 10000)"
							},
							"callbackGasLimit": {
								"details": "Limite di gas per il callback VRF"
							},
							"keyHash": {
								"details": "Gas key per VRF"
							},
							"numWords": {
								"details": "Numero di parole casuali richieste"
							},
							"requestConfirmations": {
								"details": "Numero di conferme richieste per VRF"
							},
							"requestToUser": {
								"details": "Mappatura delle richieste VRF per utente"
							},
							"stakes": {
								"details": "Mappatura degli stake per utente"
							},
							"subscriptionId": {
								"details": "ID della sottoscrizione VRF"
							},
							"totalValueLocked": {
								"details": "Totale dei token staked"
							}
						},
						"title": "UBI4ALLQuantumFinance - Contratto di staking e finanza per il token Q4A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"quantum/UBI4ALLQuantumFinance.sol\":585:11196  contract UBI4ALLQuantumFinance is Ownable, VRFConsumerBaseV2, IUBI4ALLQuantumFinance {... */\n  mstore(0x40, 0x0140)\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":2545:2585  uint32 public callbackGasLimit = 100_000 */\n  0x04\n  dup1\n  sload\n  not(sub(shl(0x50, 0x01), 0x01))\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":2733:2759  uint32 public numWords = 1 */\n  and\n  0x010003000186a0\n  or\n  swap1\n  sstore\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":3802:4514  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4037:4052  _vrfCoordinator */\n  dup4\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4005:4017  initialOwner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1039:1090   */\n  mstore\n    /* \"#utility.yul\":1012:1030   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_11:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":5599:5631  vrfCoordinator = _vrfCoordinator */\n  swap1\n  dup2\n  and\n  0x80\n  mstore\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4072:4099  _quantumToken != address(0) */\n  dup7\n  and\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4064:4125  require(_quantumToken != address(0), \"Invalid token address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1303:1305   */\n  0x20\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4064:4125  require(_quantumToken != address(0), \"Invalid token address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1285:1306   */\n  mstore\n    /* \"#utility.yul\":1342:1344   */\n  0x15\n    /* \"#utility.yul\":1322:1340   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1315:1345   */\n  mstore\n    /* \"#utility.yul\":1381:1404   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":1361:1379   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1354:1405   */\n  mstore\n    /* \"#utility.yul\":1422:1440   */\n  0x64\n  add\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4064:4125  require(_quantumToken != address(0), \"Invalid token address\") */\n  tag_9\n    /* \"#utility.yul\":1101:1446   */\n  jump\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4064:4125  require(_quantumToken != address(0), \"Invalid token address\") */\ntag_15:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4143:4164  _oracle != address(0) */\n  dup6\n  and\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4135:4191  require(_oracle != address(0), \"Invalid oracle address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1653:1655   */\n  0x20\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4135:4191  require(_oracle != address(0), \"Invalid oracle address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1635:1656   */\n  mstore\n    /* \"#utility.yul\":1692:1694   */\n  0x16\n    /* \"#utility.yul\":1672:1690   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1665:1695   */\n  mstore\n    /* \"#utility.yul\":1731:1755   */\n  0x496e76616c6964206f7261636c65206164647265737300000000000000000000\n    /* \"#utility.yul\":1711:1729   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1704:1756   */\n  mstore\n    /* \"#utility.yul\":1773:1791   */\n  0x64\n  add\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4135:4191  require(_oracle != address(0), \"Invalid oracle address\") */\n  tag_9\n    /* \"#utility.yul\":1451:1797   */\n  jump\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4135:4191  require(_oracle != address(0), \"Invalid oracle address\") */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4209:4238  _vrfCoordinator != address(0) */\n  dup5\n  and\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4201:4274  require(_vrfCoordinator != address(0), \"Invalid VRF coordinator address\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2004:2006   */\n  0x20\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4201:4274  require(_vrfCoordinator != address(0), \"Invalid VRF coordinator address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1986:2007   */\n  mstore\n    /* \"#utility.yul\":2043:2045   */\n  0x1f\n    /* \"#utility.yul\":2023:2041   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2016:2046   */\n  mstore\n    /* \"#utility.yul\":2082:2115   */\n  0x496e76616c69642056524620636f6f7264696e61746f72206164647265737300\n    /* \"#utility.yul\":2062:2080   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2055:2116   */\n  mstore\n    /* \"#utility.yul\":2133:2151   */\n  0x64\n  add\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4201:4274  require(_vrfCoordinator != address(0), \"Invalid VRF coordinator address\") */\n  tag_9\n    /* \"#utility.yul\":1802:2157   */\n  jump\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4201:4274  require(_vrfCoordinator != address(0), \"Invalid VRF coordinator address\") */\ntag_21:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4284:4329  quantumToken = IUBI4ALLQuantum(_quantumToken) */\n  swap5\n  dup6\n  and\n  0xa0\n  mstore\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4339:4371  oracle = IUBI4ALLOracle(_oracle) */\n  swap3\n  dup5\n  and\n  0xc0\n  mstore\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4381:4437  COORDINATOR = VRFCoordinatorV2Interface(_vrfCoordinator) */\n  swap3\n  and\n  0xe0\n  mstore\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4447:4465  keyHash = _keyHash */\n  0x0100\n  swap2\n  swap1\n  swap2\n  mstore\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":4475:4507  subscriptionId = _subscriptionId */\n  and\n  0x0120\n  mstore\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":585:11196  contract UBI4ALLQuantumFinance is Ownable, VRFConsumerBaseV2, IUBI4ALLQuantumFinance {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_26:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_29:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:888   */\ntag_3:\n    /* \"#utility.yul\":310:316   */\n  0x00\n    /* \"#utility.yul\":318:324   */\n  dup1\n    /* \"#utility.yul\":326:332   */\n  0x00\n    /* \"#utility.yul\":334:340   */\n  dup1\n    /* \"#utility.yul\":342:348   */\n  0x00\n    /* \"#utility.yul\":350:356   */\n  dup1\n    /* \"#utility.yul\":403:406   */\n  0xc0\n    /* \"#utility.yul\":391:400   */\n  dup8\n    /* \"#utility.yul\":382:389   */\n  dup10\n    /* \"#utility.yul\":378:401   */\n  sub\n    /* \"#utility.yul\":374:407   */\n  slt\n    /* \"#utility.yul\":371:424   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":420:421   */\n  0x00\n    /* \"#utility.yul\":417:418   */\n  dup1\n    /* \"#utility.yul\":410:422   */\n  revert\n    /* \"#utility.yul\":371:424   */\ntag_31:\n    /* \"#utility.yul\":443:483   */\n  tag_32\n    /* \"#utility.yul\":473:482   */\n  dup8\n    /* \"#utility.yul\":443:483   */\n  tag_26\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":433:483   */\n  swap6\n  pop\n    /* \"#utility.yul\":502:551   */\n  tag_33\n    /* \"#utility.yul\":547:549   */\n  0x20\n    /* \"#utility.yul\":536:545   */\n  dup9\n    /* \"#utility.yul\":532:550   */\n  add\n    /* \"#utility.yul\":502:551   */\n  tag_26\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":492:551   */\n  swap5\n  pop\n    /* \"#utility.yul\":570:619   */\n  tag_34\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":604:613   */\n  dup9\n    /* \"#utility.yul\":600:618   */\n  add\n    /* \"#utility.yul\":570:619   */\n  tag_26\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":659:661   */\n  0x60\n    /* \"#utility.yul\":644:662   */\n  dup9\n  add\n    /* \"#utility.yul\":638:663   */\n  mload\n    /* \"#utility.yul\":706:709   */\n  0x80\n    /* \"#utility.yul\":691:710   */\n  dup10\n  add\n    /* \"#utility.yul\":685:711   */\n  mload\n    /* \"#utility.yul\":560:619   */\n  swap2\n  swap6\n  pop\n    /* \"#utility.yul\":638:663   */\n  swap4\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":740:770   */\n  dup2\n  and\n    /* \"#utility.yul\":730:771   */\n  dup2\n  eq\n    /* \"#utility.yul\":720:789   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":785:786   */\n  0x00\n    /* \"#utility.yul\":782:783   */\n  dup1\n    /* \"#utility.yul\":775:787   */\n  revert\n    /* \"#utility.yul\":720:789   */\ntag_35:\n    /* \"#utility.yul\":808:813   */\n  swap2\n  pop\n    /* \"#utility.yul\":832:882   */\n  tag_36\n    /* \"#utility.yul\":877:880   */\n  0xa0\n    /* \"#utility.yul\":862:881   */\n  dup9\n  add\n    /* \"#utility.yul\":832:882   */\n  tag_26\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":822:882   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:888   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":1802:2157   */\ntag_27:\n    /* \"quantum/UBI4ALLQuantumFinance.sol\":585:11196  contract UBI4ALLQuantumFinance is Ownable, VRFConsumerBaseV2, IUBI4ALLQuantumFinance {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xe699a24dbc75eeaed81a8bf4b3cb0a2b31e2feaa7617ebf93abe15d5ab1d7460\")\n  0x00\n  assignImmutable(\"0xefc69ac575b4738c457b8bcdbf19fb94007e003bdfa78d9f9824d63343ccc553\")\n  0x00\n  assignImmutable(\"0xddeb3ab6e0a1dec15b1c925386318c221afb363e5386443df7661a3a78489ef6\")\n  0x00\n  assignImmutable(\"0x6e132956be3a55a486a3eb165331ac44a364c462bf19ae9edaeaaf7ce14a28d1\")\n  0x00\n  assignImmutable(\"0x936ebad3ce9ca07ea90ed2bfd725a57f30b80673b4865042f86c1416b8cd32d2\")\n  0x00\n  assignImmutable(\"0x1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":585:11196  contract UBI4ALLQuantumFinance is Ownable, VRFConsumerBaseV2, IUBI4ALLQuantumFinance {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x89ac4147\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xb8ed3aad\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xcb8b97f5\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xcb8b97f5\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xec18154e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0xb8ed3aad\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb94790a4\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xbae4e530\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc75a0715\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xa694fc3a\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb0fb162f\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb26025aa\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x89ac4147\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x93565b4c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9da378ab\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x3a02a42d\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x61728f39\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x61728f39\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7ccfd7fc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x3a02a42d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3b2bcbf1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3e2f7eb5\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4ca19fd6\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x1fe543e3\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x1fe543e3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x24f74697\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x27779748\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x07b2d32f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x09c1ba2e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1193:1241  uint256 public constant SUPERPOSITION_MIN = 8_00 */\n    tag_3:\n      tag_41\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1237:1241  8_00 */\n      0x0320\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1193:1241  uint256 public constant SUPERPOSITION_MIN = 8_00 */\n      dup2\n      jump\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1193:1241  uint256 public constant SUPERPOSITION_MIN = 8_00 */\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2454:2492  uint64 public immutable subscriptionId */\n    tag_4:\n      tag_45\n      immutable(\"0xe699a24dbc75eeaed81a8bf4b3cb0a2b31e2feaa7617ebf93abe15d5ab1d7460\")\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":370:388   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":358:389   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":340:390   */\n      dup2\n      mstore\n        /* \"#utility.yul\":328:330   */\n      0x20\n        /* \"#utility.yul\":313:331   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2454:2492  uint64 public immutable subscriptionId */\n      tag_43\n        /* \"#utility.yul\":196:396   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2119:2158  mapping(address => Stake) public stakes */\n    tag_5:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap1\n      swap2\n      dup6\n      jump\n    tag_49:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":951:976   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":1007:1009   */\n      0x20\n        /* \"#utility.yul\":992:1010   */\n      dup7\n      add\n        /* \"#utility.yul\":985:1019   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1035:1053   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":1028:1062   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1093:1095   */\n      0x60\n        /* \"#utility.yul\":1078:1096   */\n      dup4\n      add\n        /* \"#utility.yul\":1071:1105   */\n      mstore\n        /* \"#utility.yul\":1136:1139   */\n      0x80\n        /* \"#utility.yul\":1121:1140   */\n      dup3\n      add\n        /* \"#utility.yul\":1114:1149   */\n      mstore\n        /* \"#utility.yul\":938:941   */\n      0xa0\n        /* \"#utility.yul\":923:942   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2119:2158  mapping(address => Stake) public stakes */\n      tag_43\n        /* \"#utility.yul\":692:1155   */\n      jump\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6618:6874  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {... */\n    tag_6:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2545:2585  uint32 public callbackGasLimit = 100_000 */\n    tag_7:\n      sload(0x04)\n      tag_59\n      swap1\n      0xffffffff\n      and\n      dup2\n      jump\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":2766:2776   */\n      0xffffffff\n        /* \"#utility.yul\":2754:2777   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2736:2778   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2724:2726   */\n      0x20\n        /* \"#utility.yul\":2709:2727   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2545:2585  uint32 public callbackGasLimit = 100_000 */\n      tag_43\n        /* \"#utility.yul\":2592:2784   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":967:1006  uint256 public constant DAO_APY = 12_00 */\n    tag_8:\n      tag_41\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1001:1006  12_00 */\n      0x04b0\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":967:1006  uint256 public constant DAO_APY = 12_00 */\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5683:6054  function withdraw(uint256 amount) external {... */\n    tag_9:\n      tag_55\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9625:9765  function getStakedBalance(address user) external view returns (uint256) {... */\n    tag_10:\n      tag_41\n      tag_71\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":771:825  VRFCoordinatorV2Interface public immutable COORDINATOR */\n    tag_11:\n      tag_74\n      immutable(\"0xddeb3ab6e0a1dec15b1c925386318c221afb363e5386443df7661a3a78489ef6\")\n      dup2\n      jump\n    tag_74:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3217:3249   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3199:3250   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3187:3189   */\n      0x20\n        /* \"#utility.yul\":3172:3190   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":771:825  VRFCoordinatorV2Interface public immutable COORDINATOR */\n      tag_43\n        /* \"#utility.yul\":3020:3256   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2292:2340  mapping(uint256 => address) public requestToUser */\n    tag_12:\n      tag_74\n      tag_79\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_79:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":875:915  uint256 public constant BASE_APY = 10_00 */\n    tag_13:\n      tag_41\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":910:915  10_00 */\n      0x03e8\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":875:915  uint256 public constant BASE_APY = 10_00 */\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2375:2407  bytes32 public immutable keyHash */\n    tag_14:\n      tag_41\n      immutable(\"0xefc69ac575b4738c457b8bcdbf19fb94007e003bdfa78d9f9824d63343ccc553\")\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_55\n      tag_91\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2733:2759  uint32 public numWords = 1 */\n    tag_16:\n      sload(0x04)\n      tag_59\n      swap1\n      0x01000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":727:765  IUBI4ALLOracle public immutable oracle */\n    tag_17:\n      tag_74\n      immutable(\"0x6e132956be3a55a486a3eb165331ac44a364c462bf19ae9edaeaaf7ce14a28d1\")\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1667:1716  uint256 public constant UPDATE_INTERVAL = 30 days */\n    tag_18:\n      tag_41\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1709:1716  30 days */\n      0x278d00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1667:1716  uint256 public constant UPDATE_INTERVAL = 30 days */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_74)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":676:721  IUBI4ALLQuantum public immutable quantumToken */\n    tag_20:\n      tag_74\n      immutable(\"0x936ebad3ce9ca07ea90ed2bfd725a57f30b80673b4865042f86c1416b8cd32d2\")\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4621:5020  function stake(uint256 amount) external {... */\n    tag_22:\n      tag_55\n      tag_113\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2641:2679  uint16 public requestConfirmations = 3 */\n    tag_23:\n      sload(0x04)\n      tag_115\n      swap1\n      0x0100000000\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\n    tag_115:\n      mload(0x40)\n        /* \"#utility.yul\":4288:4294   */\n      0xffff\n        /* \"#utility.yul\":4276:4295   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4258:4296   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4246:4248   */\n      0x20\n        /* \"#utility.yul\":4231:4249   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2641:2679  uint16 public requestConfirmations = 3 */\n      tag_43\n        /* \"#utility.yul\":4114:4302   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9862:9965  function getTotalValueLocked() external view returns (uint256) {... */\n    tag_24:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9942:9958  totalValueLocked */\n      sload(0x02)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9862:9965  function getTotalValueLocked() external view returns (uint256) {... */\n      jump(tag_41)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6109:6473  function claimReward() external {... */\n    tag_25:\n      tag_55\n      tag_123\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1075:1122  uint256 public constant VOLATILITY_BONUS = 2_00 */\n    tag_26:\n      tag_41\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1118:1122  2_00 */\n      0xc8\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1075:1122  uint256 public constant VOLATILITY_BONUS = 2_00 */\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5138:5586  function stakeForDAO(uint256 amount) external {... */\n    tag_27:\n      tag_55\n      tag_128\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10690:10897  function updateVRFParams(uint32 _callbackGasLimit, uint16 _requestConfirmations) external onlyOwner {... */\n    tag_28:\n      tag_55\n      tag_131\n      calldatasize\n      0x04\n      tag_132\n      jump\t// in\n    tag_131:\n      tag_133\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1551:1604  uint256 public constant DAO_SUPERPOSITION_MAX = 16_00 */\n    tag_29:\n      tag_41\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1599:1604  16_00 */\n      0x0640\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1551:1604  uint256 public constant DAO_SUPERPOSITION_MAX = 16_00 */\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1314:1363  uint256 public constant SUPERPOSITION_MAX = 14_00 */\n    tag_30:\n      tag_41\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1358:1363  14_00 */\n      0x0578\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1314:1363  uint256 public constant SUPERPOSITION_MAX = 14_00 */\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10131:10512  function calculateReward(address user) external view returns (uint256) {... */\n    tag_31:\n      tag_41\n      tag_141\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":2201:2232  uint256 public totalValueLocked */\n    tag_32:\n      tag_41\n      sload(0x02)\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":11040:11194  function transferOwnership(address newOwner) public override(Ownable, IUBI4ALLQuantumFinance) onlyOwner {... */\n    tag_33:\n      tag_55\n      tag_148\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6618:6874  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {... */\n    tag_58:\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6717:6727  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6731:6745  vrfCoordinator */\n      immutable(\"0x1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac\")\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6717:6745  msg.sender != vrfCoordinator */\n      and\n      eq\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6713:6822  if (msg.sender != vrfCoordinator) {... */\n      tag_151\n      jumpi\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6762:6815  OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator) */\n      mload(0x40)\n      shl(0xe2, 0x073e64fd)\n      dup2\n      mstore\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6788:6798  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6762:6815  OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4930:4981   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6800:6814  vrfCoordinator */\n      immutable(\"0x1a192fabce13988b84994d4296e6cdc418d55e2f1d7f942188d4040b94fc57ac\")\n        /* \"#utility.yul\":5017:5049   */\n      and\n        /* \"#utility.yul\":4997:5015   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4990:5050   */\n      mstore\n        /* \"#utility.yul\":4903:4921   */\n      0x44\n      add\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6762:6815  OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator) */\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6713:6822  if (msg.sender != vrfCoordinator) {... */\n    tag_151:\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6827:6869  fulfillRandomWords(requestId, randomWords) */\n      tag_154\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6846:6855  requestId */\n      dup3\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6857:6868  randomWords */\n      dup3\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6827:6845  fulfillRandomWords */\n      tag_155\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6827:6869  fulfillRandomWords(requestId, randomWords) */\n      jump\t// in\n    tag_154:\n        /* \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":6618:6874  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5683:6054  function withdraw(uint256 amount) external {... */\n    tag_69:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5736:5759  updateStake(msg.sender) */\n      tag_157\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5748:5758  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5736:5747  updateStake */\n      tag_158\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5736:5759  updateStake(msg.sender) */\n      jump\t// in\n    tag_157:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5784:5794  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5777:5795  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5777:5783  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5777:5795  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5777:5802  stakes[msg.sender].amount */\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5777:5812  stakes[msg.sender].amount >= amount */\n      dup2\n      gt\n      iszero\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5769:5843  require(stakes[msg.sender].amount >= amount, \"Insufficient staked amount\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5769:5843  require(stakes[msg.sender].amount >= amount, \"Insufficient staked amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5245:5266   */\n      mstore\n        /* \"#utility.yul\":5302:5304   */\n      0x1a\n        /* \"#utility.yul\":5282:5300   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5275:5305   */\n      mstore\n        /* \"#utility.yul\":5341:5369   */\n      0x496e73756666696369656e74207374616b656420616d6f756e74000000000000\n        /* \"#utility.yul\":5321:5339   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5314:5370   */\n      mstore\n        /* \"#utility.yul\":5387:5405   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5769:5843  require(stakes[msg.sender].amount >= amount, \"Insufficient staked amount\") */\n      tag_152\n        /* \"#utility.yul\":5061:5411   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5769:5843  require(stakes[msg.sender].amount >= amount, \"Insufficient staked amount\") */\n    tag_159:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5860:5870  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5853:5871  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5853:5859  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5853:5871  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5853:5888  stakes[msg.sender].amount -= amount */\n      dup1\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5882:5888  amount */\n      dup4\n      swap3\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5853:5871  stakes[msg.sender] */\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5853:5888  stakes[msg.sender].amount -= amount */\n      tag_162\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5882:5888  amount */\n      dup5\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5853:5888  stakes[msg.sender].amount -= amount */\n      tag_163\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5918:5924  amount */\n      dup1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5898:5914  totalValueLocked */\n      0x02\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5898:5924  totalValueLocked -= amount */\n      dup3\n      dup3\n      sload\n      tag_164\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_164:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5942:5983  quantumToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5964:5974  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5942:5983  quantumToken.transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5855:5906   */\n      mstore\n        /* \"#utility.yul\":5922:5940   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5915:5949   */\n      dup3\n      swap1\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5942:5954  quantumToken */\n      immutable(\"0x936ebad3ce9ca07ea90ed2bfd725a57f30b80673b4865042f86c1416b8cd32d2\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5942:5963  quantumToken.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5828:5846   */\n      0x44\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5942:5983  quantumToken.transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_168:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5934:6003  require(quantumToken.transfer(msg.sender, amount), \"Transfer failed\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_173\n      jump\t// in\n    tag_171:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6018:6047  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6028:6038  msg.sender */\n      caller\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6018:6047  Withdrawn(msg.sender, amount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6018:6047  Withdrawn(msg.sender, amount) */\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5683:6054  function withdraw(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9625:9765  function getStakedBalance(address user) external view returns (uint256) {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9736:9748  stakes[user] */\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9688:9695  uint256 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9736:9748  stakes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9736:9742  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9736:9748  stakes[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9736:9758  stakes[user].daoAmount */\n      swap1\n      dup2\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9714:9733  stakes[user].amount */\n      swap1\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9714:9758  stakes[user].amount + stakes[user].daoAmount */\n      tag_176\n      swap2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9736:9758  stakes[user].daoAmount */\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9714:9758  stakes[user].amount + stakes[user].daoAmount */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9707:9758  return stakes[user].amount + stakes[user].daoAmount */\n      swap3\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9625:9765  function getStakedBalance(address user) external view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4621:5020  function stake(uint256 amount) external {... */\n    tag_114:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4688:4689  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4679:4685  amount */\n      dup2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4679:4689  amount > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4671:4708  require(amount > 0, \"Invalid amount\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6918:6920   */\n      0x20\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4671:4708  require(amount > 0, \"Invalid amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6900:6921   */\n      mstore\n        /* \"#utility.yul\":6957:6959   */\n      0x0e\n        /* \"#utility.yul\":6937:6955   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6930:6960   */\n      mstore\n      shl(0x92, 0x125b9d985b1a5908185b5bdd5b9d)\n        /* \"#utility.yul\":6976:6994   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6969:7013   */\n      mstore\n        /* \"#utility.yul\":7030:7048   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4671:4708  require(amount > 0, \"Invalid amount\") */\n      tag_152\n        /* \"#utility.yul\":6716:7054   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4671:4708  require(amount > 0, \"Invalid amount\") */\n    tag_186:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4718:4741  updateStake(msg.sender) */\n      tag_189\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4730:4740  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4718:4729  updateStake */\n      tag_158\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4718:4741  updateStake(msg.sender) */\n      jump\t// in\n    tag_189:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4758:4768  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4751:4769  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4751:4757  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4751:4769  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4751:4786  stakes[msg.sender].amount += amount */\n      dup1\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4780:4786  amount */\n      dup4\n      swap3\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4751:4769  stakes[msg.sender] */\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4751:4786  stakes[msg.sender].amount += amount */\n      tag_190\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4780:4786  amount */\n      dup5\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4751:4786  stakes[msg.sender].amount += amount */\n      tag_177\n      jump\t// in\n    tag_190:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4816:4822  amount */\n      dup1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4796:4812  totalValueLocked */\n      0x02\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4796:4822  totalValueLocked += amount */\n      dup3\n      dup3\n      sload\n      tag_191\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_191:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4840:4900  quantumToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4866:4876  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4840:4900  quantumToken.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7261:7312   */\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4886:4890  this */\n      address\n        /* \"#utility.yul\":7328:7346   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7321:7381   */\n      mstore\n        /* \"#utility.yul\":7397:7415   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7390:7424   */\n      dup3\n      swap1\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4840:4852  quantumToken */\n      immutable(\"0x936ebad3ce9ca07ea90ed2bfd725a57f30b80673b4865042f86c1416b8cd32d2\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4840:4865  quantumToken.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7234:7252   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4840:4900  quantumToken.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_196\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_196:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4832:4920  require(quantumToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_173\n      jump\t// in\n    tag_197:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4930:4965  requestSuperpositionAPY(msg.sender) */\n      tag_199\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4954:4964  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4930:4953  requestSuperpositionAPY */\n      tag_200\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4930:4965  requestSuperpositionAPY(msg.sender) */\n      jump\t// in\n    tag_199:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4980:5013  Staked(msg.sender, amount, false) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7603:7628   */\n      dup3\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5007:5012  false */\n      0x00\n        /* \"#utility.yul\":7659:7661   */\n      0x20\n        /* \"#utility.yul\":7644:7662   */\n      dup3\n      add\n        /* \"#utility.yul\":7637:7687   */\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4987:4997  msg.sender */\n      caller\n      swap2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4980:5013  Staked(msg.sender, amount, false) */\n      0x37d4053e34fde482e96f6bcd424dfa31342cbd5fe184d497fb3c8bb4b4b97580\n      swap2\n        /* \"#utility.yul\":7576:7594   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":4980:5013  Staked(msg.sender, amount, false) */\n      tag_174\n        /* \"#utility.yul\":7435:7693   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6109:6473  function claimReward() external {... */\n    tag_123:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6151:6174  updateStake(msg.sender) */\n      tag_205\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6163:6173  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6151:6162  updateStake */\n      tag_158\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6151:6174  updateStake(msg.sender) */\n      jump\t// in\n    tag_205:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6208:6218  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6184:6198  uint256 reward */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6201:6219  stakes[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6201:6207  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6201:6219  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6201:6237  stakes[msg.sender].accumulatedReward */\n      0x03\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6255:6265  reward > 0 */\n      dup1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6247:6289  require(reward > 0, \"No rewards to claim\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7900:7902   */\n      0x20\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6247:6289  require(reward > 0, \"No rewards to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7882:7903   */\n      mstore\n        /* \"#utility.yul\":7939:7941   */\n      0x13\n        /* \"#utility.yul\":7919:7937   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7912:7942   */\n      mstore\n      shl(0x68, 0x4e6f207265776172647320746f20636c61696d)\n        /* \"#utility.yul\":7958:7976   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7951:8000   */\n      mstore\n        /* \"#utility.yul\":8017:8035   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6247:6289  require(reward > 0, \"No rewards to claim\") */\n      tag_152\n        /* \"#utility.yul\":7698:8041   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6247:6289  require(reward > 0, \"No rewards to claim\") */\n    tag_206:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6306:6316  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6338:6339  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6299:6317  stakes[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6299:6305  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6299:6317  stakes[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6299:6335  stakes[msg.sender].accumulatedReward */\n      0x03\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6299:6339  stakes[msg.sender].accumulatedReward = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6357:6398  quantumToken.transfer(msg.sender, reward) */\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":5855:5906   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5922:5940   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5915:5949   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6357:6369  quantumToken */\n      immutable(\"0x936ebad3ce9ca07ea90ed2bfd725a57f30b80673b4865042f86c1416b8cd32d2\")\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6357:6378  quantumToken.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":5828:5846   */\n      0x44\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6357:6398  quantumToken.transfer(msg.sender, reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_212:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6349:6418  require(quantumToken.transfer(msg.sender, reward), \"Transfer failed\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_173\n      jump\t// in\n    tag_213:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6433:6466  RewardClaimed(msg.sender, reward) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6447:6457  msg.sender */\n      caller\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6433:6466  RewardClaimed(msg.sender, reward) */\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6433:6466  RewardClaimed(msg.sender, reward) */\n      tag_174\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5138:5586  function stakeForDAO(uint256 amount) external {... */\n    tag_129:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5211:5212  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5202:5208  amount */\n      dup2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5202:5212  amount > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5194:5231  require(amount > 0, \"Invalid amount\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6918:6920   */\n      0x20\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5194:5231  require(amount > 0, \"Invalid amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6900:6921   */\n      mstore\n        /* \"#utility.yul\":6957:6959   */\n      0x0e\n        /* \"#utility.yul\":6937:6955   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6930:6960   */\n      mstore\n      shl(0x92, 0x125b9d985b1a5908185b5bdd5b9d)\n        /* \"#utility.yul\":6976:6994   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6969:7013   */\n      mstore\n        /* \"#utility.yul\":7030:7048   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5194:5231  require(amount > 0, \"Invalid amount\") */\n      tag_152\n        /* \"#utility.yul\":6716:7054   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5194:5231  require(amount > 0, \"Invalid amount\") */\n    tag_217:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5241:5264  updateStake(msg.sender) */\n      tag_219\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5253:5263  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5241:5252  updateStake */\n      tag_158\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5241:5264  updateStake(msg.sender) */\n      jump\t// in\n    tag_219:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5281:5291  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5274:5292  stakes[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5274:5280  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5274:5292  stakes[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5274:5302  stakes[msg.sender].daoAmount */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5274:5312  stakes[msg.sender].daoAmount += amount */\n      dup1\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5306:5312  amount */\n      dup4\n      swap3\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5274:5292  stakes[msg.sender] */\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5274:5312  stakes[msg.sender].daoAmount += amount */\n      tag_220\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5306:5312  amount */\n      dup5\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5274:5312  stakes[msg.sender].daoAmount += amount */\n      tag_177\n      jump\t// in\n    tag_220:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5342:5348  amount */\n      dup1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5322:5338  totalValueLocked */\n      0x02\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5322:5348  totalValueLocked += amount */\n      dup3\n      dup3\n      sload\n      tag_221\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_221:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5366:5426  quantumToken.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5392:5402  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5366:5426  quantumToken.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7261:7312   */\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5412:5416  this */\n      address\n        /* \"#utility.yul\":7328:7346   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7321:7381   */\n      mstore\n        /* \"#utility.yul\":7397:7415   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7390:7424   */\n      dup3\n      swap1\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5366:5378  quantumToken */\n      immutable(\"0x936ebad3ce9ca07ea90ed2bfd725a57f30b80673b4865042f86c1416b8cd32d2\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5366:5391  quantumToken.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7234:7252   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5366:5426  quantumToken.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_225\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_225:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5358:5446  require(quantumToken.transferFrom(msg.sender, address(this), amount), \"Transfer failed\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_173\n      jump\t// in\n    tag_226:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5456:5487  quantumToken.lockForDAO(amount) */\n      mload(0x40)\n      shl(0xe2, 0x255da8dd)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5456:5468  quantumToken */\n      immutable(\"0x936ebad3ce9ca07ea90ed2bfd725a57f30b80673b4865042f86c1416b8cd32d2\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5456:5479  quantumToken.lockForDAO */\n      and\n      swap1\n      0x9576a374\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5456:5487  quantumToken.lockForDAO(amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5497:5532  requestSuperpositionAPY(msg.sender) */\n      tag_232\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5521:5531  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5497:5520  requestSuperpositionAPY */\n      tag_200\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5497:5532  requestSuperpositionAPY(msg.sender) */\n      jump\t// in\n    tag_232:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5547:5579  Staked(msg.sender, amount, true) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7603:7628   */\n      dup3\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5574:5578  true */\n      0x01\n        /* \"#utility.yul\":7659:7661   */\n      0x20\n        /* \"#utility.yul\":7644:7662   */\n      dup3\n      add\n        /* \"#utility.yul\":7637:7687   */\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5554:5564  msg.sender */\n      caller\n      swap2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5547:5579  Staked(msg.sender, amount, true) */\n      0x37d4053e34fde482e96f6bcd424dfa31342cbd5fe184d497fb3c8bb4b4b97580\n      swap2\n        /* \"#utility.yul\":7576:7594   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":5547:5579  Staked(msg.sender, amount, true) */\n      tag_174\n        /* \"#utility.yul\":7435:7693   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10690:10897  function updateVRFParams(uint32 _callbackGasLimit, uint16 _requestConfirmations) external onlyOwner {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_235:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10800:10816  callbackGasLimit */\n      0x04\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10800:10836  callbackGasLimit = _callbackGasLimit */\n      dup1\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10846:10890  requestConfirmations = _requestConfirmations */\n      0xffff\n      swap1\n      swap3\n      and\n      0x0100000000\n      mul\n      not(0xffffffffffff)\n      swap1\n      swap3\n      and\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10800:10836  callbackGasLimit = _callbackGasLimit */\n      0xffffffff\n      swap1\n      swap4\n      and\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10846:10890  requestConfirmations = _requestConfirmations */\n      swap3\n      swap1\n      swap3\n      or\n      or\n      swap1\n      sstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10690:10897  function updateVRFParams(uint32 _callbackGasLimit, uint16 _requestConfirmations) external onlyOwner {... */\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10131:10512  function calculateReward(address user) external view returns (uint256) {... */\n    tag_142:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10238:10250  stakes[user] */\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10193:10200  uint256 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10238:10250  stakes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10238:10244  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10238:10250  stakes[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10303:10319  userStake.amount */\n      dup1\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10321:10341  userStake.currentAPY */\n      0x04\n      dup3\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10193:10200  uint256 */\n      dup4\n      swap2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10281:10342  calculateReward(user, userStake.amount, userStake.currentAPY) */\n      tag_238\n      swap2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10245:10249  user */\n      dup7\n      swap2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10303:10319  userStake.amount */\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10281:10296  calculateReward */\n      tag_239\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10281:10342  calculateReward(user, userStake.amount, userStake.currentAPY) */\n      jump\t// in\n    tag_238:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10260:10342  uint256 baseReward = calculateReward(user, userStake.amount, userStake.currentAPY) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10352:10369  uint256 daoReward */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10372:10436  calculateReward(user, userStake.daoAmount, userStake.currentAPY) */\n      tag_240\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10388:10392  user */\n      dup6\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10394:10403  userStake */\n      dup5\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10394:10413  userStake.daoAmount */\n      0x01\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10415:10424  userStake */\n      dup6\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10415:10435  userStake.currentAPY */\n      0x04\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10372:10387  calculateReward */\n      tag_239\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10372:10436  calculateReward(user, userStake.daoAmount, userStake.currentAPY) */\n      jump\t// in\n    tag_240:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10352:10436  uint256 daoReward = calculateReward(user, userStake.daoAmount, userStake.currentAPY) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10496:10505  daoReward */\n      dup1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10483:10493  baseReward */\n      dup3\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10453:10462  userStake */\n      dup5\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10453:10480  userStake.accumulatedReward */\n      0x03\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10453:10493  userStake.accumulatedReward + baseReward */\n      tag_241\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_241:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10453:10505  userStake.accumulatedReward + baseReward + daoReward */\n      tag_242\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_242:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10446:10505  return userStake.accumulatedReward + baseReward + daoReward */\n      swap6\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":10131:10512  function calculateReward(address user) external view returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":11040:11194  function transferOwnership(address newOwner) public override(Ownable, IUBI4ALLQuantumFinance) onlyOwner {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_244:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":11154:11187  super.transferOwnership(newOwner) */\n      tag_246\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":11178:11186  newOwner */\n      dup2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":11154:11177  super.transferOwnership */\n      tag_247\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":11154:11187  super.transferOwnership(newOwner) */\n      jump\t// in\n    tag_246:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":11040:11194  function transferOwnership(address newOwner) public override(Ownable, IUBI4ALLQuantumFinance) onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7225:7935  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {... */\n    tag_155:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7330:7342  address user */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7345:7369  requestToUser[requestId] */\n      dup3\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7345:7358  requestToUser */\n      0x03\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7345:7369  requestToUser[requestId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7379:7428  require(user != address(0), \"Invalid request ID\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8248:8250   */\n      0x20\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7379:7428  require(user != address(0), \"Invalid request ID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8230:8251   */\n      mstore\n        /* \"#utility.yul\":8287:8289   */\n      0x12\n        /* \"#utility.yul\":8267:8285   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8260:8290   */\n      mstore\n      shl(0x72, 0x125b9d985b1a59081c995c5d595cdd081251)\n        /* \"#utility.yul\":8306:8324   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8299:8347   */\n      mstore\n        /* \"#utility.yul\":8364:8382   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7379:7428  require(user != address(0), \"Invalid request ID\") */\n      tag_152\n        /* \"#utility.yul\":8046:8388   */\n      jump\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7379:7428  require(user != address(0), \"Invalid request ID\") */\n    tag_249:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7438:7457  uint256 randomValue */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7477:7480  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7460:7471  randomWords */\n      dup4\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7472:7473  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7460:7474  randomWords[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_253\n      jumpi\n      tag_253\n      tag_254\n      jump\t// in\n    tag_253:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7460:7480  randomWords[0] % 100 */\n      tag_255\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7509:7521  stakes[user] */\n      dup4\n      and\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7490:7506  uint256 apyRange */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7509:7521  stakes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7509:7515  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7509:7521  stakes[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7509:7531  stakes[user].daoAmount */\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7438:7480  uint256 randomValue = randomWords[0] % 100 */\n      swap2\n      swap3\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7490:7506  uint256 apyRange */\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7509:7623  stakes[user].daoAmount > 0 ? DAO_SUPERPOSITION_MAX - DAO_SUPERPOSITION_MIN : SUPERPOSITION_MAX - SUPERPOSITION_MIN */\n      tag_257\n      jumpi\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7586:7623  SUPERPOSITION_MAX - SUPERPOSITION_MIN */\n      tag_258\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1237:1241  8_00 */\n      0x0320\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1358:1363  14_00 */\n      0x0578\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7586:7623  SUPERPOSITION_MAX - SUPERPOSITION_MIN */\n      tag_163\n      jump\t// in\n    tag_258:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7509:7623  stakes[user].daoAmount > 0 ? DAO_SUPERPOSITION_MAX - DAO_SUPERPOSITION_MIN : SUPERPOSITION_MAX - SUPERPOSITION_MIN */\n      jump(tag_260)\n    tag_257:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7538:7583  DAO_SUPERPOSITION_MAX - DAO_SUPERPOSITION_MIN */\n      tag_260\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1478:1483  10_00 */\n      0x03e8\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1599:1604  16_00 */\n      0x0640\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7538:7583  DAO_SUPERPOSITION_MAX - DAO_SUPERPOSITION_MIN */\n      tag_163\n      jump\t// in\n    tag_260:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7684:7696  stakes[user] */\n      dup5\n      and\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7633:7647  uint256 newAPY */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7684:7696  stakes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7684:7690  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7684:7696  stakes[user] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7684:7706  stakes[user].daoAmount */\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7490:7623  uint256 apyRange = stakes[user].daoAmount > 0 ? DAO_SUPERPOSITION_MAX - DAO_SUPERPOSITION_MIN : SUPERPOSITION_MAX - SUPERPOSITION_MIN */\n      swap2\n      swap3\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7633:7647  uint256 newAPY */\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7684:7754  stakes[user].daoAmount > 0 ? DAO_SUPERPOSITION_MIN : SUPERPOSITION_MIN */\n      tag_261\n      jumpi\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1237:1241  8_00 */\n      0x0320\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7684:7754  stakes[user].daoAmount > 0 ? DAO_SUPERPOSITION_MIN : SUPERPOSITION_MIN */\n      jump(tag_262)\n    tag_261:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1478:1483  10_00 */\n      0x03e8\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7684:7754  stakes[user].daoAmount > 0 ? DAO_SUPERPOSITION_MIN : SUPERPOSITION_MIN */\n    tag_262:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7676:7679  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7651:7673  randomValue * apyRange */\n      tag_263\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7665:7673  apyRange */\n      dup5\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7651:7662  randomValue */\n      dup7\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7651:7673  randomValue * apyRange */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7651:7679  randomValue * apyRange / 100 */\n      tag_265\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7650:7755  (randomValue * apyRange / 100) + (stakes[user].daoAmount > 0 ? DAO_SUPERPOSITION_MIN : SUPERPOSITION_MIN) */\n      tag_267\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7765:7777  stakes[user] */\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7765:7771  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7765:7777  stakes[user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7765:7788  stakes[user].currentAPY */\n      0x04\n      dup2\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7765:7797  stakes[user].currentAPY = newAPY */\n      dup7\n      swap1\n      sstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7833:7848  block.timestamp */\n      timestamp\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7807:7830  stakes[user].lastUpdate */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7807:7848  stakes[user].lastUpdate = block.timestamp */\n      sstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7865:7889  requestToUser[requestId] */\n      dup11\n      dup4\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7865:7878  requestToUser */\n      0x03\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7865:7889  requestToUser[requestId] */\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7858:7889  delete requestToUser[requestId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7904:7928  APYUpdated(user, newAPY) */\n      swap1\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7765:7797  stakes[user].currentAPY = newAPY */\n      swap3\n      swap4\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7765:7777  stakes[user] */\n      swap1\n      swap2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7904:7928  APYUpdated(user, newAPY) */\n      0x95046b7fdb9bcf09cdb8b5e270934d955f51f771912290ff9a0020045195eee5\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7904:7928  APYUpdated(user, newAPY) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7320:7935  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7225:7935  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8026:8483  function updateStake(address user) internal {... */\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8102:8114  stakes[user] */\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8076:8099  Stake storage userStake */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8102:8114  stakes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8102:8108  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8102:8114  stakes[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8124:8140  userStake.amount */\n      dup1\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8124:8144  userStake.amount > 0 */\n      iszero\n      iszero\n      dup1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8124:8171  userStake.amount > 0 || userStake.daoAmount > 0 */\n      tag_270\n      jumpi\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8170:8171  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8148:8157  userStake */\n      dup2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8148:8167  userStake.daoAmount */\n      0x01\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8148:8171  userStake.daoAmount > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8124:8171  userStake.amount > 0 || userStake.daoAmount > 0 */\n    tag_270:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8120:8481  if (userStake.amount > 0 || userStake.daoAmount > 0) {    ... */\n      iszero\n      tag_154\n      jumpi\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8187:8205  uint256 baseReward */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8208:8269  calculateReward(user, userStake.amount, userStake.currentAPY) */\n      tag_272\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8224:8228  user */\n      dup4\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8230:8239  userStake */\n      dup4\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8230:8246  userStake.amount */\n      0x00\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8248:8257  userStake */\n      dup5\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8248:8268  userStake.currentAPY */\n      0x04\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8208:8223  calculateReward */\n      tag_239\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8208:8269  calculateReward(user, userStake.amount, userStake.currentAPY) */\n      jump\t// in\n    tag_272:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8187:8269  uint256 baseReward = calculateReward(user, userStake.amount, userStake.currentAPY) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8279:8296  uint256 daoReward */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8299:8363  calculateReward(user, userStake.daoAmount, userStake.currentAPY) */\n      tag_273\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8315:8319  user */\n      dup5\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8321:8330  userStake */\n      dup5\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8321:8340  userStake.daoAmount */\n      0x01\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8342:8351  userStake */\n      dup6\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8342:8362  userStake.currentAPY */\n      0x04\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8299:8314  calculateReward */\n      tag_239\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8299:8363  calculateReward(user, userStake.daoAmount, userStake.currentAPY) */\n      jump\t// in\n    tag_273:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8279:8363  uint256 daoReward = calculateReward(user, userStake.daoAmount, userStake.currentAPY) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8404:8426  baseReward + daoReward */\n      tag_274\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8279:8363  uint256 daoReward = calculateReward(user, userStake.daoAmount, userStake.currentAPY) */\n      dup2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8404:8414  baseReward */\n      dup4\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8404:8426  baseReward + daoReward */\n      tag_177\n      jump\t// in\n    tag_274:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8373:8382  userStake */\n      dup4\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8373:8400  userStake.accumulatedReward */\n      0x03\n      add\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8373:8426  userStake.accumulatedReward += baseReward + daoReward */\n      dup3\n      dup3\n      sload\n      tag_275\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_275:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8459:8474  block.timestamp */\n      timestamp\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8436:8456  userStake.lastUpdate */\n      0x02\n      dup5\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8436:8474  userStake.lastUpdate = block.timestamp */\n      sstore\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8070:8483  {... */\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8026:8483  function updateStake(address user) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_152\n        /* \"#utility.yul\":3020:3256   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6589:7070  function requestSuperpositionAPY(address user) internal {... */\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6678:6690  stakes[user] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6678:6684  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6678:6690  stakes[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6678:6701  stakes[user].lastUpdate */\n      0x02\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6678:6719  stakes[user].lastUpdate + UPDATE_INTERVAL */\n      tag_285\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1709:1716  30 days */\n      0x278d00\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6678:6719  stakes[user].lastUpdate + UPDATE_INTERVAL */\n      tag_177\n      jump\t// in\n    tag_285:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6659:6674  block.timestamp */\n      timestamp\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6659:6719  block.timestamp >= stakes[user].lastUpdate + UPDATE_INTERVAL */\n      lt\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6655:7064  if (block.timestamp >= stakes[user].lastUpdate + UPDATE_INTERVAL) {... */\n      tag_246\n      jumpi\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6860:6880  requestConfirmations */\n      0x04\n      dup1\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6755:6954  COORDINATOR.requestRandomWords(... */\n      mload(0x40)\n      shl(0xe4, 0x05d3b1d3)\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6803:6810  keyHash */\n      immutable(\"0xefc69ac575b4738c457b8bcdbf19fb94007e003bdfa78d9f9824d63343ccc553\")\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6755:6954  COORDINATOR.requestRandomWords(... */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":9323:9348   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9396:9414   */\n      0xffffffffffffffff\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6828:6842  subscriptionId */\n      immutable(\"0xe699a24dbc75eeaed81a8bf4b3cb0a2b31e2feaa7617ebf93abe15d5ab1d7460\")\n        /* \"#utility.yul\":9384:9415   */\n      and\n        /* \"#utility.yul\":9364:9382   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9357:9416   */\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6860:6880  requestConfirmations */\n      0x0100000000\n      dup2\n      div\n      0xffff\n      and\n        /* \"#utility.yul\":9432:9450   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":9425:9472   */\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6898:6914  callbackGasLimit */\n      0xffffffff\n      dup1\n      dup3\n      and\n        /* \"#utility.yul\":9488:9506   */\n      0x64\n      dup5\n      add\n        /* \"#utility.yul\":9481:9532   */\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6932:6940  numWords */\n      0x01000000000000\n      swap1\n      swap2\n      div\n      and\n        /* \"#utility.yul\":9548:9567   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":9541:9593   */\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6735:6752  uint256 requestId */\n      0x00\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6755:6766  COORDINATOR */\n      immutable(\"0xddeb3ab6e0a1dec15b1c925386318c221afb363e5386443df7661a3a78489ef6\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6755:6785  COORDINATOR.requestRandomWords */\n      and\n      swap1\n      0x5d3b1d30\n      swap1\n        /* \"#utility.yul\":9295:9314   */\n      0xa4\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6755:6954  COORDINATOR.requestRandomWords(... */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_290:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_291\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6968:6992  requestToUser[requestId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6968:6981  requestToUser */\n      0x03\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6968:6992  requestToUser[requestId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6968:6999  requestToUser[requestId] = user */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7018:7053  RandomAPYRequested(user, requestId) */\n      swap2\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6968:6992  requestToUser[requestId] */\n      swap3\n      swap4\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6968:6999  requestToUser[requestId] = user */\n      swap1\n      swap2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7018:7053  RandomAPYRequested(user, requestId) */\n      0x05acec44d329e4dfea8e1a6dae4b0c46d76b2a92d3a747907a60dee7ad6809fd\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":7018:7053  RandomAPYRequested(user, requestId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6721:7064  {... */\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":6589:7070  function requestSuperpositionAPY(address user) internal {... */\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8697:9132  function calculateReward(address user, uint256 amount, uint256 apy) internal view returns (uint256) {... */\n    tag_239:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8788:8795  uint256 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8811:8817  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8821:8822  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8811:8822  amount == 0 */\n      sub\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8807:8832  if (amount == 0) return 0 */\n      tag_295\n      jumpi\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8831:8832  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8824:8832  return 0 */\n      jump(tag_294)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8807:8832  if (amount == 0) return 0 */\n    tag_295:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8842:8865  uint256 volatilityBonus */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8868:8887  predictVolatility() */\n      tag_296\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8868:8885  predictVolatility */\n      tag_297\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8868:8887  predictVolatility() */\n      jump\t// in\n    tag_296:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8842:8887  uint256 volatilityBonus = predictVolatility() */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8897:8913  uint256 totalAPY */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8916:8937  apy + volatilityBonus */\n      tag_298\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8842:8887  uint256 volatilityBonus = predictVolatility() */\n      dup3\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8916:8919  apy */\n      dup6\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8916:8937  apy + volatilityBonus */\n      tag_177\n      jump\t// in\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8973:8985  stakes[user] */\n      dup8\n      and\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8947:8970  Stake storage userStake */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8973:8985  stakes[user] */\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8973:8979  stakes */\n      0x01\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8973:8985  stakes[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9035:9055  userStake.lastUpdate */\n      0x02\n      dup2\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8897:8937  uint256 totalAPY = apy + volatilityBonus */\n      swap3\n      swap4\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8973:8985  stakes[user] */\n      swap2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9017:9055  block.timestamp - userStake.lastUpdate */\n      tag_299\n      swap1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9017:9032  block.timestamp */\n      timestamp\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9017:9055  block.timestamp - userStake.lastUpdate */\n      tag_163\n      jump\t// in\n    tag_299:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8995:9055  uint256 timeElapsed = block.timestamp - userStake.lastUpdate */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9119:9125  10_000 */\n      0x2710\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9107:9115  365 days */\n      0x01e13380\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8995:9055  uint256 timeElapsed = block.timestamp - userStake.lastUpdate */\n      dup3\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9073:9090  amount * totalAPY */\n      tag_300\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9082:9090  totalAPY */\n      dup7\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9073:9079  amount */\n      dup12\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9073:9090  amount * totalAPY */\n      tag_264\n      jump\t// in\n    tag_300:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9073:9104  amount * totalAPY * timeElapsed */\n      tag_301\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_301:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9073:9115  amount * totalAPY * timeElapsed / 365 days */\n      tag_302\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_302:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9072:9125  (amount * totalAPY * timeElapsed / 365 days) / 10_000 */\n      tag_303\n      swap2\n      swap1\n      tag_266\n      jump\t// in\n    tag_303:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9065:9125  return (amount * totalAPY * timeElapsed / 365 days) / 10_000 */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":8697:9132  function calculateReward(address user, uint256 amount, uint256 apy) internal view returns (uint256) {... */\n    tag_294:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_305\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_305:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3199:3250   */\n      mstore\n        /* \"#utility.yul\":3172:3190   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_152\n        /* \"#utility.yul\":3020:3256   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9234:9471  function predictVolatility() internal view returns (uint256) {... */\n    tag_297:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9286:9293  uint256 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9305:9317  int256 price */\n      dup1\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9320:9326  oracle */\n      immutable(\"0x6e132956be3a55a486a3eb165331ac44a364c462bf19ae9edaeaaf7ce14a28d1\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9320:9341  oracle.getLatestPrice */\n      and\n      0x8e15f473\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9320:9343  oracle.getLatestPrice() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_313\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_313:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_314\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_314:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9305:9343  int256 price = oracle.getLatestPrice() */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9366:9367  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9357:9362  price */\n      dup2\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9357:9367  price <= 0 */\n      sgt\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9353:9377  if (price <= 0) return 0 */\n      tag_316\n      jumpi\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9376:9377  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9369:9377  return 0 */\n      swap2\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9234:9471  function predictVolatility() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9353:9377  if (price <= 0) return 0 */\n    tag_316:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9444:9464  VOLATILITY_BONUS / 2 */\n      tag_317\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9463:9464  2 */\n      0x02\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":1118:1122  2_00 */\n      0xc8\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9444:9464  VOLATILITY_BONUS / 2 */\n      tag_266\n      jump\t// in\n    tag_317:\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9437:9464  return VOLATILITY_BONUS / 2 */\n      swap2\n      pop\n      pop\n        /* \"quantum/UBI4ALLQuantumFinance.sol\":9234:9471  function predictVolatility() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":401:687   */\n    tag_51:\n        /* \"#utility.yul\":460:466   */\n      0x00\n        /* \"#utility.yul\":513:515   */\n      0x20\n        /* \"#utility.yul\":501:510   */\n      dup3\n        /* \"#utility.yul\":492:499   */\n      dup5\n        /* \"#utility.yul\":488:511   */\n      sub\n        /* \"#utility.yul\":484:516   */\n      slt\n        /* \"#utility.yul\":481:533   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":481:533   */\n    tag_325:\n        /* \"#utility.yul\":555:578   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":607:638   */\n      dup2\n      and\n        /* \"#utility.yul\":597:639   */\n      dup2\n      eq\n        /* \"#utility.yul\":587:657   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":653:654   */\n      0x00\n        /* \"#utility.yul\":650:651   */\n      dup1\n        /* \"#utility.yul\":643:655   */\n      revert\n        /* \"#utility.yul\":1160:1287   */\n    tag_318:\n        /* \"#utility.yul\":1221:1231   */\n      0x4e487b71\n        /* \"#utility.yul\":1216:1219   */\n      0xe0\n        /* \"#utility.yul\":1212:1232   */\n      shl\n        /* \"#utility.yul\":1209:1210   */\n      0x00\n        /* \"#utility.yul\":1202:1233   */\n      mstore\n        /* \"#utility.yul\":1252:1256   */\n      0x41\n        /* \"#utility.yul\":1249:1250   */\n      0x04\n        /* \"#utility.yul\":1242:1257   */\n      mstore\n        /* \"#utility.yul\":1276:1280   */\n      0x24\n        /* \"#utility.yul\":1273:1274   */\n      0x00\n        /* \"#utility.yul\":1266:1281   */\n      revert\n        /* \"#utility.yul\":1292:2587   */\n    tag_57:\n        /* \"#utility.yul\":1385:1391   */\n      0x00\n        /* \"#utility.yul\":1393:1399   */\n      dup1\n        /* \"#utility.yul\":1446:1448   */\n      0x40\n        /* \"#utility.yul\":1434:1443   */\n      dup4\n        /* \"#utility.yul\":1425:1432   */\n      dup6\n        /* \"#utility.yul\":1421:1444   */\n      sub\n        /* \"#utility.yul\":1417:1449   */\n      slt\n        /* \"#utility.yul\":1414:1466   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":1462:1463   */\n      0x00\n        /* \"#utility.yul\":1459:1460   */\n      dup1\n        /* \"#utility.yul\":1452:1464   */\n      revert\n        /* \"#utility.yul\":1414:1466   */\n    tag_330:\n        /* \"#utility.yul\":1507:1530   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1605:1607   */\n      0x20\n        /* \"#utility.yul\":1590:1608   */\n      dup4\n      add\n        /* \"#utility.yul\":1577:1609   */\n      calldataload\n        /* \"#utility.yul\":1632:1650   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1621:1651   */\n      dup2\n      gt\n        /* \"#utility.yul\":1618:1668   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":1664:1665   */\n      0x00\n        /* \"#utility.yul\":1661:1662   */\n      dup1\n        /* \"#utility.yul\":1654:1666   */\n      revert\n        /* \"#utility.yul\":1618:1668   */\n    tag_331:\n        /* \"#utility.yul\":1687:1709   */\n      dup4\n      add\n        /* \"#utility.yul\":1740:1744   */\n      0x1f\n        /* \"#utility.yul\":1732:1745   */\n      dup2\n      add\n        /* \"#utility.yul\":1728:1755   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1718:1773   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1769:1770   */\n      0x00\n        /* \"#utility.yul\":1766:1767   */\n      dup1\n        /* \"#utility.yul\":1759:1771   */\n      revert\n        /* \"#utility.yul\":1718:1773   */\n    tag_332:\n        /* \"#utility.yul\":1809:1811   */\n      dup1\n        /* \"#utility.yul\":1796:1812   */\n      calldataload\n        /* \"#utility.yul\":1835:1853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1827:1833   */\n      dup2\n        /* \"#utility.yul\":1824:1854   */\n      gt\n        /* \"#utility.yul\":1821:1877   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":1857:1875   */\n      tag_334\n      tag_318\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1903:1909   */\n      dup1\n        /* \"#utility.yul\":1900:1901   */\n      0x05\n        /* \"#utility.yul\":1896:1910   */\n      shl\n        /* \"#utility.yul\":1939:1941   */\n      0x40\n        /* \"#utility.yul\":1933:1942   */\n      mload\n        /* \"#utility.yul\":2002:2004   */\n      0x1f\n        /* \"#utility.yul\":1998:2005   */\n      not\n        /* \"#utility.yul\":1993:1995   */\n      0x3f\n        /* \"#utility.yul\":1989:1991   */\n      dup4\n        /* \"#utility.yul\":1985:1996   */\n      add\n        /* \"#utility.yul\":1981:2006   */\n      and\n        /* \"#utility.yul\":1973:1979   */\n      dup2\n        /* \"#utility.yul\":1969:2007   */\n      add\n        /* \"#utility.yul\":2073:2079   */\n      dup2\n        /* \"#utility.yul\":2061:2071   */\n      dup2\n        /* \"#utility.yul\":2058:2080   */\n      lt\n        /* \"#utility.yul\":2037:2055   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2025:2035   */\n      dup3\n        /* \"#utility.yul\":2022:2056   */\n      gt\n        /* \"#utility.yul\":2019:2081   */\n      or\n        /* \"#utility.yul\":2016:2104   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":2084:2102   */\n      tag_336\n      tag_318\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2120:2122   */\n      0x40\n        /* \"#utility.yul\":2113:2135   */\n      mstore\n        /* \"#utility.yul\":2170:2192   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2220:2222   */\n      0x20\n        /* \"#utility.yul\":2250:2261   */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":2246:2266   */\n      dup2\n      add\n      swap3\n        /* \"#utility.yul\":2170:2192   */\n      swap1\n        /* \"#utility.yul\":2208:2223   */\n      dup2\n      add\n        /* \"#utility.yul\":2278:2297   */\n      dup9\n      dup5\n      gt\n        /* \"#utility.yul\":2275:2314   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":2310:2311   */\n      0x00\n        /* \"#utility.yul\":2307:2308   */\n      dup1\n        /* \"#utility.yul\":2300:2312   */\n      revert\n        /* \"#utility.yul\":2275:2314   */\n    tag_337:\n        /* \"#utility.yul\":2342:2344   */\n      0x20\n        /* \"#utility.yul\":2338:2340   */\n      dup6\n        /* \"#utility.yul\":2334:2345   */\n      add\n        /* \"#utility.yul\":2323:2345   */\n      swap5\n      pop\n        /* \"#utility.yul\":2354:2556   */\n    tag_338:\n        /* \"#utility.yul\":2370:2376   */\n      dup4\n        /* \"#utility.yul\":2365:2368   */\n      dup6\n        /* \"#utility.yul\":2362:2377   */\n      lt\n        /* \"#utility.yul\":2354:2556   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":2464:2481   */\n      dup5\n      calldataload\n        /* \"#utility.yul\":2494:2514   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2543:2545   */\n      0x20\n        /* \"#utility.yul\":2387:2399   */\n      swap6\n      dup7\n      add\n      swap6\n        /* \"#utility.yul\":2464:2481   */\n      swap1\n      swap4\n      pop\n        /* \"#utility.yul\":2534:2546   */\n      add\n        /* \"#utility.yul\":2354:2556   */\n      jump(tag_338)\n    tag_340:\n        /* \"#utility.yul\":2358:2361   */\n      pop\n        /* \"#utility.yul\":2575:2581   */\n      dup1\n        /* \"#utility.yul\":2565:2581   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1292:2587   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2789:3015   */\n    tag_68:\n        /* \"#utility.yul\":2848:2854   */\n      0x00\n        /* \"#utility.yul\":2901:2903   */\n      0x20\n        /* \"#utility.yul\":2889:2898   */\n      dup3\n        /* \"#utility.yul\":2880:2887   */\n      dup5\n        /* \"#utility.yul\":2876:2899   */\n      sub\n        /* \"#utility.yul\":2872:2904   */\n      slt\n        /* \"#utility.yul\":2869:2921   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2917:2918   */\n      0x00\n        /* \"#utility.yul\":2914:2915   */\n      dup1\n        /* \"#utility.yul\":2907:2919   */\n      revert\n        /* \"#utility.yul\":2869:2921   */\n    tag_343:\n      pop\n        /* \"#utility.yul\":2962:2985   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2789:3015   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4307:4751   */\n    tag_132:\n        /* \"#utility.yul\":4373:4379   */\n      0x00\n        /* \"#utility.yul\":4381:4387   */\n      dup1\n        /* \"#utility.yul\":4434:4436   */\n      0x40\n        /* \"#utility.yul\":4422:4431   */\n      dup4\n        /* \"#utility.yul\":4413:4420   */\n      dup6\n        /* \"#utility.yul\":4409:4432   */\n      sub\n        /* \"#utility.yul\":4405:4437   */\n      slt\n        /* \"#utility.yul\":4402:4454   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":4450:4451   */\n      0x00\n        /* \"#utility.yul\":4447:4448   */\n      dup1\n        /* \"#utility.yul\":4440:4452   */\n      revert\n        /* \"#utility.yul\":4402:4454   */\n    tag_351:\n        /* \"#utility.yul\":4489:4498   */\n      dup3\n        /* \"#utility.yul\":4476:4499   */\n      calldataload\n        /* \"#utility.yul\":4539:4549   */\n      0xffffffff\n        /* \"#utility.yul\":4532:4537   */\n      dup2\n        /* \"#utility.yul\":4528:4550   */\n      and\n        /* \"#utility.yul\":4521:4526   */\n      dup2\n        /* \"#utility.yul\":4518:4551   */\n      eq\n        /* \"#utility.yul\":4508:4569   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":4565:4566   */\n      0x00\n        /* \"#utility.yul\":4562:4563   */\n      dup1\n        /* \"#utility.yul\":4555:4567   */\n      revert\n        /* \"#utility.yul\":4508:4569   */\n    tag_352:\n        /* \"#utility.yul\":4588:4593   */\n      swap2\n      pop\n        /* \"#utility.yul\":4645:4647   */\n      0x20\n        /* \"#utility.yul\":4630:4648   */\n      dup4\n      add\n        /* \"#utility.yul\":4617:4649   */\n      calldataload\n        /* \"#utility.yul\":4693:4699   */\n      0xffff\n        /* \"#utility.yul\":4680:4700   */\n      dup2\n      and\n        /* \"#utility.yul\":4668:4701   */\n      dup2\n      eq\n        /* \"#utility.yul\":4658:4719   */\n      tag_353\n      jumpi\n        /* \"#utility.yul\":4715:4716   */\n      0x00\n        /* \"#utility.yul\":4712:4713   */\n      dup1\n        /* \"#utility.yul\":4705:4717   */\n      revert\n        /* \"#utility.yul\":4658:4719   */\n    tag_353:\n        /* \"#utility.yul\":4738:4745   */\n      dup1\n        /* \"#utility.yul\":4728:4745   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4307:4751   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5543   */\n    tag_319:\n        /* \"#utility.yul\":5477:5487   */\n      0x4e487b71\n        /* \"#utility.yul\":5472:5475   */\n      0xe0\n        /* \"#utility.yul\":5468:5488   */\n      shl\n        /* \"#utility.yul\":5465:5466   */\n      0x00\n        /* \"#utility.yul\":5458:5489   */\n      mstore\n        /* \"#utility.yul\":5508:5512   */\n      0x11\n        /* \"#utility.yul\":5505:5506   */\n      0x04\n        /* \"#utility.yul\":5498:5513   */\n      mstore\n        /* \"#utility.yul\":5532:5536   */\n      0x24\n        /* \"#utility.yul\":5529:5530   */\n      0x00\n        /* \"#utility.yul\":5522:5537   */\n      revert\n        /* \"#utility.yul\":5548:5676   */\n    tag_163:\n        /* \"#utility.yul\":5615:5624   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5636:5647   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5633:5670   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":5650:5668   */\n      tag_176\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":5960:6237   */\n    tag_170:\n        /* \"#utility.yul\":6027:6033   */\n      0x00\n        /* \"#utility.yul\":6080:6082   */\n      0x20\n        /* \"#utility.yul\":6068:6077   */\n      dup3\n        /* \"#utility.yul\":6059:6066   */\n      dup5\n        /* \"#utility.yul\":6055:6078   */\n      sub\n        /* \"#utility.yul\":6051:6083   */\n      slt\n        /* \"#utility.yul\":6048:6100   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":6096:6097   */\n      0x00\n        /* \"#utility.yul\":6093:6094   */\n      dup1\n        /* \"#utility.yul\":6086:6098   */\n      revert\n        /* \"#utility.yul\":6048:6100   */\n    tag_362:\n        /* \"#utility.yul\":6128:6137   */\n      dup2\n        /* \"#utility.yul\":6122:6138   */\n      mload\n        /* \"#utility.yul\":6181:6186   */\n      dup1\n        /* \"#utility.yul\":6174:6187   */\n      iszero\n        /* \"#utility.yul\":6167:6188   */\n      iszero\n        /* \"#utility.yul\":6160:6165   */\n      dup2\n        /* \"#utility.yul\":6157:6189   */\n      eq\n        /* \"#utility.yul\":6147:6207   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":6203:6204   */\n      0x00\n        /* \"#utility.yul\":6200:6201   */\n      dup1\n        /* \"#utility.yul\":6193:6205   */\n      revert\n        /* \"#utility.yul\":6242:6581   */\n    tag_173:\n        /* \"#utility.yul\":6444:6446   */\n      0x20\n        /* \"#utility.yul\":6426:6447   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6483:6485   */\n      0x0f\n        /* \"#utility.yul\":6463:6481   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6456:6486   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":6517:6519   */\n      0x40\n        /* \"#utility.yul\":6502:6520   */\n      dup3\n      add\n        /* \"#utility.yul\":6495:6540   */\n      mstore\n        /* \"#utility.yul\":6572:6574   */\n      0x60\n        /* \"#utility.yul\":6557:6575   */\n      add\n      swap1\n        /* \"#utility.yul\":6242:6581   */\n      jump\t// out\n        /* \"#utility.yul\":6586:6711   */\n    tag_177:\n        /* \"#utility.yul\":6651:6660   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6672:6682   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6669:6705   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":6685:6703   */\n      tag_176\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":8393:8520   */\n    tag_254:\n        /* \"#utility.yul\":8454:8464   */\n      0x4e487b71\n        /* \"#utility.yul\":8449:8452   */\n      0xe0\n        /* \"#utility.yul\":8445:8465   */\n      shl\n        /* \"#utility.yul\":8442:8443   */\n      0x00\n        /* \"#utility.yul\":8435:8466   */\n      mstore\n        /* \"#utility.yul\":8485:8489   */\n      0x32\n        /* \"#utility.yul\":8482:8483   */\n      0x04\n        /* \"#utility.yul\":8475:8490   */\n      mstore\n        /* \"#utility.yul\":8509:8513   */\n      0x24\n        /* \"#utility.yul\":8506:8507   */\n      0x00\n        /* \"#utility.yul\":8499:8514   */\n      revert\n        /* \"#utility.yul\":8525:8652   */\n    tag_320:\n        /* \"#utility.yul\":8586:8596   */\n      0x4e487b71\n        /* \"#utility.yul\":8581:8584   */\n      0xe0\n        /* \"#utility.yul\":8577:8597   */\n      shl\n        /* \"#utility.yul\":8574:8575   */\n      0x00\n        /* \"#utility.yul\":8567:8598   */\n      mstore\n        /* \"#utility.yul\":8617:8621   */\n      0x12\n        /* \"#utility.yul\":8614:8615   */\n      0x04\n        /* \"#utility.yul\":8607:8622   */\n      mstore\n        /* \"#utility.yul\":8641:8645   */\n      0x24\n        /* \"#utility.yul\":8638:8639   */\n      0x00\n        /* \"#utility.yul\":8631:8646   */\n      revert\n        /* \"#utility.yul\":8657:8769   */\n    tag_256:\n        /* \"#utility.yul\":8689:8690   */\n      0x00\n        /* \"#utility.yul\":8715:8716   */\n      dup3\n        /* \"#utility.yul\":8705:8740   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":8720:8738   */\n      tag_377\n      tag_320\n      jump\t// in\n    tag_377:\n      pop\n        /* \"#utility.yul\":8754:8763   */\n      mod\n      swap1\n        /* \"#utility.yul\":8657:8769   */\n      jump\t// out\n        /* \"#utility.yul\":8774:8942   */\n    tag_264:\n        /* \"#utility.yul\":8847:8856   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8878:8887   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8895:8910   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8889:8911   */\n      dup5\n      eq\n        /* \"#utility.yul\":8875:8912   */\n      or\n        /* \"#utility.yul\":8865:8936   */\n      tag_176\n      jumpi\n        /* \"#utility.yul\":8916:8934   */\n      tag_176\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":8947:9067   */\n    tag_266:\n        /* \"#utility.yul\":8987:8988   */\n      0x00\n        /* \"#utility.yul\":9013:9014   */\n      dup3\n        /* \"#utility.yul\":9003:9038   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":9018:9036   */\n      tag_383\n      tag_320\n      jump\t// in\n    tag_383:\n      pop\n        /* \"#utility.yul\":9052:9061   */\n      div\n      swap1\n        /* \"#utility.yul\":8947:9067   */\n      jump\t// out\n        /* \"#utility.yul\":9604:9788   */\n    tag_292:\n        /* \"#utility.yul\":9674:9680   */\n      0x00\n        /* \"#utility.yul\":9727:9729   */\n      0x20\n        /* \"#utility.yul\":9715:9724   */\n      dup3\n        /* \"#utility.yul\":9706:9713   */\n      dup5\n        /* \"#utility.yul\":9702:9725   */\n      sub\n        /* \"#utility.yul\":9698:9730   */\n      slt\n        /* \"#utility.yul\":9695:9747   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":9743:9744   */\n      0x00\n        /* \"#utility.yul\":9740:9741   */\n      dup1\n        /* \"#utility.yul\":9733:9745   */\n      revert\n        /* \"#utility.yul\":9695:9747   */\n    tag_386:\n      pop\n        /* \"#utility.yul\":9766:9782   */\n      mload\n      swap2\n        /* \"#utility.yul\":9604:9788   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208cf170318d413ce7f08fb2d1cca545f8d8b408a9fe4941209ae2c1efccd5494764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_250": {
									"entryPoint": null,
									"id": 250,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3257": {
									"entryPoint": null,
									"id": 3257,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_transferOwnership_346": {
									"entryPoint": 447,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_bytes32t_uint64t_address_fromMemory": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_625feeba8d1988c932c8496c5f7f610e9a69c12d4715b7bdbd4a8004c909c817__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2159:12",
										"nodeType": "YulBlock",
										"src": "0:2159:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:12",
													"nodeType": "YulBlock",
													"src": "74:117:12",
													"statements": [
														{
															"nativeSrc": "84:22:12",
															"nodeType": "YulAssignment",
															"src": "84:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:12"
																},
																"nativeSrc": "93:13:12",
																"nodeType": "YulFunctionCall",
																"src": "93:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:12",
																"nodeType": "YulBlock",
																"src": "169:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:12",
																					"nodeType": "YulLiteral",
																					"src": "178:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:12",
																					"nodeType": "YulLiteral",
																					"src": "181:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:12"
																			},
																			"nativeSrc": "171:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:12"
																		},
																		"nativeSrc": "171:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:12",
																										"nodeType": "YulLiteral",
																										"src": "154:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:12",
																										"nodeType": "YulLiteral",
																										"src": "159:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:12"
																								},
																								"nativeSrc": "150:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:12",
																								"nodeType": "YulLiteral",
																								"src": "163:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:12"
																						},
																						"nativeSrc": "146:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:12"
																				},
																				"nativeSrc": "135:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:12"
																		},
																		"nativeSrc": "125:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:12"
																},
																"nativeSrc": "118:50:12",
																"nodeType": "YulFunctionCall",
																"src": "118:50:12"
															},
															"nativeSrc": "115:70:12",
															"nodeType": "YulIf",
															"src": "115:70:12"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:12",
														"nodeType": "YulTypedName",
														"src": "53:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:12",
														"nodeType": "YulTypedName",
														"src": "64:5:12",
														"type": ""
													}
												],
												"src": "14:177:12"
											},
											{
												"body": {
													"nativeSrc": "361:527:12",
													"nodeType": "YulBlock",
													"src": "361:527:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "408:16:12",
																"nodeType": "YulBlock",
																"src": "408:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "417:1:12",
																					"nodeType": "YulLiteral",
																					"src": "417:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "420:1:12",
																					"nodeType": "YulLiteral",
																					"src": "420:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "410:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "410:6:12"
																			},
																			"nativeSrc": "410:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "410:12:12"
																		},
																		"nativeSrc": "410:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "410:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "382:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "382:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "391:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "391:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "378:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "378:3:12"
																		},
																		"nativeSrc": "378:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "378:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "403:3:12",
																		"nodeType": "YulLiteral",
																		"src": "403:3:12",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "374:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "374:3:12"
																},
																"nativeSrc": "374:33:12",
																"nodeType": "YulFunctionCall",
																"src": "374:33:12"
															},
															"nativeSrc": "371:53:12",
															"nodeType": "YulIf",
															"src": "371:53:12"
														},
														{
															"nativeSrc": "433:50:12",
															"nodeType": "YulAssignment",
															"src": "433:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "473:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "473:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "443:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "443:29:12"
																},
																"nativeSrc": "443:40:12",
																"nodeType": "YulFunctionCall",
																"src": "443:40:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "433:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:12"
																}
															]
														},
														{
															"nativeSrc": "492:59:12",
															"nodeType": "YulAssignment",
															"src": "492:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "536:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "547:2:12",
																				"nodeType": "YulLiteral",
																				"src": "547:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "532:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "532:3:12"
																		},
																		"nativeSrc": "532:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "532:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "502:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "502:29:12"
																},
																"nativeSrc": "502:49:12",
																"nodeType": "YulFunctionCall",
																"src": "502:49:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "492:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:12"
																}
															]
														},
														{
															"nativeSrc": "560:59:12",
															"nodeType": "YulAssignment",
															"src": "560:59:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "604:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "604:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "615:2:12",
																				"nodeType": "YulLiteral",
																				"src": "615:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "600:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "600:3:12"
																		},
																		"nativeSrc": "600:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "600:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "570:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "570:29:12"
																},
																"nativeSrc": "570:49:12",
																"nodeType": "YulFunctionCall",
																"src": "570:49:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "560:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:12"
																}
															]
														},
														{
															"nativeSrc": "628:35:12",
															"nodeType": "YulAssignment",
															"src": "628:35:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "648:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "648:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "659:2:12",
																				"nodeType": "YulLiteral",
																				"src": "659:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "644:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "644:3:12"
																		},
																		"nativeSrc": "644:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "644:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "638:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:5:12"
																},
																"nativeSrc": "638:25:12",
																"nodeType": "YulFunctionCall",
																"src": "638:25:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "628:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:12"
																}
															]
														},
														{
															"nativeSrc": "672:39:12",
															"nodeType": "YulVariableDeclaration",
															"src": "672:39:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "695:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "695:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "706:3:12",
																				"nodeType": "YulLiteral",
																				"src": "706:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "691:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "691:3:12"
																		},
																		"nativeSrc": "691:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "691:19:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "685:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:5:12"
																},
																"nativeSrc": "685:26:12",
																"nodeType": "YulFunctionCall",
																"src": "685:26:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulTypedName",
																	"src": "676:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "773:16:12",
																"nodeType": "YulBlock",
																"src": "773:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "782:1:12",
																					"nodeType": "YulLiteral",
																					"src": "782:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "785:1:12",
																					"nodeType": "YulLiteral",
																					"src": "785:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "775:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "775:6:12"
																			},
																			"nativeSrc": "775:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "775:12:12"
																		},
																		"nativeSrc": "775:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "775:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "733:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "733:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "744:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "744:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "759:2:12",
																										"nodeType": "YulLiteral",
																										"src": "759:2:12",
																										"type": "",
																										"value": "64"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "763:1:12",
																										"nodeType": "YulLiteral",
																										"src": "763:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "755:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "755:3:12"
																								},
																								"nativeSrc": "755:10:12",
																								"nodeType": "YulFunctionCall",
																								"src": "755:10:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "767:1:12",
																								"nodeType": "YulLiteral",
																								"src": "767:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "751:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "751:3:12"
																						},
																						"nativeSrc": "751:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "751:18:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "740:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "740:3:12"
																				},
																				"nativeSrc": "740:30:12",
																				"nodeType": "YulFunctionCall",
																				"src": "740:30:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "730:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "730:2:12"
																		},
																		"nativeSrc": "730:41:12",
																		"nodeType": "YulFunctionCall",
																		"src": "730:41:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "723:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "723:6:12"
																},
																"nativeSrc": "723:49:12",
																"nodeType": "YulFunctionCall",
																"src": "723:49:12"
															},
															"nativeSrc": "720:69:12",
															"nodeType": "YulIf",
															"src": "720:69:12"
														},
														{
															"nativeSrc": "798:15:12",
															"nodeType": "YulAssignment",
															"src": "798:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "808:5:12",
																"nodeType": "YulIdentifier",
																"src": "808:5:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "798:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:12"
																}
															]
														},
														{
															"nativeSrc": "822:60:12",
															"nodeType": "YulAssignment",
															"src": "822:60:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "866:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "866:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "877:3:12",
																				"nodeType": "YulLiteral",
																				"src": "877:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "862:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:12"
																		},
																		"nativeSrc": "862:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "862:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "832:29:12",
																	"nodeType": "YulIdentifier",
																	"src": "832:29:12"
																},
																"nativeSrc": "832:50:12",
																"nodeType": "YulFunctionCall",
																"src": "832:50:12"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "822:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "822:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_bytes32t_uint64t_address_fromMemory",
												"nativeSrc": "196:692:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "287:9:12",
														"nodeType": "YulTypedName",
														"src": "287:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "298:7:12",
														"nodeType": "YulTypedName",
														"src": "298:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "310:6:12",
														"nodeType": "YulTypedName",
														"src": "310:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "318:6:12",
														"nodeType": "YulTypedName",
														"src": "318:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "326:6:12",
														"nodeType": "YulTypedName",
														"src": "326:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "334:6:12",
														"nodeType": "YulTypedName",
														"src": "334:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "342:6:12",
														"nodeType": "YulTypedName",
														"src": "342:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "350:6:12",
														"nodeType": "YulTypedName",
														"src": "350:6:12",
														"type": ""
													}
												],
												"src": "196:692:12"
											},
											{
												"body": {
													"nativeSrc": "994:102:12",
													"nodeType": "YulBlock",
													"src": "994:102:12",
													"statements": [
														{
															"nativeSrc": "1004:26:12",
															"nodeType": "YulAssignment",
															"src": "1004:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1016:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1016:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1027:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1012:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1012:3:12"
																},
																"nativeSrc": "1012:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1012:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1004:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1004:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1046:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1046:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1061:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1061:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1077:3:12",
																								"nodeType": "YulLiteral",
																								"src": "1077:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1082:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1082:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1073:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1073:3:12"
																						},
																						"nativeSrc": "1073:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1073:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1086:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1086:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1069:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1069:3:12"
																				},
																				"nativeSrc": "1069:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1069:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1057:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1057:3:12"
																		},
																		"nativeSrc": "1057:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1057:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1039:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1039:6:12"
																},
																"nativeSrc": "1039:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1039:51:12"
															},
															"nativeSrc": "1039:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1039:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "893:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "963:9:12",
														"nodeType": "YulTypedName",
														"src": "963:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "974:6:12",
														"nodeType": "YulTypedName",
														"src": "974:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "985:4:12",
														"nodeType": "YulTypedName",
														"src": "985:4:12",
														"type": ""
													}
												],
												"src": "893:203:12"
											},
											{
												"body": {
													"nativeSrc": "1275:171:12",
													"nodeType": "YulBlock",
													"src": "1275:171:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1292:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1292:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1303:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1303:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1285:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1285:6:12"
																},
																"nativeSrc": "1285:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1285:21:12"
															},
															"nativeSrc": "1285:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1285:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1326:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1326:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1337:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1337:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1322:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1322:3:12"
																		},
																		"nativeSrc": "1322:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1342:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1342:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1315:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:12"
																},
																"nativeSrc": "1315:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1315:30:12"
															},
															"nativeSrc": "1315:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "1315:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1365:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1365:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1376:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1376:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1361:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1361:3:12"
																		},
																		"nativeSrc": "1361:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1361:18:12"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1381:23:12",
																		"nodeType": "YulLiteral",
																		"src": "1381:23:12",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1354:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:12"
																},
																"nativeSrc": "1354:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1354:51:12"
															},
															"nativeSrc": "1354:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1354:51:12"
														},
														{
															"nativeSrc": "1414:26:12",
															"nodeType": "YulAssignment",
															"src": "1414:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1426:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1426:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1437:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1422:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:12"
																},
																"nativeSrc": "1422:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1422:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1414:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1414:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1101:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1252:9:12",
														"nodeType": "YulTypedName",
														"src": "1252:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1266:4:12",
														"nodeType": "YulTypedName",
														"src": "1266:4:12",
														"type": ""
													}
												],
												"src": "1101:345:12"
											},
											{
												"body": {
													"nativeSrc": "1625:172:12",
													"nodeType": "YulBlock",
													"src": "1625:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1642:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1642:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1653:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1653:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1635:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:12"
																},
																"nativeSrc": "1635:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1635:21:12"
															},
															"nativeSrc": "1635:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1635:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1676:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1676:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1687:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1687:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1672:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1672:3:12"
																		},
																		"nativeSrc": "1672:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1672:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1692:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1692:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1665:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1665:6:12"
																},
																"nativeSrc": "1665:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1665:30:12"
															},
															"nativeSrc": "1665:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "1665:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1715:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1715:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1726:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1726:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1711:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:12"
																		},
																		"nativeSrc": "1711:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1711:18:12"
																	},
																	{
																		"hexValue": "496e76616c6964206f7261636c652061646472657373",
																		"kind": "string",
																		"nativeSrc": "1731:24:12",
																		"nodeType": "YulLiteral",
																		"src": "1731:24:12",
																		"type": "",
																		"value": "Invalid oracle address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1704:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:12"
																},
																"nativeSrc": "1704:52:12",
																"nodeType": "YulFunctionCall",
																"src": "1704:52:12"
															},
															"nativeSrc": "1704:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "1704:52:12"
														},
														{
															"nativeSrc": "1765:26:12",
															"nodeType": "YulAssignment",
															"src": "1765:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1777:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1777:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1788:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1788:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1773:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1773:3:12"
																},
																"nativeSrc": "1773:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1773:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1765:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1765:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1451:346:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1602:9:12",
														"nodeType": "YulTypedName",
														"src": "1602:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1616:4:12",
														"nodeType": "YulTypedName",
														"src": "1616:4:12",
														"type": ""
													}
												],
												"src": "1451:346:12"
											},
											{
												"body": {
													"nativeSrc": "1976:181:12",
													"nodeType": "YulBlock",
													"src": "1976:181:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1993:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1993:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2004:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2004:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1986:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1986:6:12"
																},
																"nativeSrc": "1986:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1986:21:12"
															},
															"nativeSrc": "1986:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "1986:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2027:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2027:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2038:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2038:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:12"
																		},
																		"nativeSrc": "2023:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2023:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2043:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2016:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:12"
																},
																"nativeSrc": "2016:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2016:30:12"
															},
															"nativeSrc": "2016:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "2016:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2066:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2066:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2077:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2077:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2062:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2062:3:12"
																		},
																		"nativeSrc": "2062:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2062:18:12"
																	},
																	{
																		"hexValue": "496e76616c69642056524620636f6f7264696e61746f722061646472657373",
																		"kind": "string",
																		"nativeSrc": "2082:33:12",
																		"nodeType": "YulLiteral",
																		"src": "2082:33:12",
																		"type": "",
																		"value": "Invalid VRF coordinator address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2055:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:12"
																},
																"nativeSrc": "2055:61:12",
																"nodeType": "YulFunctionCall",
																"src": "2055:61:12"
															},
															"nativeSrc": "2055:61:12",
															"nodeType": "YulExpressionStatement",
															"src": "2055:61:12"
														},
														{
															"nativeSrc": "2125:26:12",
															"nodeType": "YulAssignment",
															"src": "2125:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2137:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2137:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2148:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2148:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2133:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2133:3:12"
																},
																"nativeSrc": "2133:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2133:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2125:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2125:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_625feeba8d1988c932c8496c5f7f610e9a69c12d4715b7bdbd4a8004c909c817__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1802:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1953:9:12",
														"nodeType": "YulTypedName",
														"src": "1953:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1967:4:12",
														"nodeType": "YulTypedName",
														"src": "1967:4:12",
														"type": ""
													}
												],
												"src": "1802:355:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_bytes32t_uint64t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        let value := mload(add(headStart, 128))\n        if iszero(eq(value, and(value, sub(shl(64, 1), 1)))) { revert(0, 0) }\n        value4 := value\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid token address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid oracle address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_625feeba8d1988c932c8496c5f7f610e9a69c12d4715b7bdbd4a8004c909c817__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Invalid VRF coordinator address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "610140604052600480546001600160501b03191666010003000186a017905534801561002a57600080fd5b506040516118823803806118828339810160408190526100499161022b565b83816001600160a01b03811661007a57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610083816101bf565b506001600160a01b0390811660805286166100e05760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606401610071565b6001600160a01b0385166101365760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206f7261636c652061646472657373000000000000000000006044820152606401610071565b6001600160a01b03841661018c5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c69642056524620636f6f7264696e61746f722061646472657373006044820152606401610071565b506001600160a01b0394851660a05292841660c052921660e052610100919091526001600160401b0316610120526102a7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461022657600080fd5b919050565b60008060008060008060c0878903121561024457600080fd5b61024d8761020f565b955061025b6020880161020f565b94506102696040880161020f565b6060880151608089015191955093506001600160401b038116811461028d57600080fd5b915061029b60a0880161020f565b90509295509295509295565b60805160a05160c05160e051610100516101205161154661033c6000396000818161020b0152610fdc0152600081816103890152610fab01526000818161031801526110350152600081816103d201526111e70152600081816104140152818161063f015281816107f60152818161096201528181610ac90152610b700152600081816104fc015261053e01526115466000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c806389ac41471161010f578063b8ed3aad116100a2578063cb8b97f511610071578063cb8b97f5146104b9578063d82e3962146104c2578063ec18154e146104d5578063f2fde38b146104de57600080fd5b8063b8ed3aad14610482578063b94790a41461048a578063bae4e5301461049d578063c75a0715146104b057600080fd5b8063a694fc3a116100de578063a694fc3a14610436578063b0fb162f14610449578063b26025aa14610472578063b88a802f1461047a57600080fd5b806389ac4147146103f45780638da5cb5b146103fe57806393565b4c1461040f5780639da378ab1461037b57600080fd5b80633a02a42d1161018757806361728f391161015657806361728f3914610384578063715018a6146103ab5780637ccfd7fc146103b35780637dc0d1d0146103cd57600080fd5b80633a02a42d146103005780633b2bcbf1146103135780633e2f7eb5146103525780634ca19fd61461037b57600080fd5b80631fe543e3116101c35780631fe543e3146102aa57806324f74697146102bf57806327779748146102e45780632e1a7d4d146102ed57600080fd5b806307b2d32f146101ea57806309c1ba2e1461020657806316934fc414610246575b600080fd5b6101f361032081565b6040519081526020015b60405180910390f35b61022d7f000000000000000000000000000000000000000000000000000000000000000081565b60405167ffffffffffffffff90911681526020016101fd565b61028261025436600461128b565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909185565b604080519586526020860194909452928401919091526060830152608082015260a0016101fd565b6102bd6102b83660046112ca565b6104f1565b005b6004546102cf9063ffffffff1681565b60405163ffffffff90911681526020016101fd565b6101f36104b081565b6102bd6102fb3660046113a3565b61057e565b6101f361030e36600461128b565b610709565b61033a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fd565b61033a6103603660046113a3565b6003602052600090815260409020546001600160a01b031681565b6101f36103e881565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6102bd610739565b6004546102cf906601000000000000900463ffffffff1681565b61033a7f000000000000000000000000000000000000000000000000000000000000000081565b6101f362278d0081565b6000546001600160a01b031661033a565b61033a7f000000000000000000000000000000000000000000000000000000000000000081565b6102bd6104443660046113a3565b61074d565b60045461045f90640100000000900461ffff1681565b60405161ffff90911681526020016101fd565b6002546101f3565b6102bd6108c8565b6101f360c881565b6102bd6104983660046113a3565b610a1d565b6102bd6104ab3660046113bc565b610c15565b6101f361064081565b6101f361057881565b6101f36104d036600461128b565b610c4a565b6101f360025481565b6102bd6104ec36600461128b565b610cb4565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105705760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61057a8282610cc8565b5050565b61058733610e5f565b336000908152600160205260409020548111156105e65760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74207374616b656420616d6f756e740000000000006044820152606401610567565b336000908152600160205260408120805483929061060590849061141b565b92505081905550806002600082825461061e919061141b565b909155505060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b4919061142e565b6106d05760405162461bcd60e51b815260040161056790611450565b60405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250565b6001600160a01b038116600090815260016020819052604082209081015490546107339190611479565b92915050565b610741610eeb565b61074b6000610f18565b565b6000811161078e5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606401610567565b61079733610e5f565b33600090815260016020526040812080548392906107b6908490611479565b9250508190555080600260008282546107cf9190611479565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b919061142e565b6108875760405162461bcd60e51b815260040161056790611450565b61089033610f68565b604080518281526000602082015233917f37d4053e34fde482e96f6bcd424dfa31342cbd5fe184d497fb3c8bb4b4b9758091016106fe565b6108d133610e5f565b33600090815260016020526040902060030154806109275760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152606401610567565b33600081815260016020526040808220600301919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156109ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cf919061142e565b6109eb5760405162461bcd60e51b815260040161056790611450565b60405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241906020016106fe565b60008111610a5e5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606401610567565b610a6733610e5f565b3360009081526001602081905260408220018054839290610a89908490611479565b925050819055508060026000828254610aa29190611479565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e919061142e565b610b5a5760405162461bcd60e51b815260040161056790611450565b60405163255da8dd60e21b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639576a37490602401600060405180830381600087803b158015610bbc57600080fd5b505af1158015610bd0573d6000803e3d6000fd5b50505050610bdd33610f68565b604080518281526001602082015233917f37d4053e34fde482e96f6bcd424dfa31342cbd5fe184d497fb3c8bb4b4b9758091016106fe565b610c1d610eeb565b6004805461ffff9092166401000000000265ffffffffffff1990921663ffffffff90931692909217179055565b6001600160a01b0381166000908152600160205260408120805460048201548391610c7791869190611111565b90506000610c8e8584600101548560040154611111565b905080828460030154610ca19190611479565b610cab9190611479565b95945050505050565b610cbc610eeb565b610cc5816111a7565b50565b6000828152600360205260409020546001600160a01b031680610d225760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd08125160721b6044820152606401610567565b6000606483600081518110610d3957610d3961148c565b6020026020010151610d4b91906114b8565b6001600160a01b03831660009081526001602081905260408220015491925090610d8257610d7d61032061057861141b565b610d90565b610d906103e861064061141b565b6001600160a01b03841660009081526001602081905260408220015491925090610dbc57610320610dc0565b6103e85b6064610dcc84866114cc565b610dd691906114e3565b610de09190611479565b6001600160a01b038516600081815260016020908152604080832060048101869055426002909101558a8352600382529182902080546001600160a01b0319169055905183815292935090917f95046b7fdb9bcf09cdb8b5e270934d955f51f771912290ff9a0020045195eee5910160405180910390a2505050505050565b6001600160a01b03811660009081526001602052604090208054151580610e8a575060008160010154115b1561057a576000610ea48383600001548460040154611111565b90506000610ebb8484600101548560040154611111565b9050610ec78183611479565b836003016000828254610eda9190611479565b909155505042600284015550505050565b6000546001600160a01b0316331461074b5760405163118cdaa760e01b8152336004820152602401610567565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116600090815260016020526040902060020154610f929062278d0090611479565b4210610cc557600480546040516305d3b1d360e41b81527f00000000000000000000000000000000000000000000000000000000000000009281019290925267ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635d3b1d309060a4016020604051808303816000875af1158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa91906114f7565b60008181526003602090815260409182902080546001600160a01b0319166001600160a01b038716908117909155915183815292935090917f05acec44d329e4dfea8e1a6dae4b0c46d76b2a92d3a747907a60dee7ad6809fd910160405180910390a25050565b600082600003611123575060006111a0565b600061112d6111e2565b9050600061113b8285611479565b6001600160a01b0387166000908152600160205260408120600281015492935091611166904261141b565b90506127106301e133808261117b868b6114cc565b61118591906114cc565b61118f91906114e3565b61119991906114e3565b9450505050505b9392505050565b6111af610eeb565b6001600160a01b0381166111d957604051631e4fbdf760e01b815260006004820152602401610567565b610cc581610f18565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa158015611243573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126791906114f7565b90506000811361127957600091505090565b611285600260c86114e3565b91505090565b60006020828403121561129d57600080fd5b81356001600160a01b03811681146111a057600080fd5b634e487b7160e01b600052604160045260246000fd5b600080604083850312156112dd57600080fd5b82359150602083013567ffffffffffffffff8111156112fb57600080fd5b8301601f8101851361130c57600080fd5b803567ffffffffffffffff811115611326576113266112b4565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715611353576113536112b4565b60405291825260208184018101929081018884111561137157600080fd5b6020850194505b8385101561139457843580825260209586019590935001611378565b50809450505050509250929050565b6000602082840312156113b557600080fd5b5035919050565b600080604083850312156113cf57600080fd5b823563ffffffff811681146113e357600080fd5b9150602083013561ffff811681146113fa57600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561073357610733611405565b60006020828403121561144057600080fd5b815180151581146111a057600080fd5b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b8082018082111561073357610733611405565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6000826114c7576114c76114a2565b500690565b808202811582820484141761073357610733611405565b6000826114f2576114f26114a2565b500490565b60006020828403121561150957600080fd5b505191905056fea26469706673582212208cf170318d413ce7f08fb2d1cca545f8d8b408a9fe4941209ae2c1efccd5494764736f6c634300081c0033",
							"opcodes": "PUSH2 0x140 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB NOT AND PUSH7 0x10003000186A0 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1882 CODESIZE SUB DUP1 PUSH2 0x1882 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x49 SWAP2 PUSH2 0x22B JUMP JUMPDEST DUP4 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x83 DUP2 PUSH2 0x1BF JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE DUP7 AND PUSH2 0xE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206F7261636C65206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x18C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642056524620636F6F7264696E61746F72206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x71 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0xA0 MSTORE SWAP3 DUP5 AND PUSH1 0xC0 MSTORE SWAP3 AND PUSH1 0xE0 MSTORE PUSH2 0x100 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x120 MSTORE PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D DUP8 PUSH2 0x20F JUMP JUMPDEST SWAP6 POP PUSH2 0x25B PUSH1 0x20 DUP9 ADD PUSH2 0x20F JUMP JUMPDEST SWAP5 POP PUSH2 0x269 PUSH1 0x40 DUP9 ADD PUSH2 0x20F JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 DUP10 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x28D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH2 0x29B PUSH1 0xA0 DUP9 ADD PUSH2 0x20F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x1546 PUSH2 0x33C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x20B ADD MSTORE PUSH2 0xFDC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x389 ADD MSTORE PUSH2 0xFAB ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x318 ADD MSTORE PUSH2 0x1035 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3D2 ADD MSTORE PUSH2 0x11E7 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x414 ADD MSTORE DUP2 DUP2 PUSH2 0x63F ADD MSTORE DUP2 DUP2 PUSH2 0x7F6 ADD MSTORE DUP2 DUP2 PUSH2 0x962 ADD MSTORE DUP2 DUP2 PUSH2 0xAC9 ADD MSTORE PUSH2 0xB70 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4FC ADD MSTORE PUSH2 0x53E ADD MSTORE PUSH2 0x1546 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89AC4147 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xB8ED3AAD GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCB8B97F5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCB8B97F5 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xEC18154E EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB8ED3AAD EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xB94790A4 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xBAE4E530 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xC75A0715 EQ PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA694FC3A GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xB0FB162F EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xB26025AA EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89AC4147 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x93565B4C EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x9DA378AB EQ PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A02A42D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x61728F39 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A02A42D EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x3B2BCBF1 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x3E2F7EB5 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x4CA19FD6 EQ PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FE543E3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x24F74697 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x27779748 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B2D32F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x9C1BA2E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x246 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0x320 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x282 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2CF SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x4B0 DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH2 0x33A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x33A PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x739 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2CF SWAP1 PUSH7 0x1000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x33A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33A JUMP JUMPDEST PUSH2 0x33A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x45F SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x1F3 PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x13BC JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x640 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x578 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x4D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x128B JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x1F3 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x128B JUMP JUMPDEST PUSH2 0xCB4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57A DUP3 DUP3 PUSH2 0xCC8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x587 CALLER PUSH2 0xE5F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x605 SWAP1 DUP5 SWAP1 PUSH2 0x141B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x141B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x690 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B4 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP1 SLOAD PUSH2 0x733 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x741 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x74B PUSH1 0x0 PUSH2 0xF18 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0x797 CALLER PUSH2 0xE5F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7B6 SWAP1 DUP5 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x847 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x890 CALLER PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x37D4053E34FDE482E96F6BCD424DFA31342CBD5FE184D497FB3C8BB4B4B97580 SWAP2 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x8D1 CALLER PUSH2 0xE5F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP1 PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP1 PUSH1 0x20 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xA67 CALLER PUSH2 0xE5F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA89 SWAP1 DUP5 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3E SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x255DA8DD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9576A374 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xBDD CALLER PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x37D4053E34FDE482E96F6BCD424DFA31342CBD5FE184D497FB3C8BB4B4B97580 SWAP2 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0xC1D PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH6 0xFFFFFFFFFFFF NOT SWAP1 SWAP3 AND PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x4 DUP3 ADD SLOAD DUP4 SWAP2 PUSH2 0xC77 SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC8E DUP6 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x1111 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCBC PUSH2 0xEEB JUMP JUMPDEST PUSH2 0xCC5 DUP2 PUSH2 0x11A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C995C5D595CDD081251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD39 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xD82 JUMPI PUSH2 0xD7D PUSH2 0x320 PUSH2 0x578 PUSH2 0x141B JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST PUSH2 0xD90 PUSH2 0x3E8 PUSH2 0x640 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xDBC JUMPI PUSH2 0x320 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x3E8 JUMPDEST PUSH1 0x64 PUSH2 0xDCC DUP5 DUP7 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0xDE0 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP2 ADD DUP7 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP11 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x95046B7FDB9BCF09CDB8B5E270934D955F51F771912290FF9A0020045195EEE5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO ISZERO DUP1 PUSH2 0xE8A JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 PUSH2 0xEA4 DUP4 DUP4 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x4 ADD SLOAD PUSH2 0x1111 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEBB DUP5 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x1111 JUMP JUMPDEST SWAP1 POP PUSH2 0xEC7 DUP2 DUP4 PUSH2 0x1479 JUMP JUMPDEST DUP4 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP5 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xF92 SWAP1 PUSH3 0x278D00 SWAP1 PUSH2 0x1479 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xCC5 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH5 0x100000000 DUP2 DIV PUSH2 0xFFFF AND PUSH1 0x44 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH7 0x1000000000000 SWAP1 SWAP2 DIV AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1086 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD DUP4 DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x5ACEC44D329E4DFEA8E1A6DAE4B0C46D76B2A92D3A747907A60DEE7AD6809FD SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 SUB PUSH2 0x1123 JUMPI POP PUSH1 0x0 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112D PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x113B DUP3 DUP6 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x1166 SWAP1 TIMESTAMP PUSH2 0x141B JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 PUSH4 0x1E13380 DUP3 PUSH2 0x117B DUP7 DUP12 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x1185 SWAP2 SWAP1 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11AF PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xCC5 DUP2 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8E15F473 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1243 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x1279 JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1285 PUSH1 0x2 PUSH1 0xC8 PUSH2 0x14E3 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1326 JUMPI PUSH2 0x1326 PUSH2 0x12B4 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1353 JUMPI PUSH2 0x1353 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP9 DUP5 GT ISZERO PUSH2 0x1371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1394 JUMPI DUP5 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP4 POP ADD PUSH2 0x1378 JUMP JUMPDEST POP DUP1 SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x13E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x13FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x1405 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14C7 JUMPI PUSH2 0x14C7 PUSH2 0x14A2 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14F2 JUMPI PUSH2 0x14F2 PUSH2 0x14A2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 CALL PUSH17 0x318D413CE7F08FB2D1CCA545F8D8B408A9 INVALID BLOBHASH COINBASE KECCAK256 SWAP11 0xE2 0xC1 0xEF 0xCC 0xD5 BLOBHASH SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "585:10611:11:-:0;;;2545:40;;;-1:-1:-1;;;;;;2733:26:11;;;;;3802:712;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4037:15;4005:12;-1:-1:-1;;;;;1273:26:3;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:3;;1350:1;1322:31;;;1039:51:12;1012:18;;1322:31:3;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;;;;;;5599:32:0;;;;;4072:27:11;::::2;4064:61;;;::::0;-1:-1:-1;;;4064:61:11;;1303:2:12;4064:61:11::2;::::0;::::2;1285:21:12::0;1342:2;1322:18;;;1315:30;1381:23;1361:18;;;1354:51;1422:18;;4064:61:11::2;1101:345:12::0;4064:61:11::2;-1:-1:-1::0;;;;;4143:21:11;::::2;4135:56;;;::::0;-1:-1:-1;;;4135:56:11;;1653:2:12;4135:56:11::2;::::0;::::2;1635:21:12::0;1692:2;1672:18;;;1665:30;1731:24;1711:18;;;1704:52;1773:18;;4135:56:11::2;1451:346:12::0;4135:56:11::2;-1:-1:-1::0;;;;;4209:29:11;::::2;4201:73;;;::::0;-1:-1:-1;;;4201:73:11;;2004:2:12;4201:73:11::2;::::0;::::2;1986:21:12::0;2043:2;2023:18;;;2016:30;2082:33;2062:18;;;2055:61;2133:18;;4201:73:11::2;1802:355:12::0;4201:73:11::2;-1:-1:-1::0;;;;;;4284:45:11;;::::2;;::::0;4339:32;;::::2;;::::0;4381:56;::::2;;::::0;4447:18:::2;::::0;;;;-1:-1:-1;;;;;4475:32:11::2;;::::0;585:10611;;2912:187:3;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:3;;;-1:-1:-1;;;;;;3020:17:3;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:12:-;93:13;;-1:-1:-1;;;;;135:31:12;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:692::-;310:6;318;326;334;342;350;403:3;391:9;382:7;378:23;374:33;371:53;;;420:1;417;410:12;371:53;443:40;473:9;443:40;:::i;:::-;433:50;;502:49;547:2;536:9;532:18;502:49;:::i;:::-;492:59;;570:49;615:2;604:9;600:18;570:49;:::i;:::-;659:2;644:18;;638:25;706:3;691:19;;685:26;560:59;;-1:-1:-1;638:25:12;-1:-1:-1;;;;;;740:30:12;;730:41;;720:69;;785:1;782;775:12;720:69;808:5;-1:-1:-1;832:50:12;877:3;862:19;;832:50;:::i;:::-;822:60;;196:692;;;;;;;;:::o;1802:355::-;585:10611:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BASE_APY_3069": {
									"entryPoint": null,
									"id": 3069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COORDINATOR_3065": {
									"entryPoint": null,
									"id": 3065,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DAO_APY_3073": {
									"entryPoint": null,
									"id": 3073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DAO_SUPERPOSITION_MAX_3093": {
									"entryPoint": null,
									"id": 3093,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DAO_SUPERPOSITION_MIN_3089": {
									"entryPoint": null,
									"id": 3089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SUPERPOSITION_MAX_3085": {
									"entryPoint": null,
									"id": 3085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SUPERPOSITION_MIN_3081": {
									"entryPoint": null,
									"id": 3081,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPDATE_INTERVAL_3097": {
									"entryPoint": null,
									"id": 3097,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VOLATILITY_BONUS_3077": {
									"entryPoint": null,
									"id": 3077,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_284": {
									"entryPoint": 3819,
									"id": 284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_532": {
									"entryPoint": null,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_346": {
									"entryPoint": 3864,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_3729": {
									"entryPoint": 4369,
									"id": 3729,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@calculateReward_3823": {
									"entryPoint": 3146,
									"id": 3823,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@callbackGasLimit_3133": {
									"entryPoint": null,
									"id": 3133,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimReward_3477": {
									"entryPoint": 2248,
									"id": 3477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fulfillRandomWords_3613": {
									"entryPoint": 3272,
									"id": 3613,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getStakedBalance_3771": {
									"entryPoint": 1801,
									"id": 3771,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalValueLocked_3780": {
									"entryPoint": null,
									"id": 3780,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@keyHash_3126": {
									"entryPoint": null,
									"id": 3126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@numWords_3141": {
									"entryPoint": null,
									"id": 3141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@oracle_3062": {
									"entryPoint": null,
									"id": 3062,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_267": {
									"entryPoint": null,
									"id": 267,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@predictVolatility_3752": {
									"entryPoint": 4578,
									"id": 3752,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@quantumToken_3059": {
									"entryPoint": null,
									"id": 3059,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rawFulfillRandomWords_56": {
									"entryPoint": 1265,
									"id": 56,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_298": {
									"entryPoint": 1849,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestConfirmations_3137": {
									"entryPoint": null,
									"id": 3137,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestSuperpositionAPY_3517": {
									"entryPoint": 3944,
									"id": 3517,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@requestToUser_3123": {
									"entryPoint": null,
									"id": 3123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeForDAO_3377": {
									"entryPoint": 2589,
									"id": 3377,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_3314": {
									"entryPoint": 1869,
									"id": 3314,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_3115": {
									"entryPoint": null,
									"id": 3115,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@subscriptionId_3129": {
									"entryPoint": null,
									"id": 3129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalValueLocked_3118": {
									"entryPoint": null,
									"id": 3118,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_326": {
									"entryPoint": 4519,
									"id": 326,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_3860": {
									"entryPoint": 3252,
									"id": 3860,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateStake_3673": {
									"entryPoint": 3679,
									"id": 3673,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateVRFParams_3842": {
									"entryPoint": 3093,
									"id": 3842,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_3428": {
									"entryPoint": 1406,
									"id": 3428,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint32t_uint16": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUBI4ALLOracle_$2572__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUBI4ALLQuantum_$2468__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$199__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 5304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5260,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9978:12",
										"nodeType": "YulBlock",
										"src": "0:9978:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:12",
													"nodeType": "YulBlock",
													"src": "115:76:12",
													"statements": [
														{
															"nativeSrc": "125:26:12",
															"nodeType": "YulAssignment",
															"src": "125:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:12",
																		"nodeType": "YulLiteral",
																		"src": "148:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:12"
																},
																"nativeSrc": "133:18:12",
																"nodeType": "YulFunctionCall",
																"src": "133:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:12"
																},
																"nativeSrc": "160:25:12",
																"nodeType": "YulFunctionCall",
																"src": "160:25:12"
															},
															"nativeSrc": "160:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:12",
														"nodeType": "YulTypedName",
														"src": "84:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:12",
														"nodeType": "YulTypedName",
														"src": "95:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:12",
														"nodeType": "YulTypedName",
														"src": "106:4:12",
														"type": ""
													}
												],
												"src": "14:177:12"
											},
											{
												"body": {
													"nativeSrc": "295:101:12",
													"nodeType": "YulBlock",
													"src": "295:101:12",
													"statements": [
														{
															"nativeSrc": "305:26:12",
															"nodeType": "YulAssignment",
															"src": "305:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "317:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "328:2:12",
																		"nodeType": "YulLiteral",
																		"src": "328:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "313:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "313:3:12"
																},
																"nativeSrc": "313:18:12",
																"nodeType": "YulFunctionCall",
																"src": "313:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "305:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "305:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "347:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "347:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "362:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "362:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "370:18:12",
																				"nodeType": "YulLiteral",
																				"src": "370:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "358:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "358:3:12"
																		},
																		"nativeSrc": "358:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "358:31:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "340:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "340:6:12"
																},
																"nativeSrc": "340:50:12",
																"nodeType": "YulFunctionCall",
																"src": "340:50:12"
															},
															"nativeSrc": "340:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "340:50:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "196:200:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "264:9:12",
														"nodeType": "YulTypedName",
														"src": "264:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "275:6:12",
														"nodeType": "YulTypedName",
														"src": "275:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "286:4:12",
														"nodeType": "YulTypedName",
														"src": "286:4:12",
														"type": ""
													}
												],
												"src": "196:200:12"
											},
											{
												"body": {
													"nativeSrc": "471:216:12",
													"nodeType": "YulBlock",
													"src": "471:216:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:12",
																"nodeType": "YulBlock",
																"src": "517:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:12",
																					"nodeType": "YulLiteral",
																					"src": "526:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:12",
																					"nodeType": "YulLiteral",
																					"src": "529:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:12"
																			},
																			"nativeSrc": "519:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:12"
																		},
																		"nativeSrc": "519:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "492:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "492:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "501:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "488:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "488:3:12"
																		},
																		"nativeSrc": "488:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "488:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "513:2:12",
																		"nodeType": "YulLiteral",
																		"src": "513:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "484:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "484:3:12"
																},
																"nativeSrc": "484:32:12",
																"nodeType": "YulFunctionCall",
																"src": "484:32:12"
															},
															"nativeSrc": "481:52:12",
															"nodeType": "YulIf",
															"src": "481:52:12"
														},
														{
															"nativeSrc": "542:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "542:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "568:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "568:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "555:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "555:12:12"
																},
																"nativeSrc": "555:23:12",
																"nodeType": "YulFunctionCall",
																"src": "555:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "546:5:12",
																	"nodeType": "YulTypedName",
																	"src": "546:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "641:16:12",
																"nodeType": "YulBlock",
																"src": "641:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "650:1:12",
																					"nodeType": "YulLiteral",
																					"src": "650:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "653:1:12",
																					"nodeType": "YulLiteral",
																					"src": "653:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "643:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "643:6:12"
																			},
																			"nativeSrc": "643:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "643:12:12"
																		},
																		"nativeSrc": "643:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "643:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "600:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "600:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "611:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "611:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "626:3:12",
																										"nodeType": "YulLiteral",
																										"src": "626:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "631:1:12",
																										"nodeType": "YulLiteral",
																										"src": "631:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "622:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "622:3:12"
																								},
																								"nativeSrc": "622:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "622:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "635:1:12",
																								"nodeType": "YulLiteral",
																								"src": "635:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "618:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "618:3:12"
																						},
																						"nativeSrc": "618:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "618:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "607:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "607:3:12"
																				},
																				"nativeSrc": "607:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "607:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "597:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "597:2:12"
																		},
																		"nativeSrc": "597:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "597:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "590:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "590:6:12"
																},
																"nativeSrc": "590:50:12",
																"nodeType": "YulFunctionCall",
																"src": "590:50:12"
															},
															"nativeSrc": "587:70:12",
															"nodeType": "YulIf",
															"src": "587:70:12"
														},
														{
															"nativeSrc": "666:15:12",
															"nodeType": "YulAssignment",
															"src": "666:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "676:5:12",
																"nodeType": "YulIdentifier",
																"src": "676:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "666:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "666:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "401:286:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "437:9:12",
														"nodeType": "YulTypedName",
														"src": "437:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "448:7:12",
														"nodeType": "YulTypedName",
														"src": "448:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "460:6:12",
														"nodeType": "YulTypedName",
														"src": "460:6:12",
														"type": ""
													}
												],
												"src": "401:286:12"
											},
											{
												"body": {
													"nativeSrc": "905:250:12",
													"nodeType": "YulBlock",
													"src": "905:250:12",
													"statements": [
														{
															"nativeSrc": "915:27:12",
															"nodeType": "YulAssignment",
															"src": "915:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "927:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "927:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "938:3:12",
																		"nodeType": "YulLiteral",
																		"src": "938:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "923:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "923:3:12"
																},
																"nativeSrc": "923:19:12",
																"nodeType": "YulFunctionCall",
																"src": "923:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "915:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "915:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "958:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "958:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "969:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "969:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:12"
																},
																"nativeSrc": "951:25:12",
																"nodeType": "YulFunctionCall",
																"src": "951:25:12"
															},
															"nativeSrc": "951:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "951:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "996:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "996:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1007:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1007:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "992:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "992:3:12"
																		},
																		"nativeSrc": "992:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "992:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1012:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "985:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "985:6:12"
																},
																"nativeSrc": "985:34:12",
																"nodeType": "YulFunctionCall",
																"src": "985:34:12"
															},
															"nativeSrc": "985:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "985:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1039:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1050:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1050:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1035:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1035:3:12"
																		},
																		"nativeSrc": "1035:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1035:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "1055:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1055:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:12"
																},
																"nativeSrc": "1028:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1028:34:12"
															},
															"nativeSrc": "1028:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1028:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1082:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1082:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1093:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1093:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1078:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1078:3:12"
																		},
																		"nativeSrc": "1078:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:18:12"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "1098:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1098:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1071:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1071:6:12"
																},
																"nativeSrc": "1071:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1071:34:12"
															},
															"nativeSrc": "1071:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1071:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1125:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1125:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1136:3:12",
																				"nodeType": "YulLiteral",
																				"src": "1136:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1121:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1121:3:12"
																		},
																		"nativeSrc": "1121:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1121:19:12"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "1142:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1142:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1114:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:12"
																},
																"nativeSrc": "1114:35:12",
																"nodeType": "YulFunctionCall",
																"src": "1114:35:12"
															},
															"nativeSrc": "1114:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "1114:35:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "692:463:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "842:9:12",
														"nodeType": "YulTypedName",
														"src": "842:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "853:6:12",
														"nodeType": "YulTypedName",
														"src": "853:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "861:6:12",
														"nodeType": "YulTypedName",
														"src": "861:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "869:6:12",
														"nodeType": "YulTypedName",
														"src": "869:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "877:6:12",
														"nodeType": "YulTypedName",
														"src": "877:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "885:6:12",
														"nodeType": "YulTypedName",
														"src": "885:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "896:4:12",
														"nodeType": "YulTypedName",
														"src": "896:4:12",
														"type": ""
													}
												],
												"src": "692:463:12"
											},
											{
												"body": {
													"nativeSrc": "1192:95:12",
													"nodeType": "YulBlock",
													"src": "1192:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1209:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1209:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1216:3:12",
																				"nodeType": "YulLiteral",
																				"src": "1216:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1221:10:12",
																				"nodeType": "YulLiteral",
																				"src": "1221:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1212:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1212:3:12"
																		},
																		"nativeSrc": "1212:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1212:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1202:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1202:6:12"
																},
																"nativeSrc": "1202:31:12",
																"nodeType": "YulFunctionCall",
																"src": "1202:31:12"
															},
															"nativeSrc": "1202:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "1202:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1249:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1252:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1252:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1242:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:12"
																},
																"nativeSrc": "1242:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1242:15:12"
															},
															"nativeSrc": "1242:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1242:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1273:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1273:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1276:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1276:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1266:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1266:6:12"
																},
																"nativeSrc": "1266:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1266:15:12"
															},
															"nativeSrc": "1266:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1266:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1160:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1160:127:12"
											},
											{
												"body": {
													"nativeSrc": "1404:1183:12",
													"nodeType": "YulBlock",
													"src": "1404:1183:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1450:16:12",
																"nodeType": "YulBlock",
																"src": "1450:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1462:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1462:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1452:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1452:6:12"
																			},
																			"nativeSrc": "1452:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1452:12:12"
																		},
																		"nativeSrc": "1452:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1452:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1425:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1425:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1434:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1434:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1421:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:12"
																		},
																		"nativeSrc": "1421:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1421:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1446:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1446:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1417:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1417:3:12"
																},
																"nativeSrc": "1417:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1417:32:12"
															},
															"nativeSrc": "1414:52:12",
															"nodeType": "YulIf",
															"src": "1414:52:12"
														},
														{
															"nativeSrc": "1475:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1475:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1488:1:12",
																"nodeType": "YulLiteral",
																"src": "1488:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1479:5:12",
																	"nodeType": "YulTypedName",
																	"src": "1479:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1498:32:12",
															"nodeType": "YulAssignment",
															"src": "1498:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1520:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1520:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1507:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1507:12:12"
																},
																"nativeSrc": "1507:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1507:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1498:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:12"
																}
															]
														},
														{
															"nativeSrc": "1539:15:12",
															"nodeType": "YulAssignment",
															"src": "1539:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "1549:5:12",
																"nodeType": "YulIdentifier",
																"src": "1549:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1539:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1539:6:12"
																}
															]
														},
														{
															"nativeSrc": "1563:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1563:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1594:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1594:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1605:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1605:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1590:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1590:3:12"
																		},
																		"nativeSrc": "1590:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1590:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1577:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1577:12:12"
																},
																"nativeSrc": "1577:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1577:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1567:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1567:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1652:16:12",
																"nodeType": "YulBlock",
																"src": "1652:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1661:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1661:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1664:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1664:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1654:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1654:6:12"
																			},
																			"nativeSrc": "1654:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1654:12:12"
																		},
																		"nativeSrc": "1654:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1654:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1624:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1624:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1632:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1621:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1621:2:12"
																},
																"nativeSrc": "1621:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1621:30:12"
															},
															"nativeSrc": "1618:50:12",
															"nodeType": "YulIf",
															"src": "1618:50:12"
														},
														{
															"nativeSrc": "1677:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1677:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1691:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1691:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1702:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1687:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1687:3:12"
																},
																"nativeSrc": "1687:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1687:22:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1681:2:12",
																	"nodeType": "YulTypedName",
																	"src": "1681:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1757:16:12",
																"nodeType": "YulBlock",
																"src": "1757:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1766:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1766:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1769:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1769:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1759:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1759:6:12"
																			},
																			"nativeSrc": "1759:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1759:12:12"
																		},
																		"nativeSrc": "1759:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1759:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1736:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1736:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1740:4:12",
																						"nodeType": "YulLiteral",
																						"src": "1740:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1732:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1732:3:12"
																				},
																				"nativeSrc": "1732:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1732:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1747:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1747:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1728:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:12"
																		},
																		"nativeSrc": "1728:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1728:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1721:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:12"
																},
																"nativeSrc": "1721:35:12",
																"nodeType": "YulFunctionCall",
																"src": "1721:35:12"
															},
															"nativeSrc": "1718:55:12",
															"nodeType": "YulIf",
															"src": "1718:55:12"
														},
														{
															"nativeSrc": "1782:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1782:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1809:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "1809:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1796:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1796:12:12"
																},
																"nativeSrc": "1796:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1796:16:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1786:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1786:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1855:22:12",
																"nodeType": "YulBlock",
																"src": "1855:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1857:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1857:16:12"
																			},
																			"nativeSrc": "1857:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1857:18:12"
																		},
																		"nativeSrc": "1857:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1857:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1827:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1827:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1835:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1835:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1824:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1824:2:12"
																},
																"nativeSrc": "1824:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1824:30:12"
															},
															"nativeSrc": "1821:56:12",
															"nodeType": "YulIf",
															"src": "1821:56:12"
														},
														{
															"nativeSrc": "1886:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1886:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1900:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1900:1:12",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1896:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1896:3:12"
																},
																"nativeSrc": "1896:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1896:14:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1890:2:12",
																	"nodeType": "YulTypedName",
																	"src": "1890:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1919:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1919:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1939:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1939:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1933:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1933:5:12"
																},
																"nativeSrc": "1933:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1933:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1923:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1923:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1951:56:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1951:56:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1973:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1973:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1989:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1989:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1993:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1993:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1985:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1985:3:12"
																				},
																				"nativeSrc": "1985:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:11:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2002:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2002:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1998:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1998:3:12"
																				},
																				"nativeSrc": "1998:7:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1998:7:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1981:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1981:3:12"
																		},
																		"nativeSrc": "1981:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1981:25:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1969:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1969:3:12"
																},
																"nativeSrc": "1969:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1969:38:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1955:10:12",
																	"nodeType": "YulTypedName",
																	"src": "1955:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2082:22:12",
																"nodeType": "YulBlock",
																"src": "2082:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2084:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2084:16:12"
																			},
																			"nativeSrc": "2084:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2084:18:12"
																		},
																		"nativeSrc": "2084:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2084:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2025:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2025:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2037:18:12",
																				"nodeType": "YulLiteral",
																				"src": "2037:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2022:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2022:2:12"
																		},
																		"nativeSrc": "2022:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2022:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2061:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2061:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2073:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2073:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2058:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2058:2:12"
																		},
																		"nativeSrc": "2058:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2058:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2019:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2019:2:12"
																},
																"nativeSrc": "2019:62:12",
																"nodeType": "YulFunctionCall",
																"src": "2019:62:12"
															},
															"nativeSrc": "2016:88:12",
															"nodeType": "YulIf",
															"src": "2016:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2120:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2120:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2124:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "2124:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2113:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2113:6:12"
																},
																"nativeSrc": "2113:22:12",
																"nodeType": "YulFunctionCall",
																"src": "2113:22:12"
															},
															"nativeSrc": "2113:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "2113:22:12"
														},
														{
															"nativeSrc": "2144:17:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2144:17:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2155:6:12",
																"nodeType": "YulIdentifier",
																"src": "2155:6:12"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2148:3:12",
																	"nodeType": "YulTypedName",
																	"src": "2148:3:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2177:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2177:6:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2185:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2185:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2170:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2170:6:12"
																},
																"nativeSrc": "2170:22:12",
																"nodeType": "YulFunctionCall",
																"src": "2170:22:12"
															},
															"nativeSrc": "2170:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "2170:22:12"
														},
														{
															"nativeSrc": "2201:22:12",
															"nodeType": "YulAssignment",
															"src": "2201:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2212:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2212:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2208:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2208:3:12"
																},
																"nativeSrc": "2208:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2208:15:12"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2201:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2201:3:12"
																}
															]
														},
														{
															"nativeSrc": "2232:34:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2232:34:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2254:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2254:2:12"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "2258:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2258:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2250:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2250:3:12"
																		},
																		"nativeSrc": "2250:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2250:11:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2263:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2263:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2246:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2246:3:12"
																},
																"nativeSrc": "2246:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2246:20:12"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2236:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2236:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2298:16:12",
																"nodeType": "YulBlock",
																"src": "2298:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2307:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2307:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2310:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2310:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2300:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2300:6:12"
																			},
																			"nativeSrc": "2300:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2300:12:12"
																		},
																		"nativeSrc": "2300:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2300:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2281:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2281:6:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2289:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2289:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2278:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2278:2:12"
																},
																"nativeSrc": "2278:19:12",
																"nodeType": "YulFunctionCall",
																"src": "2278:19:12"
															},
															"nativeSrc": "2275:39:12",
															"nodeType": "YulIf",
															"src": "2275:39:12"
														},
														{
															"nativeSrc": "2323:22:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2323:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2338:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "2338:2:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2342:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2342:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2334:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2334:3:12"
																},
																"nativeSrc": "2334:11:12",
																"nodeType": "YulFunctionCall",
																"src": "2334:11:12"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "2327:3:12",
																	"nodeType": "YulTypedName",
																	"src": "2327:3:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2410:146:12",
																"nodeType": "YulBlock",
																"src": "2410:146:12",
																"statements": [
																	{
																		"nativeSrc": "2424:16:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2424:16:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2439:1:12",
																			"nodeType": "YulLiteral",
																			"src": "2439:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "value_1",
																				"nativeSrc": "2428:7:12",
																				"nodeType": "YulTypedName",
																				"src": "2428:7:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2453:28:12",
																		"nodeType": "YulAssignment",
																		"src": "2453:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2477:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2477:3:12"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "2464:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "2464:12:12"
																			},
																			"nativeSrc": "2464:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2464:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "value_1",
																				"nativeSrc": "2453:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2453:7:12"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2501:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2501:3:12"
																				},
																				{
																					"name": "value_1",
																					"nativeSrc": "2506:7:12",
																					"nodeType": "YulIdentifier",
																					"src": "2506:7:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2494:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2494:6:12"
																			},
																			"nativeSrc": "2494:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2494:20:12"
																		},
																		"nativeSrc": "2494:20:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2494:20:12"
																	},
																	{
																		"nativeSrc": "2527:19:12",
																		"nodeType": "YulAssignment",
																		"src": "2527:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2538:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2538:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2543:2:12",
																					"nodeType": "YulLiteral",
																					"src": "2543:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2534:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2534:3:12"
																			},
																			"nativeSrc": "2534:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2534:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2527:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2527:3:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2365:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2365:3:12"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2370:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2370:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2362:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2362:2:12"
																},
																"nativeSrc": "2362:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2362:15:12"
															},
															"nativeSrc": "2354:202:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2378:23:12",
																"nodeType": "YulBlock",
																"src": "2378:23:12",
																"statements": [
																	{
																		"nativeSrc": "2380:19:12",
																		"nodeType": "YulAssignment",
																		"src": "2380:19:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2391:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2396:2:12",
																					"nodeType": "YulLiteral",
																					"src": "2396:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2387:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2387:3:12"
																			},
																			"nativeSrc": "2387:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2387:12:12"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2380:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2380:3:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2358:3:12",
																"nodeType": "YulBlock",
																"src": "2358:3:12",
																"statements": []
															},
															"src": "2354:202:12"
														},
														{
															"nativeSrc": "2565:16:12",
															"nodeType": "YulAssignment",
															"src": "2565:16:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2575:6:12",
																"nodeType": "YulIdentifier",
																"src": "2575:6:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2565:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2565:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "1292:1295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1362:9:12",
														"nodeType": "YulTypedName",
														"src": "1362:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1373:7:12",
														"nodeType": "YulTypedName",
														"src": "1373:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1385:6:12",
														"nodeType": "YulTypedName",
														"src": "1385:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1393:6:12",
														"nodeType": "YulTypedName",
														"src": "1393:6:12",
														"type": ""
													}
												],
												"src": "1292:1295:12"
											},
											{
												"body": {
													"nativeSrc": "2691:93:12",
													"nodeType": "YulBlock",
													"src": "2691:93:12",
													"statements": [
														{
															"nativeSrc": "2701:26:12",
															"nodeType": "YulAssignment",
															"src": "2701:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2713:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2713:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2724:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2724:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2709:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:12"
																},
																"nativeSrc": "2709:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2709:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2701:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2701:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2743:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2743:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2758:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2758:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2766:10:12",
																				"nodeType": "YulLiteral",
																				"src": "2766:10:12",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2754:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:12"
																		},
																		"nativeSrc": "2754:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2754:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2736:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2736:6:12"
																},
																"nativeSrc": "2736:42:12",
																"nodeType": "YulFunctionCall",
																"src": "2736:42:12"
															},
															"nativeSrc": "2736:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "2736:42:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
												"nativeSrc": "2592:192:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2660:9:12",
														"nodeType": "YulTypedName",
														"src": "2660:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2671:6:12",
														"nodeType": "YulTypedName",
														"src": "2671:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2682:4:12",
														"nodeType": "YulTypedName",
														"src": "2682:4:12",
														"type": ""
													}
												],
												"src": "2592:192:12"
											},
											{
												"body": {
													"nativeSrc": "2859:156:12",
													"nodeType": "YulBlock",
													"src": "2859:156:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2905:16:12",
																"nodeType": "YulBlock",
																"src": "2905:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2914:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2914:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2917:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2917:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2907:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2907:6:12"
																			},
																			"nativeSrc": "2907:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2907:12:12"
																		},
																		"nativeSrc": "2907:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2907:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2880:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2880:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2889:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2889:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2876:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:12"
																		},
																		"nativeSrc": "2876:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2876:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2901:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2901:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2872:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2872:3:12"
																},
																"nativeSrc": "2872:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2872:32:12"
															},
															"nativeSrc": "2869:52:12",
															"nodeType": "YulIf",
															"src": "2869:52:12"
														},
														{
															"nativeSrc": "2930:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2930:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2943:1:12",
																"nodeType": "YulLiteral",
																"src": "2943:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2934:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2934:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2953:32:12",
															"nodeType": "YulAssignment",
															"src": "2953:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2975:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2975:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2962:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2962:12:12"
																},
																"nativeSrc": "2962:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2962:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2953:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2953:5:12"
																}
															]
														},
														{
															"nativeSrc": "2994:15:12",
															"nodeType": "YulAssignment",
															"src": "2994:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3004:5:12",
																"nodeType": "YulIdentifier",
																"src": "3004:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2994:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2789:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2825:9:12",
														"nodeType": "YulTypedName",
														"src": "2825:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2836:7:12",
														"nodeType": "YulTypedName",
														"src": "2836:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2848:6:12",
														"nodeType": "YulTypedName",
														"src": "2848:6:12",
														"type": ""
													}
												],
												"src": "2789:226:12"
											},
											{
												"body": {
													"nativeSrc": "3154:102:12",
													"nodeType": "YulBlock",
													"src": "3154:102:12",
													"statements": [
														{
															"nativeSrc": "3164:26:12",
															"nodeType": "YulAssignment",
															"src": "3164:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3176:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3176:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3187:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3187:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3172:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3172:3:12"
																},
																"nativeSrc": "3172:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3172:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3164:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3164:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3206:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3206:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3221:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3221:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3237:3:12",
																								"nodeType": "YulLiteral",
																								"src": "3237:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3242:1:12",
																								"nodeType": "YulLiteral",
																								"src": "3242:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3233:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3233:3:12"
																						},
																						"nativeSrc": "3233:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3233:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3246:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3246:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3229:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3229:3:12"
																				},
																				"nativeSrc": "3229:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3229:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3217:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3217:3:12"
																		},
																		"nativeSrc": "3217:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3217:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3199:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:12"
																},
																"nativeSrc": "3199:51:12",
																"nodeType": "YulFunctionCall",
																"src": "3199:51:12"
															},
															"nativeSrc": "3199:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "3199:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$199__to_t_address__fromStack_reversed",
												"nativeSrc": "3020:236:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3123:9:12",
														"nodeType": "YulTypedName",
														"src": "3123:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3134:6:12",
														"nodeType": "YulTypedName",
														"src": "3134:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3145:4:12",
														"nodeType": "YulTypedName",
														"src": "3145:4:12",
														"type": ""
													}
												],
												"src": "3020:236:12"
											},
											{
												"body": {
													"nativeSrc": "3362:102:12",
													"nodeType": "YulBlock",
													"src": "3362:102:12",
													"statements": [
														{
															"nativeSrc": "3372:26:12",
															"nodeType": "YulAssignment",
															"src": "3372:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3384:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3384:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3395:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3395:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3380:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3380:3:12"
																},
																"nativeSrc": "3380:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3380:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3372:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3372:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3414:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3414:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3429:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3429:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3445:3:12",
																								"nodeType": "YulLiteral",
																								"src": "3445:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3450:1:12",
																								"nodeType": "YulLiteral",
																								"src": "3450:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3441:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3441:3:12"
																						},
																						"nativeSrc": "3441:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3441:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3454:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3454:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3437:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3437:3:12"
																				},
																				"nativeSrc": "3437:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3437:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3425:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3425:3:12"
																		},
																		"nativeSrc": "3425:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3425:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3407:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3407:6:12"
																},
																"nativeSrc": "3407:51:12",
																"nodeType": "YulFunctionCall",
																"src": "3407:51:12"
															},
															"nativeSrc": "3407:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "3407:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3261:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3331:9:12",
														"nodeType": "YulTypedName",
														"src": "3331:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3342:6:12",
														"nodeType": "YulTypedName",
														"src": "3342:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3353:4:12",
														"nodeType": "YulTypedName",
														"src": "3353:4:12",
														"type": ""
													}
												],
												"src": "3261:203:12"
											},
											{
												"body": {
													"nativeSrc": "3570:76:12",
													"nodeType": "YulBlock",
													"src": "3570:76:12",
													"statements": [
														{
															"nativeSrc": "3580:26:12",
															"nodeType": "YulAssignment",
															"src": "3580:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3592:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3592:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3603:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3603:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3588:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3588:3:12"
																},
																"nativeSrc": "3588:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3588:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3580:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3580:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3622:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3622:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3633:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3633:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3615:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3615:6:12"
																},
																"nativeSrc": "3615:25:12",
																"nodeType": "YulFunctionCall",
																"src": "3615:25:12"
															},
															"nativeSrc": "3615:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "3615:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3469:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:12",
														"nodeType": "YulTypedName",
														"src": "3539:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3550:6:12",
														"nodeType": "YulTypedName",
														"src": "3550:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3561:4:12",
														"nodeType": "YulTypedName",
														"src": "3561:4:12",
														"type": ""
													}
												],
												"src": "3469:177:12"
											},
											{
												"body": {
													"nativeSrc": "3775:102:12",
													"nodeType": "YulBlock",
													"src": "3775:102:12",
													"statements": [
														{
															"nativeSrc": "3785:26:12",
															"nodeType": "YulAssignment",
															"src": "3785:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3797:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3797:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3808:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3808:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3793:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3793:3:12"
																},
																"nativeSrc": "3793:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3793:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3785:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3785:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3827:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3827:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3842:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3842:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3858:3:12",
																								"nodeType": "YulLiteral",
																								"src": "3858:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3863:1:12",
																								"nodeType": "YulLiteral",
																								"src": "3863:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3854:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3854:3:12"
																						},
																						"nativeSrc": "3854:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3854:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3867:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3867:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3850:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3850:3:12"
																				},
																				"nativeSrc": "3850:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3850:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3838:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3838:3:12"
																		},
																		"nativeSrc": "3838:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3838:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3820:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:12"
																},
																"nativeSrc": "3820:51:12",
																"nodeType": "YulFunctionCall",
																"src": "3820:51:12"
															},
															"nativeSrc": "3820:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "3820:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUBI4ALLOracle_$2572__to_t_address__fromStack_reversed",
												"nativeSrc": "3651:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3744:9:12",
														"nodeType": "YulTypedName",
														"src": "3744:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3755:6:12",
														"nodeType": "YulTypedName",
														"src": "3755:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3766:4:12",
														"nodeType": "YulTypedName",
														"src": "3766:4:12",
														"type": ""
													}
												],
												"src": "3651:226:12"
											},
											{
												"body": {
													"nativeSrc": "4007:102:12",
													"nodeType": "YulBlock",
													"src": "4007:102:12",
													"statements": [
														{
															"nativeSrc": "4017:26:12",
															"nodeType": "YulAssignment",
															"src": "4017:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nativeSrc": "4025:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4059:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4059:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4074:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4074:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4090:3:12",
																								"nodeType": "YulLiteral",
																								"src": "4090:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4095:1:12",
																								"nodeType": "YulLiteral",
																								"src": "4095:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4086:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4086:3:12"
																						},
																						"nativeSrc": "4086:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4086:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4099:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4099:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4082:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4082:3:12"
																				},
																				"nativeSrc": "4082:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4082:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4070:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4070:3:12"
																		},
																		"nativeSrc": "4070:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4070:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4052:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4052:6:12"
																},
																"nativeSrc": "4052:51:12",
																"nodeType": "YulFunctionCall",
																"src": "4052:51:12"
															},
															"nativeSrc": "4052:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "4052:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUBI4ALLQuantum_$2468__to_t_address__fromStack_reversed",
												"nativeSrc": "3882:227:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3976:9:12",
														"nodeType": "YulTypedName",
														"src": "3976:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3987:6:12",
														"nodeType": "YulTypedName",
														"src": "3987:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3998:4:12",
														"nodeType": "YulTypedName",
														"src": "3998:4:12",
														"type": ""
													}
												],
												"src": "3882:227:12"
											},
											{
												"body": {
													"nativeSrc": "4213:89:12",
													"nodeType": "YulBlock",
													"src": "4213:89:12",
													"statements": [
														{
															"nativeSrc": "4223:26:12",
															"nodeType": "YulAssignment",
															"src": "4223:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4235:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4235:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4246:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4246:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4231:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4231:3:12"
																},
																"nativeSrc": "4231:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4231:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4223:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4223:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4265:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4265:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4280:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4280:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4288:6:12",
																				"nodeType": "YulLiteral",
																				"src": "4288:6:12",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4276:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4276:3:12"
																		},
																		"nativeSrc": "4276:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4276:19:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4258:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:12"
																},
																"nativeSrc": "4258:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4258:38:12"
															},
															"nativeSrc": "4258:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "4258:38:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "4114:188:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4182:9:12",
														"nodeType": "YulTypedName",
														"src": "4182:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4193:6:12",
														"nodeType": "YulTypedName",
														"src": "4193:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4204:4:12",
														"nodeType": "YulTypedName",
														"src": "4204:4:12",
														"type": ""
													}
												],
												"src": "4114:188:12"
											},
											{
												"body": {
													"nativeSrc": "4392:359:12",
													"nodeType": "YulBlock",
													"src": "4392:359:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4438:16:12",
																"nodeType": "YulBlock",
																"src": "4438:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4447:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4447:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4450:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4450:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4440:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4440:6:12"
																			},
																			"nativeSrc": "4440:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4440:12:12"
																		},
																		"nativeSrc": "4440:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4440:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4413:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4413:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4422:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4422:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4409:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4409:3:12"
																		},
																		"nativeSrc": "4409:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4409:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4434:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4434:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4405:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4405:3:12"
																},
																"nativeSrc": "4405:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4405:32:12"
															},
															"nativeSrc": "4402:52:12",
															"nodeType": "YulIf",
															"src": "4402:52:12"
														},
														{
															"nativeSrc": "4463:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4463:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4489:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4489:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4476:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4476:12:12"
																},
																"nativeSrc": "4476:23:12",
																"nodeType": "YulFunctionCall",
																"src": "4476:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4467:5:12",
																	"nodeType": "YulTypedName",
																	"src": "4467:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4553:16:12",
																"nodeType": "YulBlock",
																"src": "4553:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4562:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4562:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4565:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4565:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4555:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4555:6:12"
																			},
																			"nativeSrc": "4555:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4555:12:12"
																		},
																		"nativeSrc": "4555:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4555:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4521:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4521:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4532:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4532:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4539:10:12",
																						"nodeType": "YulLiteral",
																						"src": "4539:10:12",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4528:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4528:3:12"
																				},
																				"nativeSrc": "4528:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4528:22:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4518:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4518:2:12"
																		},
																		"nativeSrc": "4518:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4518:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4511:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4511:6:12"
																},
																"nativeSrc": "4511:41:12",
																"nodeType": "YulFunctionCall",
																"src": "4511:41:12"
															},
															"nativeSrc": "4508:61:12",
															"nodeType": "YulIf",
															"src": "4508:61:12"
														},
														{
															"nativeSrc": "4578:15:12",
															"nodeType": "YulAssignment",
															"src": "4578:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "4588:5:12",
																"nodeType": "YulIdentifier",
																"src": "4588:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4578:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4578:6:12"
																}
															]
														},
														{
															"nativeSrc": "4602:47:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4602:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4634:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4634:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4645:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4645:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4630:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4630:3:12"
																		},
																		"nativeSrc": "4630:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4630:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4617:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4617:12:12"
																},
																"nativeSrc": "4617:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4617:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4606:7:12",
																	"nodeType": "YulTypedName",
																	"src": "4606:7:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4703:16:12",
																"nodeType": "YulBlock",
																"src": "4703:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4712:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4712:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4715:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4715:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4705:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4705:6:12"
																			},
																			"nativeSrc": "4705:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4705:12:12"
																		},
																		"nativeSrc": "4705:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4705:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "4671:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4671:7:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "4684:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "4684:7:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4693:6:12",
																						"nodeType": "YulLiteral",
																						"src": "4693:6:12",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4680:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4680:3:12"
																				},
																				"nativeSrc": "4680:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4680:20:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4668:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4668:2:12"
																		},
																		"nativeSrc": "4668:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4668:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4661:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4661:6:12"
																},
																"nativeSrc": "4661:41:12",
																"nodeType": "YulFunctionCall",
																"src": "4661:41:12"
															},
															"nativeSrc": "4658:61:12",
															"nodeType": "YulIf",
															"src": "4658:61:12"
														},
														{
															"nativeSrc": "4728:17:12",
															"nodeType": "YulAssignment",
															"src": "4728:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "4738:7:12",
																"nodeType": "YulIdentifier",
																"src": "4738:7:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4728:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4728:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint32t_uint16",
												"nativeSrc": "4307:444:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4350:9:12",
														"nodeType": "YulTypedName",
														"src": "4350:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4361:7:12",
														"nodeType": "YulTypedName",
														"src": "4361:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4373:6:12",
														"nodeType": "YulTypedName",
														"src": "4373:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4381:6:12",
														"nodeType": "YulTypedName",
														"src": "4381:6:12",
														"type": ""
													}
												],
												"src": "4307:444:12"
											},
											{
												"body": {
													"nativeSrc": "4885:171:12",
													"nodeType": "YulBlock",
													"src": "4885:171:12",
													"statements": [
														{
															"nativeSrc": "4895:26:12",
															"nodeType": "YulAssignment",
															"src": "4895:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4907:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4907:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4918:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4918:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4903:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:12"
																},
																"nativeSrc": "4903:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4903:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4895:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4895:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4937:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4937:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4952:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4952:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4968:3:12",
																								"nodeType": "YulLiteral",
																								"src": "4968:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4973:1:12",
																								"nodeType": "YulLiteral",
																								"src": "4973:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4964:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4964:3:12"
																						},
																						"nativeSrc": "4964:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4964:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4977:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4977:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4960:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4960:3:12"
																				},
																				"nativeSrc": "4960:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4960:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4948:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4948:3:12"
																		},
																		"nativeSrc": "4948:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4948:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4930:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4930:6:12"
																},
																"nativeSrc": "4930:51:12",
																"nodeType": "YulFunctionCall",
																"src": "4930:51:12"
															},
															"nativeSrc": "4930:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "4930:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5001:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5001:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5012:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5012:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4997:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4997:3:12"
																		},
																		"nativeSrc": "4997:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5021:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5021:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5037:3:12",
																								"nodeType": "YulLiteral",
																								"src": "5037:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5042:1:12",
																								"nodeType": "YulLiteral",
																								"src": "5042:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5033:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5033:3:12"
																						},
																						"nativeSrc": "5033:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5033:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5046:1:12",
																						"nodeType": "YulLiteral",
																						"src": "5046:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5029:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5029:3:12"
																				},
																				"nativeSrc": "5029:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5029:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5017:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5017:3:12"
																		},
																		"nativeSrc": "5017:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5017:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4990:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4990:6:12"
																},
																"nativeSrc": "4990:60:12",
																"nodeType": "YulFunctionCall",
																"src": "4990:60:12"
															},
															"nativeSrc": "4990:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "4990:60:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "4756:300:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4846:9:12",
														"nodeType": "YulTypedName",
														"src": "4846:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4857:6:12",
														"nodeType": "YulTypedName",
														"src": "4857:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4865:6:12",
														"nodeType": "YulTypedName",
														"src": "4865:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4876:4:12",
														"nodeType": "YulTypedName",
														"src": "4876:4:12",
														"type": ""
													}
												],
												"src": "4756:300:12"
											},
											{
												"body": {
													"nativeSrc": "5235:176:12",
													"nodeType": "YulBlock",
													"src": "5235:176:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5252:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5252:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5263:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5263:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5245:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5245:6:12"
																},
																"nativeSrc": "5245:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5245:21:12"
															},
															"nativeSrc": "5245:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5245:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5286:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5286:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5297:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5297:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5282:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5282:3:12"
																		},
																		"nativeSrc": "5282:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5282:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5302:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5302:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5275:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:12"
																},
																"nativeSrc": "5275:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5275:30:12"
															},
															"nativeSrc": "5275:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5275:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5325:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5325:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5336:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5336:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5321:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:12"
																		},
																		"nativeSrc": "5321:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:18:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "5341:28:12",
																		"nodeType": "YulLiteral",
																		"src": "5341:28:12",
																		"type": "",
																		"value": "Insufficient staked amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5314:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5314:6:12"
																},
																"nativeSrc": "5314:56:12",
																"nodeType": "YulFunctionCall",
																"src": "5314:56:12"
															},
															"nativeSrc": "5314:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "5314:56:12"
														},
														{
															"nativeSrc": "5379:26:12",
															"nodeType": "YulAssignment",
															"src": "5379:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5391:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5391:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5387:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5387:3:12"
																},
																"nativeSrc": "5387:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5387:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5379:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5379:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5061:350:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5212:9:12",
														"nodeType": "YulTypedName",
														"src": "5212:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5226:4:12",
														"nodeType": "YulTypedName",
														"src": "5226:4:12",
														"type": ""
													}
												],
												"src": "5061:350:12"
											},
											{
												"body": {
													"nativeSrc": "5448:95:12",
													"nodeType": "YulBlock",
													"src": "5448:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5465:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5465:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5472:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5472:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5477:10:12",
																				"nodeType": "YulLiteral",
																				"src": "5477:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5468:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5468:3:12"
																		},
																		"nativeSrc": "5468:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5468:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5458:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5458:6:12"
																},
																"nativeSrc": "5458:31:12",
																"nodeType": "YulFunctionCall",
																"src": "5458:31:12"
															},
															"nativeSrc": "5458:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "5458:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5505:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5505:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5508:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5508:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5498:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5498:6:12"
																},
																"nativeSrc": "5498:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5498:15:12"
															},
															"nativeSrc": "5498:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5498:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5529:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5529:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5532:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5532:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5522:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5522:6:12"
																},
																"nativeSrc": "5522:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5522:15:12"
															},
															"nativeSrc": "5522:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5522:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5416:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5416:127:12"
											},
											{
												"body": {
													"nativeSrc": "5597:79:12",
													"nodeType": "YulBlock",
													"src": "5597:79:12",
													"statements": [
														{
															"nativeSrc": "5607:17:12",
															"nodeType": "YulAssignment",
															"src": "5607:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5619:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5619:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5622:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5622:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5615:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:12"
																},
																"nativeSrc": "5615:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5615:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5607:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5607:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5648:22:12",
																"nodeType": "YulBlock",
																"src": "5648:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5650:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5650:16:12"
																			},
																			"nativeSrc": "5650:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5650:18:12"
																		},
																		"nativeSrc": "5650:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5650:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5639:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5639:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5645:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5645:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5636:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5636:2:12"
																},
																"nativeSrc": "5636:11:12",
																"nodeType": "YulFunctionCall",
																"src": "5636:11:12"
															},
															"nativeSrc": "5633:37:12",
															"nodeType": "YulIf",
															"src": "5633:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5548:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5579:1:12",
														"nodeType": "YulTypedName",
														"src": "5579:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5582:1:12",
														"nodeType": "YulTypedName",
														"src": "5582:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5588:4:12",
														"nodeType": "YulTypedName",
														"src": "5588:4:12",
														"type": ""
													}
												],
												"src": "5548:128:12"
											},
											{
												"body": {
													"nativeSrc": "5810:145:12",
													"nodeType": "YulBlock",
													"src": "5810:145:12",
													"statements": [
														{
															"nativeSrc": "5820:26:12",
															"nodeType": "YulAssignment",
															"src": "5820:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5832:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5832:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5843:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5843:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5828:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5828:3:12"
																},
																"nativeSrc": "5828:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5828:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5820:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5820:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5862:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5862:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5877:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5877:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5893:3:12",
																								"nodeType": "YulLiteral",
																								"src": "5893:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5898:1:12",
																								"nodeType": "YulLiteral",
																								"src": "5898:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5889:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5889:3:12"
																						},
																						"nativeSrc": "5889:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5889:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5902:1:12",
																						"nodeType": "YulLiteral",
																						"src": "5902:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5885:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5885:3:12"
																				},
																				"nativeSrc": "5885:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5885:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5873:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5873:3:12"
																		},
																		"nativeSrc": "5873:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5873:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5855:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:12"
																},
																"nativeSrc": "5855:51:12",
																"nodeType": "YulFunctionCall",
																"src": "5855:51:12"
															},
															"nativeSrc": "5855:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "5855:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5926:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5926:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5937:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5937:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5922:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5922:3:12"
																		},
																		"nativeSrc": "5922:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5922:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5942:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5942:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5915:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:12"
																},
																"nativeSrc": "5915:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5915:34:12"
															},
															"nativeSrc": "5915:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5915:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5681:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5771:9:12",
														"nodeType": "YulTypedName",
														"src": "5771:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5782:6:12",
														"nodeType": "YulTypedName",
														"src": "5782:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5790:6:12",
														"nodeType": "YulTypedName",
														"src": "5790:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5801:4:12",
														"nodeType": "YulTypedName",
														"src": "5801:4:12",
														"type": ""
													}
												],
												"src": "5681:274:12"
											},
											{
												"body": {
													"nativeSrc": "6038:199:12",
													"nodeType": "YulBlock",
													"src": "6038:199:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6084:16:12",
																"nodeType": "YulBlock",
																"src": "6084:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6093:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6093:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6096:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6096:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6086:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6086:6:12"
																			},
																			"nativeSrc": "6086:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6086:12:12"
																		},
																		"nativeSrc": "6086:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6086:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6059:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6059:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6068:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6068:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6055:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6055:3:12"
																		},
																		"nativeSrc": "6055:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6055:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6080:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6080:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6051:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6051:3:12"
																},
																"nativeSrc": "6051:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6051:32:12"
															},
															"nativeSrc": "6048:52:12",
															"nodeType": "YulIf",
															"src": "6048:52:12"
														},
														{
															"nativeSrc": "6109:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6109:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6128:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6128:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6122:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6122:5:12"
																},
																"nativeSrc": "6122:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6122:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6113:5:12",
																	"nodeType": "YulTypedName",
																	"src": "6113:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6191:16:12",
																"nodeType": "YulBlock",
																"src": "6191:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6200:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6200:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6203:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6203:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6193:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6193:6:12"
																			},
																			"nativeSrc": "6193:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6193:12:12"
																		},
																		"nativeSrc": "6193:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6193:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6160:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6160:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "6181:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "6181:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "6174:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "6174:6:12"
																						},
																						"nativeSrc": "6174:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6174:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6167:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "6167:6:12"
																				},
																				"nativeSrc": "6167:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6167:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6157:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6157:2:12"
																		},
																		"nativeSrc": "6157:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6157:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6150:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6150:6:12"
																},
																"nativeSrc": "6150:40:12",
																"nodeType": "YulFunctionCall",
																"src": "6150:40:12"
															},
															"nativeSrc": "6147:60:12",
															"nodeType": "YulIf",
															"src": "6147:60:12"
														},
														{
															"nativeSrc": "6216:15:12",
															"nodeType": "YulAssignment",
															"src": "6216:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "6226:5:12",
																"nodeType": "YulIdentifier",
																"src": "6226:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6216:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6216:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5960:277:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6004:9:12",
														"nodeType": "YulTypedName",
														"src": "6004:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6015:7:12",
														"nodeType": "YulTypedName",
														"src": "6015:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6027:6:12",
														"nodeType": "YulTypedName",
														"src": "6027:6:12",
														"type": ""
													}
												],
												"src": "5960:277:12"
											},
											{
												"body": {
													"nativeSrc": "6416:165:12",
													"nodeType": "YulBlock",
													"src": "6416:165:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6433:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6433:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6444:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6444:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6426:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6426:6:12"
																},
																"nativeSrc": "6426:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6426:21:12"
															},
															"nativeSrc": "6426:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6426:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6467:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6467:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6478:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6478:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6463:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6463:3:12"
																		},
																		"nativeSrc": "6463:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6463:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6483:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6483:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6456:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6456:6:12"
																},
																"nativeSrc": "6456:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6456:30:12"
															},
															"nativeSrc": "6456:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6456:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6506:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6506:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6517:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6517:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6502:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6502:3:12"
																		},
																		"nativeSrc": "6502:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6502:18:12"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "6522:17:12",
																		"nodeType": "YulLiteral",
																		"src": "6522:17:12",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6495:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:12"
																},
																"nativeSrc": "6495:45:12",
																"nodeType": "YulFunctionCall",
																"src": "6495:45:12"
															},
															"nativeSrc": "6495:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "6495:45:12"
														},
														{
															"nativeSrc": "6549:26:12",
															"nodeType": "YulAssignment",
															"src": "6549:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6561:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6561:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6572:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6572:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6557:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6557:3:12"
																},
																"nativeSrc": "6557:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6557:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6549:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6549:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6242:339:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6393:9:12",
														"nodeType": "YulTypedName",
														"src": "6393:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6407:4:12",
														"nodeType": "YulTypedName",
														"src": "6407:4:12",
														"type": ""
													}
												],
												"src": "6242:339:12"
											},
											{
												"body": {
													"nativeSrc": "6634:77:12",
													"nodeType": "YulBlock",
													"src": "6634:77:12",
													"statements": [
														{
															"nativeSrc": "6644:16:12",
															"nodeType": "YulAssignment",
															"src": "6644:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6655:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6655:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6658:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6658:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6651:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6651:3:12"
																},
																"nativeSrc": "6651:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6651:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6644:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6644:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6683:22:12",
																"nodeType": "YulBlock",
																"src": "6683:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6685:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6685:16:12"
																			},
																			"nativeSrc": "6685:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6685:18:12"
																		},
																		"nativeSrc": "6685:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6685:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6675:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6675:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6678:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6678:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6672:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6672:2:12"
																},
																"nativeSrc": "6672:10:12",
																"nodeType": "YulFunctionCall",
																"src": "6672:10:12"
															},
															"nativeSrc": "6669:36:12",
															"nodeType": "YulIf",
															"src": "6669:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6586:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6617:1:12",
														"nodeType": "YulTypedName",
														"src": "6617:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6620:1:12",
														"nodeType": "YulTypedName",
														"src": "6620:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6626:3:12",
														"nodeType": "YulTypedName",
														"src": "6626:3:12",
														"type": ""
													}
												],
												"src": "6586:125:12"
											},
											{
												"body": {
													"nativeSrc": "6890:164:12",
													"nodeType": "YulBlock",
													"src": "6890:164:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6907:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6907:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6918:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6918:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6900:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6900:6:12"
																},
																"nativeSrc": "6900:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6900:21:12"
															},
															"nativeSrc": "6900:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6900:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6941:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6941:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6952:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6952:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6937:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6937:3:12"
																		},
																		"nativeSrc": "6937:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6937:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6957:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6957:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6930:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6930:6:12"
																},
																"nativeSrc": "6930:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6930:30:12"
															},
															"nativeSrc": "6930:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6930:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6980:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6980:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6991:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6991:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6976:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6976:3:12"
																		},
																		"nativeSrc": "6976:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6976:18:12"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "6996:16:12",
																		"nodeType": "YulLiteral",
																		"src": "6996:16:12",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6969:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6969:6:12"
																},
																"nativeSrc": "6969:44:12",
																"nodeType": "YulFunctionCall",
																"src": "6969:44:12"
															},
															"nativeSrc": "6969:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "6969:44:12"
														},
														{
															"nativeSrc": "7022:26:12",
															"nodeType": "YulAssignment",
															"src": "7022:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7034:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7034:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7045:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7045:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7030:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7030:3:12"
																},
																"nativeSrc": "7030:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7030:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7022:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7022:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6716:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6867:9:12",
														"nodeType": "YulTypedName",
														"src": "6867:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6881:4:12",
														"nodeType": "YulTypedName",
														"src": "6881:4:12",
														"type": ""
													}
												],
												"src": "6716:338:12"
											},
											{
												"body": {
													"nativeSrc": "7216:214:12",
													"nodeType": "YulBlock",
													"src": "7216:214:12",
													"statements": [
														{
															"nativeSrc": "7226:26:12",
															"nodeType": "YulAssignment",
															"src": "7226:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7238:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7238:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7249:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7249:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7234:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7234:3:12"
																},
																"nativeSrc": "7234:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7234:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7226:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7226:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7268:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7268:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7283:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7283:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7299:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7299:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7304:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7304:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7295:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7295:3:12"
																						},
																						"nativeSrc": "7295:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7295:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7308:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7308:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7291:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7291:3:12"
																				},
																				"nativeSrc": "7291:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7291:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7279:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7279:3:12"
																		},
																		"nativeSrc": "7279:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7279:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7261:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7261:6:12"
																},
																"nativeSrc": "7261:51:12",
																"nodeType": "YulFunctionCall",
																"src": "7261:51:12"
															},
															"nativeSrc": "7261:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "7261:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7332:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7332:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7343:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7343:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7328:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7328:3:12"
																		},
																		"nativeSrc": "7328:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7328:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7352:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7352:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7368:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7368:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7373:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7373:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7364:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7364:3:12"
																						},
																						"nativeSrc": "7364:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7364:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7377:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7377:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7360:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7360:3:12"
																				},
																				"nativeSrc": "7360:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7360:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7348:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7348:3:12"
																		},
																		"nativeSrc": "7348:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7348:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7321:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7321:6:12"
																},
																"nativeSrc": "7321:60:12",
																"nodeType": "YulFunctionCall",
																"src": "7321:60:12"
															},
															"nativeSrc": "7321:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "7321:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7401:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7401:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7412:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7412:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7397:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7397:3:12"
																		},
																		"nativeSrc": "7397:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7397:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7417:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7417:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7390:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:12"
																},
																"nativeSrc": "7390:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7390:34:12"
															},
															"nativeSrc": "7390:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7390:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7059:371:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7169:9:12",
														"nodeType": "YulTypedName",
														"src": "7169:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7180:6:12",
														"nodeType": "YulTypedName",
														"src": "7180:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7188:6:12",
														"nodeType": "YulTypedName",
														"src": "7188:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7196:6:12",
														"nodeType": "YulTypedName",
														"src": "7196:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7207:4:12",
														"nodeType": "YulTypedName",
														"src": "7207:4:12",
														"type": ""
													}
												],
												"src": "7059:371:12"
											},
											{
												"body": {
													"nativeSrc": "7558:135:12",
													"nodeType": "YulBlock",
													"src": "7558:135:12",
													"statements": [
														{
															"nativeSrc": "7568:26:12",
															"nodeType": "YulAssignment",
															"src": "7568:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7580:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7580:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7591:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7591:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7576:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7576:3:12"
																},
																"nativeSrc": "7576:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7576:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7568:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7568:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7610:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7610:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7621:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7621:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7603:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7603:6:12"
																},
																"nativeSrc": "7603:25:12",
																"nodeType": "YulFunctionCall",
																"src": "7603:25:12"
															},
															"nativeSrc": "7603:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "7603:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7648:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7648:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7659:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7659:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7644:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7644:3:12"
																		},
																		"nativeSrc": "7644:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7644:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nativeSrc": "7678:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7678:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7671:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "7671:6:12"
																				},
																				"nativeSrc": "7671:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7671:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7664:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7664:6:12"
																		},
																		"nativeSrc": "7664:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7664:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7637:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7637:6:12"
																},
																"nativeSrc": "7637:50:12",
																"nodeType": "YulFunctionCall",
																"src": "7637:50:12"
															},
															"nativeSrc": "7637:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "7637:50:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "7435:258:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7519:9:12",
														"nodeType": "YulTypedName",
														"src": "7519:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7530:6:12",
														"nodeType": "YulTypedName",
														"src": "7530:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7538:6:12",
														"nodeType": "YulTypedName",
														"src": "7538:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7549:4:12",
														"nodeType": "YulTypedName",
														"src": "7549:4:12",
														"type": ""
													}
												],
												"src": "7435:258:12"
											},
											{
												"body": {
													"nativeSrc": "7872:169:12",
													"nodeType": "YulBlock",
													"src": "7872:169:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7889:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7889:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7900:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7900:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7882:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7882:6:12"
																},
																"nativeSrc": "7882:21:12",
																"nodeType": "YulFunctionCall",
																"src": "7882:21:12"
															},
															"nativeSrc": "7882:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "7882:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7923:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7923:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7934:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7934:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7919:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7919:3:12"
																		},
																		"nativeSrc": "7919:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7919:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7939:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7939:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7912:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7912:6:12"
																},
																"nativeSrc": "7912:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7912:30:12"
															},
															"nativeSrc": "7912:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7912:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7962:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7962:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7973:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7973:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7958:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7958:3:12"
																		},
																		"nativeSrc": "7958:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7958:18:12"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "7978:21:12",
																		"nodeType": "YulLiteral",
																		"src": "7978:21:12",
																		"type": "",
																		"value": "No rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7951:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:12"
																},
																"nativeSrc": "7951:49:12",
																"nodeType": "YulFunctionCall",
																"src": "7951:49:12"
															},
															"nativeSrc": "7951:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "7951:49:12"
														},
														{
															"nativeSrc": "8009:26:12",
															"nodeType": "YulAssignment",
															"src": "8009:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8021:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8021:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8032:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8032:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8017:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8017:3:12"
																},
																"nativeSrc": "8017:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8017:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8009:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8009:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7698:343:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7849:9:12",
														"nodeType": "YulTypedName",
														"src": "7849:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7863:4:12",
														"nodeType": "YulTypedName",
														"src": "7863:4:12",
														"type": ""
													}
												],
												"src": "7698:343:12"
											},
											{
												"body": {
													"nativeSrc": "8220:168:12",
													"nodeType": "YulBlock",
													"src": "8220:168:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8237:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8237:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8248:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8248:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8230:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8230:6:12"
																},
																"nativeSrc": "8230:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8230:21:12"
															},
															"nativeSrc": "8230:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8230:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8271:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8282:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8282:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8267:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:12"
																		},
																		"nativeSrc": "8267:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8267:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8287:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8287:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8260:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:12"
																},
																"nativeSrc": "8260:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8260:30:12"
															},
															"nativeSrc": "8260:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8260:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8310:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8310:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8321:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8321:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8306:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8306:3:12"
																		},
																		"nativeSrc": "8306:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8306:18:12"
																	},
																	{
																		"hexValue": "496e76616c69642072657175657374204944",
																		"kind": "string",
																		"nativeSrc": "8326:20:12",
																		"nodeType": "YulLiteral",
																		"src": "8326:20:12",
																		"type": "",
																		"value": "Invalid request ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8299:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8299:6:12"
																},
																"nativeSrc": "8299:48:12",
																"nodeType": "YulFunctionCall",
																"src": "8299:48:12"
															},
															"nativeSrc": "8299:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "8299:48:12"
														},
														{
															"nativeSrc": "8356:26:12",
															"nodeType": "YulAssignment",
															"src": "8356:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8368:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8368:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8379:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8364:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8364:3:12"
																},
																"nativeSrc": "8364:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8364:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8356:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8356:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8046:342:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8197:9:12",
														"nodeType": "YulTypedName",
														"src": "8197:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8211:4:12",
														"nodeType": "YulTypedName",
														"src": "8211:4:12",
														"type": ""
													}
												],
												"src": "8046:342:12"
											},
											{
												"body": {
													"nativeSrc": "8425:95:12",
													"nodeType": "YulBlock",
													"src": "8425:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8442:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8442:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8449:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8449:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8454:10:12",
																				"nodeType": "YulLiteral",
																				"src": "8454:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8445:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8445:3:12"
																		},
																		"nativeSrc": "8445:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8445:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8435:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8435:6:12"
																},
																"nativeSrc": "8435:31:12",
																"nodeType": "YulFunctionCall",
																"src": "8435:31:12"
															},
															"nativeSrc": "8435:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "8435:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8482:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8482:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8485:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8485:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8475:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8475:6:12"
																},
																"nativeSrc": "8475:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8475:15:12"
															},
															"nativeSrc": "8475:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8475:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8506:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8506:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8509:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8509:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8499:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8499:6:12"
																},
																"nativeSrc": "8499:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8499:15:12"
															},
															"nativeSrc": "8499:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8499:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8393:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8393:127:12"
											},
											{
												"body": {
													"nativeSrc": "8557:95:12",
													"nodeType": "YulBlock",
													"src": "8557:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8574:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8574:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8581:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8581:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8586:10:12",
																				"nodeType": "YulLiteral",
																				"src": "8586:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8577:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8577:3:12"
																		},
																		"nativeSrc": "8577:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8577:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8567:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8567:6:12"
																},
																"nativeSrc": "8567:31:12",
																"nodeType": "YulFunctionCall",
																"src": "8567:31:12"
															},
															"nativeSrc": "8567:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "8567:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8614:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8614:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8617:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8617:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8607:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8607:6:12"
																},
																"nativeSrc": "8607:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8607:15:12"
															},
															"nativeSrc": "8607:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8607:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8638:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8638:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8641:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8641:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8631:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8631:6:12"
																},
																"nativeSrc": "8631:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8631:15:12"
															},
															"nativeSrc": "8631:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8631:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8525:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8525:127:12"
											},
											{
												"body": {
													"nativeSrc": "8695:74:12",
													"nodeType": "YulBlock",
													"src": "8695:74:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8718:22:12",
																"nodeType": "YulBlock",
																"src": "8718:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8720:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8720:16:12"
																			},
																			"nativeSrc": "8720:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8720:18:12"
																		},
																		"nativeSrc": "8720:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8720:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8715:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8715:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8708:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8708:6:12"
																},
																"nativeSrc": "8708:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8708:9:12"
															},
															"nativeSrc": "8705:35:12",
															"nodeType": "YulIf",
															"src": "8705:35:12"
														},
														{
															"nativeSrc": "8749:14:12",
															"nodeType": "YulAssignment",
															"src": "8749:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8758:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8758:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8761:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8761:1:12"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "8754:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8754:3:12"
																},
																"nativeSrc": "8754:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8754:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8749:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8749:1:12"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "8657:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8680:1:12",
														"nodeType": "YulTypedName",
														"src": "8680:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8683:1:12",
														"nodeType": "YulTypedName",
														"src": "8683:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8689:1:12",
														"nodeType": "YulTypedName",
														"src": "8689:1:12",
														"type": ""
													}
												],
												"src": "8657:112:12"
											},
											{
												"body": {
													"nativeSrc": "8826:116:12",
													"nodeType": "YulBlock",
													"src": "8826:116:12",
													"statements": [
														{
															"nativeSrc": "8836:20:12",
															"nodeType": "YulAssignment",
															"src": "8836:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8851:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8851:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8854:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8854:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8847:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8847:3:12"
																},
																"nativeSrc": "8847:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8847:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8836:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "8836:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8914:22:12",
																"nodeType": "YulBlock",
																"src": "8914:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8916:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8916:16:12"
																			},
																			"nativeSrc": "8916:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8916:18:12"
																		},
																		"nativeSrc": "8916:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8916:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8885:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "8885:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8878:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8878:6:12"
																				},
																				"nativeSrc": "8878:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8878:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8892:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "8892:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8899:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "8899:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8908:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "8908:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8895:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8895:3:12"
																						},
																						"nativeSrc": "8895:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8895:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8889:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "8889:2:12"
																				},
																				"nativeSrc": "8889:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8889:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8875:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8875:2:12"
																		},
																		"nativeSrc": "8875:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8875:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8868:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8868:6:12"
																},
																"nativeSrc": "8868:45:12",
																"nodeType": "YulFunctionCall",
																"src": "8868:45:12"
															},
															"nativeSrc": "8865:71:12",
															"nodeType": "YulIf",
															"src": "8865:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8774:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8805:1:12",
														"nodeType": "YulTypedName",
														"src": "8805:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8808:1:12",
														"nodeType": "YulTypedName",
														"src": "8808:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8814:7:12",
														"nodeType": "YulTypedName",
														"src": "8814:7:12",
														"type": ""
													}
												],
												"src": "8774:168:12"
											},
											{
												"body": {
													"nativeSrc": "8993:74:12",
													"nodeType": "YulBlock",
													"src": "8993:74:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9016:22:12",
																"nodeType": "YulBlock",
																"src": "9016:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9018:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9018:16:12"
																			},
																			"nativeSrc": "9018:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9018:18:12"
																		},
																		"nativeSrc": "9018:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9018:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9013:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9013:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9006:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9006:6:12"
																},
																"nativeSrc": "9006:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9006:9:12"
															},
															"nativeSrc": "9003:35:12",
															"nodeType": "YulIf",
															"src": "9003:35:12"
														},
														{
															"nativeSrc": "9047:14:12",
															"nodeType": "YulAssignment",
															"src": "9047:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9056:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9056:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9059:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9059:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9052:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9052:3:12"
																},
																"nativeSrc": "9052:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9052:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9047:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9047:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8947:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8978:1:12",
														"nodeType": "YulTypedName",
														"src": "8978:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8981:1:12",
														"nodeType": "YulTypedName",
														"src": "8981:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8987:1:12",
														"nodeType": "YulTypedName",
														"src": "8987:1:12",
														"type": ""
													}
												],
												"src": "8947:120:12"
											},
											{
												"body": {
													"nativeSrc": "9277:322:12",
													"nodeType": "YulBlock",
													"src": "9277:322:12",
													"statements": [
														{
															"nativeSrc": "9287:27:12",
															"nodeType": "YulAssignment",
															"src": "9287:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9299:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9299:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9310:3:12",
																		"nodeType": "YulLiteral",
																		"src": "9310:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9295:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9295:3:12"
																},
																"nativeSrc": "9295:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9295:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9287:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9287:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9330:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9330:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9341:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9341:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9323:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9323:6:12"
																},
																"nativeSrc": "9323:25:12",
																"nodeType": "YulFunctionCall",
																"src": "9323:25:12"
															},
															"nativeSrc": "9323:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "9323:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9368:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9368:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9379:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9379:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9364:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9364:3:12"
																		},
																		"nativeSrc": "9364:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9364:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9388:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9388:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9396:18:12",
																				"nodeType": "YulLiteral",
																				"src": "9396:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9384:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9384:3:12"
																		},
																		"nativeSrc": "9384:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9384:31:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9357:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9357:6:12"
																},
																"nativeSrc": "9357:59:12",
																"nodeType": "YulFunctionCall",
																"src": "9357:59:12"
															},
															"nativeSrc": "9357:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "9357:59:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9436:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9436:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9447:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9447:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9432:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9432:3:12"
																		},
																		"nativeSrc": "9432:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9432:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "9456:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9456:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9464:6:12",
																				"nodeType": "YulLiteral",
																				"src": "9464:6:12",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9452:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9452:3:12"
																		},
																		"nativeSrc": "9452:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9452:19:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9425:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:12"
																},
																"nativeSrc": "9425:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9425:47:12"
															},
															"nativeSrc": "9425:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9425:47:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9492:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9492:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9503:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9503:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9488:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9488:3:12"
																		},
																		"nativeSrc": "9488:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9488:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "9512:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9512:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9520:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9520:10:12",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9508:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9508:3:12"
																		},
																		"nativeSrc": "9508:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9508:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9481:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9481:6:12"
																},
																"nativeSrc": "9481:51:12",
																"nodeType": "YulFunctionCall",
																"src": "9481:51:12"
															},
															"nativeSrc": "9481:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "9481:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9552:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9552:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9563:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9563:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9548:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9548:3:12"
																		},
																		"nativeSrc": "9548:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9548:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "9573:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9573:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9581:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9581:10:12",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9569:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9569:3:12"
																		},
																		"nativeSrc": "9569:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9569:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9541:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9541:6:12"
																},
																"nativeSrc": "9541:52:12",
																"nodeType": "YulFunctionCall",
																"src": "9541:52:12"
															},
															"nativeSrc": "9541:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "9541:52:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed",
												"nativeSrc": "9072:527:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9214:9:12",
														"nodeType": "YulTypedName",
														"src": "9214:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9225:6:12",
														"nodeType": "YulTypedName",
														"src": "9225:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9233:6:12",
														"nodeType": "YulTypedName",
														"src": "9233:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9241:6:12",
														"nodeType": "YulTypedName",
														"src": "9241:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9249:6:12",
														"nodeType": "YulTypedName",
														"src": "9249:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9257:6:12",
														"nodeType": "YulTypedName",
														"src": "9257:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9268:4:12",
														"nodeType": "YulTypedName",
														"src": "9268:4:12",
														"type": ""
													}
												],
												"src": "9072:527:12"
											},
											{
												"body": {
													"nativeSrc": "9685:103:12",
													"nodeType": "YulBlock",
													"src": "9685:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9731:16:12",
																"nodeType": "YulBlock",
																"src": "9731:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9740:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9740:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9743:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9743:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9733:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9733:6:12"
																			},
																			"nativeSrc": "9733:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9733:12:12"
																		},
																		"nativeSrc": "9733:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9733:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9706:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9715:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9715:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9702:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9702:3:12"
																		},
																		"nativeSrc": "9702:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9702:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9727:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9727:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9698:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9698:3:12"
																},
																"nativeSrc": "9698:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9698:32:12"
															},
															"nativeSrc": "9695:52:12",
															"nodeType": "YulIf",
															"src": "9695:52:12"
														},
														{
															"nativeSrc": "9756:26:12",
															"nodeType": "YulAssignment",
															"src": "9756:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9772:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9772:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9766:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9766:5:12"
																},
																"nativeSrc": "9766:16:12",
																"nodeType": "YulFunctionCall",
																"src": "9766:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9756:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9756:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9604:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9651:9:12",
														"nodeType": "YulTypedName",
														"src": "9651:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9662:7:12",
														"nodeType": "YulTypedName",
														"src": "9662:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9674:6:12",
														"nodeType": "YulTypedName",
														"src": "9674:6:12",
														"type": ""
													}
												],
												"src": "9604:184:12"
											},
											{
												"body": {
													"nativeSrc": "9873:103:12",
													"nodeType": "YulBlock",
													"src": "9873:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9919:16:12",
																"nodeType": "YulBlock",
																"src": "9919:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9928:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9928:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9931:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9931:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9921:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9921:6:12"
																			},
																			"nativeSrc": "9921:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9921:12:12"
																		},
																		"nativeSrc": "9921:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9921:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9894:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9894:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9903:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9903:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9890:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9890:3:12"
																		},
																		"nativeSrc": "9890:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9890:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9915:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9915:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9886:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9886:3:12"
																},
																"nativeSrc": "9886:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9886:32:12"
															},
															"nativeSrc": "9883:52:12",
															"nodeType": "YulIf",
															"src": "9883:52:12"
														},
														{
															"nativeSrc": "9944:26:12",
															"nodeType": "YulAssignment",
															"src": "9944:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9960:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9960:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9954:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9954:5:12"
																},
																"nativeSrc": "9954:16:12",
																"nodeType": "YulFunctionCall",
																"src": "9954:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9944:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256_fromMemory",
												"nativeSrc": "9793:183:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9839:9:12",
														"nodeType": "YulTypedName",
														"src": "9839:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9850:7:12",
														"nodeType": "YulTypedName",
														"src": "9850:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9862:6:12",
														"nodeType": "YulTypedName",
														"src": "9862:6:12",
														"type": ""
													}
												],
												"src": "9793:183:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let _2 := shl(5, length)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_2, 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, length)\n        dst := add(memPtr, 32)\n        let srcEnd := add(add(_1, _2), 32)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 32)\n        for { } lt(src, srcEnd) { src := add(src, 32) }\n        {\n            let value_1 := 0\n            value_1 := calldataload(src)\n            mstore(dst, value_1)\n            dst := add(dst, 32)\n        }\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_VRFCoordinatorV2Interface_$199__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IUBI4ALLOracle_$2572__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUBI4ALLQuantum_$2468__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_decode_tuple_t_uint32t_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Insufficient staked amount\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No rewards to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid request ID\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffff))\n        mstore(add(headStart, 128), and(value4, 0xffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"10": [
									{
										"length": 32,
										"start": 1276
									},
									{
										"length": 32,
										"start": 1342
									}
								],
								"3059": [
									{
										"length": 32,
										"start": 1044
									},
									{
										"length": 32,
										"start": 1599
									},
									{
										"length": 32,
										"start": 2038
									},
									{
										"length": 32,
										"start": 2402
									},
									{
										"length": 32,
										"start": 2761
									},
									{
										"length": 32,
										"start": 2928
									}
								],
								"3062": [
									{
										"length": 32,
										"start": 978
									},
									{
										"length": 32,
										"start": 4583
									}
								],
								"3065": [
									{
										"length": 32,
										"start": 792
									},
									{
										"length": 32,
										"start": 4149
									}
								],
								"3126": [
									{
										"length": 32,
										"start": 905
									},
									{
										"length": 32,
										"start": 4011
									}
								],
								"3129": [
									{
										"length": 32,
										"start": 523
									},
									{
										"length": 32,
										"start": 4060
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e55760003560e01c806389ac41471161010f578063b8ed3aad116100a2578063cb8b97f511610071578063cb8b97f5146104b9578063d82e3962146104c2578063ec18154e146104d5578063f2fde38b146104de57600080fd5b8063b8ed3aad14610482578063b94790a41461048a578063bae4e5301461049d578063c75a0715146104b057600080fd5b8063a694fc3a116100de578063a694fc3a14610436578063b0fb162f14610449578063b26025aa14610472578063b88a802f1461047a57600080fd5b806389ac4147146103f45780638da5cb5b146103fe57806393565b4c1461040f5780639da378ab1461037b57600080fd5b80633a02a42d1161018757806361728f391161015657806361728f3914610384578063715018a6146103ab5780637ccfd7fc146103b35780637dc0d1d0146103cd57600080fd5b80633a02a42d146103005780633b2bcbf1146103135780633e2f7eb5146103525780634ca19fd61461037b57600080fd5b80631fe543e3116101c35780631fe543e3146102aa57806324f74697146102bf57806327779748146102e45780632e1a7d4d146102ed57600080fd5b806307b2d32f146101ea57806309c1ba2e1461020657806316934fc414610246575b600080fd5b6101f361032081565b6040519081526020015b60405180910390f35b61022d7f000000000000000000000000000000000000000000000000000000000000000081565b60405167ffffffffffffffff90911681526020016101fd565b61028261025436600461128b565b6001602081905260009182526040909120805491810154600282015460038301546004909301549192909185565b604080519586526020860194909452928401919091526060830152608082015260a0016101fd565b6102bd6102b83660046112ca565b6104f1565b005b6004546102cf9063ffffffff1681565b60405163ffffffff90911681526020016101fd565b6101f36104b081565b6102bd6102fb3660046113a3565b61057e565b6101f361030e36600461128b565b610709565b61033a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101fd565b61033a6103603660046113a3565b6003602052600090815260409020546001600160a01b031681565b6101f36103e881565b6101f37f000000000000000000000000000000000000000000000000000000000000000081565b6102bd610739565b6004546102cf906601000000000000900463ffffffff1681565b61033a7f000000000000000000000000000000000000000000000000000000000000000081565b6101f362278d0081565b6000546001600160a01b031661033a565b61033a7f000000000000000000000000000000000000000000000000000000000000000081565b6102bd6104443660046113a3565b61074d565b60045461045f90640100000000900461ffff1681565b60405161ffff90911681526020016101fd565b6002546101f3565b6102bd6108c8565b6101f360c881565b6102bd6104983660046113a3565b610a1d565b6102bd6104ab3660046113bc565b610c15565b6101f361064081565b6101f361057881565b6101f36104d036600461128b565b610c4a565b6101f360025481565b6102bd6104ec36600461128b565b610cb4565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105705760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b61057a8282610cc8565b5050565b61058733610e5f565b336000908152600160205260409020548111156105e65760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74207374616b656420616d6f756e740000000000006044820152606401610567565b336000908152600160205260408120805483929061060590849061141b565b92505081905550806002600082825461061e919061141b565b909155505060405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b4919061142e565b6106d05760405162461bcd60e51b815260040161056790611450565b60405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250565b6001600160a01b038116600090815260016020819052604082209081015490546107339190611479565b92915050565b610741610eeb565b61074b6000610f18565b565b6000811161078e5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606401610567565b61079733610e5f565b33600090815260016020526040812080548392906107b6908490611479565b9250508190555080600260008282546107cf9190611479565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b919061142e565b6108875760405162461bcd60e51b815260040161056790611450565b61089033610f68565b604080518281526000602082015233917f37d4053e34fde482e96f6bcd424dfa31342cbd5fe184d497fb3c8bb4b4b9758091016106fe565b6108d133610e5f565b33600090815260016020526040902060030154806109275760405162461bcd60e51b81526020600482015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152606401610567565b33600081815260016020526040808220600301919091555163a9059cbb60e01b81526004810191909152602481018290526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156109ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cf919061142e565b6109eb5760405162461bcd60e51b815260040161056790611450565b60405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241906020016106fe565b60008111610a5e5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606401610567565b610a6733610e5f565b3360009081526001602081905260408220018054839290610a89908490611479565b925050819055508060026000828254610aa29190611479565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3e919061142e565b610b5a5760405162461bcd60e51b815260040161056790611450565b60405163255da8dd60e21b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639576a37490602401600060405180830381600087803b158015610bbc57600080fd5b505af1158015610bd0573d6000803e3d6000fd5b50505050610bdd33610f68565b604080518281526001602082015233917f37d4053e34fde482e96f6bcd424dfa31342cbd5fe184d497fb3c8bb4b4b9758091016106fe565b610c1d610eeb565b6004805461ffff9092166401000000000265ffffffffffff1990921663ffffffff90931692909217179055565b6001600160a01b0381166000908152600160205260408120805460048201548391610c7791869190611111565b90506000610c8e8584600101548560040154611111565b905080828460030154610ca19190611479565b610cab9190611479565b95945050505050565b610cbc610eeb565b610cc5816111a7565b50565b6000828152600360205260409020546001600160a01b031680610d225760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c995c5d595cdd08125160721b6044820152606401610567565b6000606483600081518110610d3957610d3961148c565b6020026020010151610d4b91906114b8565b6001600160a01b03831660009081526001602081905260408220015491925090610d8257610d7d61032061057861141b565b610d90565b610d906103e861064061141b565b6001600160a01b03841660009081526001602081905260408220015491925090610dbc57610320610dc0565b6103e85b6064610dcc84866114cc565b610dd691906114e3565b610de09190611479565b6001600160a01b038516600081815260016020908152604080832060048101869055426002909101558a8352600382529182902080546001600160a01b0319169055905183815292935090917f95046b7fdb9bcf09cdb8b5e270934d955f51f771912290ff9a0020045195eee5910160405180910390a2505050505050565b6001600160a01b03811660009081526001602052604090208054151580610e8a575060008160010154115b1561057a576000610ea48383600001548460040154611111565b90506000610ebb8484600101548560040154611111565b9050610ec78183611479565b836003016000828254610eda9190611479565b909155505042600284015550505050565b6000546001600160a01b0316331461074b5760405163118cdaa760e01b8152336004820152602401610567565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116600090815260016020526040902060020154610f929062278d0090611479565b4210610cc557600480546040516305d3b1d360e41b81527f00000000000000000000000000000000000000000000000000000000000000009281019290925267ffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635d3b1d309060a4016020604051808303816000875af1158015611086573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110aa91906114f7565b60008181526003602090815260409182902080546001600160a01b0319166001600160a01b038716908117909155915183815292935090917f05acec44d329e4dfea8e1a6dae4b0c46d76b2a92d3a747907a60dee7ad6809fd910160405180910390a25050565b600082600003611123575060006111a0565b600061112d6111e2565b9050600061113b8285611479565b6001600160a01b0387166000908152600160205260408120600281015492935091611166904261141b565b90506127106301e133808261117b868b6114cc565b61118591906114cc565b61118f91906114e3565b61119991906114e3565b9450505050505b9392505050565b6111af610eeb565b6001600160a01b0381166111d957604051631e4fbdf760e01b815260006004820152602401610567565b610cc581610f18565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638e15f4736040518163ffffffff1660e01b8152600401602060405180830381865afa158015611243573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126791906114f7565b90506000811361127957600091505090565b611285600260c86114e3565b91505090565b60006020828403121561129d57600080fd5b81356001600160a01b03811681146111a057600080fd5b634e487b7160e01b600052604160045260246000fd5b600080604083850312156112dd57600080fd5b82359150602083013567ffffffffffffffff8111156112fb57600080fd5b8301601f8101851361130c57600080fd5b803567ffffffffffffffff811115611326576113266112b4565b8060051b604051601f19603f830116810181811067ffffffffffffffff82111715611353576113536112b4565b60405291825260208184018101929081018884111561137157600080fd5b6020850194505b8385101561139457843580825260209586019590935001611378565b50809450505050509250929050565b6000602082840312156113b557600080fd5b5035919050565b600080604083850312156113cf57600080fd5b823563ffffffff811681146113e357600080fd5b9150602083013561ffff811681146113fa57600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561073357610733611405565b60006020828403121561144057600080fd5b815180151581146111a057600080fd5b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b8082018082111561073357610733611405565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6000826114c7576114c76114a2565b500690565b808202811582820484141761073357610733611405565b6000826114f2576114f26114a2565b500490565b60006020828403121561150957600080fd5b505191905056fea26469706673582212208cf170318d413ce7f08fb2d1cca545f8d8b408a9fe4941209ae2c1efccd5494764736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x89AC4147 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xB8ED3AAD GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xCB8B97F5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCB8B97F5 EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x4C2 JUMPI DUP1 PUSH4 0xEC18154E EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB8ED3AAD EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xB94790A4 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0xBAE4E530 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xC75A0715 EQ PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA694FC3A GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x436 JUMPI DUP1 PUSH4 0xB0FB162F EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0xB26025AA EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x89AC4147 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x93565B4C EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x9DA378AB EQ PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A02A42D GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x61728F39 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x61728F39 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x7CCFD7FC EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x3CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3A02A42D EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x3B2BCBF1 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x3E2F7EB5 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x4CA19FD6 EQ PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FE543E3 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x24F74697 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x27779748 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7B2D32F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x9C1BA2E EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x246 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F3 PUSH2 0x320 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x282 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12CA JUMP JUMPDEST PUSH2 0x4F1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2CF SWAP1 PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x4B0 DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x30E CALLDATASIZE PUSH1 0x4 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH2 0x33A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x33A PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x739 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x2CF SWAP1 PUSH7 0x1000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x33A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x33A JUMP JUMPDEST PUSH2 0x33A PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x45F SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x8C8 JUMP JUMPDEST PUSH2 0x1F3 PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x498 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH2 0xA1D JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x4AB CALLDATASIZE PUSH1 0x4 PUSH2 0x13BC JUMP JUMPDEST PUSH2 0xC15 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x640 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x578 DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x4D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x128B JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x1F3 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BD PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x128B JUMP JUMPDEST PUSH2 0xCB4 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x570 JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x57A DUP3 DUP3 PUSH2 0xCC8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x587 CALLER PUSH2 0xE5F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B656420616D6F756E74000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x605 SWAP1 DUP5 SWAP1 PUSH2 0x141B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x141B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x690 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B4 SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP1 SLOAD PUSH2 0x733 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x741 PUSH2 0xEEB JUMP JUMPDEST PUSH2 0x74B PUSH1 0x0 PUSH2 0xF18 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0x797 CALLER PUSH2 0xE5F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7B6 SWAP1 DUP5 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7CF SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x847 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH2 0x890 CALLER PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x37D4053E34FDE482E96F6BCD424DFA31342CBD5FE184D497FB3C8BB4B4B97580 SWAP2 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x8D1 CALLER PUSH2 0xE5F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP1 PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0x9EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP1 PUSH1 0x20 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xA67 CALLER PUSH2 0xE5F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA89 SWAP1 DUP5 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3E SWAP2 SWAP1 PUSH2 0x142E JUMP JUMPDEST PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x567 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x255DA8DD PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9576A374 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xBDD CALLER PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x37D4053E34FDE482E96F6BCD424DFA31342CBD5FE184D497FB3C8BB4B4B97580 SWAP2 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0xC1D PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND PUSH5 0x100000000 MUL PUSH6 0xFFFFFFFFFFFF NOT SWAP1 SWAP3 AND PUSH4 0xFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x4 DUP3 ADD SLOAD DUP4 SWAP2 PUSH2 0xC77 SWAP2 DUP7 SWAP2 SWAP1 PUSH2 0x1111 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC8E DUP6 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x1111 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xCBC PUSH2 0xEEB JUMP JUMPDEST PUSH2 0xCC5 DUP2 PUSH2 0x11A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x125B9D985B1A59081C995C5D595CDD081251 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD39 JUMPI PUSH2 0xD39 PUSH2 0x148C JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xD4B SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xD82 JUMPI PUSH2 0xD7D PUSH2 0x320 PUSH2 0x578 PUSH2 0x141B JUMP JUMPDEST PUSH2 0xD90 JUMP JUMPDEST PUSH2 0xD90 PUSH2 0x3E8 PUSH2 0x640 PUSH2 0x141B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xDBC JUMPI PUSH2 0x320 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x3E8 JUMPDEST PUSH1 0x64 PUSH2 0xDCC DUP5 DUP7 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0xDD6 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0xDE0 SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x4 DUP2 ADD DUP7 SWAP1 SSTORE TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE DUP11 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE SWAP1 MLOAD DUP4 DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x95046B7FDB9BCF09CDB8B5E270934D955F51F771912290FF9A0020045195EEE5 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO ISZERO DUP1 PUSH2 0xE8A JUMPI POP PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 PUSH2 0xEA4 DUP4 DUP4 PUSH1 0x0 ADD SLOAD DUP5 PUSH1 0x4 ADD SLOAD PUSH2 0x1111 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xEBB DUP5 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x4 ADD SLOAD PUSH2 0x1111 JUMP JUMPDEST SWAP1 POP PUSH2 0xEC7 DUP2 DUP4 PUSH2 0x1479 JUMP JUMPDEST DUP4 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1479 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP5 ADD SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xF92 SWAP1 PUSH3 0x278D00 SWAP1 PUSH2 0x1479 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xCC5 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH5 0x100000000 DUP2 DIV PUSH2 0xFFFF AND PUSH1 0x44 DUP4 ADD MSTORE PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH7 0x1000000000000 SWAP1 SWAP2 DIV AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1086 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD DUP4 DUP2 MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH32 0x5ACEC44D329E4DFEA8E1A6DAE4B0C46D76B2A92D3A747907A60DEE7AD6809FD SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 SUB PUSH2 0x1123 JUMPI POP PUSH1 0x0 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x112D PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x113B DUP3 DUP6 PUSH2 0x1479 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD SWAP3 SWAP4 POP SWAP2 PUSH2 0x1166 SWAP1 TIMESTAMP PUSH2 0x141B JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 PUSH4 0x1E13380 DUP3 PUSH2 0x117B DUP7 DUP12 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x1185 SWAP2 SWAP1 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x118F SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x14E3 JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11AF PUSH2 0xEEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x567 JUMP JUMPDEST PUSH2 0xCC5 DUP2 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8E15F473 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1243 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x1279 JUMPI PUSH1 0x0 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1285 PUSH1 0x2 PUSH1 0xC8 PUSH2 0x14E3 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x130C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1326 JUMPI PUSH2 0x1326 PUSH2 0x12B4 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1353 JUMPI PUSH2 0x1353 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD SWAP3 SWAP1 DUP2 ADD DUP9 DUP5 GT ISZERO PUSH2 0x1371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1394 JUMPI DUP5 CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP4 POP ADD PUSH2 0x1378 JUMP JUMPDEST POP DUP1 SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x13E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x13FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x1405 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14C7 JUMPI PUSH2 0x14C7 PUSH2 0x14A2 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14F2 JUMPI PUSH2 0x14F2 PUSH2 0x14A2 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 CALL PUSH17 0x318D413CE7F08FB2D1CCA545F8D8B408A9 INVALID BLOBHASH COINBASE KECCAK256 SWAP11 0xE2 0xC1 0xEF 0xCC 0xD5 BLOBHASH SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "585:10611:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:48;;1237:4;1193:48;;;;;160:25:12;;;148:2;133:18;1193:48:11;;;;;;;;2454:38;;;;;;;;370:18:12;358:31;;;340:50;;328:2;313:18;2454:38:11;196:200:12;2119:39:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;951:25:12;;;1007:2;992:18;;985:34;;;;1035:18;;;1028:34;;;;1093:2;1078:18;;1071:34;1136:3;1121:19;;1114:35;938:3;923:19;2119:39:11;692:463:12;6618:256:0;;;;;;:::i;:::-;;:::i;:::-;;2545:40:11;;;;;;;;;;;;2766:10:12;2754:23;;;2736:42;;2724:2;2709:18;2545:40:11;2592:192:12;967:39:11;;1001:5;967:39;;5683:371;;;;;;:::i;:::-;;:::i;9625:140::-;;;;;;:::i;:::-;;:::i;771:54::-;;;;;;;;-1:-1:-1;;;;;3217:32:12;;;3199:51;;3187:2;3172:18;771:54:11;3020:236:12;2292:48:11;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2292:48:11;;;875:40;;910:5;875:40;;2375:32;;;;;2293:101:3;;;:::i;2733:26:11:-;;;;;;;;;;;;727:38;;;;;1667:49;;1709:7;1667:49;;1638:85:3;1684:7;1710:6;-1:-1:-1;;;;;1710:6:3;1638:85;;676:45:11;;;;;4621:399;;;;;;:::i;:::-;;:::i;2641:38::-;;;;;;;;;;;;;;;4288:6:12;4276:19;;;4258:38;;4246:2;4231:18;2641:38:11;4114:188:12;9862:103:11;9942:16;;9862:103;;6109:364;;;:::i;1075:47::-;;1118:4;1075:47;;5138:448;;;;;;:::i;:::-;;:::i;10690:207::-;;;;;;:::i;:::-;;:::i;1551:53::-;;1599:5;1551:53;;1314:49;;1358:5;1314:49;;10131:381;;;;;;:::i;:::-;;:::i;2201:31::-;;;;;;11040:154;;;;;;:::i;:::-;;:::i;6618:256:0:-;6717:10;-1:-1:-1;;;;;6731:14:0;6717:28;;6713:109;;6762:53;;-1:-1:-1;;;6762:53:0;;6788:10;6762:53;;;4930:51:12;-1:-1:-1;;;;;6800:14:0;5017:32:12;4997:18;;;4990:60;4903:18;;6762:53:0;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;5683:371:11:-;5736:23;5748:10;5736:11;:23::i;:::-;5784:10;5777:18;;;;:6;:18;;;;;:25;:35;-1:-1:-1;5777:35:11;5769:74;;;;-1:-1:-1;;;5769:74:11;;5263:2:12;5769:74:11;;;5245:21:12;5302:2;5282:18;;;5275:30;5341:28;5321:18;;;5314:56;5387:18;;5769:74:11;5061:350:12;5769:74:11;5860:10;5853:18;;;;:6;:18;;;;;:35;;5882:6;;5853:18;:35;;5882:6;;5853:35;:::i;:::-;;;;;;;;5918:6;5898:16;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;5942:41:11;;-1:-1:-1;;;5942:41:11;;5964:10;5942:41;;;5855:51:12;5922:18;;;5915:34;;;5942:12:11;-1:-1:-1;;;;;5942:21:11;;;;5828:18:12;;5942:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5934:69;;;;-1:-1:-1;;;5934:69:11;;;;;;;:::i;:::-;6018:29;;160:25:12;;;6028:10:11;;6018:29;;148:2:12;133:18;6018:29:11;;;;;;;;5683:371;:::o;9625:140::-;-1:-1:-1;;;;;9736:12:11;;9688:7;9736:12;;;:6;:12;;;;;;;:22;;;;9714:19;;:44;;9736:22;9714:44;:::i;:::-;9707:51;9625:140;-1:-1:-1;;9625:140:11:o;2293:101:3:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4621:399:11:-;4688:1;4679:6;:10;4671:37;;;;-1:-1:-1;;;4671:37:11;;6918:2:12;4671:37:11;;;6900:21:12;6957:2;6937:18;;;6930:30;-1:-1:-1;;;6976:18:12;;;6969:44;7030:18;;4671:37:11;6716:338:12;4671:37:11;4718:23;4730:10;4718:11;:23::i;:::-;4758:10;4751:18;;;;:6;:18;;;;;:35;;4780:6;;4751:18;:35;;4780:6;;4751:35;:::i;:::-;;;;;;;;4816:6;4796:16;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;4840:60:11;;-1:-1:-1;;;4840:60:11;;4866:10;4840:60;;;7261:51:12;4886:4:11;7328:18:12;;;7321:60;7397:18;;;7390:34;;;4840:12:11;-1:-1:-1;;;;;4840:25:11;;;;7234:18:12;;4840:60:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4832:88;;;;-1:-1:-1;;;4832:88:11;;;;;;;:::i;:::-;4930:35;4954:10;4930:23;:35::i;:::-;4980:33;;;7603:25:12;;;5007:5:11;7659:2:12;7644:18;;7637:50;4987:10:11;;4980:33;;7576:18:12;4980:33:11;7435:258:12;6109:364:11;6151:23;6163:10;6151:11;:23::i;:::-;6208:10;6184:14;6201:18;;;:6;:18;;;;;:36;;;6255:10;6247:42;;;;-1:-1:-1;;;6247:42:11;;7900:2:12;6247:42:11;;;7882:21:12;7939:2;7919:18;;;7912:30;-1:-1:-1;;;7958:18:12;;;7951:49;8017:18;;6247:42:11;7698:343:12;6247:42:11;6306:10;6338:1;6299:18;;;:6;:18;;;;;;:36;;:40;;;;6357:41;-1:-1:-1;;;6357:41:11;;;;;5855:51:12;;;;5922:18;;;5915:34;;;-1:-1:-1;;;;;6357:12:11;:21;;;;5828:18:12;;6357:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6349:69;;;;-1:-1:-1;;;6349:69:11;;;;;;;:::i;:::-;6433:33;;160:25:12;;;6447:10:11;;6433:33;;148:2:12;133:18;6433:33:11;14:177:12;5138:448:11;5211:1;5202:6;:10;5194:37;;;;-1:-1:-1;;;5194:37:11;;6918:2:12;5194:37:11;;;6900:21:12;6957:2;6937:18;;;6930:30;-1:-1:-1;;;6976:18:12;;;6969:44;7030:18;;5194:37:11;6716:338:12;5194:37:11;5241:23;5253:10;5241:11;:23::i;:::-;5281:10;5274:18;;;;:6;:18;;;;;;;:28;:38;;5306:6;;5274:18;:38;;5306:6;;5274:38;:::i;:::-;;;;;;;;5342:6;5322:16;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;;5366:60:11;;-1:-1:-1;;;5366:60:11;;5392:10;5366:60;;;7261:51:12;5412:4:11;7328:18:12;;;7321:60;7397:18;;;7390:34;;;5366:12:11;-1:-1:-1;;;;;5366:25:11;;;;7234:18:12;;5366:60:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5358:88;;;;-1:-1:-1;;;5358:88:11;;;;;;;:::i;:::-;5456:31;;-1:-1:-1;;;5456:31:11;;;;;160:25:12;;;5456:12:11;-1:-1:-1;;;;;5456:23:11;;;;133:18:12;;5456:31:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5497:35;5521:10;5497:23;:35::i;:::-;5547:32;;;7603:25:12;;;5574:4:11;7659:2:12;7644:18;;7637:50;5554:10:11;;5547:32;;7576:18:12;5547:32:11;7435:258:12;10690:207:11;1531:13:3;:11;:13::i;:::-;10800:16:11::1;:36:::0;;10846:44:::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;10846:44:11;;;10800:36:::1;::::0;;::::1;10846:44:::0;;;;::::1;::::0;;10690:207::o;10131:381::-;-1:-1:-1;;;;;10238:12:11;;10193:7;10238:12;;;:6;:12;;;;;10303:16;;10321:20;;;;10193:7;;10281:61;;10245:4;;10303:16;10281:15;:61::i;:::-;10260:82;;10352:17;10372:64;10388:4;10394:9;:19;;;10415:9;:20;;;10372:15;:64::i;:::-;10352:84;;10496:9;10483:10;10453:9;:27;;;:40;;;;:::i;:::-;:52;;;;:::i;:::-;10446:59;10131:381;-1:-1:-1;;;;;10131:381:11:o;11040:154::-;1531:13:3;:11;:13::i;:::-;11154:33:11::1;11178:8;11154:23;:33::i;:::-;11040:154:::0;:::o;7225:710::-;7330:12;7345:24;;;:13;:24;;;;;;-1:-1:-1;;;;;7345:24:11;;7379:49;;;;-1:-1:-1;;;7379:49:11;;8248:2:12;7379:49:11;;;8230:21:12;8287:2;8267:18;;;8260:30;-1:-1:-1;;;8306:18:12;;;8299:48;8364:18;;7379:49:11;8046:342:12;7379:49:11;7438:19;7477:3;7460:11;7472:1;7460:14;;;;;;;;:::i;:::-;;;;;;;:20;;;;:::i;:::-;-1:-1:-1;;;;;7509:12:11;;7490:16;7509:12;;;:6;:12;;;;;;;:22;;7438:42;;-1:-1:-1;7490:16:11;7509:114;;7586:37;1237:4;1358:5;7586:37;:::i;:::-;7509:114;;;7538:45;1478:5;1599;7538:45;:::i;:::-;-1:-1:-1;;;;;7684:12:11;;7633:14;7684:12;;;:6;:12;;;;;;;:22;;7490:133;;-1:-1:-1;7633:14:11;7684:70;;1237:4;7684:70;;;1478:5;7684:70;7676:3;7651:22;7665:8;7651:11;:22;:::i;:::-;:28;;;;:::i;:::-;7650:105;;;;:::i;:::-;-1:-1:-1;;;;;7765:12:11;;;;;;:6;:12;;;;;;;;:23;;;:32;;;7833:15;7807:23;;;;:41;7865:24;;;:13;:24;;;;;;7858:31;;-1:-1:-1;;;;;;7858:31:11;;;7904:24;;160:25:12;;;7765:32:11;;-1:-1:-1;7765:12:11;;7904:24;;133:18:12;7904:24:11;;;;;;;7320:615;;;;7225:710;;:::o;8026:457::-;-1:-1:-1;;;;;8102:12:11;;8076:23;8102:12;;;:6;:12;;;;;8124:16;;:20;;;:47;;;8170:1;8148:9;:19;;;:23;8124:47;8120:361;;;8187:18;8208:61;8224:4;8230:9;:16;;;8248:9;:20;;;8208:15;:61::i;:::-;8187:82;;8279:17;8299:64;8315:4;8321:9;:19;;;8342:9;:20;;;8299:15;:64::i;:::-;8279:84;-1:-1:-1;8404:22:11;8279:84;8404:10;:22;:::i;:::-;8373:9;:27;;;:53;;;;;;;:::i;:::-;;;;-1:-1:-1;;8459:15:11;8436:20;;;:38;-1:-1:-1;;8070:413:11;8026:457;:::o;1796:162:3:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:3;735:10:6;1855:23:3;1851:101;;1901:40;;-1:-1:-1;;;1901:40:3;;735:10:6;1901:40:3;;;3199:51:12;3172:18;;1901:40:3;3020:236:12;2912:187:3;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:3;;;-1:-1:-1;;;;;;3020:17:3;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;6589:481:11:-;-1:-1:-1;;;;;6678:12:11;;;;;;:6;:12;;;;;:23;;;:41;;1709:7;;6678:41;:::i;:::-;6659:15;:60;6655:409;;6860:20;;;6755:199;;-1:-1:-1;;;6755:199:11;;6803:7;6755:199;;;9323:25:12;;;;9396:18;6828:14:11;9384:31:12;9364:18;;;9357:59;6860:20:11;;;;;9432:18:12;;;9425:47;6898:16:11;;;;9488:18:12;;;9481:51;6932:8:11;;;;;9548:19:12;;;9541:52;6735:17:11;;6755:11;-1:-1:-1;;;;;6755:30:11;;;;9295:19:12;;6755:199:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6968:24;;;;:13;:24;;;;;;;;;:31;;-1:-1:-1;;;;;;6968:31:11;-1:-1:-1;;;;;6968:31:11;;;;;;;;7018:35;;160:25:12;;;6968:24:11;;-1:-1:-1;6968:31:11;;7018:35;;133:18:12;7018:35:11;;;;;;;6721:343;6589:481;:::o;8697:435::-;8788:7;8811:6;8821:1;8811:11;8807:25;;-1:-1:-1;8831:1:11;8824:8;;8807:25;8842:23;8868:19;:17;:19::i;:::-;8842:45;-1:-1:-1;8897:16:11;8916:21;8842:45;8916:3;:21;:::i;:::-;-1:-1:-1;;;;;8973:12:11;;8947:23;8973:12;;;:6;:12;;;;;9035:20;;;;8897:40;;-1:-1:-1;8973:12:11;9017:38;;:15;:38;:::i;:::-;8995:60;-1:-1:-1;9119:6:11;9107:8;8995:60;9073:17;9082:8;9073:6;:17;:::i;:::-;:31;;;;:::i;:::-;:42;;;;:::i;:::-;9072:53;;;;:::i;:::-;9065:60;;;;;;8697:435;;;;;;:::o;2543:215:3:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:3;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:3;;2700:1:::1;2672:31;::::0;::::1;3199:51:12::0;3172:18;;2672:31:3::1;3020:236:12::0;2623:91:3::1;2723:28;2742:8;2723:18;:28::i;9234:237:11:-:0;9286:7;9305:12;9320:6;-1:-1:-1;;;;;9320:21:11;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9305:38;;9366:1;9357:5;:10;9353:24;;9376:1;9369:8;;;9234:237;:::o;9353:24::-;9444:20;9463:1;1118:4;9444:20;:::i;:::-;9437:27;;;9234:237;:::o;401:286:12:-;460:6;513:2;501:9;492:7;488:23;484:32;481:52;;;529:1;526;519:12;481:52;555:23;;-1:-1:-1;;;;;607:31:12;;597:42;;587:70;;653:1;650;643:12;1160:127;1221:10;1216:3;1212:20;1209:1;1202:31;1252:4;1249:1;1242:15;1276:4;1273:1;1266:15;1292:1295;1385:6;1393;1446:2;1434:9;1425:7;1421:23;1417:32;1414:52;;;1462:1;1459;1452:12;1414:52;1507:23;;;-1:-1:-1;1605:2:12;1590:18;;1577:32;1632:18;1621:30;;1618:50;;;1664:1;1661;1654:12;1618:50;1687:22;;1740:4;1732:13;;1728:27;-1:-1:-1;1718:55:12;;1769:1;1766;1759:12;1718:55;1809:2;1796:16;1835:18;1827:6;1824:30;1821:56;;;1857:18;;:::i;:::-;1903:6;1900:1;1896:14;1939:2;1933:9;2002:2;1998:7;1993:2;1989;1985:11;1981:25;1973:6;1969:38;2073:6;2061:10;2058:22;2037:18;2025:10;2022:34;2019:62;2016:88;;;2084:18;;:::i;:::-;2120:2;2113:22;2170;;;2220:2;2250:11;;;2246:20;;;2170:22;2208:15;;2278:19;;;2275:39;;;2310:1;2307;2300:12;2275:39;2342:2;2338;2334:11;2323:22;;2354:202;2370:6;2365:3;2362:15;2354:202;;;2464:17;;2494:20;;;2543:2;2387:12;;;;2464:17;;-1:-1:-1;2534:12:12;2354:202;;;2358:3;2575:6;2565:16;;;;;;1292:1295;;;;;:::o;2789:226::-;2848:6;2901:2;2889:9;2880:7;2876:23;2872:32;2869:52;;;2917:1;2914;2907:12;2869:52;-1:-1:-1;2962:23:12;;2789:226;-1:-1:-1;2789:226:12:o;4307:444::-;4373:6;4381;4434:2;4422:9;4413:7;4409:23;4405:32;4402:52;;;4450:1;4447;4440:12;4402:52;4489:9;4476:23;4539:10;4532:5;4528:22;4521:5;4518:33;4508:61;;4565:1;4562;4555:12;4508:61;4588:5;-1:-1:-1;4645:2:12;4630:18;;4617:32;4693:6;4680:20;;4668:33;;4658:61;;4715:1;4712;4705:12;4658:61;4738:7;4728:17;;;4307:444;;;;;:::o;5416:127::-;5477:10;5472:3;5468:20;5465:1;5458:31;5508:4;5505:1;5498:15;5532:4;5529:1;5522:15;5548:128;5615:9;;;5636:11;;;5633:37;;;5650:18;;:::i;5960:277::-;6027:6;6080:2;6068:9;6059:7;6055:23;6051:32;6048:52;;;6096:1;6093;6086:12;6048:52;6128:9;6122:16;6181:5;6174:13;6167:21;6160:5;6157:32;6147:60;;6203:1;6200;6193:12;6242:339;6444:2;6426:21;;;6483:2;6463:18;;;6456:30;-1:-1:-1;;;6517:2:12;6502:18;;6495:45;6572:2;6557:18;;6242:339::o;6586:125::-;6651:9;;;6672:10;;;6669:36;;;6685:18;;:::i;8393:127::-;8454:10;8449:3;8445:20;8442:1;8435:31;8485:4;8482:1;8475:15;8509:4;8506:1;8499:15;8525:127;8586:10;8581:3;8577:20;8574:1;8567:31;8617:4;8614:1;8607:15;8641:4;8638:1;8631:15;8657:112;8689:1;8715;8705:35;;8720:18;;:::i;:::-;-1:-1:-1;8754:9:12;;8657:112::o;8774:168::-;8847:9;;;8878;;8895:15;;;8889:22;;8875:37;8865:71;;8916:18;;:::i;8947:120::-;8987:1;9013;9003:35;;9018:18;;:::i;:::-;-1:-1:-1;9052:9:12;;8947:120::o;9604:184::-;9674:6;9727:2;9715:9;9706:7;9702:23;9698:32;9695:52;;;9743:1;9740;9733:12;9695:52;-1:-1:-1;9766:16:12;;9604:184;-1:-1:-1;9604:184:12:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1089200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BASE_APY()": "296",
								"COORDINATOR()": "infinite",
								"DAO_APY()": "274",
								"DAO_SUPERPOSITION_MAX()": "295",
								"DAO_SUPERPOSITION_MIN()": "296",
								"SUPERPOSITION_MAX()": "228",
								"SUPERPOSITION_MIN()": "231",
								"UPDATE_INTERVAL()": "230",
								"VOLATILITY_BONUS()": "229",
								"calculateReward(address)": "infinite",
								"callbackGasLimit()": "2381",
								"claimReward()": "infinite",
								"getStakedBalance(address)": "infinite",
								"getTotalValueLocked()": "2370",
								"keyHash()": "infinite",
								"numWords()": "2413",
								"oracle()": "infinite",
								"owner()": "2399",
								"quantumToken()": "infinite",
								"rawFulfillRandomWords(uint256,uint256[])": "infinite",
								"renounceOwnership()": "infinite",
								"requestConfirmations()": "2391",
								"requestToUser(uint256)": "2567",
								"stake(uint256)": "infinite",
								"stakeForDAO(uint256)": "infinite",
								"stakes(address)": "11119",
								"subscriptionId()": "infinite",
								"totalValueLocked()": "2372",
								"transferOwnership(address)": "infinite",
								"updateVRFParams(uint32,uint16)": "26839",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"calculateReward(address,uint256,uint256)": "infinite",
								"fulfillRandomWords(uint256,uint256[] memory)": "infinite",
								"predictVolatility()": "infinite",
								"requestSuperpositionAPY(address)": "infinite",
								"updateStake(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "140"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2545,
									"end": 2585,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2545,
									"end": 2585,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2545,
									"end": 2585,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2733,
									"end": 2759,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2733,
									"end": 2759,
									"name": "PUSH",
									"source": 11,
									"value": "10003000186A0"
								},
								{
									"begin": 2733,
									"end": 2759,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2733,
									"end": 2759,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2733,
									"end": 2759,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3802,
									"end": 4514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3802,
									"end": 4514,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4037,
									"end": 4052,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4005,
									"end": 4017,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1039,
									"end": 1090,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1012,
									"end": 1030,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1012,
									"end": 1030,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 5599,
									"end": 5631,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4072,
									"end": 4099,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4072,
									"end": 4099,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4064,
									"end": 4125,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 4064,
									"end": 4125,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4064,
									"end": 4125,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4064,
									"end": 4125,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4064,
									"end": 4125,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4064,
									"end": 4125,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1303,
									"end": 1305,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4064,
									"end": 4125,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4064,
									"end": 4125,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4064,
									"end": 4125,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1285,
									"end": 1306,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "PUSH",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1340,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1340,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1340,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1315,
									"end": 1345,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1381,
									"end": 1404,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 1361,
									"end": 1379,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1361,
									"end": 1379,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1361,
									"end": 1379,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1405,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1422,
									"end": 1440,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1422,
									"end": 1440,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4064,
									"end": 4125,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 1101,
									"end": 1446,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4064,
									"end": 4125,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 4064,
									"end": 4125,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4143,
									"end": 4164,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4143,
									"end": 4164,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4135,
									"end": 4191,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 4135,
									"end": 4191,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4135,
									"end": 4191,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4135,
									"end": 4191,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4135,
									"end": 4191,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4135,
									"end": 4191,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1653,
									"end": 1655,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4135,
									"end": 4191,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4135,
									"end": 4191,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4135,
									"end": 4191,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1635,
									"end": 1656,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1692,
									"end": 1694,
									"name": "PUSH",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 1672,
									"end": 1690,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1672,
									"end": 1690,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1672,
									"end": 1690,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1665,
									"end": 1695,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1731,
									"end": 1755,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C6964206F7261636C65206164647265737300000000000000000000"
								},
								{
									"begin": 1711,
									"end": 1729,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 1711,
									"end": 1729,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1711,
									"end": 1729,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1704,
									"end": 1756,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1773,
									"end": 1791,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1773,
									"end": 1791,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4135,
									"end": 4191,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 1451,
									"end": 1797,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4135,
									"end": 4191,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 4135,
									"end": 4191,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4209,
									"end": 4238,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4209,
									"end": 4238,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4201,
									"end": 4274,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 4201,
									"end": 4274,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4201,
									"end": 4274,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4201,
									"end": 4274,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4201,
									"end": 4274,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4201,
									"end": 4274,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2004,
									"end": 2006,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4201,
									"end": 4274,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4201,
									"end": 4274,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4201,
									"end": 4274,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1986,
									"end": 2007,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2043,
									"end": 2045,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2023,
									"end": 2041,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2023,
									"end": 2041,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2023,
									"end": 2041,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2016,
									"end": 2046,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2082,
									"end": 2115,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C69642056524620636F6F7264696E61746F72206164647265737300"
								},
								{
									"begin": 2062,
									"end": 2080,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2062,
									"end": 2080,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2062,
									"end": 2080,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2055,
									"end": 2116,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2133,
									"end": 2151,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2133,
									"end": 2151,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4201,
									"end": 4274,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 1802,
									"end": 2157,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4201,
									"end": 4274,
									"modifierDepth": 2,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 4201,
									"end": 4274,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4284,
									"end": 4329,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4329,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4329,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4329,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 4284,
									"end": 4329,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4339,
									"end": 4371,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4339,
									"end": 4371,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4339,
									"end": 4371,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4339,
									"end": 4371,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 4339,
									"end": 4371,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4381,
									"end": 4437,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4381,
									"end": 4437,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4381,
									"end": 4437,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 4381,
									"end": 4437,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4447,
									"end": 4465,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 4447,
									"end": 4465,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4447,
									"end": 4465,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4447,
									"end": 4465,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4447,
									"end": 4465,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4475,
									"end": 4507,
									"modifierDepth": 2,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4475,
									"end": 4507,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 4475,
									"end": 4507,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 888,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 310,
									"end": 316,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 324,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 326,
									"end": 332,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 334,
									"end": 340,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 342,
									"end": 348,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 356,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 403,
									"end": 406,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 391,
									"end": 400,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 382,
									"end": 389,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 378,
									"end": 401,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 374,
									"end": 407,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 371,
									"end": 424,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 371,
									"end": 424,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 371,
									"end": 424,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 420,
									"end": 421,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 417,
									"end": 418,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 410,
									"end": 422,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 371,
									"end": 424,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 371,
									"end": 424,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 443,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 473,
									"end": 482,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 443,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 443,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 443,
									"end": 483,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 443,
									"end": 483,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 433,
									"end": 483,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 433,
									"end": 483,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 502,
									"end": 551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 547,
									"end": 549,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 536,
									"end": 545,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 532,
									"end": 550,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 502,
									"end": 551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 502,
									"end": 551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 502,
									"end": 551,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 502,
									"end": 551,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 492,
									"end": 551,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 492,
									"end": 551,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 570,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 604,
									"end": 613,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 600,
									"end": 618,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 570,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 570,
									"end": 619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 570,
									"end": 619,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 570,
									"end": 619,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 659,
									"end": 661,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 644,
									"end": 662,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 644,
									"end": 662,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 638,
									"end": 663,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 706,
									"end": 709,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 691,
									"end": 710,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 691,
									"end": 710,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 685,
									"end": 711,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 560,
									"end": 619,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 560,
									"end": 619,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 638,
									"end": 663,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 740,
									"end": 770,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 740,
									"end": 770,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 730,
									"end": 771,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 730,
									"end": 771,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 720,
									"end": 789,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 720,
									"end": 789,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 785,
									"end": 786,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 783,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 775,
									"end": 787,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 720,
									"end": 789,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 720,
									"end": 789,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 808,
									"end": 813,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 832,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 877,
									"end": 880,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 862,
									"end": 881,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 862,
									"end": 881,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 832,
									"end": 882,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 832,
									"end": 882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 832,
									"end": 882,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 832,
									"end": 882,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 822,
									"end": 882,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 822,
									"end": 882,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 196,
									"end": 888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1802,
									"end": 2157,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1802,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3129"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3126"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3065"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3062"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3059"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 11196,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208cf170318d413ce7f08fb2d1cca545f8d8b408a9fe4941209ae2c1efccd5494764736f6c634300081c0033",
									".code": [
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "89AC4147"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "B8ED3AAD"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "CB8B97F5"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "CB8B97F5"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "D82E3962"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "EC18154E"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "B8ED3AAD"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "B94790A4"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "BAE4E530"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "C75A0715"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "A694FC3A"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "A694FC3A"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "B0FB162F"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "B26025AA"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "B88A802F"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "89AC4147"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "93565B4C"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "9DA378AB"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "3A02A42D"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "61728F39"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "61728F39"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "7CCFD7FC"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "7DC0D1D0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "3A02A42D"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "3B2BCBF1"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "3E2F7EB5"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "4CA19FD6"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "1FE543E3"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "1FE543E3"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "24F74697"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "27779748"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "2E1A7D4D"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "7B2D32F"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "9C1BA2E"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "16934FC4"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 585,
											"end": 11196,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1237,
											"end": 1241,
											"name": "PUSH",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1241,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3129"
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 370,
											"end": 388,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 358,
											"end": 389,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 358,
											"end": 389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 340,
											"end": 390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 340,
											"end": 390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 328,
											"end": 330,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 196,
											"end": 396,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2119,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 951,
											"end": 976,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 951,
											"end": 976,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 951,
											"end": 976,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1007,
											"end": 1009,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 992,
											"end": 1010,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 992,
											"end": 1010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 985,
											"end": 1019,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 985,
											"end": 1019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 985,
											"end": 1019,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 985,
											"end": 1019,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1053,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1053,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1053,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1028,
											"end": 1062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1028,
											"end": 1062,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1028,
											"end": 1062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1028,
											"end": 1062,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1071,
											"end": 1105,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1136,
											"end": 1139,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1121,
											"end": 1140,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1121,
											"end": 1140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1149,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 938,
											"end": 941,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 923,
											"end": 942,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 692,
											"end": 1155,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6618,
											"end": 6874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6618,
											"end": 6874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2776,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2778,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2778,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2724,
											"end": 2726,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2727,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2545,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2592,
											"end": 2784,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 967,
											"end": 1006,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 967,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1001,
											"end": 1006,
											"name": "PUSH",
											"source": 11,
											"value": "4B0"
										},
										{
											"begin": 967,
											"end": 1006,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 967,
											"end": 1006,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 5683,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 5683,
											"end": 6054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 9625,
											"end": 9765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9625,
											"end": 9765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 825,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 771,
											"end": 825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 771,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 771,
											"end": 825,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3065"
										},
										{
											"begin": 771,
											"end": 825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 771,
											"end": 825,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 771,
											"end": 825,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 771,
											"end": 825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 771,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 825,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3217,
											"end": 3249,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3217,
											"end": 3249,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3217,
											"end": 3249,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3189,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 771,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 3020,
											"end": 3256,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2292,
											"end": 2340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2340,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 875,
											"end": 915,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 875,
											"end": 915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 875,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 910,
											"end": 915,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 875,
											"end": 915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 875,
											"end": 915,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2407,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 2375,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2375,
											"end": 2407,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3126"
										},
										{
											"begin": 2375,
											"end": 2407,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2375,
											"end": 2407,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 11,
											"value": "1000000000000"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2759,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 727,
											"end": 765,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 727,
											"end": 765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 727,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 727,
											"end": 765,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3062"
										},
										{
											"begin": 727,
											"end": 765,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 727,
											"end": 765,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1667,
											"end": 1716,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1667,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1667,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1709,
											"end": 1716,
											"name": "PUSH",
											"source": 11,
											"value": "278D00"
										},
										{
											"begin": 1667,
											"end": 1716,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1667,
											"end": 1716,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 676,
											"end": 721,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 676,
											"end": 721,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 676,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 676,
											"end": 721,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3059"
										},
										{
											"begin": 676,
											"end": 721,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 676,
											"end": 721,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 4621,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4621,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "100000000"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4294,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4295,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4296,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4258,
											"end": 4296,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4246,
											"end": 4248,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2641,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 4114,
											"end": 4302,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9862,
											"end": 9965,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9862,
											"end": 9965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9942,
											"end": 9958,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 9942,
											"end": 9958,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9862,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 9862,
											"end": 9965,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6109,
											"end": 6473,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 6109,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6109,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 6109,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 6109,
											"end": 6473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1118,
											"end": 1122,
											"name": "PUSH",
											"source": 11,
											"value": "C8"
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1075,
											"end": 1122,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 5138,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 5138,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 10690,
											"end": 10897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 10690,
											"end": 10897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1551,
											"end": 1604,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1551,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1551,
											"end": 1604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1599,
											"end": 1604,
											"name": "PUSH",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 1551,
											"end": 1604,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1551,
											"end": 1604,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1363,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1314,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "PUSH",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 1314,
											"end": 1363,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1314,
											"end": 1363,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 10131,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 10131,
											"end": 10512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 11040,
											"end": 11194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 11040,
											"end": 11194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6717,
											"end": 6727,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6731,
											"end": 6745,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6717,
											"end": 6745,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73E64FD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6788,
											"end": 6798,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 4981,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6800,
											"end": 6814,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5017,
											"end": 5049,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4903,
											"end": 4921,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6762,
											"end": 6815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6713,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6846,
											"end": 6855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6857,
											"end": 6868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6827,
											"end": 6869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6618,
											"end": 6874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5736,
											"end": 5759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5748,
											"end": 5758,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5736,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 5736,
											"end": 5759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5736,
											"end": 5759,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5736,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5784,
											"end": 5794,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5777,
											"end": 5783,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5777,
											"end": 5795,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5777,
											"end": 5802,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5777,
											"end": 5812,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5777,
											"end": 5812,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5245,
											"end": 5266,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5302,
											"end": 5304,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5275,
											"end": 5305,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5341,
											"end": 5369,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E74207374616B656420616D6F756E74000000000000"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5314,
											"end": 5370,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5387,
											"end": 5405,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5387,
											"end": 5405,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5061,
											"end": 5411,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 5769,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5860,
											"end": 5870,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5859,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 5853,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5853,
											"end": 5888,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5918,
											"end": 5924,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 5898,
											"end": 5924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5964,
											"end": 5974,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5906,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5949,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5954,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5942,
											"end": 5963,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5963,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5963,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 5942,
											"end": 5963,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5828,
											"end": 5846,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5828,
											"end": 5846,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5942,
											"end": 5983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5934,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5934,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6028,
											"end": 6038,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6038,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "PUSH",
											"source": 11,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6018,
											"end": 6047,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 5683,
											"end": 6054,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5683,
											"end": 6054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9688,
											"end": 9695,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9742,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9748,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9758,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9758,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9758,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9758,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9714,
											"end": 9733,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9714,
											"end": 9733,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9714,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 9714,
											"end": 9758,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9736,
											"end": 9758,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9714,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 9714,
											"end": 9758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9714,
											"end": 9758,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 9714,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9707,
											"end": 9758,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9625,
											"end": 9765,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9625,
											"end": 9765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4621,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4688,
											"end": 4689,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4679,
											"end": 4685,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4679,
											"end": 4689,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6918,
											"end": 6920,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6921,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6930,
											"end": 6960,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A5908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6969,
											"end": 7013,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7030,
											"end": 7048,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7030,
											"end": 7048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 6716,
											"end": 7054,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 4730,
											"end": 4740,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 4718,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4718,
											"end": 4741,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 4718,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4758,
											"end": 4768,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4757,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4780,
											"end": 4786,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4780,
											"end": 4786,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4780,
											"end": 4786,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4780,
											"end": 4786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 4751,
											"end": 4786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4751,
											"end": 4786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4822,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4812,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4796,
											"end": 4812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 4796,
											"end": 4822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4796,
											"end": 4822,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4866,
											"end": 4876,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7261,
											"end": 7312,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4886,
											"end": 4890,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 7328,
											"end": 7346,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7328,
											"end": 7346,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7328,
											"end": 7346,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7381,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7390,
											"end": 7424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7390,
											"end": 7424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7390,
											"end": 7424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4852,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4840,
											"end": 4865,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4865,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 4840,
											"end": 4865,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 4840,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 4840,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 4832,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 4832,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4930,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 4954,
											"end": 4964,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4930,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 4930,
											"end": 4965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4930,
											"end": 4965,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 4930,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5013,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4980,
											"end": 5013,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5013,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7603,
											"end": 7628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7603,
											"end": 7628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7603,
											"end": 7628,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5007,
											"end": 5012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7661,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7687,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 4997,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4987,
											"end": 4997,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4980,
											"end": 5013,
											"name": "PUSH",
											"source": 11,
											"value": "37D4053E34FDE482E96F6BCD424DFA31342CBD5FE184D497FB3C8BB4B4B97580"
										},
										{
											"begin": 4980,
											"end": 5013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7576,
											"end": 7594,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4980,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 7435,
											"end": 7693,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6109,
											"end": 6473,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 6109,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 6163,
											"end": 6173,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 6151,
											"end": 6174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6151,
											"end": 6174,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 6151,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6208,
											"end": 6218,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6184,
											"end": 6198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6219,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6237,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6201,
											"end": 6237,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6201,
											"end": 6237,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6255,
											"end": 6265,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7900,
											"end": 7902,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 7903,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7939,
											"end": 7941,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7919,
											"end": 7937,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7912,
											"end": 7942,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207265776172647320746F20636C61696D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7958,
											"end": 7976,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7958,
											"end": 7976,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7958,
											"end": 7976,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7951,
											"end": 8000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8017,
											"end": 8035,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 7698,
											"end": 8041,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 6247,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6316,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6317,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6335,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6299,
											"end": 6335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6339,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6339,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6339,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6299,
											"end": 6339,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 5906,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5906,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5855,
											"end": 5906,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5949,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5949,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6357,
											"end": 6369,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3059"
										},
										{
											"begin": 6357,
											"end": 6378,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6378,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 6357,
											"end": 6378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5828,
											"end": 5846,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5828,
											"end": 5846,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 6357,
											"end": 6398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 6357,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 6349,
											"end": 6418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 6349,
											"end": 6418,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6447,
											"end": 6457,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6447,
											"end": 6457,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "PUSH",
											"source": 11,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6433,
											"end": 6466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 5138,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5211,
											"end": 5212,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5212,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6918,
											"end": 6920,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6900,
											"end": 6921,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6930,
											"end": 6960,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A5908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6976,
											"end": 6994,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6969,
											"end": 7013,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7030,
											"end": 7048,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7030,
											"end": 7048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 6716,
											"end": 7054,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5253,
											"end": 5263,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 5241,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5241,
											"end": 5264,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 5241,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5291,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5302,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5274,
											"end": 5312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5274,
											"end": 5312,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5348,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5338,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5322,
											"end": 5338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5322,
											"end": 5348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5348,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5392,
											"end": 5402,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7261,
											"end": 7312,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5412,
											"end": 5416,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 7328,
											"end": 7346,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7328,
											"end": 7346,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7328,
											"end": 7346,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7381,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7390,
											"end": 7424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7390,
											"end": 7424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7390,
											"end": 7424,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5366,
											"end": 5378,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5391,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5391,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 5366,
											"end": 5391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5366,
											"end": 5426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 5366,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 5358,
											"end": 5446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 5358,
											"end": 5446,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "255DA8DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5456,
											"end": 5468,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5456,
											"end": 5479,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5479,
											"name": "PUSH",
											"source": 11,
											"value": "9576A374"
										},
										{
											"begin": 5456,
											"end": 5479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5456,
											"end": 5487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5497,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 5521,
											"end": 5531,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5497,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 5497,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5497,
											"end": 5532,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 5497,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7603,
											"end": 7628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7603,
											"end": 7628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7603,
											"end": 7628,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5574,
											"end": 5578,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7659,
											"end": 7661,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7644,
											"end": 7662,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7637,
											"end": 7687,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5564,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5554,
											"end": 5564,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "PUSH",
											"source": 11,
											"value": "37D4053E34FDE482E96F6BCD424DFA31342CBD5FE184D497FB3C8BB4B4B97580"
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7576,
											"end": 7594,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5547,
											"end": 5579,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 7435,
											"end": 7693,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 10690,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10816,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10800,
											"end": 10836,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10836,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "PUSH",
											"source": 11,
											"value": "100000000"
										},
										{
											"begin": 10846,
											"end": 10890,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10800,
											"end": 10836,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10836,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10800,
											"end": 10836,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10846,
											"end": 10890,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10690,
											"end": 10897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10193,
											"end": 10200,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10238,
											"end": 10244,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10303,
											"end": 10319,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10303,
											"end": 10319,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10321,
											"end": 10341,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10321,
											"end": 10341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10321,
											"end": 10341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10321,
											"end": 10341,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10193,
											"end": 10200,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10193,
											"end": 10200,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10281,
											"end": 10342,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 10281,
											"end": 10342,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10245,
											"end": 10249,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10245,
											"end": 10249,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10303,
											"end": 10319,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10281,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 10281,
											"end": 10342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10281,
											"end": 10342,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 10281,
											"end": 10342,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10260,
											"end": 10342,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10260,
											"end": 10342,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10352,
											"end": 10369,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10372,
											"end": 10436,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 10388,
											"end": 10392,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10394,
											"end": 10403,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10394,
											"end": 10413,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10394,
											"end": 10413,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10394,
											"end": 10413,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10415,
											"end": 10424,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10415,
											"end": 10435,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10415,
											"end": 10435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10415,
											"end": 10435,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10372,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 10372,
											"end": 10436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10372,
											"end": 10436,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 10372,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10352,
											"end": 10436,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10352,
											"end": 10436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10505,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10483,
											"end": 10493,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10462,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10480,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 10453,
											"end": 10480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10480,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 10453,
											"end": 10493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10493,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 10453,
											"end": 10493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10493,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 10453,
											"end": 10493,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 10453,
											"end": 10505,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10505,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 10453,
											"end": 10505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10453,
											"end": 10505,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 10453,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10446,
											"end": 10505,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 10131,
											"end": 10512,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10131,
											"end": 10512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11154,
											"end": 11187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 11178,
											"end": 11186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11154,
											"end": 11177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 11154,
											"end": 11187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11154,
											"end": 11187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 11154,
											"end": 11187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11194,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11040,
											"end": 11194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7225,
											"end": 7935,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 7225,
											"end": 7935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7342,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7358,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7369,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8250,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8230,
											"end": 8251,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8260,
											"end": 8290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C995C5D595CDD081251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8299,
											"end": 8347,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8364,
											"end": 8382,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8364,
											"end": 8382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 8046,
											"end": 8388,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 7379,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7457,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7480,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7460,
											"end": 7471,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7472,
											"end": 7473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 7460,
											"end": 7474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7474,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 7460,
											"end": 7480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 7460,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7521,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7531,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7531,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7480,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7480,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7490,
											"end": 7506,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7509,
											"end": 7623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7586,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 1237,
											"end": 1241,
											"name": "PUSH",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 1358,
											"end": 1363,
											"name": "PUSH",
											"source": 11,
											"value": "578"
										},
										{
											"begin": 7586,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 7586,
											"end": 7623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7586,
											"end": 7623,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 7586,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7509,
											"end": 7623,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7509,
											"end": 7623,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 7509,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7538,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 1599,
											"end": 1604,
											"name": "PUSH",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 7538,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 7538,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7538,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 7538,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7633,
											"end": 7647,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7690,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7696,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7706,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7706,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7623,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7623,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7633,
											"end": 7647,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 7684,
											"end": 7754,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1241,
											"name": "PUSH",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 7684,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7684,
											"end": 7754,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7754,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 7684,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1483,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 7684,
											"end": 7754,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 7684,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7676,
											"end": 7679,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7651,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 7665,
											"end": 7673,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7651,
											"end": 7662,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7651,
											"end": 7673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7651,
											"end": 7673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7651,
											"end": 7673,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 7651,
											"end": 7673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7651,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7651,
											"end": 7679,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7651,
											"end": 7679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7651,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7651,
											"end": 7679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7651,
											"end": 7679,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 7651,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7650,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7650,
											"end": 7755,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7650,
											"end": 7755,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7650,
											"end": 7755,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 7650,
											"end": 7755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7650,
											"end": 7755,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 7650,
											"end": 7755,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7771,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7788,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7765,
											"end": 7788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7788,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7797,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7797,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7848,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7830,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7807,
											"end": 7830,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7830,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7830,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7807,
											"end": 7848,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7878,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7865,
											"end": 7889,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7858,
											"end": 7889,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7858,
											"end": 7889,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7858,
											"end": 7889,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7858,
											"end": 7889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7858,
											"end": 7889,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7765,
											"end": 7797,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7797,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7777,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "PUSH",
											"source": 11,
											"value": "95046B7FDB9BCF09CDB8B5E270934D955F51F771912290FF9A0020045195EEE5"
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7904,
											"end": 7928,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7320,
											"end": 7935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7225,
											"end": 7935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7225,
											"end": 7935,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7225,
											"end": 7935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8026,
											"end": 8483,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 8026,
											"end": 8483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8099,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8108,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8144,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8144,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8144,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 8124,
											"end": 8171,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8148,
											"end": 8167,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8148,
											"end": 8167,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8148,
											"end": 8167,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8148,
											"end": 8171,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8124,
											"end": 8171,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 8124,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8120,
											"end": 8481,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8120,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 8120,
											"end": 8481,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8187,
											"end": 8205,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8230,
											"end": 8239,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8230,
											"end": 8246,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8246,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8230,
											"end": 8246,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8257,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8268,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8248,
											"end": 8268,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8248,
											"end": 8268,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8208,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 8208,
											"end": 8269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8208,
											"end": 8269,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 8208,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8187,
											"end": 8269,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8187,
											"end": 8269,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8279,
											"end": 8296,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 8315,
											"end": 8319,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8330,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8340,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8321,
											"end": 8340,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8340,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8342,
											"end": 8351,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8342,
											"end": 8362,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8342,
											"end": 8362,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8342,
											"end": 8362,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8299,
											"end": 8314,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 8299,
											"end": 8363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8299,
											"end": 8363,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 8299,
											"end": 8363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8279,
											"end": 8363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 8279,
											"end": 8363,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8404,
											"end": 8414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 8404,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8382,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8400,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 8373,
											"end": 8400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8400,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 8373,
											"end": 8426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8373,
											"end": 8426,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8459,
											"end": 8474,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 8436,
											"end": 8456,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8436,
											"end": 8456,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8436,
											"end": 8456,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8436,
											"end": 8474,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8070,
											"end": 8483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8026,
											"end": 8483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8026,
											"end": 8483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3020,
											"end": 3256,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 7070,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 6589,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6684,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6690,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6701,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 6678,
											"end": 6701,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6701,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 6678,
											"end": 6719,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1709,
											"end": 1716,
											"name": "PUSH",
											"source": 11,
											"value": "278D00"
										},
										{
											"begin": 1709,
											"end": 1716,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 6678,
											"end": 6719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6678,
											"end": 6719,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 6678,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6659,
											"end": 6674,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6659,
											"end": 6719,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6655,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 6655,
											"end": 7064,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6860,
											"end": 6880,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6860,
											"end": 6880,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6860,
											"end": 6880,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5D3B1D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6803,
											"end": 6810,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3126"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9323,
											"end": 9348,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9323,
											"end": 9348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9323,
											"end": 9348,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9323,
											"end": 9348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9396,
											"end": 9414,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6828,
											"end": 6842,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3129"
										},
										{
											"begin": 9384,
											"end": 9415,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9364,
											"end": 9382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9357,
											"end": 9416,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6880,
											"name": "PUSH",
											"source": 11,
											"value": "100000000"
										},
										{
											"begin": 6860,
											"end": 6880,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6860,
											"end": 6880,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6860,
											"end": 6880,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 6860,
											"end": 6880,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9432,
											"end": 9450,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9425,
											"end": 9472,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6898,
											"end": 6914,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6898,
											"end": 6914,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 6914,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6898,
											"end": 6914,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9488,
											"end": 9506,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9488,
											"end": 9506,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9488,
											"end": 9506,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9481,
											"end": 9532,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6932,
											"end": 6940,
											"name": "PUSH",
											"source": 11,
											"value": "1000000000000"
										},
										{
											"begin": 6932,
											"end": 6940,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6932,
											"end": 6940,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6932,
											"end": 6940,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6932,
											"end": 6940,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9548,
											"end": 9567,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9548,
											"end": 9567,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9548,
											"end": 9567,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9541,
											"end": 9593,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6735,
											"end": 6752,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6766,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6755,
											"end": 6785,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6785,
											"name": "PUSH",
											"source": 11,
											"value": "5D3B1D30"
										},
										{
											"begin": 6755,
											"end": 6785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9295,
											"end": 9314,
											"name": "PUSH",
											"source": 12,
											"value": "A4"
										},
										{
											"begin": 9295,
											"end": 9314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 6755,
											"end": 6954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 6755,
											"end": 6954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6981,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6992,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6999,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "PUSH",
											"source": 11,
											"value": "5ACEC44D329E4DFEA8E1A6DAE4B0C46D76B2A92D3A747907A60DEE7AD6809FD"
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7053,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 6721,
											"end": 7064,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6589,
											"end": 7070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6589,
											"end": 7070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9132,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 8697,
											"end": 9132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8788,
											"end": 8795,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8811,
											"end": 8817,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8821,
											"end": 8822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8811,
											"end": 8822,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8831,
											"end": 8832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 8824,
											"end": 8832,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8842,
											"end": 8865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8868,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 8868,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 8868,
											"end": 8887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8868,
											"end": 8887,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 8868,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8842,
											"end": 8887,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8897,
											"end": 8913,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 8842,
											"end": 8887,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8916,
											"end": 8919,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 8916,
											"end": 8937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 8916,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8947,
											"end": 8970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8973,
											"end": 8979,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9035,
											"end": 9055,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 9035,
											"end": 9055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9035,
											"end": 9055,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9035,
											"end": 9055,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8897,
											"end": 8937,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8897,
											"end": 8937,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8973,
											"end": 8985,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9017,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 9017,
											"end": 9055,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9017,
											"end": 9032,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 9017,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 9017,
											"end": 9055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9017,
											"end": 9055,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 9017,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8995,
											"end": 9055,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9125,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 9107,
											"end": 9115,
											"name": "PUSH",
											"source": 11,
											"value": "1E13380"
										},
										{
											"begin": 8995,
											"end": 9055,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 9082,
											"end": 9090,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 9073,
											"end": 9090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9090,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 9073,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 9073,
											"end": 9104,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 9073,
											"end": 9104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9104,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 9073,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 9073,
											"end": 9115,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9115,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 9073,
											"end": 9115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9073,
											"end": 9115,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 9073,
											"end": 9115,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9072,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 9072,
											"end": 9125,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9072,
											"end": 9125,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9072,
											"end": 9125,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 9072,
											"end": 9125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9072,
											"end": 9125,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 9072,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9065,
											"end": 9125,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9065,
											"end": 9125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9065,
											"end": 9125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9065,
											"end": 9125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9065,
											"end": 9125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9065,
											"end": 9125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9132,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 8697,
											"end": 9132,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9132,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9132,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9132,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8697,
											"end": 9132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3250,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3172,
											"end": 3190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 3020,
											"end": 3256,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9234,
											"end": 9471,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 9234,
											"end": 9471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9286,
											"end": 9293,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9317,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9326,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3062"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9320,
											"end": 9341,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9341,
											"name": "PUSH",
											"source": 11,
											"value": "8E15F473"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 9320,
											"end": 9343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 9320,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9305,
											"end": 9343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9305,
											"end": 9343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9366,
											"end": 9367,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9357,
											"end": 9362,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9357,
											"end": 9367,
											"name": "SGT",
											"source": 11
										},
										{
											"begin": 9353,
											"end": 9377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 9353,
											"end": 9377,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9376,
											"end": 9377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9369,
											"end": 9377,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9369,
											"end": 9377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9369,
											"end": 9377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9471,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9353,
											"end": 9377,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 9353,
											"end": 9377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9444,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 9463,
											"end": 9464,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1118,
											"end": 1122,
											"name": "PUSH",
											"source": 11,
											"value": "C8"
										},
										{
											"begin": 9444,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 9444,
											"end": 9464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9444,
											"end": 9464,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 9444,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9437,
											"end": 9464,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9437,
											"end": 9464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9437,
											"end": 9464,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9471,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 401,
											"end": 687,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 401,
											"end": 687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 460,
											"end": 466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 492,
											"end": 499,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 488,
											"end": 511,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 484,
											"end": 516,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 481,
											"end": 533,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 481,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 481,
											"end": 533,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 481,
											"end": 533,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 481,
											"end": 533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 555,
											"end": 578,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 555,
											"end": 578,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 607,
											"end": 638,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 607,
											"end": 638,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 597,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 597,
											"end": 639,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 587,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 587,
											"end": 657,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 653,
											"end": 654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 651,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 643,
											"end": 655,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1160,
											"end": 1287,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 1160,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1221,
											"end": 1231,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1216,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1212,
											"end": 1232,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1233,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1249,
											"end": 1250,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1257,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1280,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1273,
											"end": 1274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1281,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 2587,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1292,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1391,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1446,
											"end": 1448,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1443,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1432,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1444,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1417,
											"end": 1449,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1414,
											"end": 1466,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1414,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 1414,
											"end": 1466,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1462,
											"end": 1463,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1452,
											"end": 1464,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1414,
											"end": 1466,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 1414,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1507,
											"end": 1530,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1605,
											"end": 1607,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1577,
											"end": 1609,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1651,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1668,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 1618,
											"end": 1668,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1662,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1666,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1668,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 1618,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1709,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1687,
											"end": 1709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1744,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1732,
											"end": 1745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1728,
											"end": 1755,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1771,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1718,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1811,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1812,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1835,
											"end": 1853,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1824,
											"end": 1854,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1877,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1821,
											"end": 1877,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1857,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 1857,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 1875,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1857,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1896,
											"end": 1910,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1939,
											"end": 1941,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2002,
											"end": 2004,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 1995,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1985,
											"end": 1996,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1981,
											"end": 2006,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 1979,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 2007,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2061,
											"end": 2071,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2080,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2037,
											"end": 2055,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2025,
											"end": 2035,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2056,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2019,
											"end": 2081,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2104,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2016,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2016,
											"end": 2104,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2084,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 2084,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2084,
											"end": 2102,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2084,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2120,
											"end": 2122,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2113,
											"end": 2135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2261,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2261,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2250,
											"end": 2261,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2246,
											"end": 2266,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 2192,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2275,
											"end": 2314,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2275,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2275,
											"end": 2314,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2310,
											"end": 2311,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2308,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2312,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2275,
											"end": 2314,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2275,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2342,
											"end": 2344,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2340,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2323,
											"end": 2345,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2323,
											"end": 2345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2556,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2354,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2368,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2362,
											"end": 2377,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2556,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2354,
											"end": 2556,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2481,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2481,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2494,
											"end": 2514,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2545,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2387,
											"end": 2399,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2399,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2399,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2399,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2481,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2354,
											"end": 2556,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2354,
											"end": 2556,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 2354,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2358,
											"end": 2361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2575,
											"end": 2581,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 2587,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 2587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 2587,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 2587,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 2587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1292,
											"end": 2587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3015,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2789,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2848,
											"end": 2854,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2903,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2889,
											"end": 2898,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2880,
											"end": 2887,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2876,
											"end": 2899,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2904,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2869,
											"end": 2921,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2869,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2869,
											"end": 2921,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 2918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2915,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2907,
											"end": 2919,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2869,
											"end": 2921,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 2869,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2962,
											"end": 2985,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2962,
											"end": 2985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 3015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2789,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4751,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4307,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4373,
											"end": 4379,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4381,
											"end": 4387,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4422,
											"end": 4431,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4413,
											"end": 4420,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4409,
											"end": 4432,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4405,
											"end": 4437,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4402,
											"end": 4454,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4402,
											"end": 4454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4402,
											"end": 4454,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4450,
											"end": 4451,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4440,
											"end": 4452,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4402,
											"end": 4454,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4402,
											"end": 4454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4489,
											"end": 4498,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4476,
											"end": 4499,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4539,
											"end": 4549,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4532,
											"end": 4537,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4521,
											"end": 4526,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4518,
											"end": 4551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4508,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 4508,
											"end": 4569,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4565,
											"end": 4566,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4563,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4555,
											"end": 4567,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4508,
											"end": 4569,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 4508,
											"end": 4569,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4588,
											"end": 4593,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4645,
											"end": 4647,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4617,
											"end": 4649,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4693,
											"end": 4699,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4680,
											"end": 4700,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4680,
											"end": 4700,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4668,
											"end": 4701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4668,
											"end": 4701,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4658,
											"end": 4719,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4715,
											"end": 4716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4713,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4705,
											"end": 4717,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4658,
											"end": 4719,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4658,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4738,
											"end": 4745,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4745,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4728,
											"end": 4745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4751,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4751,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4751,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4307,
											"end": 4751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5416,
											"end": 5543,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 5416,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5477,
											"end": 5487,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5472,
											"end": 5475,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5468,
											"end": 5488,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5465,
											"end": 5466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5489,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5508,
											"end": 5512,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 5505,
											"end": 5506,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5513,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5532,
											"end": 5536,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5529,
											"end": 5530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5537,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5548,
											"end": 5676,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 5548,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5624,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5624,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5624,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5647,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5647,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5636,
											"end": 5647,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5633,
											"end": 5670,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5633,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 5633,
											"end": 5670,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5650,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 5650,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 5650,
											"end": 5668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5960,
											"end": 6237,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5960,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6033,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6059,
											"end": 6066,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6055,
											"end": 6078,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6051,
											"end": 6083,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6100,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 6048,
											"end": 6100,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6096,
											"end": 6097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6086,
											"end": 6098,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6100,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 6048,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6122,
											"end": 6138,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6181,
											"end": 6186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6174,
											"end": 6187,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6167,
											"end": 6188,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6160,
											"end": 6165,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6157,
											"end": 6189,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 6147,
											"end": 6207,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6200,
											"end": 6201,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6193,
											"end": 6205,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6242,
											"end": 6581,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6242,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6446,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6426,
											"end": 6447,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6485,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 6463,
											"end": 6481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6463,
											"end": 6481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6486,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6517,
											"end": 6519,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6502,
											"end": 6520,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6502,
											"end": 6520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6495,
											"end": 6540,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6572,
											"end": 6574,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6557,
											"end": 6575,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6557,
											"end": 6575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6242,
											"end": 6581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6586,
											"end": 6711,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 6586,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6651,
											"end": 6660,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6672,
											"end": 6682,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6672,
											"end": 6682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6672,
											"end": 6682,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6685,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 6685,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 6685,
											"end": 6703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8393,
											"end": 8520,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8393,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8454,
											"end": 8464,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 8449,
											"end": 8452,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8445,
											"end": 8465,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8442,
											"end": 8443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8435,
											"end": 8466,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8485,
											"end": 8489,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 8482,
											"end": 8483,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8475,
											"end": 8490,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8513,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8506,
											"end": 8507,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8514,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8525,
											"end": 8652,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 8525,
											"end": 8652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8586,
											"end": 8596,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 8581,
											"end": 8584,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8577,
											"end": 8597,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8574,
											"end": 8575,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8598,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8617,
											"end": 8621,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 8614,
											"end": 8615,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8607,
											"end": 8622,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8641,
											"end": 8645,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8646,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8657,
											"end": 8769,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 8657,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8689,
											"end": 8690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8715,
											"end": 8716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8705,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 8705,
											"end": 8740,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8720,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 8720,
											"end": 8738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 8720,
											"end": 8738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8720,
											"end": 8738,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 8720,
											"end": 8738,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8657,
											"end": 8769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8774,
											"end": 8942,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 8774,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8878,
											"end": 8887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8878,
											"end": 8887,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8895,
											"end": 8910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8895,
											"end": 8910,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8895,
											"end": 8910,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8911,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8875,
											"end": 8912,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 8865,
											"end": 8936,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 8916,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8947,
											"end": 9067,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 8947,
											"end": 9067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8987,
											"end": 8988,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9013,
											"end": 9014,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9003,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9003,
											"end": 9038,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 9018,
											"end": 9036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9052,
											"end": 9061,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9052,
											"end": 9061,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8947,
											"end": 9067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9604,
											"end": 9788,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 9604,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9674,
											"end": 9680,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9727,
											"end": 9729,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9702,
											"end": 9725,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9698,
											"end": 9730,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9695,
											"end": 9747,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9695,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 9695,
											"end": 9747,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9743,
											"end": 9744,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9733,
											"end": 9745,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9695,
											"end": 9747,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 9695,
											"end": 9747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9766,
											"end": 9782,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9766,
											"end": 9782,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9604,
											"end": 9788,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9604,
											"end": 9788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"interfaces/IUBI4ALLQuantum.sol",
								"interfaces/IUBI4ALLQuantumFinance.sol",
								"oracle/UBI4ALLOracle.sol",
								"quantum/UBI4ALLQuantumFinance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BASE_APY()": "4ca19fd6",
							"COORDINATOR()": "3b2bcbf1",
							"DAO_APY()": "27779748",
							"DAO_SUPERPOSITION_MAX()": "c75a0715",
							"DAO_SUPERPOSITION_MIN()": "9da378ab",
							"SUPERPOSITION_MAX()": "cb8b97f5",
							"SUPERPOSITION_MIN()": "07b2d32f",
							"UPDATE_INTERVAL()": "89ac4147",
							"VOLATILITY_BONUS()": "b8ed3aad",
							"calculateReward(address)": "d82e3962",
							"callbackGasLimit()": "24f74697",
							"claimReward()": "b88a802f",
							"getStakedBalance(address)": "3a02a42d",
							"getTotalValueLocked()": "b26025aa",
							"keyHash()": "61728f39",
							"numWords()": "7ccfd7fc",
							"oracle()": "7dc0d1d0",
							"owner()": "8da5cb5b",
							"quantumToken()": "93565b4c",
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3",
							"renounceOwnership()": "715018a6",
							"requestConfirmations()": "b0fb162f",
							"requestToUser(uint256)": "3e2f7eb5",
							"stake(uint256)": "a694fc3a",
							"stakeForDAO(uint256)": "b94790a4",
							"stakes(address)": "16934fc4",
							"subscriptionId()": "09c1ba2e",
							"totalValueLocked()": "ec18154e",
							"transferOwnership(address)": "f2fde38b",
							"updateVRFParams(uint32,uint16)": "bae4e530",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_quantumToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"APYUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RandomAPYRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isDAO\",\"type\":\"bool\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_APY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COORDINATOR\",\"outputs\":[{\"internalType\":\"contract VRFCoordinatorV2Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAO_APY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAO_SUPERPOSITION_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAO_SUPERPOSITION_MIN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPERPOSITION_MAX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPERPOSITION_MIN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPDATE_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOLATILITY_BONUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"callbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalValueLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWords\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract IUBI4ALLOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quantumToken\",\"outputs\":[{\"internalType\":\"contract IUBI4ALLQuantum\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestConfirmations\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestToUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeForDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daoAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentAPY\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscriptionId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValueLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"_requestConfirmations\",\"type\":\"uint16\"}],\"name\":\"updateVRFParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"calculateReward(address)\":{\"params\":{\"user\":\"Indirizzo dell'utente\"},\"returns\":{\"_0\":\"Ricompense totali (accumulate + in attesa)\"}},\"constructor\":{\"params\":{\"_keyHash\":\"Gas key per VRF\",\"_oracle\":\"Indirizzo dell'oracolo\",\"_quantumToken\":\"Indirizzo del contratto Q4A\",\"_subscriptionId\":\"ID della sottoscrizione VRF\",\"_vrfCoordinator\":\"Indirizzo del coordinatore VRF Chainlink\",\"initialOwner\":\"Indirizzo del proprietario iniziale\"}},\"getStakedBalance(address)\":{\"params\":{\"user\":\"Indirizzo dell'utente\"},\"returns\":{\"_0\":\"Saldo staked totale (standard + DAO)\"}},\"getTotalValueLocked()\":{\"returns\":{\"_0\":\"Totale dei token staked\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"params\":{\"amount\":\"Quantit\\u00e0 di token da stakare\"}},\"stakeForDAO(uint256)\":{\"params\":{\"amount\":\"Quantit\\u00e0 di token da stakare\"}},\"transferOwnership(address)\":{\"params\":{\"newOwner\":\"Indirizzo del nuovo proprietario\"}},\"updateVRFParams(uint32,uint16)\":{\"params\":{\"_callbackGasLimit\":\"Nuovo limite di gas per il callback\",\"_requestConfirmations\":\"Nuovo numero di conferme\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"Quantit\\u00e0 di token da prelevare\"}}},\"stateVariables\":{\"BASE_APY\":{\"details\":\"APY base (10%, in base 10000)\"},\"DAO_APY\":{\"details\":\"APY per DAO (12%, in base 10000)\"},\"DAO_SUPERPOSITION_MAX\":{\"details\":\"APY massimo per staking DAO (16%, in base 10000)\"},\"DAO_SUPERPOSITION_MIN\":{\"details\":\"APY minimo per staking DAO (10%, in base 10000)\"},\"SUPERPOSITION_MAX\":{\"details\":\"APY massimo per staking standard (14%, in base 10000)\"},\"SUPERPOSITION_MIN\":{\"details\":\"APY minimo per staking standard (8%, in base 10000)\"},\"UPDATE_INTERVAL\":{\"details\":\"Intervallo di aggiornamento APY (30 giorni)\"},\"VOLATILITY_BONUS\":{\"details\":\"Bonus massimo per volatilit\\u00e0 (2%, in base 10000)\"},\"callbackGasLimit\":{\"details\":\"Limite di gas per il callback VRF\"},\"keyHash\":{\"details\":\"Gas key per VRF\"},\"numWords\":{\"details\":\"Numero di parole casuali richieste\"},\"requestConfirmations\":{\"details\":\"Numero di conferme richieste per VRF\"},\"requestToUser\":{\"details\":\"Mappatura delle richieste VRF per utente\"},\"stakes\":{\"details\":\"Mappatura degli stake per utente\"},\"subscriptionId\":{\"details\":\"ID della sottoscrizione VRF\"},\"totalValueLocked\":{\"details\":\"Totale dei token staked\"}},\"title\":\"UBI4ALLQuantumFinance - Contratto di staking e finanza per il token Q4A\",\"version\":1},\"userdoc\":{\"events\":{\"APYUpdated(address,uint256)\":{\"notice\":\"Evento emesso quando l'APY di un utente viene aggiornato\"},\"RandomAPYRequested(address,uint256)\":{\"notice\":\"Evento emesso quando viene richiesta una nuova APY casuale\"},\"RewardClaimed(address,uint256)\":{\"notice\":\"Evento emesso quando un utente reclama ricompense\"},\"Staked(address,uint256,bool)\":{\"notice\":\"Evento emesso quando un utente stake token\"},\"Withdrawn(address,uint256)\":{\"notice\":\"Evento emesso quando un utente preleva token\"}},\"kind\":\"user\",\"methods\":{\"calculateReward(address)\":{\"notice\":\"Calcola le ricompense totali per un utente\"},\"claimReward()\":{\"notice\":\"Reclama le ricompense accumulate\"},\"constructor\":{\"notice\":\"Costruttore del contratto\"},\"getStakedBalance(address)\":{\"notice\":\"Ottiene il saldo staked di un utente\"},\"getTotalValueLocked()\":{\"notice\":\"Ottiene il totale dei token staked\"},\"stake(uint256)\":{\"notice\":\"Effettua lo staking di token Q4A\"},\"stakeForDAO(uint256)\":{\"notice\":\"Effettua lo staking di token Q4A per la DAO\"},\"transferOwnership(address)\":{\"notice\":\"Trasferisce la propriet\\u00e0 del contratto a un nuovo proprietario\"},\"updateVRFParams(uint32,uint16)\":{\"notice\":\"Aggiorna i parametri VRF\"},\"withdraw(uint256)\":{\"notice\":\"Preleva token staked\"}},\"notice\":\"Gestisce lo staking di token Q4A con APY variabile basato su VRF Chainlink e volatilit\\u00e0 dell'oracolo\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"quantum/UBI4ALLQuantumFinance.sol\":\"UBI4ALLQuantumFinance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://038eef992d813c20737fbe94e3a36e5d541d1aa736158dd2a43dd5b840b8c360\",\"dweb:/ipfs/QmZWJ25Yr1sUSAsfJRKvTMDmGkmy63hHhB495CUL1bpNz4\"]},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x15490c1ac7fb488198fce8a04211f15277ee816915367bc906110cbb57863bbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3273e1e51c1bfe12b50778dd98d3d322ca315cd8e1185593694a0ac828b820\",\"dweb:/ipfs/QmTyAWneXaURy9Ls4dovFWLV9yxzMkELmLsgLTWeubz8ZA\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xf4d28329285c89e85daf450fbe612ec5ceb19842ae0be976ab1569897940be90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a021f64d3d58a64fd3045afc6b192c82bca29d95cd594a3c0ed93d1c69ecc98\",\"dweb:/ipfs/QmegaH5RM4Sboa22unJm3FdMVTd3K9UUf8ogbvBwx1K8XJ\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x880e8b3325f624a5c4dfb9a754ed83bf0be1476d02c5063b215f3c3b9fdec331\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e14b50f3ca0b35d014b166235d94dfa8c9067bb3f5d65efdfb2193355a455\",\"dweb:/ipfs/QmNrM5LEwfCi7cxMovccBpFeL8T9MWfqA15dW9SobPDPfo\"]},\"interfaces/IUBI4ALLQuantum.sol\":{\"keccak256\":\"0xed4773a40ea1b8e51e4bc875b3aa1aea35d6500956eb7d463dfc053b53634386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28c1598fb65f0cf11408fd768e911c119e239ffe14dc2cefd6b87295f7c85e7e\",\"dweb:/ipfs/QmSBDSFE5A6ky3kF8sDPXeiEahFJzHNPBnt5jkCP7bN5Gt\"]},\"interfaces/IUBI4ALLQuantumFinance.sol\":{\"keccak256\":\"0x0bd9f04b0733542af47bd627d0a711abdd0358bc5163a8339141270c3cac4c31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://461ac6d507cbde9e7a135c6ed5c28bd613eb9d90603cd5482a5471502fccded2\",\"dweb:/ipfs/QmPgpYCFd5bbfUmtqunRFrzVpiGnDcZMDjrBDVYbX22kND\"]},\"oracle/UBI4ALLOracle.sol\":{\"keccak256\":\"0x335403fa9c74cda036c3e823ffdd382fab3f83600367a7f42c7e12dae4a9819e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d11cc984b2676f7ac61bc567701427cfe34ab198df4d3ca197a726990c40088\",\"dweb:/ipfs/QmSY2DTcsnZb2zfZ6gpfwTYF4GKER58NReCx5785xf5EGh\"]},\"quantum/UBI4ALLQuantumFinance.sol\":{\"keccak256\":\"0x720f87bcdda21c00ee33477c965348c048923e678bb9b01aaec417e2eafc2627\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79dd3071979446a8e5ff21f2238a4193742a851539a70540193951c79100fd79\",\"dweb:/ipfs/QmRJ1uW9s2ostd9zA64gKoM5mg8a6UqppVLXmL5zGU5cQo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 208,
								"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3115,
								"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Stake)3109_storage)"
							},
							{
								"astId": 3118,
								"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
								"label": "totalValueLocked",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 3123,
								"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
								"label": "requestToUser",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 3133,
								"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
								"label": "callbackGasLimit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint32"
							},
							{
								"astId": 3137,
								"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
								"label": "requestConfirmations",
								"offset": 4,
								"slot": "4",
								"type": "t_uint16"
							},
							{
								"astId": 3141,
								"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
								"label": "numWords",
								"offset": 6,
								"slot": "4",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)3109_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct UBI4ALLQuantumFinance.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)3109_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(Stake)3109_storage": {
								"encoding": "inplace",
								"label": "struct UBI4ALLQuantumFinance.Stake",
								"members": [
									{
										"astId": 3100,
										"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3102,
										"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
										"label": "daoAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3104,
										"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
										"label": "lastUpdate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3106,
										"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
										"label": "accumulatedReward",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3108,
										"contract": "quantum/UBI4ALLQuantumFinance.sol:UBI4ALLQuantumFinance",
										"label": "currentAPY",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"events": {
							"APYUpdated(address,uint256)": {
								"notice": "Evento emesso quando l'APY di un utente viene aggiornato"
							},
							"RandomAPYRequested(address,uint256)": {
								"notice": "Evento emesso quando viene richiesta una nuova APY casuale"
							},
							"RewardClaimed(address,uint256)": {
								"notice": "Evento emesso quando un utente reclama ricompense"
							},
							"Staked(address,uint256,bool)": {
								"notice": "Evento emesso quando un utente stake token"
							},
							"Withdrawn(address,uint256)": {
								"notice": "Evento emesso quando un utente preleva token"
							}
						},
						"kind": "user",
						"methods": {
							"calculateReward(address)": {
								"notice": "Calcola le ricompense totali per un utente"
							},
							"claimReward()": {
								"notice": "Reclama le ricompense accumulate"
							},
							"constructor": {
								"notice": "Costruttore del contratto"
							},
							"getStakedBalance(address)": {
								"notice": "Ottiene il saldo staked di un utente"
							},
							"getTotalValueLocked()": {
								"notice": "Ottiene il totale dei token staked"
							},
							"stake(uint256)": {
								"notice": "Effettua lo staking di token Q4A"
							},
							"stakeForDAO(uint256)": {
								"notice": "Effettua lo staking di token Q4A per la DAO"
							},
							"transferOwnership(address)": {
								"notice": "Trasferisce la proprietà del contratto a un nuovo proprietario"
							},
							"updateVRFParams(uint32,uint16)": {
								"notice": "Aggiorna i parametri VRF"
							},
							"withdraw(uint256)": {
								"notice": "Preleva token staked"
							}
						},
						"notice": "Gestisce lo staking di token Q4A con APY variabile basato su VRF Chainlink e volatilità dell'oracolo",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
					"exportedSymbols": {
						"VRFConsumerBaseV2": [
							57
						]
					},
					"id": 58,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "VRFConsumerBaseV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:5275:0",
								"text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."
							},
							"fullyImplemented": false,
							"id": 57,
							"linearizedBaseContracts": [
								57
							],
							"name": "VRFConsumerBaseV2",
							"nameLocation": "5351:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "1cf993f4",
									"id": 8,
									"name": "OnlyCoordinatorCanFulfill",
									"nameLocation": "5379:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "have",
												"nameLocation": "5413:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "5405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "want",
												"nameLocation": "5427:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "5419:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 5,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5404:28:0"
									},
									"src": "5373:60:0"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "immutable",
									"name": "vrfCoordinator",
									"nameLocation": "5462:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 57,
									"src": "5436:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5436:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "5593:43:0",
										"statements": [
											{
												"expression": {
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 16,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "5599:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 17,
														"name": "_vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "5616:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5599:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "5599:32:0"
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "5481:72:0",
										"text": " @param _vrfCoordinator address of VRFCoordinator contract"
									},
									"id": 21,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nameLocation": "5576:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "5568:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5567:25:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5593:0:0"
									},
									"scope": 57,
									"src": "5556:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "5640:686:0",
										"text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"
									},
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "6338:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "6365:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "6357:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "6393:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "6376:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 25,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 26,
													"nodeType": "ArrayTypeName",
													"src": "6376:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:49:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6422:0:0"
									},
									"scope": 57,
									"src": "6329:94:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "6707:167:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 38,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6717:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6721:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6717:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 40,
														"name": "vrfCoordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "6731:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6717:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "IfStatement",
												"src": "6713:109:0",
												"trueBody": {
													"id": 48,
													"nodeType": "Block",
													"src": "6747:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 43,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6788:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6792:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6788:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 45,
																		"name": "vrfCoordinator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "6800:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 42,
																	"name": "OnlyCoordinatorCanFulfill",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "6762:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,address) pure returns (error)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6762:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 47,
															"nodeType": "RevertStatement",
															"src": "6755:60:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 51,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "6846:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 52,
															"name": "randomWords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "6857:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 50,
														"name": "fulfillRandomWords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "6827:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256[] memory)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6827:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "6827:42:0"
											}
										]
									},
									"functionSelector": "1fe543e3",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawFulfillRandomWords",
									"nameLocation": "6627:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "6657:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "6649:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "6685:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "6668:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 33,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 34,
													"nodeType": "ArrayTypeName",
													"src": "6668:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6648:49:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6707:0:0"
									},
									"scope": 57,
									"src": "6618:256:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 58,
							"src": "5333:1543:0",
							"usedErrors": [
								8
							],
							"usedEvents": []
						}
					],
					"src": "32:6845:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 59,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 103,
							"linearizedBaseContracts": [
								103
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:1"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "136:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 61,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:1"
									},
									"scope": 103,
									"src": "93:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "193:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 66,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:1"
									},
									"scope": 103,
									"src": "147:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "254:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:1"
									},
									"scope": 103,
									"src": "212:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "294:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 75,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "337:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 78,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "353:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 80,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "368:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "387:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "406:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 86,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:1"
									},
									"scope": 103,
									"src": "267:163:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:1"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "496:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 91,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "512:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 93,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "527:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "546:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "565:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 99,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:1"
									},
									"scope": 103,
									"src": "434:155:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 104,
							"src": "57:534:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:1"
				},
				"id": 1
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
					"exportedSymbols": {
						"VRFCoordinatorV2Interface": [
							199
						]
					},
					"id": 200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VRFCoordinatorV2Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 199,
							"linearizedBaseContracts": [
								199
							],
							"name": "VRFCoordinatorV2Interface",
							"nameLocation": "67:25:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "97:267:2",
										"text": " @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"
									},
									"functionSelector": "00012291",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRequestConfig",
									"nameLocation": "376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "392:2:2"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "418:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 108,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "418:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "426:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 110,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "426:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "434:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 112,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "434:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 113,
													"nodeType": "ArrayTypeName",
													"src": "434:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:34:2"
									},
									"scope": 199,
									"src": "367:85:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "456:1511:2",
										"text": " @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."
									},
									"functionSelector": "5d3b1d30",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomWords",
									"nameLocation": "1979:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "keyHash",
												"nameLocation": "2011:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2003:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2031:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2024:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 120,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2024:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "minimumRequestConfirmations",
												"nameLocation": "2049:27:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2042:34:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 122,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2042:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "callbackGasLimit",
												"nameLocation": "2089:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2082:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 124,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2082:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "numWords",
												"nameLocation": "2118:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2111:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 126,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2111:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:133:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2157:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2149:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:19:2"
									},
									"scope": 199,
									"src": "1970:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2172:384:2",
										"text": " @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"
									},
									"functionSelector": "a21a23e4",
									"id": 138,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createSubscription",
									"nameLocation": "2568:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:2:2"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "2614:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2607:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 135,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2607:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:14:2"
									},
									"scope": 199,
									"src": "2559:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2625:381:2",
										"text": " @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."
									},
									"functionSelector": "a47c7696",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSubscription",
									"nameLocation": "3018:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3046:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3039:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 140,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3039:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3033:22:2"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "3086:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3079:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 143,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "3079:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "reqCount",
												"nameLocation": "3102:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3095:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 145,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3095:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3120:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3112:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3112:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "consumers",
												"nameLocation": "3144:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3127:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 149,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3127:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 150,
													"nodeType": "ArrayTypeName",
													"src": "3127:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:76:2"
									},
									"scope": 199,
									"src": "3009:146:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3159:164:2",
										"text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"
									},
									"functionSelector": "04c357cb",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestSubscriptionOwnerTransfer",
									"nameLocation": "3335:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3375:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3368:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 155,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3368:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3390:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3382:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3367:32:2"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3408:0:2"
									},
									"scope": 199,
									"src": "3326:83:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3413:212:2",
										"text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."
									},
									"functionSelector": "82359740",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptSubscriptionOwnerTransfer",
									"nameLocation": "3637:31:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3676:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3669:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 163,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3669:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3668:14:2"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:0:2"
									},
									"scope": 199,
									"src": "3628:64:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3696:170:2",
										"text": " @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"
									},
									"functionSelector": "7341c10c",
									"id": 175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addConsumer",
									"nameLocation": "3878:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "3897:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3890:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 169,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3890:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "3912:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3904:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3889:32:2"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3930:0:2"
									},
									"scope": 199,
									"src": "3869:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "3935:172:2",
										"text": " @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"
									},
									"functionSelector": "9f87fad7",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeConsumer",
									"nameLocation": "4119:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4141:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4134:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 177,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4134:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "consumer",
												"nameLocation": "4156:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "4148:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4148:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4133:32:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4174:0:2"
									},
									"scope": 199,
									"src": "4110:65:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "4179:140:2",
										"text": " @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"
									},
									"functionSelector": "d7ae1d30",
									"id": 191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelSubscription",
									"nameLocation": "4331:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4357:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4350:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 185,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4350:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4372:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4364:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4364:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:26:2"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4384:0:2"
									},
									"scope": 199,
									"src": "4322:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e82ad7d4",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingRequestExists",
									"nameLocation": "4690:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "subId",
												"nameLocation": "4718:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 192,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4711:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4710:14:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4748:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 195,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4748:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4747:6:2"
									},
									"scope": 199,
									"src": "4681:73:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 200,
							"src": "57:4699:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:4725:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							550
						],
						"Ownable": [
							347
						]
					},
					"id": 348,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 348,
							"sourceUnit": 551,
							"src": "128:45:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 202,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 550,
										"src": "136:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 205,
										"name": "Context",
										"nameLocations": [
											"692:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 550,
										"src": "692:7:3"
									},
									"id": 206,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 347,
							"linearizedBaseContracts": [
								347,
								550
							],
							"name": "Ownable",
							"nameLocation": "681:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 208,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 347,
									"src": "706:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 207,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:3",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 213,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "858:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:3"
									},
									"src": "825:50:3"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:3",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 218,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "994:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:3"
									},
									"src": "968:41:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 224,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1042:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1073:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:3"
									},
									"src": "1015:84:3"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "1259:153:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 230,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1273:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 231,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 244,
												"nodeType": "IfStatement",
												"src": "1269:95:3",
												"trueBody": {
													"id": 243,
													"nodeType": "Block",
													"src": "1301:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 237,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 236,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1322:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 242,
															"nodeType": "RevertStatement",
															"src": "1315:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "1392:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "1373:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:3"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:3",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 250,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "1237:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:3"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:3"
									},
									"scope": 347,
									"src": "1225:187:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "1521:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 253,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1531:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:3"
											},
											{
												"id": 256,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:3"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 258,
									"name": "onlyOwner",
									"nameLocation": "1509:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:3"
									},
									"src": "1500:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "1693:30:3",
										"statements": [
											{
												"expression": {
													"id": 264,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "1710:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 263,
												"id": 265,
												"nodeType": "Return",
												"src": "1703:13:3"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:3"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1684:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:3"
									},
									"scope": 347,
									"src": "1638:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1841:117:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "1855:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 273,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "1866:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "1851:101:3",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "1880:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 277,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "1928:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 276,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "1901:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "1894:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:3"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:3"
									},
									"scope": 347,
									"src": "1796:162:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "2347:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 291,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 290,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2357:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:3"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 287,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "2337:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:3"
									},
									"scope": 347,
									"src": "2293:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2613:145:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 306,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2627:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 307,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 320,
												"nodeType": "IfStatement",
												"src": "2623:91:3",
												"trueBody": {
													"id": 319,
													"nodeType": "Block",
													"src": "2651:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 313,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 312,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "2672:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 318,
															"nodeType": "RevertStatement",
															"src": "2665:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 322,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "2742:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 321,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2723:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:3"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 303,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "2603:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2570:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:3"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:3"
									},
									"scope": 347,
									"src": "2543:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "2975:124:3",
										"statements": [
											{
												"assignments": [
													333
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "2985:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 332,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 335,
												"initialValue": {
													"id": 334,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "3004:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:3"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 336,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "3020:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 337,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "3029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 341,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "3073:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3083:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 340,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "3052:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "EmitStatement",
												"src": "3047:45:3"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2940:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:3"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:3"
									},
									"scope": 347,
									"src": "2912:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 348,
							"src": "663:2438:3",
							"usedErrors": [
								213,
								218
							],
							"usedEvents": [
								224
							]
						}
					],
					"src": "102:3000:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							550
						],
						"Pausable": [
							455
						]
					},
					"id": 456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 349,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 350,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 456,
							"sourceUnit": 551,
							"src": "131:30:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 352,
										"name": "Context",
										"nameLocations": [
											"633:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 550,
										"src": "633:7:4"
									},
									"id": 353,
									"nodeType": "InheritanceSpecifier",
									"src": "633:7:4"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 351,
								"nodeType": "StructuredDocumentation",
								"src": "163:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 455,
							"linearizedBaseContracts": [
								455,
								550
							],
							"name": "Pausable",
							"nameLocation": "621:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "647:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 358,
									"name": "Paused",
									"nameLocation": "731:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "738:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:4"
									},
									"src": "725:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "761:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 363,
									"name": "Unpaused",
									"nameLocation": "842:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "859:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "851:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:17:4"
									},
									"src": "836:32:4"
								},
								{
									"constant": false,
									"id": 365,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "887:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 455,
									"src": "874:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 364,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "874:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "987:32:4",
										"statements": [
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 369,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "997:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "997:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "997:15:4"
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "901:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 374,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "984:2:4"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:4"
									},
									"scope": 455,
									"src": "973:46:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "1230:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "1240:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "1240:19:4"
											},
											{
												"id": 380,
												"nodeType": "PlaceholderStatement",
												"src": "1269:1:4"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "1025:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 382,
									"name": "whenNotPaused",
									"nameLocation": "1214:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:4"
									},
									"src": "1205:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "1477:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 385,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "1487:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1487:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1487:16:4"
											},
											{
												"id": 388,
												"nodeType": "PlaceholderStatement",
												"src": "1513:1:4"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1283:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 390,
									"name": "whenPaused",
									"nameLocation": "1464:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:4"
									},
									"src": "1455:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "1669:31:4",
										"statements": [
											{
												"expression": {
													"id": 396,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 365,
													"src": "1686:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 395,
												"id": 397,
												"nodeType": "Return",
												"src": "1679:14:4"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1527:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1625:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:4"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1663:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:4"
									},
									"scope": 455,
									"src": "1616:84:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1819:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1837:9:4",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 404,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "1838:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1838:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1848:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1829:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1829:38:4"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "1706:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1777:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:2:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:4"
									},
									"scope": 455,
									"src": "1768:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1994:58:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 416,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 399,
																"src": "2012:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2012:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2022:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2004:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2004:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2004:41:4"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1880:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1955:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1969:2:4"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:0:4"
									},
									"scope": 455,
									"src": "1946:106:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "2236:66:4",
										"statements": [
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 428,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2246:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2256:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2246:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2246:14:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 433,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "2282:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2282:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 432,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "2275:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "EmitStatement",
												"src": "2270:25:4"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "2058:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 425,
												"name": "whenNotPaused",
												"nameLocations": [
													"2222:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 382,
												"src": "2222:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2222:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "2196:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2202:2:4"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2236:0:4"
									},
									"scope": 455,
									"src": "2187:115:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2482:69:4",
										"statements": [
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 444,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "2492:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2502:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2492:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "2492:15:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 449,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "2531:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2531:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 448,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "2522:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2522:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "EmitStatement",
												"src": "2517:27:4"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "2308:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 442,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 441,
												"name": "whenPaused",
												"nameLocations": [
													"2471:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 390,
												"src": "2471:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2471:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "2443:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:4"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2482:0:4"
									},
									"scope": 455,
									"src": "2434:117:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 456,
							"src": "603:1950:4",
							"usedErrors": [],
							"usedEvents": [
								358,
								363
							]
						}
					],
					"src": "105:2449:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							520
						]
					},
					"id": 521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 458,
								"nodeType": "StructuredDocumentation",
								"src": "138:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 520,
							"linearizedBaseContracts": [
								520
							],
							"name": "ReentrancyGuard",
							"nameLocation": "907:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 461,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1702:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 520,
									"src": "1677:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 459,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1677:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1717:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 464,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1749:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 520,
									"src": "1724:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 462,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1724:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 463,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1760:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 466,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1784:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 520,
									"src": "1768:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 465,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "1812:39:5",
										"statements": [
											{
												"expression": {
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 469,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "1822:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 470,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "1832:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1822:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "1822:22:5"
											}
										]
									},
									"id": 474,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:2:5"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1812:0:5"
									},
									"scope": 520,
									"src": "1798:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "2252:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 477,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2262:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "2262:21:5"
											},
											{
												"id": 480,
												"nodeType": "PlaceholderStatement",
												"src": "2293:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 481,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "2304:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2304:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "2304:20:5"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "1857:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 485,
									"name": "nonReentrant",
									"nameLocation": "2237:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:2:5"
									},
									"src": "2228:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2376:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 489,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "2469:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 490,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2480:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2469:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2490:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2461:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2461:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "2461:63:5"
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 495,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2599:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "2609:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2599:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "2599:18:5"
											}
										]
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2346:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2365:2:5"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2376:0:5"
									},
									"scope": 520,
									"src": "2337:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "2668:171:5",
										"statements": [
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2810:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 504,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2820:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2810:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2810:22:5"
											}
										]
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2639:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2657:2:5"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:5"
									},
									"scope": 520,
									"src": "2630:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3082:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 514,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "3099:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 515,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "3110:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3099:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 513,
												"id": 517,
												"nodeType": "Return",
												"src": "3092:26:5"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2845:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3027:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:2:5"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3076:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 511,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:5"
									},
									"scope": 520,
									"src": "3018:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 521,
							"src": "889:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3016:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							550
						]
					},
					"id": 551,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 523,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 550,
							"linearizedBaseContracts": [
								550
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 528,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 527,
												"id": 530,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 550,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 537,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 536,
												"id": 539,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 550,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 545,
												"id": 547,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 550,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 551,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							2315
						]
					},
					"id": 2316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 552,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 553,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:7",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 2315,
							"linearizedBaseContracts": [
								2315
							],
							"name": "SafeCast",
							"nameLocation": "777:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:7",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 560,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "902:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 555,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "914:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:7"
									},
									"src": "865:64:7"
								},
								{
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:7",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 565,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "1049:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 562,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:7"
									},
									"src": "1015:48:7"
								},
								{
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:7",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 572,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1177:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 567,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "1189:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 569,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:7"
									},
									"src": "1141:62:7"
								},
								{
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:7",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 577,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "1323:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:7"
									},
									"src": "1289:49:7"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "1695:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 585,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "1709:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 587,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 586,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "1705:105:7",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "1736:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 594,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "1793:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 592,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "1757:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 596,
															"nodeType": "RevertStatement",
															"src": "1750:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "1834:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 599,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 584,
												"id": 603,
												"nodeType": "Return",
												"src": "1819:21:7"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:7",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1648:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:7"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "1686:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 582,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:7"
									},
									"scope": 2315,
									"src": "1629:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "2204:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 613,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "2218:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 614,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "2214:105:7",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "2245:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 622,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "2302:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 620,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "2266:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 624,
															"nodeType": "RevertStatement",
															"src": "2259:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "2343:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 627,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 612,
												"id": 631,
												"nodeType": "Return",
												"src": "2328:21:7"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:7",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2157:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:7"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "2195:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 610,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:7"
									},
									"scope": 2315,
									"src": "2138:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "2713:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 641,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "2727:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 643,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 642,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 654,
												"nodeType": "IfStatement",
												"src": "2723:105:7",
												"trueBody": {
													"id": 653,
													"nodeType": "Block",
													"src": "2754:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 650,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "2811:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 648,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "2775:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 652,
															"nodeType": "RevertStatement",
															"src": "2768:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "2852:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 655,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 640,
												"id": 659,
												"nodeType": "Return",
												"src": "2837:21:7"
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:7",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2666:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:7"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "2704:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 638,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:7"
									},
									"scope": 2315,
									"src": "2647:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "3222:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 669,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "3236:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 671,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 670,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "IfStatement",
												"src": "3232:105:7",
												"trueBody": {
													"id": 681,
													"nodeType": "Block",
													"src": "3263:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 678,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "3320:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 676,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "3284:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 680,
															"nodeType": "RevertStatement",
															"src": "3277:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "3361:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 683,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 668,
												"id": 687,
												"nodeType": "Return",
												"src": "3346:21:7"
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:7",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3175:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:7"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "3213:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 666,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:7"
									},
									"scope": 2315,
									"src": "3156:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "3731:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 697,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "3745:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 699,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 698,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 710,
												"nodeType": "IfStatement",
												"src": "3741:105:7",
												"trueBody": {
													"id": 709,
													"nodeType": "Block",
													"src": "3772:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 706,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "3829:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 704,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "3793:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 708,
															"nodeType": "RevertStatement",
															"src": "3786:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 713,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "3870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 711,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 696,
												"id": 715,
												"nodeType": "Return",
												"src": "3855:21:7"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:7",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:7"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3722:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 694,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:7"
									},
									"scope": 2315,
									"src": "3665:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "4240:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 725,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "4254:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 727,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 726,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "4250:105:7",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "4281:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 734,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 720,
																		"src": "4338:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 732,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "4302:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 736,
															"nodeType": "RevertStatement",
															"src": "4295:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 741,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "4379:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 739,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 724,
												"id": 743,
												"nodeType": "Return",
												"src": "4364:21:7"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:7",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "4193:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:7"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "4231:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 722,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:7"
									},
									"scope": 2315,
									"src": "4174:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "4749:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 753,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "4763:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 755,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 754,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 766,
												"nodeType": "IfStatement",
												"src": "4759:105:7",
												"trueBody": {
													"id": 765,
													"nodeType": "Block",
													"src": "4790:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 762,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "4847:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 760,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "4811:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 764,
															"nodeType": "RevertStatement",
															"src": "4804:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4888:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 767,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 752,
												"id": 771,
												"nodeType": "Return",
												"src": "4873:21:7"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:7",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "4702:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:7"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "4740:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 750,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:7"
									},
									"scope": 2315,
									"src": "4683:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "5258:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 781,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "5272:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 783,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 782,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"nodeType": "IfStatement",
												"src": "5268:105:7",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "5299:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 790,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "5356:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 788,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "5320:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 792,
															"nodeType": "RevertStatement",
															"src": "5313:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 797,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "5397:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 795,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 780,
												"id": 799,
												"nodeType": "Return",
												"src": "5382:21:7"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:7",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5211:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:7"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "5249:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 778,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:7"
									},
									"scope": 2315,
									"src": "5192:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "5767:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "5781:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 810,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 822,
												"nodeType": "IfStatement",
												"src": "5777:105:7",
												"trueBody": {
													"id": 821,
													"nodeType": "Block",
													"src": "5808:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 818,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "5865:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 816,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "5829:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 820,
															"nodeType": "RevertStatement",
															"src": "5822:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 825,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "5906:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 823,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 808,
												"id": 827,
												"nodeType": "Return",
												"src": "5891:21:7"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:7",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "5720:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:7"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "5758:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 806,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:7"
									},
									"scope": 2315,
									"src": "5701:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "6276:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 837,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "6290:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 839,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 838,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "6286:105:7",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "6317:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 846,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "6374:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 844,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "6338:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "6331:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "6415:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 851,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 836,
												"id": 855,
												"nodeType": "Return",
												"src": "6400:21:7"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:7",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "6229:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:7"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "6267:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 834,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:7"
									},
									"scope": 2315,
									"src": "6210:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "6785:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 865,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "6799:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 867,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 866,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 878,
												"nodeType": "IfStatement",
												"src": "6795:105:7",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "6826:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 874,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "6883:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 872,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "6847:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 876,
															"nodeType": "RevertStatement",
															"src": "6840:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "6924:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 879,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 864,
												"id": 883,
												"nodeType": "Return",
												"src": "6909:21:7"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:7",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:7"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6776:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 862,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:7"
									},
									"scope": 2315,
									"src": "6719:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "7294:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 893,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "7308:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 895,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 894,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 906,
												"nodeType": "IfStatement",
												"src": "7304:105:7",
												"trueBody": {
													"id": 905,
													"nodeType": "Block",
													"src": "7335:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 902,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "7392:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 900,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "7356:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 904,
															"nodeType": "RevertStatement",
															"src": "7349:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "7433:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 907,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 892,
												"id": 911,
												"nodeType": "Return",
												"src": "7418:21:7"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:7",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "7247:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:7"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "7285:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 890,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:7"
									},
									"scope": 2315,
									"src": "7228:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "7803:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 921,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "7817:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 923,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 922,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 934,
												"nodeType": "IfStatement",
												"src": "7813:105:7",
												"trueBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "7844:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 930,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "7901:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 928,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "7865:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 932,
															"nodeType": "RevertStatement",
															"src": "7858:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 937,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "7942:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 935,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 920,
												"id": 939,
												"nodeType": "Return",
												"src": "7927:21:7"
											}
										]
									},
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:7",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "7756:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:7"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "7794:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 918,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:7"
									},
									"scope": 2315,
									"src": "7737:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "8312:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 949,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "8326:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 951,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 950,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "8322:105:7",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "8353:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 958,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "8410:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 956,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "8374:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "8367:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "8451:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 963,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 948,
												"id": 967,
												"nodeType": "Return",
												"src": "8436:21:7"
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:7",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8265:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:7"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "8303:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 946,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:7"
									},
									"scope": 2315,
									"src": "8246:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "8821:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 977,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "8835:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 979,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 978,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 990,
												"nodeType": "IfStatement",
												"src": "8831:105:7",
												"trueBody": {
													"id": 989,
													"nodeType": "Block",
													"src": "8862:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 986,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "8919:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 984,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "8883:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 988,
															"nodeType": "RevertStatement",
															"src": "8876:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 993,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "8960:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 991,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 976,
												"id": 995,
												"nodeType": "Return",
												"src": "8945:21:7"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:7",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "8774:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:7"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "8812:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 974,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:7"
									},
									"scope": 2315,
									"src": "8755:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "9330:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "9344:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1007,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 1006,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "IfStatement",
												"src": "9340:105:7",
												"trueBody": {
													"id": 1017,
													"nodeType": "Block",
													"src": "9371:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 1014,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "9428:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1012,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "9392:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1016,
															"nodeType": "RevertStatement",
															"src": "9385:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "9469:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 1019,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1023,
												"nodeType": "Return",
												"src": "9454:21:7"
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:7",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "9283:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:7"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "9321:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1002,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:7"
									},
									"scope": 2315,
									"src": "9264:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "9839:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1033,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "9853:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 1035,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 1034,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "IfStatement",
												"src": "9849:105:7",
												"trueBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "9880:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 1041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 1042,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "9937:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1040,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "9901:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1044,
															"nodeType": "RevertStatement",
															"src": "9894:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "9978:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 1047,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1051,
												"nodeType": "Return",
												"src": "9963:21:7"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:7",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 1053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "9792:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:7"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "9830:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 1030,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:7"
									},
									"scope": 2315,
									"src": "9773:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "10348:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "10362:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 1063,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 1062,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "10358:105:7",
												"trueBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "10389:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 1070,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "10446:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1068,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "10410:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1072,
															"nodeType": "RevertStatement",
															"src": "10403:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1077,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "10487:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 1075,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 1060,
												"id": 1079,
												"nodeType": "Return",
												"src": "10472:21:7"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:7",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "10301:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:7"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "10339:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 1058,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:7"
									},
									"scope": 2315,
									"src": "10282:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "10857:152:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1089,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "10871:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 1091,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 1090,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "10867:105:7",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "10898:74:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 1098,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "10955:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1096,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "10919:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1100,
															"nodeType": "RevertStatement",
															"src": "10912:49:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "10996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 1103,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 1088,
												"id": 1107,
												"nodeType": "Return",
												"src": "10981:21:7"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:7",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "10810:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:7"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "10848:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 1086,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:7"
									},
									"scope": 2315,
									"src": "10791:218:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "11360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1117,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "11374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 1119,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 1118,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1130,
												"nodeType": "IfStatement",
												"src": "11370:103:7",
												"trueBody": {
													"id": 1129,
													"nodeType": "Block",
													"src": "11400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 1126,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1112,
																		"src": "11456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1124,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "11421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1128,
															"nodeType": "RevertStatement",
															"src": "11414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1133,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "11496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 1131,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 1116,
												"id": 1135,
												"nodeType": "Return",
												"src": "11482:20:7"
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:7",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "11314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:7"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "11352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1114,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:7"
									},
									"scope": 2315,
									"src": "11296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "11860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1145,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "11874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 1147,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 1146,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1158,
												"nodeType": "IfStatement",
												"src": "11870:103:7",
												"trueBody": {
													"id": 1157,
													"nodeType": "Block",
													"src": "11900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 1154,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1140,
																		"src": "11956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1152,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "11921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1156,
															"nodeType": "RevertStatement",
															"src": "11914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1161,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "11996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 1159,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 1144,
												"id": 1163,
												"nodeType": "Return",
												"src": "11982:20:7"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:7",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "11814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:7"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "11852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 1142,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:7"
									},
									"scope": 2315,
									"src": "11796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "12360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1173,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "12374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 1175,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 1174,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "12370:103:7",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "12400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 1182,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "12456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1180,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "12421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1184,
															"nodeType": "RevertStatement",
															"src": "12414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "12496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 1187,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 1172,
												"id": 1191,
												"nodeType": "Return",
												"src": "12482:20:7"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:7",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "12314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:7"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "12352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 1170,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:7"
									},
									"scope": 2315,
									"src": "12296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "12860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1201,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "12874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 1203,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 1202,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "12870:103:7",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "12900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 1210,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "12956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1208,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "12921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1212,
															"nodeType": "RevertStatement",
															"src": "12914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "12996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 1215,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1219,
												"nodeType": "Return",
												"src": "12982:20:7"
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:7",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "12814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "12852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 1198,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:7"
									},
									"scope": 2315,
									"src": "12796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "13360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1229,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "13374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 1231,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 1230,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1242,
												"nodeType": "IfStatement",
												"src": "13370:103:7",
												"trueBody": {
													"id": 1241,
													"nodeType": "Block",
													"src": "13400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 1238,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "13456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1236,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "13421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1240,
															"nodeType": "RevertStatement",
															"src": "13414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1245,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "13496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1243,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1247,
												"nodeType": "Return",
												"src": "13482:20:7"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:7",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "13314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:7"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "13352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1226,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:7"
									},
									"scope": 2315,
									"src": "13296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "13860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1257,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "13874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 1259,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 1258,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1270,
												"nodeType": "IfStatement",
												"src": "13870:103:7",
												"trueBody": {
													"id": 1269,
													"nodeType": "Block",
													"src": "13900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 1266,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1252,
																		"src": "13956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1264,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "13921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1268,
															"nodeType": "RevertStatement",
															"src": "13914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1273,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "13996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 1271,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 1256,
												"id": 1275,
												"nodeType": "Return",
												"src": "13982:20:7"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:7",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "13814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:7"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "13852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 1254,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:7"
									},
									"scope": 2315,
									"src": "13796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "14360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1285,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "14374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 1287,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 1286,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1298,
												"nodeType": "IfStatement",
												"src": "14370:103:7",
												"trueBody": {
													"id": 1297,
													"nodeType": "Block",
													"src": "14400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 1294,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "14456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1292,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "14421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1296,
															"nodeType": "RevertStatement",
															"src": "14414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "14496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 1299,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1303,
												"nodeType": "Return",
												"src": "14482:20:7"
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:7",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "14314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "14352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1282,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:7"
									},
									"scope": 2315,
									"src": "14296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "14860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1313,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "14874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 1315,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 1314,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1326,
												"nodeType": "IfStatement",
												"src": "14870:103:7",
												"trueBody": {
													"id": 1325,
													"nodeType": "Block",
													"src": "14900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 1322,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "14956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1320,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "14921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1324,
															"nodeType": "RevertStatement",
															"src": "14914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1329,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "14996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 1327,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 1312,
												"id": 1331,
												"nodeType": "Return",
												"src": "14982:20:7"
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:7",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "14814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:7"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "14852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 1310,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:7"
									},
									"scope": 2315,
									"src": "14796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "15360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1341,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "15374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 1343,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 1342,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "IfStatement",
												"src": "15370:103:7",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "15400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 1350,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "15456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1348,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "15421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1352,
															"nodeType": "RevertStatement",
															"src": "15414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1357,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "15496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1355,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1359,
												"nodeType": "Return",
												"src": "15482:20:7"
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:7",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "15314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:7"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "15352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1338,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:7"
									},
									"scope": 2315,
									"src": "15296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "15860:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1369,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "15874:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 1371,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 1370,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1382,
												"nodeType": "IfStatement",
												"src": "15870:103:7",
												"trueBody": {
													"id": 1381,
													"nodeType": "Block",
													"src": "15900:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 1378,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1364,
																		"src": "15956:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1376,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "15921:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1380,
															"nodeType": "RevertStatement",
															"src": "15914:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1385,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "15996:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1383,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 1368,
												"id": 1387,
												"nodeType": "Return",
												"src": "15982:20:7"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:7",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "15814:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:7"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "15852:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1366,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:7"
									},
									"scope": 2315,
									"src": "15796:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "16360:149:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1397,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "16374:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 1399,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 1398,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1410,
												"nodeType": "IfStatement",
												"src": "16370:103:7",
												"trueBody": {
													"id": 1409,
													"nodeType": "Block",
													"src": "16400:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 1406,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "16456:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1404,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "16421:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1408,
															"nodeType": "RevertStatement",
															"src": "16414:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1413,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "16496:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 1411,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1396,
												"id": 1415,
												"nodeType": "Return",
												"src": "16482:20:7"
											}
										]
									},
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:7",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "16314:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:7"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "16352:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1394,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:7"
									},
									"scope": 2315,
									"src": "16296:213:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "16854:146:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1425,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "16868:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1427,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 1426,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1438,
												"nodeType": "IfStatement",
												"src": "16864:101:7",
												"trueBody": {
													"id": 1437,
													"nodeType": "Block",
													"src": "16893:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 1434,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1420,
																		"src": "16948:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1432,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "16914:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1436,
															"nodeType": "RevertStatement",
															"src": "16907:47:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1441,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "16987:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1439,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:7",
															"typeDescriptions": {}
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1443,
												"nodeType": "Return",
												"src": "16974:19:7"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:7",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "16809:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:7"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "16847:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:7"
									},
									"scope": 2315,
									"src": "16792:208:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "17236:128:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1453,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "17250:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1461,
												"nodeType": "IfStatement",
												"src": "17246:81:7",
												"trueBody": {
													"id": 1460,
													"nodeType": "Block",
													"src": "17261:66:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1457,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1448,
																		"src": "17310:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1456,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "17282:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1459,
															"nodeType": "RevertStatement",
															"src": "17275:41:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1464,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "17351:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:7",
															"typeDescriptions": {}
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1452,
												"id": 1466,
												"nodeType": "Return",
												"src": "17336:21:7"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:7",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "17190:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1447,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:7"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "17227:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:7"
									},
									"scope": 2315,
									"src": "17171:193:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "17761:150:7",
										"statements": [
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1476,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "17771:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1479,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "17791:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 1477,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1483,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "17811:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1484,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "17825:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1492,
												"nodeType": "IfStatement",
												"src": "17807:98:7",
												"trueBody": {
													"id": 1491,
													"nodeType": "Block",
													"src": "17832:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 1487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 1488,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1471,
																		"src": "17888:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1486,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "17853:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1490,
															"nodeType": "RevertStatement",
															"src": "17846:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:7",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "17705:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1470,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:7"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "17742:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 1473,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:7"
									},
									"scope": 2315,
									"src": "17687:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "18308:150:7",
										"statements": [
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1502,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "18318:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "18338:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 1503,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1509,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1500,
														"src": "18358:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1510,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "18372:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"nodeType": "IfStatement",
												"src": "18354:98:7",
												"trueBody": {
													"id": 1517,
													"nodeType": "Block",
													"src": "18379:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 1514,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "18435:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1512,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "18400:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1516,
															"nodeType": "RevertStatement",
															"src": "18393:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:7",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "18252:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1496,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:7"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "18289:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 1499,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:7"
									},
									"scope": 2315,
									"src": "18234:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "18855:150:7",
										"statements": [
											{
												"expression": {
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1528,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "18865:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1531,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1523,
																"src": "18885:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 1529,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1535,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "18905:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1536,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "18919:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1544,
												"nodeType": "IfStatement",
												"src": "18901:98:7",
												"trueBody": {
													"id": 1543,
													"nodeType": "Block",
													"src": "18926:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 1540,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "18982:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1538,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "18947:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1542,
															"nodeType": "RevertStatement",
															"src": "18940:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1521,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:7",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "18799:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1522,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:7"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "18836:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 1525,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:7"
									},
									"scope": 2315,
									"src": "18781:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "19402:150:7",
										"statements": [
											{
												"expression": {
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1554,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "19412:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1557,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1549,
																"src": "19432:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 1555,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 1560,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1561,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "19452:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1562,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "19466:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1570,
												"nodeType": "IfStatement",
												"src": "19448:98:7",
												"trueBody": {
													"id": 1569,
													"nodeType": "Block",
													"src": "19473:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 1566,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1549,
																		"src": "19529:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1564,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "19494:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1568,
															"nodeType": "RevertStatement",
															"src": "19487:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:7",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "19346:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1548,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:7"
									},
									"returnParameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "19383:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 1551,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:7"
									},
									"scope": 2315,
									"src": "19328:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "19949:150:7",
										"statements": [
											{
												"expression": {
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1580,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "19959:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1583,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "19979:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 1581,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 1586,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1587,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "19999:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1588,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "20013:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1596,
												"nodeType": "IfStatement",
												"src": "19995:98:7",
												"trueBody": {
													"id": 1595,
													"nodeType": "Block",
													"src": "20020:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 1592,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1575,
																		"src": "20076:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1590,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "20041:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1594,
															"nodeType": "RevertStatement",
															"src": "20034:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:7",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "19893:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1574,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:7"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "19930:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 1577,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:7"
									},
									"scope": 2315,
									"src": "19875:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "20496:150:7",
										"statements": [
											{
												"expression": {
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1606,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "20506:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1609,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "20526:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 1607,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1613,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "20546:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1614,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "20560:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1622,
												"nodeType": "IfStatement",
												"src": "20542:98:7",
												"trueBody": {
													"id": 1621,
													"nodeType": "Block",
													"src": "20567:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 1618,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "20623:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1616,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "20588:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1620,
															"nodeType": "RevertStatement",
															"src": "20581:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:7",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "20440:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1600,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:7"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "20477:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 1603,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:7"
									},
									"scope": 2315,
									"src": "20422:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "21043:150:7",
										"statements": [
											{
												"expression": {
													"id": 1637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1632,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "21053:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1635,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "21073:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 1633,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 1638,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1639,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "21093:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1640,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "21107:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1648,
												"nodeType": "IfStatement",
												"src": "21089:98:7",
												"trueBody": {
													"id": 1647,
													"nodeType": "Block",
													"src": "21114:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 1644,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "21170:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1642,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "21135:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1646,
															"nodeType": "RevertStatement",
															"src": "21128:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:7",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "20987:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1626,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:7"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "21024:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 1629,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:7"
									},
									"scope": 2315,
									"src": "20969:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "21590:150:7",
										"statements": [
											{
												"expression": {
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1658,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "21600:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1661,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "21620:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 1659,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1665,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1656,
														"src": "21640:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1666,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "21654:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1674,
												"nodeType": "IfStatement",
												"src": "21636:98:7",
												"trueBody": {
													"id": 1673,
													"nodeType": "Block",
													"src": "21661:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 1670,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "21717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1668,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "21682:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1672,
															"nodeType": "RevertStatement",
															"src": "21675:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:7",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "21534:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1652,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:7"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "21571:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 1655,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:7"
									},
									"scope": 2315,
									"src": "21516:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1701,
										"nodeType": "Block",
										"src": "22137:150:7",
										"statements": [
											{
												"expression": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1684,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "22147:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1687,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1679,
																"src": "22167:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 1685,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "22187:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1692,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1679,
														"src": "22201:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"nodeType": "IfStatement",
												"src": "22183:98:7",
												"trueBody": {
													"id": 1699,
													"nodeType": "Block",
													"src": "22208:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 1696,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1679,
																		"src": "22264:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1694,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "22229:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1698,
															"nodeType": "RevertStatement",
															"src": "22222:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:7",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 1702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "22081:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1678,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:7"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "22118:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 1681,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:7"
									},
									"scope": 2315,
									"src": "22063:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1727,
										"nodeType": "Block",
										"src": "22684:150:7",
										"statements": [
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1710,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "22694:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1713,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "22714:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 1711,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1717,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "22734:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1718,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1705,
														"src": "22748:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1726,
												"nodeType": "IfStatement",
												"src": "22730:98:7",
												"trueBody": {
													"id": 1725,
													"nodeType": "Block",
													"src": "22755:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 1722,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "22811:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1720,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "22776:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1724,
															"nodeType": "RevertStatement",
															"src": "22769:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:7",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 1728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "22628:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1704,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:7"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1728,
												"src": "22665:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 1707,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:7"
									},
									"scope": 2315,
									"src": "22610:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "23231:150:7",
										"statements": [
											{
												"expression": {
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1736,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "23241:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1739,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "23261:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 1737,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1743,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1734,
														"src": "23281:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1744,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "23295:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1752,
												"nodeType": "IfStatement",
												"src": "23277:98:7",
												"trueBody": {
													"id": 1751,
													"nodeType": "Block",
													"src": "23302:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 1748,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "23358:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1746,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "23323:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1750,
															"nodeType": "RevertStatement",
															"src": "23316:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:7",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "23175:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1730,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:7"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "23212:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 1733,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:7"
									},
									"scope": 2315,
									"src": "23157:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "23778:150:7",
										"statements": [
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1762,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "23788:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1765,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1757,
																"src": "23808:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 1763,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1769,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "23828:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1770,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "23842:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1778,
												"nodeType": "IfStatement",
												"src": "23824:98:7",
												"trueBody": {
													"id": 1777,
													"nodeType": "Block",
													"src": "23849:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 1774,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1757,
																		"src": "23905:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1772,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "23870:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1776,
															"nodeType": "RevertStatement",
															"src": "23863:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:7",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "23722:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1756,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:7"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "23759:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 1759,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:7"
									},
									"scope": 2315,
									"src": "23704:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "24325:150:7",
										"statements": [
											{
												"expression": {
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1788,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "24335:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1791,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "24355:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 1789,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "24375:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1796,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "24389:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1804,
												"nodeType": "IfStatement",
												"src": "24371:98:7",
												"trueBody": {
													"id": 1803,
													"nodeType": "Block",
													"src": "24396:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 1800,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1783,
																		"src": "24452:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1798,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "24417:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1802,
															"nodeType": "RevertStatement",
															"src": "24410:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:7",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "24269:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1782,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:7"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "24306:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 1785,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:7"
									},
									"scope": 2315,
									"src": "24251:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "24872:150:7",
										"statements": [
											{
												"expression": {
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1814,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "24882:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1817,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "24902:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 1815,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 1820,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1821,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "24922:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1822,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "24936:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1830,
												"nodeType": "IfStatement",
												"src": "24918:98:7",
												"trueBody": {
													"id": 1829,
													"nodeType": "Block",
													"src": "24943:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 1826,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "24999:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1824,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "24964:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1828,
															"nodeType": "RevertStatement",
															"src": "24957:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:7",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "24816:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1808,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:7"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "24853:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 1811,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:7"
									},
									"scope": 2315,
									"src": "24798:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "25419:150:7",
										"statements": [
											{
												"expression": {
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1840,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "25429:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1843,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "25449:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 1841,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1847,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "25469:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1848,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "25483:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1856,
												"nodeType": "IfStatement",
												"src": "25465:98:7",
												"trueBody": {
													"id": 1855,
													"nodeType": "Block",
													"src": "25490:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 1852,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "25546:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1850,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "25511:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1854,
															"nodeType": "RevertStatement",
															"src": "25504:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:7",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "25363:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1834,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:7"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "25400:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 1837,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:7"
									},
									"scope": 2315,
									"src": "25345:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "25966:150:7",
										"statements": [
											{
												"expression": {
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1866,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "25976:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1869,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "25996:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 1867,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1873,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "26016:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1874,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "26030:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1882,
												"nodeType": "IfStatement",
												"src": "26012:98:7",
												"trueBody": {
													"id": 1881,
													"nodeType": "Block",
													"src": "26037:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 1877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 1878,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1861,
																		"src": "26093:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1876,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "26058:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1880,
															"nodeType": "RevertStatement",
															"src": "26051:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:7",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "25910:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1860,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:7"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "25947:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1863,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:7"
									},
									"scope": 2315,
									"src": "25892:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "26513:150:7",
										"statements": [
											{
												"expression": {
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1892,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "26523:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1887,
																"src": "26543:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 1893,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 1898,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1899,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "26563:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1900,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "26577:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1908,
												"nodeType": "IfStatement",
												"src": "26559:98:7",
												"trueBody": {
													"id": 1907,
													"nodeType": "Block",
													"src": "26584:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 1904,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1887,
																		"src": "26640:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1902,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "26605:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1906,
															"nodeType": "RevertStatement",
															"src": "26598:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:7",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "26457:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1886,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:7"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "26494:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 1889,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:7"
									},
									"scope": 2315,
									"src": "26439:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "27060:150:7",
										"statements": [
											{
												"expression": {
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1918,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "27070:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1921,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "27090:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 1919,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1925,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "27110:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1926,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "27124:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1934,
												"nodeType": "IfStatement",
												"src": "27106:98:7",
												"trueBody": {
													"id": 1933,
													"nodeType": "Block",
													"src": "27131:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 1930,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "27187:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1928,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "27152:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1932,
															"nodeType": "RevertStatement",
															"src": "27145:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:7",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "27004:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1912,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:7"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "27041:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 1915,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:7"
									},
									"scope": 2315,
									"src": "26986:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "27607:150:7",
										"statements": [
											{
												"expression": {
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1944,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "27617:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1947,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1939,
																"src": "27637:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 1945,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:7",
																"typeDescriptions": {}
															}
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 1950,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1951,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "27657:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1952,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1939,
														"src": "27671:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1960,
												"nodeType": "IfStatement",
												"src": "27653:98:7",
												"trueBody": {
													"id": 1959,
													"nodeType": "Block",
													"src": "27678:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 1955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 1956,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1939,
																		"src": "27734:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1954,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "27699:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1958,
															"nodeType": "RevertStatement",
															"src": "27692:48:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1937,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:7",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "27551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1938,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:7"
									},
									"returnParameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "27588:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 1941,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:7"
									},
									"scope": 2315,
									"src": "27533:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "28147:148:7",
										"statements": [
											{
												"expression": {
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1970,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "28157:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1973,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "28176:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 1971,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 1976,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1977,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "28196:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1978,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "28210:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "28192:97:7",
												"trueBody": {
													"id": 1985,
													"nodeType": "Block",
													"src": "28217:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 1982,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1965,
																		"src": "28272:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1980,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "28238:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1984,
															"nodeType": "RevertStatement",
															"src": "28231:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:7",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "28092:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1964,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:7"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "28129:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 1967,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:7"
									},
									"scope": 2315,
									"src": "28075:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2013,
										"nodeType": "Block",
										"src": "28685:148:7",
										"statements": [
											{
												"expression": {
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1996,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "28695:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1999,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "28714:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 1997,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2003,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "28734:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2004,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1991,
														"src": "28748:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2012,
												"nodeType": "IfStatement",
												"src": "28730:97:7",
												"trueBody": {
													"id": 2011,
													"nodeType": "Block",
													"src": "28755:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 2008,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1991,
																		"src": "28810:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2006,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "28776:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2010,
															"nodeType": "RevertStatement",
															"src": "28769:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:7",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 2014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "28630:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1990,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:7"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2014,
												"src": "28667:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 1993,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:7"
									},
									"scope": 2315,
									"src": "28613:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "29223:148:7",
										"statements": [
											{
												"expression": {
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2022,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "29233:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2025,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2017,
																"src": "29252:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 2023,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2029,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "29272:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2030,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2017,
														"src": "29286:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2038,
												"nodeType": "IfStatement",
												"src": "29268:97:7",
												"trueBody": {
													"id": 2037,
													"nodeType": "Block",
													"src": "29293:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 2033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 2034,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2017,
																		"src": "29348:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2032,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "29314:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2036,
															"nodeType": "RevertStatement",
															"src": "29307:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2015,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:7",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "29168:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2016,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:7"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "29205:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 2019,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:7"
									},
									"scope": 2315,
									"src": "29151:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "29761:148:7",
										"statements": [
											{
												"expression": {
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2048,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "29771:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2051,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2043,
																"src": "29790:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 2049,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 2054,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2055,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "29810:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2056,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "29824:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2064,
												"nodeType": "IfStatement",
												"src": "29806:97:7",
												"trueBody": {
													"id": 2063,
													"nodeType": "Block",
													"src": "29831:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 2059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 2060,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2043,
																		"src": "29886:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2058,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "29852:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2062,
															"nodeType": "RevertStatement",
															"src": "29845:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:7",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "29706:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2042,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:7"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "29743:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 2045,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:7"
									},
									"scope": 2315,
									"src": "29689:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "30299:148:7",
										"statements": [
											{
												"expression": {
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2074,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "30309:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2077,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2069,
																"src": "30328:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 2075,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2081,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2072,
														"src": "30348:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2082,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2069,
														"src": "30362:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2090,
												"nodeType": "IfStatement",
												"src": "30344:97:7",
												"trueBody": {
													"id": 2089,
													"nodeType": "Block",
													"src": "30369:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 2085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 2086,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2069,
																		"src": "30424:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2084,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "30390:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2088,
															"nodeType": "RevertStatement",
															"src": "30383:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2067,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:7",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "30244:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2068,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:7"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "30281:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2071,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:7"
									},
									"scope": 2315,
									"src": "30227:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "30837:148:7",
										"statements": [
											{
												"expression": {
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2100,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "30847:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2103,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "30866:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 2101,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 2106,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2107,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "30886:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2108,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "30900:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2116,
												"nodeType": "IfStatement",
												"src": "30882:97:7",
												"trueBody": {
													"id": 2115,
													"nodeType": "Block",
													"src": "30907:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 2112,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "30962:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2110,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "30928:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2114,
															"nodeType": "RevertStatement",
															"src": "30921:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:7",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "30782:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2094,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:7"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "30819:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 2097,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:7"
									},
									"scope": 2315,
									"src": "30765:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2143,
										"nodeType": "Block",
										"src": "31375:148:7",
										"statements": [
											{
												"expression": {
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2126,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "31385:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2129,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "31404:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 2127,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 2132,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2133,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2124,
														"src": "31424:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2134,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2121,
														"src": "31438:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2142,
												"nodeType": "IfStatement",
												"src": "31420:97:7",
												"trueBody": {
													"id": 2141,
													"nodeType": "Block",
													"src": "31445:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 2137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 2138,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "31500:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2136,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "31466:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2140,
															"nodeType": "RevertStatement",
															"src": "31459:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:7",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 2144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "31320:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2120,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:7"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "31357:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 2123,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:7"
									},
									"scope": 2315,
									"src": "31303:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "31913:148:7",
										"statements": [
											{
												"expression": {
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2152,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "31923:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2155,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2147,
																"src": "31942:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 2153,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 2158,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2159,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "31962:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2160,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2147,
														"src": "31976:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2168,
												"nodeType": "IfStatement",
												"src": "31958:97:7",
												"trueBody": {
													"id": 2167,
													"nodeType": "Block",
													"src": "31983:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 2164,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "32038:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2162,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "32004:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2166,
															"nodeType": "RevertStatement",
															"src": "31997:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2145,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:7",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "31858:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2146,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:7"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "31895:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 2149,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:7"
									},
									"scope": 2315,
									"src": "31841:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "32451:148:7",
										"statements": [
											{
												"expression": {
													"id": 2183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2178,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "32461:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "32480:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 2179,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 2184,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2185,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "32500:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2186,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2173,
														"src": "32514:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2194,
												"nodeType": "IfStatement",
												"src": "32496:97:7",
												"trueBody": {
													"id": 2193,
													"nodeType": "Block",
													"src": "32521:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 2190,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2173,
																		"src": "32576:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2188,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "32542:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2192,
															"nodeType": "RevertStatement",
															"src": "32535:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2171,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:7",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "32396:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2172,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:7"
									},
									"returnParameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "32433:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 2175,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:7"
									},
									"scope": 2315,
									"src": "32379:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2221,
										"nodeType": "Block",
										"src": "32989:148:7",
										"statements": [
											{
												"expression": {
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2204,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "32999:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2207,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "33018:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 2205,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2211,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "33038:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2212,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "33052:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2220,
												"nodeType": "IfStatement",
												"src": "33034:97:7",
												"trueBody": {
													"id": 2219,
													"nodeType": "Block",
													"src": "33059:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 2216,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2199,
																		"src": "33114:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2214,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "33080:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2218,
															"nodeType": "RevertStatement",
															"src": "33073:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:7",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 2222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "32934:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2198,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:7"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "32971:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2201,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:7"
									},
									"scope": 2315,
									"src": "32917:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "33527:148:7",
										"statements": [
											{
												"expression": {
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2230,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "33537:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2233,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2225,
																"src": "33556:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 2231,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:7",
																"typeDescriptions": {}
															}
														},
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 2236,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2237,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "33576:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2238,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "33590:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2246,
												"nodeType": "IfStatement",
												"src": "33572:97:7",
												"trueBody": {
													"id": 2245,
													"nodeType": "Block",
													"src": "33597:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 2242,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "33652:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2240,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "33618:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2244,
															"nodeType": "RevertStatement",
															"src": "33611:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2223,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:7",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "33472:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2224,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:7"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "33509:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 2227,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:7"
									},
									"scope": 2315,
									"src": "33455:220:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "34058:146:7",
										"statements": [
											{
												"expression": {
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2256,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2254,
														"src": "34068:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2259,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "34086:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 2257,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:7",
																"typeDescriptions": {}
															}
														},
														"id": 2260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2263,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2254,
														"src": "34106:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2264,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2251,
														"src": "34120:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2272,
												"nodeType": "IfStatement",
												"src": "34102:96:7",
												"trueBody": {
													"id": 2271,
													"nodeType": "Block",
													"src": "34127:71:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 2267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 2268,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2251,
																		"src": "34181:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2266,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "34148:29:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2270,
															"nodeType": "RevertStatement",
															"src": "34141:46:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2249,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:7",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "34004:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2250,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:7"
									},
									"returnParameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "34041:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 2253,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:7"
									},
									"scope": 2315,
									"src": "33988:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "34444:250:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2282,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2277,
														"src": "34557:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 2286,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:7",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 2285,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:7",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2283,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2297,
												"nodeType": "IfStatement",
												"src": "34553:105:7",
												"trueBody": {
													"id": 2296,
													"nodeType": "Block",
													"src": "34592:66:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2293,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "34641:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2292,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "34613:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2295,
															"nodeType": "RevertStatement",
															"src": "34606:41:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2300,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "34681:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 2298,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:7",
															"typeDescriptions": {}
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2281,
												"id": 2302,
												"nodeType": "Return",
												"src": "34667:20:7"
											}
										]
									},
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:7",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "34398:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:7"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "34436:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2279,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:7"
									},
									"scope": 2315,
									"src": "34380:314:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "34853:87:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:7",
													"nodeType": "YulBlock",
													"src": "34888:46:7",
													"statements": [
														{
															"nativeSrc": "34902:22:7",
															"nodeType": "YulAssignment",
															"src": "34902:22:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:7"
																		},
																		"nativeSrc": "34914:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:7"
																},
																"nativeSrc": "34907:17:7",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:7"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:7"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2307,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:7",
														"valueSize": 1
													},
													{
														"declaration": 2310,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2312,
												"nodeType": "InlineAssembly",
												"src": "34863:71:7"
											}
										]
									},
									"documentation": {
										"id": 2305,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:7",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "34811:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:7"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "34842:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:7"
									},
									"scope": 2315,
									"src": "34795:145:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2316,
							"src": "769:34173:7",
							"usedErrors": [
								560,
								565,
								572,
								577
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:7"
				},
				"id": 7
			},
			"interfaces/IUBI4ALLQuantum.sol": {
				"ast": {
					"absolutePath": "interfaces/IUBI4ALLQuantum.sol",
					"exportedSymbols": {
						"IUBI4ALLQuantum": [
							2468
						]
					},
					"id": 2469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUBI4ALLQuantum",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2468,
							"linearizedBaseContracts": [
								2468
							],
							"name": "IUBI4ALLQuantum",
							"nameLocation": "68:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "94e83ca767b0d965638d27b68a75ea07cd5c28c86299b5c7e02d2d5f1ee9aff2",
									"id": 2325,
									"name": "QuantumTransfer",
									"nameLocation": "96:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2319,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "128:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "112:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "112:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2321,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "150:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "134:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2323,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "162:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "154:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "154:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "111:58:8"
									},
									"src": "90:80:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6b4f55697b6ddad583b377bb7ab9d921afc2eb9ffa0b12fbcea5ae24a7a34e6a",
									"id": 2331,
									"name": "TokensLockedForDAO",
									"nameLocation": "181:18:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "216:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "200:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "200:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "233:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "225:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:41:8"
									},
									"src": "175:66:8"
								},
								{
									"anonymous": false,
									"eventSelector": "86e5f036736269c50194228317f229b5684d89d9db959c604a1ef646d6cd6ca9",
									"id": 2337,
									"name": "TokensUnlockedForDAO",
									"nameLocation": "252:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "289:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "273:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2335,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "306:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "298:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "272:41:8"
									},
									"src": "246:68:8"
								},
								{
									"anonymous": false,
									"eventSelector": "fd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6",
									"id": 2343,
									"name": "TokensBurned",
									"nameLocation": "325:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "354:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "338:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "371:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "363:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:41:8"
									},
									"src": "319:60:8"
								},
								{
									"anonymous": false,
									"eventSelector": "1ac506e936e7f02f4036dbe44708f5e8d72af9ace8745a29fd391481a8fbcb87",
									"id": 2351,
									"name": "EmergencyRecovery",
									"nameLocation": "390:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2345,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "424:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "408:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "431:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "459:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "451:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:59:8"
									},
									"src": "384:83:8"
								},
								{
									"anonymous": false,
									"eventSelector": "6ff3a4003b90be84595beb5f6acb9d54f88bd3e6dd4887ca67e53dc9645465ea",
									"id": 2357,
									"name": "WalletUpdated",
									"nameLocation": "478:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"indexed": false,
												"mutability": "mutable",
												"name": "walletType",
												"nameLocation": "499:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "492:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "492:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"indexed": true,
												"mutability": "mutable",
												"name": "newWallet",
												"nameLocation": "527:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2357,
												"src": "511:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:46:8"
									},
									"src": "472:66:8"
								},
								{
									"anonymous": false,
									"eventSelector": "4ad7799f99297062cea73c5a21d23a1fcf49f6a1957f7409712e555a0dcd1e1d",
									"id": 2363,
									"name": "VestingReleased",
									"nameLocation": "549:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"indexed": true,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "581:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "565:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2361,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "597:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2363,
												"src": "589:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:40:8"
									},
									"src": "543:62:8"
								},
								{
									"anonymous": false,
									"eventSelector": "ae5a72e837b1c61d8f56d35c16816d1e29cc1a1e858253419499dda337ea03e3",
									"id": 2373,
									"name": "LeveragedTransfer",
									"nameLocation": "616:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "650:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "634:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "672:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "656:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "684:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "676:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"indexed": false,
												"mutability": "mutable",
												"name": "leverage",
												"nameLocation": "700:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "692:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:76:8"
									},
									"src": "610:100:8"
								},
								{
									"functionSelector": "70a08231",
									"id": 2380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "725:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "743:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "735:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:17:8"
									},
									"returnParameters": {
										"id": 2379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "775:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "774:9:8"
									},
									"scope": 2468,
									"src": "716:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "798:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "815:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "807:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "827:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "819:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "806:28:8"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "853:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "853:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:6:8"
									},
									"scope": 2468,
									"src": "789:70:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "873:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "894:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "886:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "908:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "900:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "920:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "912:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:42:8"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "946:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:6:8"
									},
									"scope": 2468,
									"src": "864:88:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4e41b22",
									"id": 2405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "966:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "980:2:8"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "1006:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:9:8"
									},
									"scope": 2468,
									"src": "957:58:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "65ed6e23",
									"id": 2418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllocations",
									"nameLocation": "1029:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:2:8"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "1086:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1078:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "ecosystem",
												"nameLocation": "1112:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1104:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "community",
												"nameLocation": "1139:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1131:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1166:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1158:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1193:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "1185:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:138:8"
									},
									"scope": 2468,
									"src": "1020:187:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "db7a4605",
									"id": 2431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getWallets",
									"nameLocation": "1221:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1231:2:8"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "1274:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "1266:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "ecosystem",
												"nameLocation": "1300:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "1292:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "community",
												"nameLocation": "1327:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "1319:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1354:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "1346:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "1381:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2431,
												"src": "1373:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:138:8"
									},
									"scope": 2468,
									"src": "1212:183:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 2438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1409:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1422:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "1414:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2435,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1434:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "1426:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1413:28:8"
									},
									"returnParameters": {
										"id": 2437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1450:0:8"
									},
									"scope": 2468,
									"src": "1400:51:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 2443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1465:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1478:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2443,
												"src": "1470:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1470:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1469:16:8"
									},
									"returnParameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1494:0:8"
									},
									"scope": 2468,
									"src": "1456:39:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b7e26a2e",
									"id": 2450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyRecoverTokens",
									"nameLocation": "1509:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1540:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "1532:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1532:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1555:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "1547:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:27:8"
									},
									"returnParameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:0:8"
									},
									"scope": 2468,
									"src": "1500:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9576a374",
									"id": 2455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockForDAO",
									"nameLocation": "1582:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1601:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "1593:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:16:8"
									},
									"returnParameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:0:8"
									},
									"scope": 2468,
									"src": "1573:45:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2af44592",
									"id": 2462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockedForDAO",
									"nameLocation": "1632:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1653:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "1645:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1645:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1644:17:8"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2462,
												"src": "1685:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:9:8"
									},
									"scope": 2468,
									"src": "1623:71:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a0ced96",
									"id": 2467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalLockedForDAO",
									"nameLocation": "1708:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1725:2:8"
									},
									"returnParameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2467,
												"src": "1751:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:9:8"
									},
									"scope": 2468,
									"src": "1699:61:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2469,
							"src": "58:1704:8",
							"usedErrors": [],
							"usedEvents": [
								2325,
								2331,
								2337,
								2343,
								2351,
								2357,
								2363,
								2373
							]
						}
					],
					"src": "32:1730:8"
				},
				"id": 8
			},
			"interfaces/IUBI4ALLQuantumFinance.sol": {
				"ast": {
					"absolutePath": "interfaces/IUBI4ALLQuantumFinance.sol",
					"exportedSymbols": {
						"IUBI4ALLQuantumFinance": [
							2476
						]
					},
					"id": 2477,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUBI4ALLQuantumFinance",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2476,
							"linearizedBaseContracts": [
								2476
							],
							"name": "IUBI4ALLQuantumFinance",
							"nameLocation": "68:22:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f2fde38b",
									"id": 2475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "106:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "132:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "124:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "123:18:9"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "150:0:9"
									},
									"scope": 2476,
									"src": "97:54:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2477,
							"src": "58:95:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:121:9"
				},
				"id": 9
			},
			"oracle/UBI4ALLOracle.sol": {
				"ast": {
					"absolutePath": "oracle/UBI4ALLOracle.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							103
						],
						"Context": [
							550
						],
						"IUBI4ALLOracle": [
							2572
						],
						"Ownable": [
							347
						],
						"Pausable": [
							455
						],
						"ReentrancyGuard": [
							520
						],
						"SafeCast": [
							2315
						],
						"UBI4ALLOracle": [
							3041
						]
					},
					"id": 3042,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2479,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3042,
							"sourceUnit": 348,
							"src": "58:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2480,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3042,
							"sourceUnit": 521,
							"src": "111:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3042,
							"sourceUnit": 456,
							"src": "174:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"id": 2482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3042,
							"sourceUnit": 2316,
							"src": "230:57:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 2483,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3042,
							"sourceUnit": 104,
							"src": "288:76:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUBI4ALLOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2484,
								"nodeType": "StructuredDocumentation",
								"src": "366:73:10",
								"text": "@title IUBI4ALLOracle - Interfaccia per l'oracolo del prezzo EUR/USD"
							},
							"fullyImplemented": false,
							"id": 2572,
							"linearizedBaseContracts": [
								2572
							],
							"name": "IUBI4ALLOracle",
							"nameLocation": "449:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2485,
										"nodeType": "StructuredDocumentation",
										"src": "470:52:10",
										"text": "@notice Emesso quando il prezzo viene aggiornato"
									},
									"eventSelector": "bcd10d64fce9dcf9568572ed92e371df336d32649e8960a045c9548794a44b26",
									"id": 2493,
									"name": "PriceUpdated",
									"nameLocation": "533:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2487,
												"indexed": true,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "562:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "546:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2486,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "576:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "568:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "568:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "591:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2493,
												"src": "583:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:56:10"
									},
									"src": "527:75:10"
								},
								{
									"documentation": {
										"id": 2494,
										"nodeType": "StructuredDocumentation",
										"src": "608:57:10",
										"text": "@notice Aggiorna manualmente il prezzo per una coppia"
									},
									"functionSelector": "f3f699f1",
									"id": 2505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updatePrice",
									"nameLocation": "679:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "708:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "700:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2495,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "730:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "722:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "753:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "745:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "confidence",
												"nameLocation": "780:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "772:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:106:10"
									},
									"returnParameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:0:10"
									},
									"scope": 2572,
									"src": "670:136:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2506,
										"nodeType": "StructuredDocumentation",
										"src": "812:57:10",
										"text": "@notice Ottiene il prezzo più recente per una coppia"
									},
									"functionSelector": "31d98b3f",
									"id": 2517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "883:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "900:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "892:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2507,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:14:10"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "937:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "929:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "952:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "944:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "968:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2517,
												"src": "963:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "963:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:48:10"
									},
									"scope": 2572,
									"src": "874:103:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2518,
										"nodeType": "StructuredDocumentation",
										"src": "983:54:10",
										"text": "@notice Ottiene il prezzo aggregato per una coppia"
									},
									"functionSelector": "1fde7f26",
									"id": 2529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAggregatedPrice",
									"nameLocation": "1051:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "1078:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "1070:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2519,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:14:10"
									},
									"returnParameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "weightedPrice",
												"nameLocation": "1115:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "1107:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1138:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "1130:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "1154:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2529,
												"src": "1149:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1149:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:56:10"
									},
									"scope": 2572,
									"src": "1042:121:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2530,
										"nodeType": "StructuredDocumentation",
										"src": "1169:61:10",
										"text": "@notice Ottiene il prezzo direttamente dal feed Chainlink"
									},
									"functionSelector": "2806bce2",
									"id": 2541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSourcePrice",
									"nameLocation": "1244:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "1267:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1259:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1259:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1258:16:10"
									},
									"returnParameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1306:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1298:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1321:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1313:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "1337:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "1332:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:48:10"
									},
									"scope": 2572,
									"src": "1235:111:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2542,
										"nodeType": "StructuredDocumentation",
										"src": "1352:49:10",
										"text": "@notice Aggiunge o aggiorna un feed Chainlink"
									},
									"functionSelector": "9f97acb7",
									"id": 2557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addOracleSource",
									"nameLocation": "1415:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "1448:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1440:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2543,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1440:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "1470:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1462:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "1494:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1486:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "heartbeat",
												"nameLocation": "1518:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1510:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "maxDeviation",
												"nameLocation": "1545:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1537:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2554,
												"mutability": "mutable",
												"name": "minConfidence",
												"nameLocation": "1575:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "1567:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:164:10"
									},
									"returnParameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1603:0:10"
									},
									"scope": 2572,
									"src": "1406:198:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2558,
										"nodeType": "StructuredDocumentation",
										"src": "1610:37:10",
										"text": "@notice Rimuove un feed Chainlink"
									},
									"functionSelector": "01e9492f",
									"id": 2565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeOracleSource",
									"nameLocation": "1661:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "1688:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "1680:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2559,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "1702:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "1694:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:30:10"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1718:0:10"
									},
									"scope": 2572,
									"src": "1652:67:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2566,
										"nodeType": "StructuredDocumentation",
										"src": "1725:112:10",
										"text": "@notice Ottiene il prezzo più recente per la coppia EUR/USD\n @return Prezzo più recente come int256"
									},
									"functionSelector": "8e15f473",
									"id": 2571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "1851:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:10"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "1891:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2568,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:8:10"
									},
									"scope": 2572,
									"src": "1842:57:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3042,
							"src": "439:1462:10",
							"usedErrors": [],
							"usedEvents": [
								2493
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2574,
										"name": "IUBI4ALLOracle",
										"nameLocations": [
											"2073:14:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2572,
										"src": "2073:14:10"
									},
									"id": 2575,
									"nodeType": "InheritanceSpecifier",
									"src": "2073:14:10"
								},
								{
									"baseName": {
										"id": 2576,
										"name": "Ownable",
										"nameLocations": [
											"2089:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 347,
										"src": "2089:7:10"
									},
									"id": 2577,
									"nodeType": "InheritanceSpecifier",
									"src": "2089:7:10"
								},
								{
									"baseName": {
										"id": 2578,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"2098:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 520,
										"src": "2098:15:10"
									},
									"id": 2579,
									"nodeType": "InheritanceSpecifier",
									"src": "2098:15:10"
								},
								{
									"baseName": {
										"id": 2580,
										"name": "Pausable",
										"nameLocations": [
											"2115:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 455,
										"src": "2115:8:10"
									},
									"id": 2581,
									"nodeType": "InheritanceSpecifier",
									"src": "2115:8:10"
								}
							],
							"canonicalName": "UBI4ALLOracle",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2573,
								"nodeType": "StructuredDocumentation",
								"src": "1903:144:10",
								"text": "@title UBI4ALLOracle - Oracolo per il prezzo EUR/USD\n @notice Fornisce prezzi aggiornati per la coppia EUR/USD, con fallback a Chainlink"
							},
							"fullyImplemented": true,
							"id": 3041,
							"linearizedBaseContracts": [
								3041,
								455,
								520,
								347,
								550,
								2572
							],
							"name": "UBI4ALLOracle",
							"nameLocation": "2056:13:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "UBI4ALLOracle.PriceData",
									"documentation": {
										"id": 2582,
										"nodeType": "StructuredDocumentation",
										"src": "2130:40:10",
										"text": "@dev Struttura per i dati del prezzo"
									},
									"id": 2589,
									"members": [
										{
											"constant": false,
											"id": 2584,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "2210:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2589,
											"src": "2202:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2583,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2202:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2586,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "2233:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 2589,
											"src": "2225:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2585,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2225:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2588,
											"mutability": "mutable",
											"name": "isValid",
											"nameLocation": "2257:7:10",
											"nodeType": "VariableDeclaration",
											"scope": 2589,
											"src": "2252:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2587,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2252:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PriceData",
									"nameLocation": "2182:9:10",
									"nodeType": "StructDefinition",
									"scope": 3041,
									"src": "2175:96:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "741bef1a",
									"id": 2592,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "2306:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 3041,
									"src": "2277:38:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 2591,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2590,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"2277:21:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 103,
											"src": "2277:21:10"
										},
										"referencedDeclaration": 103,
										"src": "2277:21:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a5b5fb88",
									"id": 2598,
									"mutability": "constant",
									"name": "EUR_USD_PAIR",
									"nameLocation": "2345:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 3041,
									"src": "2321:57:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2593,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2321:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4555522f555344",
												"id": 2596,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2368:9:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a9226449042e36bf6865099eec57482aa55e3ad026c315a0e4a692b776c318ca",
													"typeString": "literal_string \"EUR/USD\""
												},
												"value": "EUR/USD"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a9226449042e36bf6865099eec57482aa55e3ad026c315a0e4a692b776c318ca",
													"typeString": "literal_string \"EUR/USD\""
												}
											],
											"id": 2595,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "2360:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 2594,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2360:7:10",
												"typeDescriptions": {}
											}
										},
										"id": 2597,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2360:18:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "db7c1ad1",
									"id": 2603,
									"mutability": "mutable",
									"name": "latestPrices",
									"nameLocation": "2421:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 3041,
									"src": "2384:49:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PriceData_$2589_storage_$",
										"typeString": "mapping(bytes32 => struct UBI4ALLOracle.PriceData)"
									},
									"typeName": {
										"id": 2602,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2599,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2392:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2384:29:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PriceData_$2589_storage_$",
											"typeString": "mapping(bytes32 => struct UBI4ALLOracle.PriceData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2601,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2600,
												"name": "PriceData",
												"nameLocations": [
													"2403:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2589,
												"src": "2403:9:10"
											},
											"referencedDeclaration": 2589,
											"src": "2403:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PriceData_$2589_storage_ptr",
												"typeString": "struct UBI4ALLOracle.PriceData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6301a143",
									"id": 2606,
									"mutability": "constant",
									"name": "PRICE_VALIDITY_PERIOD",
									"nameLocation": "2463:21:10",
									"nodeType": "VariableDeclaration",
									"scope": 3041,
									"src": "2439:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2604,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2439:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 2605,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2487:10:10",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_900_by_1",
											"typeString": "int_const 900"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bc269850",
									"id": 2609,
									"mutability": "constant",
									"name": "CHAINLINK_STALENESS_THRESHOLD",
									"nameLocation": "2527:29:10",
									"nodeType": "VariableDeclaration",
									"scope": 3041,
									"src": "2503:63:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2607,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2503:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 2608,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2559:7:10",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a8abe0398416476db5b05737cd4da3b3cbde5012d978a6a6c3fd49d321753536",
									"id": 2615,
									"name": "PriceFeedUpdated",
									"nameLocation": "2579:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldFeed",
												"nameLocation": "2612:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "2596:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2596:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFeed",
												"nameLocation": "2637:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2615,
												"src": "2621:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2621:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2595:50:10"
									},
									"src": "2573:73:10"
								},
								{
									"anonymous": false,
									"eventSelector": "d373a1ac37410a4da6def2d7f3f2e704aca3e95e2e251322a031eedda7eb686c",
									"id": 2619,
									"name": "EmergencyPause",
									"nameLocation": "2657:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"indexed": true,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "2688:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "2672:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2616,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2672:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2671:22:10"
									},
									"src": "2651:43:10"
								},
								{
									"body": {
										"id": 2645,
										"nodeType": "Block",
										"src": "2776:135:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2630,
																"name": "_priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "2794:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2816:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2808:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2808:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2808:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2794:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420707269636520666565642061646472657373",
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2820:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
																"typeString": "literal_string \"Invalid price feed address\""
															},
															"value": "Invalid price feed address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_595eab4fb57bcc142598514e241e9b9186a6bbdf3fa83e2f4884fe9ef6ff4eb1",
																"typeString": "literal_string \"Invalid price feed address\""
															}
														],
														"id": 2629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2786:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2786:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2638,
												"nodeType": "ExpressionStatement",
												"src": "2786:63:10"
											},
											{
												"expression": {
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2639,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2592,
														"src": "2859:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2641,
																"name": "_priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2621,
																"src": "2893:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2640,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "2871:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 2642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2871:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "2859:45:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 2644,
												"nodeType": "ExpressionStatement",
												"src": "2859:45:10"
											}
										]
									},
									"id": 2646,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2626,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2623,
													"src": "2762:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2627,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2625,
												"name": "Ownable",
												"nameLocations": [
													"2754:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 347,
												"src": "2754:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2754:21:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "2720:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "2712:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2740:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2646,
												"src": "2732:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:42:10"
									},
									"returnParameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2776:0:10"
									},
									"scope": 3041,
									"src": "2700:211:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2517
									],
									"body": {
										"id": 2751,
										"nodeType": "Block",
										"src": "3068:859:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2659,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2648,
																"src": "3086:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2660,
																"name": "EUR_USD_PAIR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "3094:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3086:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616972",
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3108:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															},
															"value": "Invalid pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															}
														],
														"id": 2658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3078:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3078:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2664,
												"nodeType": "ExpressionStatement",
												"src": "3078:45:10"
											},
											{
												"assignments": [
													2667
												],
												"declarations": [
													{
														"constant": false,
														"id": 2667,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "3150:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 2751,
														"src": "3133:21:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceData_$2589_memory_ptr",
															"typeString": "struct UBI4ALLOracle.PriceData"
														},
														"typeName": {
															"id": 2666,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2665,
																"name": "PriceData",
																"nameLocations": [
																	"3133:9:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2589,
																"src": "3133:9:10"
															},
															"referencedDeclaration": 2589,
															"src": "3133:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceData_$2589_storage_ptr",
																"typeString": "struct UBI4ALLOracle.PriceData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2671,
												"initialValue": {
													"baseExpression": {
														"id": 2668,
														"name": "latestPrices",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2603,
														"src": "3157:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PriceData_$2589_storage_$",
															"typeString": "mapping(bytes32 => struct UBI4ALLOracle.PriceData storage ref)"
														}
													},
													"id": 2670,
													"indexExpression": {
														"id": 2669,
														"name": "pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2648,
														"src": "3170:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3157:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceData_$2589_storage",
														"typeString": "struct UBI4ALLOracle.PriceData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3133:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2672,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "3190:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PriceData_$2589_memory_ptr",
																"typeString": "struct UBI4ALLOracle.PriceData memory"
															}
														},
														"id": 2673,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3195:7:10",
														"memberName": "isValid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2588,
														"src": "3190:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2674,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3206:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3212:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3206:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 2676,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2667,
																	"src": "3224:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PriceData_$2589_memory_ptr",
																		"typeString": "struct UBI4ALLOracle.PriceData memory"
																	}
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3229:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2586,
																"src": "3224:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3206:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 2679,
															"name": "PRICE_VALIDITY_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2606,
															"src": "3242:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3206:57:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3190:73:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2690,
												"nodeType": "IfStatement",
												"src": "3186:145:10",
												"trueBody": {
													"id": 2689,
													"nodeType": "Block",
													"src": "3265:66:10",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"expression": {
																			"id": 2682,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2667,
																			"src": "3287:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PriceData_$2589_memory_ptr",
																				"typeString": "struct UBI4ALLOracle.PriceData memory"
																			}
																		},
																		"id": 2683,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3292:5:10",
																		"memberName": "price",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2584,
																		"src": "3287:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2684,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2667,
																			"src": "3299:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PriceData_$2589_memory_ptr",
																				"typeString": "struct UBI4ALLOracle.PriceData memory"
																			}
																		},
																		"id": 2685,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3304:9:10",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2586,
																		"src": "3299:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "74727565",
																		"id": 2686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	}
																],
																"id": 2687,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3286:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
																	"typeString": "tuple(uint256,uint256,bool)"
																}
															},
															"functionReturnParameters": 2657,
															"id": 2688,
															"nodeType": "Return",
															"src": "3279:41:10"
														}
													]
												}
											},
											{
												"clauses": [
													{
														"block": {
															"id": 2741,
															"nodeType": "Block",
															"src": "3511:358:10",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2705,
																			"name": "answer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2697,
																			"src": "3529:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3539:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3529:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2712,
																	"nodeType": "IfStatement",
																	"src": "3525:51:10",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "436861696e6c696e6b3a20496e76616c6964207072696365",
																					"id": 2709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3549:26:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46",
																						"typeString": "literal_string \"Chainlink: Invalid price\""
																					},
																					"value": "Chainlink: Invalid price"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46",
																						"typeString": "literal_string \"Chainlink: Invalid price\""
																					}
																				],
																				"id": 2708,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "3542:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3542:34:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2711,
																		"nodeType": "ExpressionStatement",
																		"src": "3542:34:10"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2713,
																			"name": "updatedAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2701,
																			"src": "3594:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3607:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3594:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2720,
																	"nodeType": "IfStatement",
																	"src": "3590:59:10",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465",
																					"id": 2717,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3617:31:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47",
																						"typeString": "literal_string \"Chainlink: Round not complete\""
																					},
																					"value": "Chainlink: Round not complete"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47",
																						"typeString": "literal_string \"Chainlink: Round not complete\""
																					}
																				],
																				"id": 2716,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "3610:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3610:39:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2719,
																		"nodeType": "ExpressionStatement",
																		"src": "3610:39:10"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2721,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3667:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3673:9:10",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3667:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2723,
																				"name": "updatedAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2701,
																				"src": "3685:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3667:27:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 2725,
																			"name": "CHAINLINK_STALENESS_THRESHOLD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "3697:29:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3667:59:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2732,
																	"nodeType": "IfStatement",
																	"src": "3663:130:10",
																	"trueBody": {
																		"id": 2731,
																		"nodeType": "Block",
																		"src": "3728:65:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "436861696e6c696e6b3a205374616c65207072696365",
																							"id": 2728,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3753:24:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495",
																								"typeString": "literal_string \"Chainlink: Stale price\""
																							},
																							"value": "Chainlink: Stale price"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495",
																								"typeString": "literal_string \"Chainlink: Stale price\""
																							}
																						],
																						"id": 2727,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3746:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2729,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3746:32:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2730,
																				"nodeType": "ExpressionStatement",
																				"src": "3746:32:10"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"components": [
																			{
																				"arguments": [
																					{
																						"id": 2735,
																						"name": "answer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2697,
																						"src": "3833:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"expression": {
																						"id": 2733,
																						"name": "SafeCast",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2315,
																						"src": "3814:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeCast_$2315_$",
																							"typeString": "type(library SafeCast)"
																						}
																					},
																					"id": 2734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3823:9:10",
																					"memberName": "toUint256",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1468,
																					"src": "3814:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																						"typeString": "function (int256) pure returns (uint256)"
																					}
																				},
																				"id": 2736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3814:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2737,
																				"name": "updatedAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2701,
																				"src": "3842:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "74727565",
																				"id": 2738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3853:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			}
																		],
																		"id": 2739,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3813:45:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
																			"typeString": "tuple(uint256,uint256,bool)"
																		}
																	},
																	"functionReturnParameters": 2657,
																	"id": 2740,
																	"nodeType": "Return",
																	"src": "3806:52:10"
																}
															]
														},
														"errorName": "",
														"id": 2742,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2704,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2695,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2742,
																	"src": "3395:6:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	},
																	"typeName": {
																		"id": 2694,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "3395:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint80",
																			"typeString": "uint80"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2697,
																	"mutability": "mutable",
																	"name": "answer",
																	"nameLocation": "3422:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2742,
																	"src": "3415:13:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 2696,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3415:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2699,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2742,
																	"src": "3442:7:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2698,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3442:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2701,
																	"mutability": "mutable",
																	"name": "updatedAt",
																	"nameLocation": "3471:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2742,
																	"src": "3463:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2700,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3463:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2703,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2742,
																	"src": "3494:6:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	},
																	"typeName": {
																		"id": 2702,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "3494:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint80",
																			"typeString": "uint80"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "3381:129:10"
														},
														"src": "3373:496:10"
													},
													{
														"block": {
															"id": 2748,
															"nodeType": "Block",
															"src": "3876:45:10",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"hexValue": "30",
																				"id": 2743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3898:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "30",
																				"id": 2744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3901:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 2745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3904:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"id": 2746,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3897:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_bool_$",
																			"typeString": "tuple(int_const 0,int_const 0,bool)"
																		}
																	},
																	"functionReturnParameters": 2657,
																	"id": 2747,
																	"nodeType": "Return",
																	"src": "3890:20:10"
																}
															]
														},
														"errorName": "",
														"id": 2749,
														"nodeType": "TryCatchClause",
														"src": "3870:51:10"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2691,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "3345:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 2692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3355:15:10",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "3345:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 2693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3345:27:10",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"id": 2750,
												"nodeType": "TryStatement",
												"src": "3341:580:10"
											}
										]
									},
									"functionSelector": "31d98b3f",
									"id": 2752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "2926:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2650,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2988:8:10"
									},
									"parameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "2943:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "2935:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2647,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2935:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2934:14:10"
									},
									"returnParameters": {
										"id": 2657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3023:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "3015:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3015:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2654,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3038:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "3030:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2656,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "3054:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "3049:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3049:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3014:48:10"
									},
									"scope": 3041,
									"src": "2917:1010:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2505
									],
									"body": {
										"id": 2808,
										"nodeType": "Block",
										"src": "4119:366:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2771,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2754,
																"src": "4137:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2772,
																"name": "EUR_USD_PAIR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "4145:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4137:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616972",
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4159:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															},
															"value": "Invalid pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															}
														],
														"id": 2770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4129:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4129:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2776,
												"nodeType": "ExpressionStatement",
												"src": "4129:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2778,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2758,
																"src": "4192:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 2779,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4205:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4211:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4205:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4192:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4675747572652074696d657374616d70",
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4222:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add",
																"typeString": "literal_string \"Future timestamp\""
															},
															"value": "Future timestamp"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a492150eb2459d40282e686b203ba018ae6435bb497a3f6c5538339257f0add",
																"typeString": "literal_string \"Future timestamp\""
															}
														],
														"id": 2777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4184:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4184:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2784,
												"nodeType": "ExpressionStatement",
												"src": "4184:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2786,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2756,
																"src": "4259:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4267:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4259:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207072696365",
															"id": 2789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4270:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															},
															"value": "Invalid price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
																"typeString": "literal_string \"Invalid price\""
															}
														],
														"id": 2785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4251:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4251:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2791,
												"nodeType": "ExpressionStatement",
												"src": "4251:35:10"
											},
											{
												"expression": {
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2792,
															"name": "latestPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "4297:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_PriceData_$2589_storage_$",
																"typeString": "mapping(bytes32 => struct UBI4ALLOracle.PriceData storage ref)"
															}
														},
														"id": 2794,
														"indexExpression": {
															"id": 2793,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2754,
															"src": "4310:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4297:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceData_$2589_storage",
															"typeString": "struct UBI4ALLOracle.PriceData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2796,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2756,
																"src": "4349:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2797,
																"name": "timestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2758,
																"src": "4379:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 2798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4411:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 2795,
															"name": "PriceData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2589,
															"src": "4318:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_PriceData_$2589_storage_ptr_$",
																"typeString": "type(struct UBI4ALLOracle.PriceData storage pointer)"
															}
														},
														"id": 2799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4342:5:10",
															"4368:9:10",
															"4402:7:10"
														],
														"names": [
															"price",
															"timestamp",
															"isValid"
														],
														"nodeType": "FunctionCall",
														"src": "4318:108:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceData_$2589_memory_ptr",
															"typeString": "struct UBI4ALLOracle.PriceData memory"
														}
													},
													"src": "4297:129:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceData_$2589_storage",
														"typeString": "struct UBI4ALLOracle.PriceData storage ref"
													}
												},
												"id": 2801,
												"nodeType": "ExpressionStatement",
												"src": "4297:129:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2803,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2754,
															"src": "4455:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2804,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "4461:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2805,
															"name": "timestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2758,
															"src": "4468:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2802,
														"name": "PriceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2493,
														"src": "4442:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,uint256)"
														}
													},
													"id": 2806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4442:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2807,
												"nodeType": "EmitStatement",
												"src": "4437:41:10"
											}
										]
									},
									"functionSelector": "f3f699f1",
									"id": 2809,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2764,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2763,
												"name": "onlyOwner",
												"nameLocations": [
													"4082:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "4082:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4082:9:10"
										},
										{
											"id": 2766,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2765,
												"name": "whenNotPaused",
												"nameLocations": [
													"4092:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 382,
												"src": "4092:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4092:13:10"
										},
										{
											"id": 2768,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2767,
												"name": "nonReentrant",
												"nameLocations": [
													"4106:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 485,
												"src": "4106:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4106:12:10"
										}
									],
									"name": "updatePrice",
									"nameLocation": "3942:11:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2762,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4073:8:10"
									},
									"parameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "3971:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "3963:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3963:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3993:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "3985:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3985:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4016:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "4008:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2809,
												"src": "4035:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:110:10"
									},
									"returnParameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4119:0:10"
									},
									"scope": 3041,
									"src": "3933:552:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2571
									],
									"body": {
										"id": 2833,
										"nodeType": "Block",
										"src": "4557:166:10",
										"statements": [
											{
												"assignments": [
													2816,
													null,
													2818
												],
												"declarations": [
													{
														"constant": false,
														"id": 2816,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "4576:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 2833,
														"src": "4568:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2815,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4568:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null,
													{
														"constant": false,
														"id": 2818,
														"mutability": "mutable",
														"name": "isValid",
														"nameLocation": "4590:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2833,
														"src": "4585:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2817,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4585:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2822,
												"initialValue": {
													"arguments": [
														{
															"id": 2820,
															"name": "EUR_USD_PAIR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "4610:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2819,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "4601:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$_t_uint256_$_t_bool_$",
															"typeString": "function (bytes32) view returns (uint256,uint256,bool)"
														}
													},
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4601:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4567:56:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2824,
															"name": "isValid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2818,
															"src": "4641:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f72207374616c65207072696365",
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4650:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_226d2380e1281b8903155ae89694da3c8345f097a03e6d22e2f854af5bb0464e",
																"typeString": "literal_string \"Invalid or stale price\""
															},
															"value": "Invalid or stale price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_226d2380e1281b8903155ae89694da3c8345f097a03e6d22e2f854af5bb0464e",
																"typeString": "literal_string \"Invalid or stale price\""
															}
														],
														"id": 2823,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4633:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4633:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2827,
												"nodeType": "ExpressionStatement",
												"src": "4633:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2830,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2816,
															"src": "4710:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2828,
															"name": "SafeCast",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "4692:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_SafeCast_$2315_$",
																"typeString": "type(library SafeCast)"
															}
														},
														"id": 2829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4701:8:10",
														"memberName": "toInt256",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2304,
														"src": "4692:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$",
															"typeString": "function (uint256) pure returns (int256)"
														}
													},
													"id": 2831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4692:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2814,
												"id": 2832,
												"nodeType": "Return",
												"src": "4685:31:10"
											}
										]
									},
									"functionSelector": "8e15f473",
									"id": 2834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestPrice",
									"nameLocation": "4500:14:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2811,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4531:8:10"
									},
									"parameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4514:2:10"
									},
									"returnParameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2834,
												"src": "4549:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2812,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4548:8:10"
									},
									"scope": 3041,
									"src": "4491:232:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2529
									],
									"body": {
										"id": 2850,
										"nodeType": "Block",
										"src": "4900:38:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2847,
															"name": "pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2836,
															"src": "4926:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2846,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2752,
														"src": "4917:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$_t_uint256_$_t_bool_$",
															"typeString": "function (bytes32) view returns (uint256,uint256,bool)"
														}
													},
													"id": 2848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4917:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,bool)"
													}
												},
												"functionReturnParameters": 2845,
												"id": 2849,
												"nodeType": "Return",
												"src": "4910:21:10"
											}
										]
									},
									"functionSelector": "1fde7f26",
									"id": 2851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAggregatedPrice",
									"nameLocation": "4738:18:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2838,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4812:8:10"
									},
									"parameters": {
										"id": 2837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "4765:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "4757:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4757:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4756:14:10"
									},
									"returnParameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "weightedPrice",
												"nameLocation": "4847:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "4839:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4870:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "4862:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4862:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "4886:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "4881:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4881:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4838:56:10"
									},
									"scope": 3041,
									"src": "4729:209:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2541
									],
									"body": {
										"id": 2933,
										"nodeType": "Block",
										"src": "5105:661:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2864,
																"name": "source",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2853,
																"src": "5123:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2867,
																		"name": "priceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2592,
																		"src": "5141:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	],
																	"id": 2866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5133:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2865,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5133:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5133:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5123:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736f75726365",
															"id": 2870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5153:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e",
																"typeString": "literal_string \"Invalid source\""
															},
															"value": "Invalid source"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e",
																"typeString": "literal_string \"Invalid source\""
															}
														],
														"id": 2863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5115:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5115:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2872,
												"nodeType": "ExpressionStatement",
												"src": "5115:55:10"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 2923,
															"nodeType": "Block",
															"src": "5350:358:10",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2887,
																			"name": "answer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2879,
																			"src": "5368:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5378:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5368:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2894,
																	"nodeType": "IfStatement",
																	"src": "5364:51:10",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "436861696e6c696e6b3a20496e76616c6964207072696365",
																					"id": 2891,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5388:26:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46",
																						"typeString": "literal_string \"Chainlink: Invalid price\""
																					},
																					"value": "Chainlink: Invalid price"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_4697229baafd3c14fe589158b35de5087921093e70b8690188e9e22f83ffeb46",
																						"typeString": "literal_string \"Chainlink: Invalid price\""
																					}
																				],
																				"id": 2890,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "5381:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5381:34:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2893,
																		"nodeType": "ExpressionStatement",
																		"src": "5381:34:10"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2895,
																			"name": "updatedAt",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2883,
																			"src": "5433:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5446:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5433:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2902,
																	"nodeType": "IfStatement",
																	"src": "5429:59:10",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "436861696e6c696e6b3a20526f756e64206e6f7420636f6d706c657465",
																					"id": 2899,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5456:31:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47",
																						"typeString": "literal_string \"Chainlink: Round not complete\""
																					},
																					"value": "Chainlink: Round not complete"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_e1f1ba8ffae2be07a6c48c9b71af783b16a86345073ba59460cee736e7e72c47",
																						"typeString": "literal_string \"Chainlink: Round not complete\""
																					}
																				],
																				"id": 2898,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "5449:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5449:39:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2901,
																		"nodeType": "ExpressionStatement",
																		"src": "5449:39:10"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2903,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "5506:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5512:9:10",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "5506:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2905,
																				"name": "updatedAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "5524:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5506:27:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 2907,
																			"name": "CHAINLINK_STALENESS_THRESHOLD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2609,
																			"src": "5536:29:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5506:59:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2914,
																	"nodeType": "IfStatement",
																	"src": "5502:130:10",
																	"trueBody": {
																		"id": 2913,
																		"nodeType": "Block",
																		"src": "5567:65:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "436861696e6c696e6b3a205374616c65207072696365",
																							"id": 2910,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5592:24:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495",
																								"typeString": "literal_string \"Chainlink: Stale price\""
																							},
																							"value": "Chainlink: Stale price"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_da0dac1dcbcd6fdf64778bdbf06c2ec03d1273d81e601972d70826c542217495",
																								"typeString": "literal_string \"Chainlink: Stale price\""
																							}
																						],
																						"id": 2909,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "5585:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 2911,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5585:32:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2912,
																				"nodeType": "ExpressionStatement",
																				"src": "5585:32:10"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"components": [
																			{
																				"arguments": [
																					{
																						"id": 2917,
																						"name": "answer",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2879,
																						"src": "5672:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"expression": {
																						"id": 2915,
																						"name": "SafeCast",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2315,
																						"src": "5653:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_SafeCast_$2315_$",
																							"typeString": "type(library SafeCast)"
																						}
																					},
																					"id": 2916,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5662:9:10",
																					"memberName": "toUint256",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1468,
																					"src": "5653:18:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																						"typeString": "function (int256) pure returns (uint256)"
																					}
																				},
																				"id": 2918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5653:26:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2919,
																				"name": "updatedAt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "5681:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "74727565",
																				"id": 2920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5692:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			}
																		],
																		"id": 2921,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5652:45:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
																			"typeString": "tuple(uint256,uint256,bool)"
																		}
																	},
																	"functionReturnParameters": 2862,
																	"id": 2922,
																	"nodeType": "Return",
																	"src": "5645:52:10"
																}
															]
														},
														"errorName": "",
														"id": 2924,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2886,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2877,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2924,
																	"src": "5234:6:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	},
																	"typeName": {
																		"id": 2876,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "5234:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint80",
																			"typeString": "uint80"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2879,
																	"mutability": "mutable",
																	"name": "answer",
																	"nameLocation": "5261:6:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2924,
																	"src": "5254:13:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 2878,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5254:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2881,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2924,
																	"src": "5281:7:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2880,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5281:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2883,
																	"mutability": "mutable",
																	"name": "updatedAt",
																	"nameLocation": "5310:9:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 2924,
																	"src": "5302:17:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2882,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5302:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2885,
																	"mutability": "mutable",
																	"name": "",
																	"nameLocation": "-1:-1:-1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2924,
																	"src": "5333:6:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint80",
																		"typeString": "uint80"
																	},
																	"typeName": {
																		"id": 2884,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "5333:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint80",
																			"typeString": "uint80"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "5220:129:10"
														},
														"src": "5212:496:10"
													},
													{
														"block": {
															"id": 2930,
															"nodeType": "Block",
															"src": "5715:45:10",
															"statements": [
																{
																	"expression": {
																		"components": [
																			{
																				"hexValue": "30",
																				"id": 2925,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5737:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "30",
																				"id": 2926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5740:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 2927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5743:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"id": 2928,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5736:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_bool_$",
																			"typeString": "tuple(int_const 0,int_const 0,bool)"
																		}
																	},
																	"functionReturnParameters": 2862,
																	"id": 2929,
																	"nodeType": "Return",
																	"src": "5729:20:10"
																}
															]
														},
														"errorName": "",
														"id": 2931,
														"nodeType": "TryCatchClause",
														"src": "5709:51:10"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2873,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "5184:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 2874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5194:15:10",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "5184:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 2875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5184:27:10",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"id": 2932,
												"nodeType": "TryStatement",
												"src": "5180:580:10"
											}
										]
									},
									"functionSelector": "2806bce2",
									"id": 2934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSourcePrice",
									"nameLocation": "4953:14:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2855,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5025:8:10"
									},
									"parameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "4976:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "4968:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4968:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4967:16:10"
									},
									"returnParameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "5060:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "5052:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5052:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5075:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "5067:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5067:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "isValid",
												"nameLocation": "5091:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2934,
												"src": "5086:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5086:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5051:48:10"
									},
									"scope": 3041,
									"src": "4944:822:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2557
									],
									"body": {
										"id": 2989,
										"nodeType": "Block",
										"src": "6018:273:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2955,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2936,
																"src": "6036:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2956,
																"name": "EUR_USD_PAIR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "6044:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "6036:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616972",
															"id": 2958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6058:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															},
															"value": "Invalid pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															}
														],
														"id": 2954,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6028:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6028:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2960,
												"nodeType": "ExpressionStatement",
												"src": "6028:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2962,
																"name": "source",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2938,
																"src": "6091:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6109:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6101:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2963,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6101:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6101:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6091:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736f757263652061646472657373",
															"id": 2968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6113:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc",
																"typeString": "literal_string \"Invalid source address\""
															},
															"value": "Invalid source address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7c91da065657bdc572ec1c9b2d477171f80f8e5214a8006536c861015af4ecc",
																"typeString": "literal_string \"Invalid source address\""
															}
														],
														"id": 2961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6083:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6083:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2970,
												"nodeType": "ExpressionStatement",
												"src": "6083:55:10"
											},
											{
												"assignments": [
													2972
												],
												"declarations": [
													{
														"constant": false,
														"id": 2972,
														"mutability": "mutable",
														"name": "oldFeed",
														"nameLocation": "6157:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2989,
														"src": "6149:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2971,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6149:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2977,
												"initialValue": {
													"arguments": [
														{
															"id": 2975,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2592,
															"src": "6175:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
																"typeString": "contract AggregatorV3Interface"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
																"typeString": "contract AggregatorV3Interface"
															}
														],
														"id": 2974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6167:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2973,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6167:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6167:18:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6149:36:10"
											},
											{
												"expression": {
													"id": 2982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2978,
														"name": "priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2592,
														"src": "6195:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2980,
																"name": "source",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2938,
																"src": "6229:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2979,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "6207:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$103_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 2981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6207:29:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "6195:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 2983,
												"nodeType": "ExpressionStatement",
												"src": "6195:41:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2985,
															"name": "oldFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2972,
															"src": "6268:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2986,
															"name": "source",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2938,
															"src": "6277:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2984,
														"name": "PriceFeedUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2615,
														"src": "6251:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6251:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2988,
												"nodeType": "EmitStatement",
												"src": "6246:38:10"
											}
										]
									},
									"functionSelector": "9f97acb7",
									"id": 2990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2950,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2949,
												"name": "onlyOwner",
												"nameLocations": [
													"5995:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "5995:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5995:9:10"
										},
										{
											"id": 2952,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2951,
												"name": "nonReentrant",
												"nameLocations": [
													"6005:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 485,
												"src": "6005:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6005:12:10"
										}
									],
									"name": "addOracleSource",
									"nameLocation": "5781:15:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2948,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5986:8:10"
									},
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2936,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "5814:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "5806:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2935,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5806:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2938,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "5836:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "5828:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5828:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "5852:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5852:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "5880:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5880:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "5911:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5911:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "5945:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5945:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5796:180:10"
									},
									"returnParameters": {
										"id": 2953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6018:0:10"
									},
									"scope": 3041,
									"src": "5772:519:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2565
									],
									"body": {
										"id": 3017,
										"nodeType": "Block",
										"src": "6388:182:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3001,
																"name": "pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2992,
																"src": "6406:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3002,
																"name": "EUR_USD_PAIR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2598,
																"src": "6414:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "6406:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070616972",
															"id": 3004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6428:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															},
															"value": "Invalid pair"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1fc389bc00670d4c2895432c0160675ee55ab241421a2665fe34f10079e93332",
																"typeString": "literal_string \"Invalid pair\""
															}
														],
														"id": 3000,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6398:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6398:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3006,
												"nodeType": "ExpressionStatement",
												"src": "6398:45:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3008,
																"name": "source",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2994,
																"src": "6461:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3011,
																		"name": "priceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2592,
																		"src": "6479:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_AggregatorV3Interface_$103",
																			"typeString": "contract AggregatorV3Interface"
																		}
																	],
																	"id": 3010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6471:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3009,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6471:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 3012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6471:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6461:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736f75726365",
															"id": 3014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6491:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e",
																"typeString": "literal_string \"Invalid source\""
															},
															"value": "Invalid source"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3191da89117a1b0027f3623a186706fe04c82acd10c13dd219b922faa6967c0e",
																"typeString": "literal_string \"Invalid source\""
															}
														],
														"id": 3007,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6453:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6453:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3016,
												"nodeType": "ExpressionStatement",
												"src": "6453:55:10"
											}
										]
									},
									"functionSelector": "01e9492f",
									"id": 3018,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2997,
												"name": "onlyOwner",
												"nameLocations": [
													"6378:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "6378:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6378:9:10"
										}
									],
									"name": "removeOracleSource",
									"nameLocation": "6306:18:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2996,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6369:8:10"
									},
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "6333:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "6325:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2991,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6325:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "source",
												"nameLocation": "6347:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "6339:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:30:10"
									},
									"returnParameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6388:0:10"
									},
									"scope": 3041,
									"src": "6297:273:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3030,
										"nodeType": "Block",
										"src": "6612:68:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3023,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "6622:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6622:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3025,
												"nodeType": "ExpressionStatement",
												"src": "6622:8:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3027,
															"name": "EUR_USD_PAIR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2598,
															"src": "6660:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3026,
														"name": "EmergencyPause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "6645:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 3028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6645:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3029,
												"nodeType": "EmitStatement",
												"src": "6640:33:10"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3031,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3021,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3020,
												"name": "onlyOwner",
												"nameLocations": [
													"6602:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "6602:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6602:9:10"
										}
									],
									"name": "pause",
									"nameLocation": "6585:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6590:2:10"
									},
									"returnParameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6612:0:10"
									},
									"scope": 3041,
									"src": "6576:104:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3039,
										"nodeType": "Block",
										"src": "6724:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3036,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "6734:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6734:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3038,
												"nodeType": "ExpressionStatement",
												"src": "6734:10:10"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3040,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3034,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3033,
												"name": "onlyOwner",
												"nameLocations": [
													"6714:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "6714:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6714:9:10"
										}
									],
									"name": "unpause",
									"nameLocation": "6695:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6702:2:10"
									},
									"returnParameters": {
										"id": 3035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6724:0:10"
									},
									"scope": 3041,
									"src": "6686:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3042,
							"src": "2047:4706:10",
							"usedErrors": [
								213,
								218,
								565,
								577
							],
							"usedEvents": [
								224,
								358,
								363,
								2493,
								2615,
								2619
							]
						}
					],
					"src": "32:6721:10"
				},
				"id": 10
			},
			"quantum/UBI4ALLQuantumFinance.sol": {
				"ast": {
					"absolutePath": "quantum/UBI4ALLQuantumFinance.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							103
						],
						"Context": [
							550
						],
						"IUBI4ALLOracle": [
							2572
						],
						"IUBI4ALLQuantum": [
							2468
						],
						"IUBI4ALLQuantumFinance": [
							2476
						],
						"Ownable": [
							347
						],
						"Pausable": [
							455
						],
						"ReentrancyGuard": [
							520
						],
						"SafeCast": [
							2315
						],
						"UBI4ALLOracle": [
							3041
						],
						"UBI4ALLQuantumFinance": [
							3861
						],
						"VRFConsumerBaseV2": [
							57
						],
						"VRFCoordinatorV2Interface": [
							199
						]
					},
					"id": 3862,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3043,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3862,
							"sourceUnit": 348,
							"src": "58:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
							"file": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol",
							"id": 3045,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3862,
							"sourceUnit": 58,
							"src": "111:61:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
							"id": 3046,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3862,
							"sourceUnit": 200,
							"src": "173:80:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IUBI4ALLQuantum.sol",
							"file": "../interfaces/IUBI4ALLQuantum.sol",
							"id": 3047,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3862,
							"sourceUnit": 2469,
							"src": "254:43:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "oracle/UBI4ALLOracle.sol",
							"file": "../oracle/UBI4ALLOracle.sol",
							"id": 3048,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3862,
							"sourceUnit": 3042,
							"src": "298:37:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IUBI4ALLQuantumFinance.sol",
							"file": "../interfaces/IUBI4ALLQuantumFinance.sol",
							"id": 3049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3862,
							"sourceUnit": 2477,
							"src": "336:50:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3051,
										"name": "Ownable",
										"nameLocations": [
											"619:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 347,
										"src": "619:7:11"
									},
									"id": 3052,
									"nodeType": "InheritanceSpecifier",
									"src": "619:7:11"
								},
								{
									"baseName": {
										"id": 3053,
										"name": "VRFConsumerBaseV2",
										"nameLocations": [
											"628:17:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 57,
										"src": "628:17:11"
									},
									"id": 3054,
									"nodeType": "InheritanceSpecifier",
									"src": "628:17:11"
								},
								{
									"baseName": {
										"id": 3055,
										"name": "IUBI4ALLQuantumFinance",
										"nameLocations": [
											"647:22:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2476,
										"src": "647:22:11"
									},
									"id": 3056,
									"nodeType": "InheritanceSpecifier",
									"src": "647:22:11"
								}
							],
							"canonicalName": "UBI4ALLQuantumFinance",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3050,
								"nodeType": "StructuredDocumentation",
								"src": "388:197:11",
								"text": "@title UBI4ALLQuantumFinance - Contratto di staking e finanza per il token Q4A\n @notice Gestisce lo staking di token Q4A con APY variabile basato su VRF Chainlink e volatilità dell'oracolo"
							},
							"fullyImplemented": true,
							"id": 3861,
							"linearizedBaseContracts": [
								3861,
								2476,
								57,
								347,
								550
							],
							"name": "UBI4ALLQuantumFinance",
							"nameLocation": "594:21:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "93565b4c",
									"id": 3059,
									"mutability": "immutable",
									"name": "quantumToken",
									"nameLocation": "709:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "676:45:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
										"typeString": "contract IUBI4ALLQuantum"
									},
									"typeName": {
										"id": 3058,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3057,
											"name": "IUBI4ALLQuantum",
											"nameLocations": [
												"676:15:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2468,
											"src": "676:15:11"
										},
										"referencedDeclaration": 2468,
										"src": "676:15:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
											"typeString": "contract IUBI4ALLQuantum"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7dc0d1d0",
									"id": 3062,
									"mutability": "immutable",
									"name": "oracle",
									"nameLocation": "759:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "727:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUBI4ALLOracle_$2572",
										"typeString": "contract IUBI4ALLOracle"
									},
									"typeName": {
										"id": 3061,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3060,
											"name": "IUBI4ALLOracle",
											"nameLocations": [
												"727:14:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2572,
											"src": "727:14:11"
										},
										"referencedDeclaration": 2572,
										"src": "727:14:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUBI4ALLOracle_$2572",
											"typeString": "contract IUBI4ALLOracle"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b2bcbf1",
									"id": 3065,
									"mutability": "immutable",
									"name": "COORDINATOR",
									"nameLocation": "814:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "771:54:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$199",
										"typeString": "contract VRFCoordinatorV2Interface"
									},
									"typeName": {
										"id": 3064,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3063,
											"name": "VRFCoordinatorV2Interface",
											"nameLocations": [
												"771:25:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 199,
											"src": "771:25:11"
										},
										"referencedDeclaration": 199,
										"src": "771:25:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$199",
											"typeString": "contract VRFCoordinatorV2Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3066,
										"nodeType": "StructuredDocumentation",
										"src": "832:38:11",
										"text": "@dev APY base (10%, in base 10000)"
									},
									"functionSelector": "4ca19fd6",
									"id": 3069,
									"mutability": "constant",
									"name": "BASE_APY",
									"nameLocation": "899:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "875:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3067,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "875:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f3030",
										"id": 3068,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "910:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "10_00"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3070,
										"nodeType": "StructuredDocumentation",
										"src": "921:41:11",
										"text": "@dev APY per DAO (12%, in base 10000)"
									},
									"functionSelector": "27779748",
									"id": 3073,
									"mutability": "constant",
									"name": "DAO_APY",
									"nameLocation": "991:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "967:39:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3071,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "967:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31325f3030",
										"id": 3072,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1001:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1200_by_1",
											"typeString": "int_const 1200"
										},
										"value": "12_00"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3074,
										"nodeType": "StructuredDocumentation",
										"src": "1012:58:11",
										"text": "@dev Bonus massimo per volatilità (2%, in base 10000)"
									},
									"functionSelector": "b8ed3aad",
									"id": 3077,
									"mutability": "constant",
									"name": "VOLATILITY_BONUS",
									"nameLocation": "1099:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "1075:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3075,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1075:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "325f3030",
										"id": 3076,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1118:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200_by_1",
											"typeString": "int_const 200"
										},
										"value": "2_00"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3078,
										"nodeType": "StructuredDocumentation",
										"src": "1128:60:11",
										"text": "@dev APY minimo per staking standard (8%, in base 10000)"
									},
									"functionSelector": "07b2d32f",
									"id": 3081,
									"mutability": "constant",
									"name": "SUPERPOSITION_MIN",
									"nameLocation": "1217:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "1193:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3079,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1193:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "385f3030",
										"id": 3080,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1237:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_800_by_1",
											"typeString": "int_const 800"
										},
										"value": "8_00"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3082,
										"nodeType": "StructuredDocumentation",
										"src": "1247:62:11",
										"text": "@dev APY massimo per staking standard (14%, in base 10000)"
									},
									"functionSelector": "cb8b97f5",
									"id": 3085,
									"mutability": "constant",
									"name": "SUPERPOSITION_MAX",
									"nameLocation": "1338:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "1314:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3083,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1314:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31345f3030",
										"id": 3084,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1358:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1400_by_1",
											"typeString": "int_const 1400"
										},
										"value": "14_00"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3086,
										"nodeType": "StructuredDocumentation",
										"src": "1369:56:11",
										"text": "@dev APY minimo per staking DAO (10%, in base 10000)"
									},
									"functionSelector": "9da378ab",
									"id": 3089,
									"mutability": "constant",
									"name": "DAO_SUPERPOSITION_MIN",
									"nameLocation": "1454:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "1430:53:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3087,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1430:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f3030",
										"id": 3088,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1478:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "10_00"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3090,
										"nodeType": "StructuredDocumentation",
										"src": "1489:57:11",
										"text": "@dev APY massimo per staking DAO (16%, in base 10000)"
									},
									"functionSelector": "c75a0715",
									"id": 3093,
									"mutability": "constant",
									"name": "DAO_SUPERPOSITION_MAX",
									"nameLocation": "1575:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "1551:53:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3091,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1551:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31365f3030",
										"id": 3092,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1599:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1600_by_1",
											"typeString": "int_const 1600"
										},
										"value": "16_00"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3094,
										"nodeType": "StructuredDocumentation",
										"src": "1610:52:11",
										"text": "@dev Intervallo di aggiornamento APY (30 giorni)"
									},
									"functionSelector": "89ac4147",
									"id": 3097,
									"mutability": "constant",
									"name": "UPDATE_INTERVAL",
									"nameLocation": "1691:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "1667:49:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3095,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1667:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 3096,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1709:7:11",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "UBI4ALLQuantumFinance.Stake",
									"documentation": {
										"id": 3098,
										"nodeType": "StructuredDocumentation",
										"src": "1723:44:11",
										"text": "@dev Struttura per lo stake di un utente"
									},
									"id": 3109,
									"members": [
										{
											"constant": false,
											"id": 3100,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1803:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 3109,
											"src": "1795:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3099,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1795:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3102,
											"mutability": "mutable",
											"name": "daoAmount",
											"nameLocation": "1854:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 3109,
											"src": "1846:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1846:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3104,
											"mutability": "mutable",
											"name": "lastUpdate",
											"nameLocation": "1907:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 3109,
											"src": "1899:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1899:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3106,
											"mutability": "mutable",
											"name": "accumulatedReward",
											"nameLocation": "1974:17:11",
											"nodeType": "VariableDeclaration",
											"scope": 3109,
											"src": "1966:25:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3105,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1966:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3108,
											"mutability": "mutable",
											"name": "currentAPY",
											"nameLocation": "2034:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 3109,
											"src": "2026:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3107,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2026:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1779:5:11",
									"nodeType": "StructDefinition",
									"scope": 3861,
									"src": "1772:295:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3110,
										"nodeType": "StructuredDocumentation",
										"src": "2073:41:11",
										"text": "@dev Mappatura degli stake per utente"
									},
									"functionSelector": "16934fc4",
									"id": 3115,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "2152:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "2119:39:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
										"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake)"
									},
									"typeName": {
										"id": 3114,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3111,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2127:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2119:25:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
											"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3113,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3112,
												"name": "Stake",
												"nameLocations": [
													"2138:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3109,
												"src": "2138:5:11"
											},
											"referencedDeclaration": 3109,
											"src": "2138:5:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
												"typeString": "struct UBI4ALLQuantumFinance.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3116,
										"nodeType": "StructuredDocumentation",
										"src": "2164:32:11",
										"text": "@dev Totale dei token staked"
									},
									"functionSelector": "ec18154e",
									"id": 3118,
									"mutability": "mutable",
									"name": "totalValueLocked",
									"nameLocation": "2216:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "2201:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3117,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2201:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3119,
										"nodeType": "StructuredDocumentation",
										"src": "2238:49:11",
										"text": "@dev Mappatura delle richieste VRF per utente"
									},
									"functionSelector": "3e2f7eb5",
									"id": 3123,
									"mutability": "mutable",
									"name": "requestToUser",
									"nameLocation": "2327:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "2292:48:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 3122,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3120,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2300:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2292:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2311:7:11",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3124,
										"nodeType": "StructuredDocumentation",
										"src": "2346:24:11",
										"text": "@dev Gas key per VRF"
									},
									"functionSelector": "61728f39",
									"id": 3126,
									"mutability": "immutable",
									"name": "keyHash",
									"nameLocation": "2400:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "2375:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3125,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2375:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3127,
										"nodeType": "StructuredDocumentation",
										"src": "2413:36:11",
										"text": "@dev ID della sottoscrizione VRF"
									},
									"functionSelector": "09c1ba2e",
									"id": 3129,
									"mutability": "immutable",
									"name": "subscriptionId",
									"nameLocation": "2478:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "2454:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 3128,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "2454:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3130,
										"nodeType": "StructuredDocumentation",
										"src": "2498:42:11",
										"text": "@dev Limite di gas per il callback VRF"
									},
									"functionSelector": "24f74697",
									"id": 3133,
									"mutability": "mutable",
									"name": "callbackGasLimit",
									"nameLocation": "2559:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "2545:40:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 3131,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "2545:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "3130305f303030",
										"id": 3132,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2578:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000_by_1",
											"typeString": "int_const 100000"
										},
										"value": "100_000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3134,
										"nodeType": "StructuredDocumentation",
										"src": "2591:45:11",
										"text": "@dev Numero di conferme richieste per VRF"
									},
									"functionSelector": "b0fb162f",
									"id": 3137,
									"mutability": "mutable",
									"name": "requestConfirmations",
									"nameLocation": "2655:20:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "2641:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 3135,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2641:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 3136,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2678:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3138,
										"nodeType": "StructuredDocumentation",
										"src": "2685:43:11",
										"text": "@dev Numero di parole casuali richieste"
									},
									"functionSelector": "7ccfd7fc",
									"id": 3141,
									"mutability": "mutable",
									"name": "numWords",
									"nameLocation": "2747:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 3861,
									"src": "2733:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 3139,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "2733:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 3140,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2758:1:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3142,
										"nodeType": "StructuredDocumentation",
										"src": "2766:54:11",
										"text": "@notice Evento emesso quando un utente stake token"
									},
									"eventSelector": "37d4053e34fde482e96f6bcd424dfa31342cbd5fe184d497fb3c8bb4b4b97580",
									"id": 3150,
									"name": "Staked",
									"nameLocation": "2831:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3144,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2854:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "2838:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2838:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3146,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2868:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "2860:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2860:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3148,
												"indexed": false,
												"mutability": "mutable",
												"name": "isDAO",
												"nameLocation": "2881:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "2876:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2876:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2837:50:11"
									},
									"src": "2825:63:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3151,
										"nodeType": "StructuredDocumentation",
										"src": "2893:56:11",
										"text": "@notice Evento emesso quando un utente preleva token"
									},
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 3157,
									"name": "Withdrawn",
									"nameLocation": "2960:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2986:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "2970:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2970:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3155,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3000:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3157,
												"src": "2992:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:38:11"
									},
									"src": "2954:54:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3158,
										"nodeType": "StructuredDocumentation",
										"src": "3013:61:11",
										"text": "@notice Evento emesso quando un utente reclama ricompense"
									},
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 3164,
									"name": "RewardClaimed",
									"nameLocation": "3085:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3160,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3115:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3164,
												"src": "3099:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3099:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3162,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3129:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3164,
												"src": "3121:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3098:38:11"
									},
									"src": "3079:58:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3165,
										"nodeType": "StructuredDocumentation",
										"src": "3142:68:11",
										"text": "@notice Evento emesso quando l'APY di un utente viene aggiornato"
									},
									"eventSelector": "95046b7fdb9bcf09cdb8b5e270934d955f51f771912290ff9a0020045195eee5",
									"id": 3171,
									"name": "APYUpdated",
									"nameLocation": "3221:10:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3167,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3248:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3171,
												"src": "3232:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3169,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAPY",
												"nameLocation": "3262:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3171,
												"src": "3254:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3254:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:38:11"
									},
									"src": "3215:55:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3172,
										"nodeType": "StructuredDocumentation",
										"src": "3275:70:11",
										"text": "@notice Evento emesso quando viene richiesta una nuova APY casuale"
									},
									"eventSelector": "05acec44d329e4dfea8e1a6dae4b0c46d76b2a92d3a747907a60dee7ad6809fd",
									"id": 3178,
									"name": "RandomAPYRequested",
									"nameLocation": "3356:18:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3174,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3391:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "3375:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3375:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3176,
												"indexed": false,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "3405:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3178,
												"src": "3397:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3397:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3374:41:11"
									},
									"src": "3350:66:11"
								},
								{
									"body": {
										"id": 3256,
										"nodeType": "Block",
										"src": "4054:460:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3201,
																"name": "_quantumToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3181,
																"src": "4072:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4097:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4089:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3202,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4089:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 3205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4089:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4072:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4101:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 3200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4064:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4064:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3209,
												"nodeType": "ExpressionStatement",
												"src": "4064:61:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3211,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "4143:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4162:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4154:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3212,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4154:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 3215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4154:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4143:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f7261636c652061646472657373",
															"id": 3217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4166:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3",
																"typeString": "literal_string \"Invalid oracle address\""
															},
															"value": "Invalid oracle address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3",
																"typeString": "literal_string \"Invalid oracle address\""
															}
														],
														"id": 3210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4135:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4135:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3219,
												"nodeType": "ExpressionStatement",
												"src": "4135:56:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3221,
																"name": "_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3185,
																"src": "4209:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4236:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4228:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3222,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4228:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 3225,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4228:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4209:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642056524620636f6f7264696e61746f722061646472657373",
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4240:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_625feeba8d1988c932c8496c5f7f610e9a69c12d4715b7bdbd4a8004c909c817",
																"typeString": "literal_string \"Invalid VRF coordinator address\""
															},
															"value": "Invalid VRF coordinator address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_625feeba8d1988c932c8496c5f7f610e9a69c12d4715b7bdbd4a8004c909c817",
																"typeString": "literal_string \"Invalid VRF coordinator address\""
															}
														],
														"id": 3220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4201:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4201:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3229,
												"nodeType": "ExpressionStatement",
												"src": "4201:73:11"
											},
											{
												"expression": {
													"id": 3234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3230,
														"name": "quantumToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3059,
														"src": "4284:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
															"typeString": "contract IUBI4ALLQuantum"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3232,
																"name": "_quantumToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3181,
																"src": "4315:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3231,
															"name": "IUBI4ALLQuantum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2468,
															"src": "4299:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUBI4ALLQuantum_$2468_$",
																"typeString": "type(contract IUBI4ALLQuantum)"
															}
														},
														"id": 3233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4299:30:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
															"typeString": "contract IUBI4ALLQuantum"
														}
													},
													"src": "4284:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
														"typeString": "contract IUBI4ALLQuantum"
													}
												},
												"id": 3235,
												"nodeType": "ExpressionStatement",
												"src": "4284:45:11"
											},
											{
												"expression": {
													"id": 3240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3236,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3062,
														"src": "4339:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUBI4ALLOracle_$2572",
															"typeString": "contract IUBI4ALLOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3238,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3183,
																"src": "4363:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3237,
															"name": "IUBI4ALLOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2572,
															"src": "4348:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUBI4ALLOracle_$2572_$",
																"typeString": "type(contract IUBI4ALLOracle)"
															}
														},
														"id": 3239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4348:23:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUBI4ALLOracle_$2572",
															"typeString": "contract IUBI4ALLOracle"
														}
													},
													"src": "4339:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUBI4ALLOracle_$2572",
														"typeString": "contract IUBI4ALLOracle"
													}
												},
												"id": 3241,
												"nodeType": "ExpressionStatement",
												"src": "4339:32:11"
											},
											{
												"expression": {
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3242,
														"name": "COORDINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3065,
														"src": "4381:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$199",
															"typeString": "contract VRFCoordinatorV2Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3244,
																"name": "_vrfCoordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3185,
																"src": "4421:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3243,
															"name": "VRFCoordinatorV2Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "4395:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_VRFCoordinatorV2Interface_$199_$",
																"typeString": "type(contract VRFCoordinatorV2Interface)"
															}
														},
														"id": 3245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4395:42:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$199",
															"typeString": "contract VRFCoordinatorV2Interface"
														}
													},
													"src": "4381:56:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$199",
														"typeString": "contract VRFCoordinatorV2Interface"
													}
												},
												"id": 3247,
												"nodeType": "ExpressionStatement",
												"src": "4381:56:11"
											},
											{
												"expression": {
													"id": 3250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3248,
														"name": "keyHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3126,
														"src": "4447:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3249,
														"name": "_keyHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3187,
														"src": "4457:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4447:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3251,
												"nodeType": "ExpressionStatement",
												"src": "4447:18:11"
											},
											{
												"expression": {
													"id": 3254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3252,
														"name": "subscriptionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3129,
														"src": "4475:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3253,
														"name": "_subscriptionId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3189,
														"src": "4492:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "4475:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 3255,
												"nodeType": "ExpressionStatement",
												"src": "4475:32:11"
											}
										]
									},
									"documentation": {
										"id": 3179,
										"nodeType": "StructuredDocumentation",
										"src": "3422:375:11",
										"text": "@notice Costruttore del contratto\n @param _quantumToken Indirizzo del contratto Q4A\n @param _oracle Indirizzo dell'oracolo\n @param _vrfCoordinator Indirizzo del coordinatore VRF Chainlink\n @param _keyHash Gas key per VRF\n @param _subscriptionId ID della sottoscrizione VRF\n @param initialOwner Indirizzo del proprietario iniziale"
									},
									"id": 3257,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3194,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3191,
													"src": "4005:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3195,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3193,
												"name": "Ownable",
												"nameLocations": [
													"3997:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 347,
												"src": "3997:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3997:21:11"
										},
										{
											"arguments": [
												{
													"id": 3197,
													"name": "_vrfCoordinator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3185,
													"src": "4037:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3198,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3196,
												"name": "VRFConsumerBaseV2",
												"nameLocations": [
													"4019:17:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4019:17:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4019:34:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "_quantumToken",
												"nameLocation": "3831:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "3823:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3823:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "3862:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "3854:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "_vrfCoordinator",
												"nameLocation": "3887:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "3879:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3187,
												"mutability": "mutable",
												"name": "_keyHash",
												"nameLocation": "3920:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "3912:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3912:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3189,
												"mutability": "mutable",
												"name": "_subscriptionId",
												"nameLocation": "3945:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "3938:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3188,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3938:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3191,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "3978:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "3970:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3813:183:11"
									},
									"returnParameters": {
										"id": 3199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4054:0:11"
									},
									"scope": 3861,
									"src": "3802:712:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3313,
										"nodeType": "Block",
										"src": "4661:359:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3264,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3260,
																"src": "4679:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4688:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4679:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 3267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4691:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 3263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4671:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4671:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3269,
												"nodeType": "ExpressionStatement",
												"src": "4671:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3271,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4730:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4734:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4730:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3270,
														"name": "updateStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3673,
														"src": "4718:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4718:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3274,
												"nodeType": "ExpressionStatement",
												"src": "4718:23:11"
											},
											{
												"expression": {
													"id": 3281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3275,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "4751:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																	"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																}
															},
															"id": 3278,
															"indexExpression": {
																"expression": {
																	"id": 3276,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4758:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4758:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4751:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage",
																"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
															}
														},
														"id": 3279,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4770:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3100,
														"src": "4751:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3280,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3260,
														"src": "4780:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4751:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3282,
												"nodeType": "ExpressionStatement",
												"src": "4751:35:11"
											},
											{
												"expression": {
													"id": 3285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3283,
														"name": "totalValueLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3118,
														"src": "4796:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3284,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3260,
														"src": "4816:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4796:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3286,
												"nodeType": "ExpressionStatement",
												"src": "4796:26:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3290,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4866:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4870:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4866:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3294,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4886:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_UBI4ALLQuantumFinance_$3861",
																				"typeString": "contract UBI4ALLQuantumFinance"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_UBI4ALLQuantumFinance_$3861",
																				"typeString": "contract UBI4ALLQuantumFinance"
																			}
																		],
																		"id": 3293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4878:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3292,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4878:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4878:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3296,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3260,
																	"src": "4893:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3288,
																	"name": "quantumToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3059,
																	"src": "4840:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
																		"typeString": "contract IUBI4ALLQuantum"
																	}
																},
																"id": 3289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4853:12:11",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2400,
																"src": "4840:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 3297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4840:60:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 3298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4902:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 3287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4832:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:88:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3300,
												"nodeType": "ExpressionStatement",
												"src": "4832:88:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4954:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4958:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4954:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3301,
														"name": "requestSuperpositionAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3517,
														"src": "4930:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4930:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3305,
												"nodeType": "ExpressionStatement",
												"src": "4930:35:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4987:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4991:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4987:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3309,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3260,
															"src": "4999:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 3310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5007:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3306,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "4980:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 3311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4980:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3312,
												"nodeType": "EmitStatement",
												"src": "4975:38:11"
											}
										]
									},
									"documentation": {
										"id": 3258,
										"nodeType": "StructuredDocumentation",
										"src": "4520:96:11",
										"text": "@notice Effettua lo staking di token Q4A\n @param amount Quantità di token da stakare"
									},
									"functionSelector": "a694fc3a",
									"id": 3314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "4630:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4644:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3314,
												"src": "4636:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4636:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:16:11"
									},
									"returnParameters": {
										"id": 3262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4661:0:11"
									},
									"scope": 3861,
									"src": "4621:399:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3376,
										"nodeType": "Block",
										"src": "5184:402:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3321,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3317,
																"src": "5202:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5211:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5202:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 3324,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5214:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 3320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5194:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5194:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3326,
												"nodeType": "ExpressionStatement",
												"src": "5194:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3328,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5253:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5257:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5253:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3327,
														"name": "updateStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3673,
														"src": "5241:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5241:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3331,
												"nodeType": "ExpressionStatement",
												"src": "5241:23:11"
											},
											{
												"expression": {
													"id": 3338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3332,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "5274:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																	"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																}
															},
															"id": 3335,
															"indexExpression": {
																"expression": {
																	"id": 3333,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5281:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5285:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5281:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5274:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage",
																"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
															}
														},
														"id": 3336,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5293:9:11",
														"memberName": "daoAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3102,
														"src": "5274:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3337,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3317,
														"src": "5306:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5274:38:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3339,
												"nodeType": "ExpressionStatement",
												"src": "5274:38:11"
											},
											{
												"expression": {
													"id": 3342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3340,
														"name": "totalValueLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3118,
														"src": "5322:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 3341,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3317,
														"src": "5342:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5322:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3343,
												"nodeType": "ExpressionStatement",
												"src": "5322:26:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3347,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5392:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5396:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5392:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3351,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5412:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_UBI4ALLQuantumFinance_$3861",
																				"typeString": "contract UBI4ALLQuantumFinance"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_UBI4ALLQuantumFinance_$3861",
																				"typeString": "contract UBI4ALLQuantumFinance"
																			}
																		],
																		"id": 3350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5404:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3349,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5404:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5404:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3353,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3317,
																	"src": "5419:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3345,
																	"name": "quantumToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3059,
																	"src": "5366:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
																		"typeString": "contract IUBI4ALLQuantum"
																	}
																},
																"id": 3346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5379:12:11",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2400,
																"src": "5366:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 3354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5366:60:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 3355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5428:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 3344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5358:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5358:88:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3357,
												"nodeType": "ExpressionStatement",
												"src": "5358:88:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3361,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "5480:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3358,
															"name": "quantumToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3059,
															"src": "5456:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
																"typeString": "contract IUBI4ALLQuantum"
															}
														},
														"id": 3360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5469:10:11",
														"memberName": "lockForDAO",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2455,
														"src": "5456:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 3362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5456:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3363,
												"nodeType": "ExpressionStatement",
												"src": "5456:31:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3365,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5521:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5525:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5521:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3364,
														"name": "requestSuperpositionAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3517,
														"src": "5497:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5497:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3368,
												"nodeType": "ExpressionStatement",
												"src": "5497:35:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3370,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5554:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5558:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5554:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3372,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3317,
															"src": "5566:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5574:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3369,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "5547:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 3374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5547:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3375,
												"nodeType": "EmitStatement",
												"src": "5542:37:11"
											}
										]
									},
									"documentation": {
										"id": 3315,
										"nodeType": "StructuredDocumentation",
										"src": "5026:107:11",
										"text": "@notice Effettua lo staking di token Q4A per la DAO\n @param amount Quantità di token da stakare"
									},
									"functionSelector": "b94790a4",
									"id": 3377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeForDAO",
									"nameLocation": "5147:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3317,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5167:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3377,
												"src": "5159:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5159:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5158:16:11"
									},
									"returnParameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5184:0:11"
									},
									"scope": 3861,
									"src": "5138:448:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3427,
										"nodeType": "Block",
										"src": "5726:328:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5748:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5752:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5748:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3383,
														"name": "updateStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3673,
														"src": "5736:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5736:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3387,
												"nodeType": "ExpressionStatement",
												"src": "5736:23:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3389,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3115,
																		"src": "5777:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																			"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																		}
																	},
																	"id": 3392,
																	"indexExpression": {
																		"expression": {
																			"id": 3390,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5784:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5788:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5784:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5777:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$3109_storage",
																		"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
																	}
																},
																"id": 3393,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5796:6:11",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3100,
																"src": "5777:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 3394,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3380,
																"src": "5806:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5777:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b656420616d6f756e74",
															"id": 3396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5814:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															},
															"value": "Insufficient staked amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dd13570e20c96a9bfc56c79d1eb9235438d62a04250ac67a0d9f423a83cdc16",
																"typeString": "literal_string \"Insufficient staked amount\""
															}
														],
														"id": 3388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5769:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5769:74:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3398,
												"nodeType": "ExpressionStatement",
												"src": "5769:74:11"
											},
											{
												"expression": {
													"id": 3405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3399,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "5853:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																	"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																}
															},
															"id": 3402,
															"indexExpression": {
																"expression": {
																	"id": 3400,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5860:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5864:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5860:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5853:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage",
																"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
															}
														},
														"id": 3403,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5872:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3100,
														"src": "5853:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 3404,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3380,
														"src": "5882:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5853:35:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3406,
												"nodeType": "ExpressionStatement",
												"src": "5853:35:11"
											},
											{
												"expression": {
													"id": 3409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3407,
														"name": "totalValueLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3118,
														"src": "5898:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 3408,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3380,
														"src": "5918:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5898:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3410,
												"nodeType": "ExpressionStatement",
												"src": "5898:26:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3414,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5964:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5968:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5964:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3416,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3380,
																	"src": "5976:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3412,
																	"name": "quantumToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3059,
																	"src": "5942:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
																		"typeString": "contract IUBI4ALLQuantum"
																	}
																},
																"id": 3413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5955:8:11",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2389,
																"src": "5942:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 3417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5942:41:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 3418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5985:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 3411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5934:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5934:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3420,
												"nodeType": "ExpressionStatement",
												"src": "5934:69:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3422,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6028:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6028:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3424,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3380,
															"src": "6040:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3421,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3157,
														"src": "6018:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6018:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3426,
												"nodeType": "EmitStatement",
												"src": "6013:34:11"
											}
										]
									},
									"documentation": {
										"id": 3378,
										"nodeType": "StructuredDocumentation",
										"src": "5592:86:11",
										"text": "@notice Preleva token staked\n @param amount Quantità di token da prelevare"
									},
									"functionSelector": "2e1a7d4d",
									"id": 3428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "5692:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3380,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5709:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3428,
												"src": "5701:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5700:16:11"
									},
									"returnParameters": {
										"id": 3382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5726:0:11"
									},
									"scope": 3861,
									"src": "5683:371:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3476,
										"nodeType": "Block",
										"src": "6141:332:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6163:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6167:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6163:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3432,
														"name": "updateStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3673,
														"src": "6151:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3436,
												"nodeType": "ExpressionStatement",
												"src": "6151:23:11"
											},
											{
												"assignments": [
													3438
												],
												"declarations": [
													{
														"constant": false,
														"id": 3438,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6192:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3476,
														"src": "6184:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6184:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3444,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3439,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3115,
															"src": "6201:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
															}
														},
														"id": 3442,
														"indexExpression": {
															"expression": {
																"id": 3440,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6208:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6212:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6208:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6201:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$3109_storage",
															"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
														}
													},
													"id": 3443,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6220:17:11",
													"memberName": "accumulatedReward",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3106,
													"src": "6201:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6184:53:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3446,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3438,
																"src": "6255:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6264:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6255:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f20636c61696d",
															"id": 3449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6267:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															},
															"value": "No rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															}
														],
														"id": 3445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6247:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6247:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3451,
												"nodeType": "ExpressionStatement",
												"src": "6247:42:11"
											},
											{
												"expression": {
													"id": 3458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3452,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "6299:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																	"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																}
															},
															"id": 3455,
															"indexExpression": {
																"expression": {
																	"id": 3453,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6306:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6310:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6306:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6299:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage",
																"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
															}
														},
														"id": 3456,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6318:17:11",
														"memberName": "accumulatedReward",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3106,
														"src": "6299:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6338:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6299:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3459,
												"nodeType": "ExpressionStatement",
												"src": "6299:40:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3463,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6379:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6383:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6379:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3465,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3438,
																	"src": "6391:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3461,
																	"name": "quantumToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3059,
																	"src": "6357:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUBI4ALLQuantum_$2468",
																		"typeString": "contract IUBI4ALLQuantum"
																	}
																},
																"id": 3462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6370:8:11",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2389,
																"src": "6357:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 3466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6357:41:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 3467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6400:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 3460,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6349:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6349:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3469,
												"nodeType": "ExpressionStatement",
												"src": "6349:69:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 3471,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6447:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6451:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6447:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3473,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3438,
															"src": "6459:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3470,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3164,
														"src": "6433:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6433:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3475,
												"nodeType": "EmitStatement",
												"src": "6428:38:11"
											}
										]
									},
									"documentation": {
										"id": 3429,
										"nodeType": "StructuredDocumentation",
										"src": "6060:44:11",
										"text": "@notice Reclama le ricompense accumulate"
									},
									"functionSelector": "b88a802f",
									"id": 3477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimReward",
									"nameLocation": "6118:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6129:2:11"
									},
									"returnParameters": {
										"id": 3431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6141:0:11"
									},
									"scope": 3861,
									"src": "6109:364:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3516,
										"nodeType": "Block",
										"src": "6645:425:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3483,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6659:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6665:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6659:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3485,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3115,
																	"src": "6678:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																		"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																	}
																},
																"id": 3487,
																"indexExpression": {
																	"id": 3486,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3480,
																	"src": "6685:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6678:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$3109_storage",
																	"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
																}
															},
															"id": 3488,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6691:10:11",
															"memberName": "lastUpdate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3104,
															"src": "6678:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3489,
															"name": "UPDATE_INTERVAL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3097,
															"src": "6704:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6678:41:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6659:60:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3515,
												"nodeType": "IfStatement",
												"src": "6655:409:11",
												"trueBody": {
													"id": 3514,
													"nodeType": "Block",
													"src": "6721:343:11",
													"statements": [
														{
															"assignments": [
																3493
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3493,
																	"mutability": "mutable",
																	"name": "requestId",
																	"nameLocation": "6743:9:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 3514,
																	"src": "6735:17:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3492,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6735:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3502,
															"initialValue": {
																"arguments": [
																	{
																		"id": 3496,
																		"name": "keyHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3126,
																		"src": "6803:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 3497,
																		"name": "subscriptionId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3129,
																		"src": "6828:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	},
																	{
																		"id": 3498,
																		"name": "requestConfirmations",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3137,
																		"src": "6860:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	{
																		"id": 3499,
																		"name": "callbackGasLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3133,
																		"src": "6898:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"id": 3500,
																		"name": "numWords",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3141,
																		"src": "6932:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	],
																	"expression": {
																		"id": 3494,
																		"name": "COORDINATOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3065,
																		"src": "6755:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_VRFCoordinatorV2Interface_$199",
																			"typeString": "contract VRFCoordinatorV2Interface"
																		}
																	},
																	"id": 3495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6767:18:11",
																	"memberName": "requestRandomWords",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "6755:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$",
																		"typeString": "function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"
																	}
																},
																"id": 3501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6755:199:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6735:219:11"
														},
														{
															"expression": {
																"id": 3507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3503,
																		"name": "requestToUser",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3123,
																		"src": "6968:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 3505,
																	"indexExpression": {
																		"id": 3504,
																		"name": "requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3493,
																		"src": "6982:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6968:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3506,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3480,
																	"src": "6995:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6968:31:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3508,
															"nodeType": "ExpressionStatement",
															"src": "6968:31:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3510,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3480,
																		"src": "7037:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3511,
																		"name": "requestId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3493,
																		"src": "7043:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3509,
																	"name": "RandomAPYRequested",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3178,
																	"src": "7018:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 3512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7018:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3513,
															"nodeType": "EmitStatement",
															"src": "7013:40:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3478,
										"nodeType": "StructuredDocumentation",
										"src": "6479:105:11",
										"text": "@notice Richiede un nuovo APY casuale tramite VRF Chainlink\n @param user Indirizzo dell'utente"
									},
									"id": 3517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestSuperpositionAPY",
									"nameLocation": "6598:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3480,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6630:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3517,
												"src": "6622:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6622:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6621:14:11"
									},
									"returnParameters": {
										"id": 3482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6645:0:11"
									},
									"scope": 3861,
									"src": "6589:481:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										30
									],
									"body": {
										"id": 3612,
										"nodeType": "Block",
										"src": "7320:615:11",
										"statements": [
											{
												"assignments": [
													3528
												],
												"declarations": [
													{
														"constant": false,
														"id": 3528,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7338:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "7330:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7330:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3532,
												"initialValue": {
													"baseExpression": {
														"id": 3529,
														"name": "requestToUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3123,
														"src": "7345:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 3531,
													"indexExpression": {
														"id": 3530,
														"name": "requestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3520,
														"src": "7359:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7345:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7330:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3534,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3528,
																"src": "7387:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7403:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7395:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3535,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7395:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 3538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7395:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7387:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657175657374204944",
															"id": 3540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7407:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82",
																"typeString": "literal_string \"Invalid request ID\""
															},
															"value": "Invalid request ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fe5b51659b77963fefd5a885289e5d9edfecd23ba844cc064e0fb0d9e0b7fe82",
																"typeString": "literal_string \"Invalid request ID\""
															}
														],
														"id": 3533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7379:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7379:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3542,
												"nodeType": "ExpressionStatement",
												"src": "7379:49:11"
											},
											{
												"assignments": [
													3544
												],
												"declarations": [
													{
														"constant": false,
														"id": 3544,
														"mutability": "mutable",
														"name": "randomValue",
														"nameLocation": "7446:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "7438:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7438:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3550,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 3545,
															"name": "randomWords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3523,
															"src": "7460:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 3547,
														"indexExpression": {
															"hexValue": "30",
															"id": 3546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7472:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7460:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "313030",
														"id": 3548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7477:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "7460:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7438:42:11"
											},
											{
												"assignments": [
													3552
												],
												"declarations": [
													{
														"constant": false,
														"id": 3552,
														"mutability": "mutable",
														"name": "apyRange",
														"nameLocation": "7498:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "7490:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7490:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3566,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3553,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3115,
																	"src": "7509:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																		"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																	}
																},
																"id": 3555,
																"indexExpression": {
																	"id": 3554,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3528,
																	"src": "7516:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7509:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$3109_storage",
																	"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
																}
															},
															"id": 3556,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7522:9:11",
															"memberName": "daoAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3102,
															"src": "7509:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7534:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "7509:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3562,
															"name": "SUPERPOSITION_MAX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3085,
															"src": "7586:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 3563,
															"name": "SUPERPOSITION_MIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3081,
															"src": "7606:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7586:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7509:114:11",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3559,
															"name": "DAO_SUPERPOSITION_MAX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3093,
															"src": "7538:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 3560,
															"name": "DAO_SUPERPOSITION_MIN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3089,
															"src": "7562:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7538:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7490:133:11"
											},
											{
												"assignments": [
													3568
												],
												"declarations": [
													{
														"constant": false,
														"id": 3568,
														"mutability": "mutable",
														"name": "newAPY",
														"nameLocation": "7641:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3612,
														"src": "7633:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3567,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7633:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3586,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3569,
																		"name": "randomValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3544,
																		"src": "7651:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3570,
																		"name": "apyRange",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3552,
																		"src": "7665:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7651:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 3572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7676:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "7651:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3574,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7650:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3575,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3115,
																				"src": "7684:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																					"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																				}
																			},
																			"id": 3577,
																			"indexExpression": {
																				"id": 3576,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3528,
																				"src": "7691:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7684:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$3109_storage",
																				"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
																			}
																		},
																		"id": 3578,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7697:9:11",
																		"memberName": "daoAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3102,
																		"src": "7684:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7709:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "7684:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 3582,
																	"name": "SUPERPOSITION_MIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3081,
																	"src": "7737:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "7684:70:11",
																"trueExpression": {
																	"id": 3581,
																	"name": "DAO_SUPERPOSITION_MIN",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3089,
																	"src": "7713:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3584,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7683:72:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7650:105:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7633:122:11"
											},
											{
												"expression": {
													"id": 3592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3587,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "7765:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																	"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																}
															},
															"id": 3589,
															"indexExpression": {
																"id": 3588,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3528,
																"src": "7772:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7765:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage",
																"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
															}
														},
														"id": 3590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7778:10:11",
														"memberName": "currentAPY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3108,
														"src": "7765:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3591,
														"name": "newAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3568,
														"src": "7791:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7765:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3593,
												"nodeType": "ExpressionStatement",
												"src": "7765:32:11"
											},
											{
												"expression": {
													"id": 3600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3594,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "7807:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																	"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																}
															},
															"id": 3596,
															"indexExpression": {
																"id": 3595,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3528,
																"src": "7814:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7807:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage",
																"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
															}
														},
														"id": 3597,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7820:10:11",
														"memberName": "lastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3104,
														"src": "7807:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3598,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7833:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7839:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7833:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7807:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3601,
												"nodeType": "ExpressionStatement",
												"src": "7807:41:11"
											},
											{
												"expression": {
													"id": 3605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "7858:31:11",
													"subExpression": {
														"baseExpression": {
															"id": 3602,
															"name": "requestToUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3123,
															"src": "7865:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 3604,
														"indexExpression": {
															"id": 3603,
															"name": "requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3520,
															"src": "7879:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7865:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3606,
												"nodeType": "ExpressionStatement",
												"src": "7858:31:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3608,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3528,
															"src": "7915:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3609,
															"name": "newAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3568,
															"src": "7921:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3607,
														"name": "APYUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3171,
														"src": "7904:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7904:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3611,
												"nodeType": "EmitStatement",
												"src": "7899:29:11"
											}
										]
									},
									"documentation": {
										"id": 3518,
										"nodeType": "StructuredDocumentation",
										"src": "7076:144:11",
										"text": "@notice Callback VRF per aggiornare l'APY\n @param requestId ID della richiesta VRF\n @param randomWords Parole casuali generate"
									},
									"id": 3613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "7234:18:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3525,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7311:8:11"
									},
									"parameters": {
										"id": 3524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3520,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "7261:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "7253:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7253:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3523,
												"mutability": "mutable",
												"name": "randomWords",
												"nameLocation": "7289:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 3613,
												"src": "7272:28:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3521,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7272:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3522,
													"nodeType": "ArrayTypeName",
													"src": "7272:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7252:49:11"
									},
									"returnParameters": {
										"id": 3526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7320:0:11"
									},
									"scope": 3861,
									"src": "7225:710:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3672,
										"nodeType": "Block",
										"src": "8070:413:11",
										"statements": [
											{
												"assignments": [
													3621
												],
												"declarations": [
													{
														"constant": false,
														"id": 3621,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "8090:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 3672,
														"src": "8076:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
															"typeString": "struct UBI4ALLQuantumFinance.Stake"
														},
														"typeName": {
															"id": 3620,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3619,
																"name": "Stake",
																"nameLocations": [
																	"8076:5:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3109,
																"src": "8076:5:11"
															},
															"referencedDeclaration": 3109,
															"src": "8076:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																"typeString": "struct UBI4ALLQuantumFinance.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3625,
												"initialValue": {
													"baseExpression": {
														"id": 3622,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3115,
														"src": "8102:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
															"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
														}
													},
													"id": 3624,
													"indexExpression": {
														"id": 3623,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3616,
														"src": "8109:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8102:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$3109_storage",
														"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8076:38:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3626,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3621,
																"src": "8124:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																	"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																}
															},
															"id": 3627,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8134:6:11",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3100,
															"src": "8124:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8143:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8124:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3630,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3621,
																"src": "8148:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																	"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																}
															},
															"id": 3631,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8158:9:11",
															"memberName": "daoAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3102,
															"src": "8148:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 3632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8170:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8148:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8124:47:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3671,
												"nodeType": "IfStatement",
												"src": "8120:361:11",
												"trueBody": {
													"id": 3670,
													"nodeType": "Block",
													"src": "8173:308:11",
													"statements": [
														{
															"assignments": [
																3636
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3636,
																	"mutability": "mutable",
																	"name": "baseReward",
																	"nameLocation": "8195:10:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 3670,
																	"src": "8187:18:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3635,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8187:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3644,
															"initialValue": {
																"arguments": [
																	{
																		"id": 3638,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3616,
																		"src": "8224:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 3639,
																			"name": "userStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3621,
																			"src": "8230:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																				"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																			}
																		},
																		"id": 3640,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8240:6:11",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3100,
																		"src": "8230:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3641,
																			"name": "userStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3621,
																			"src": "8248:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																				"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																			}
																		},
																		"id": 3642,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8258:10:11",
																		"memberName": "currentAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3108,
																		"src": "8248:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3637,
																	"name": "calculateReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3729,
																	"src": "8208:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 3643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8208:61:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8187:82:11"
														},
														{
															"assignments": [
																3646
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3646,
																	"mutability": "mutable",
																	"name": "daoReward",
																	"nameLocation": "8287:9:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 3670,
																	"src": "8279:17:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3645,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8279:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3654,
															"initialValue": {
																"arguments": [
																	{
																		"id": 3648,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3616,
																		"src": "8315:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 3649,
																			"name": "userStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3621,
																			"src": "8321:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																				"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																			}
																		},
																		"id": 3650,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8331:9:11",
																		"memberName": "daoAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3102,
																		"src": "8321:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3651,
																			"name": "userStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3621,
																			"src": "8342:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																				"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																			}
																		},
																		"id": 3652,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8352:10:11",
																		"memberName": "currentAPY",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3108,
																		"src": "8342:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3647,
																	"name": "calculateReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3729,
																	"src": "8299:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 3653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8299:64:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8279:84:11"
														},
														{
															"expression": {
																"id": 3661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3655,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3621,
																		"src": "8373:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																			"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																		}
																	},
																	"id": 3657,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8383:17:11",
																	"memberName": "accumulatedReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3106,
																	"src": "8373:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3658,
																		"name": "baseReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3636,
																		"src": "8404:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 3659,
																		"name": "daoReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3646,
																		"src": "8417:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8404:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8373:53:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3662,
															"nodeType": "ExpressionStatement",
															"src": "8373:53:11"
														},
														{
															"expression": {
																"id": 3668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3663,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3621,
																		"src": "8436:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																			"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																		}
																	},
																	"id": 3665,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8446:10:11",
																	"memberName": "lastUpdate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3104,
																	"src": "8436:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3666,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "8459:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8465:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "8459:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8436:38:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3669,
															"nodeType": "ExpressionStatement",
															"src": "8436:38:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3614,
										"nodeType": "StructuredDocumentation",
										"src": "7941:85:11",
										"text": "@notice Aggiorna lo stake di un utente\n @param user Indirizzo dell'utente"
									},
									"id": 3673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateStake",
									"nameLocation": "8035:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "8055:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3673,
												"src": "8047:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8047:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8046:14:11"
									},
									"returnParameters": {
										"id": 3618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8070:0:11"
									},
									"scope": 3861,
									"src": "8026:457:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3728,
										"nodeType": "Block",
										"src": "8797:335:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3685,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3678,
														"src": "8811:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8821:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8811:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3690,
												"nodeType": "IfStatement",
												"src": "8807:25:11",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 3688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8831:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 3684,
													"id": 3689,
													"nodeType": "Return",
													"src": "8824:8:11"
												}
											},
											{
												"assignments": [
													3692
												],
												"declarations": [
													{
														"constant": false,
														"id": 3692,
														"mutability": "mutable",
														"name": "volatilityBonus",
														"nameLocation": "8850:15:11",
														"nodeType": "VariableDeclaration",
														"scope": 3728,
														"src": "8842:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8842:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3695,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3693,
														"name": "predictVolatility",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3752,
														"src": "8868:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8868:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8842:45:11"
											},
											{
												"assignments": [
													3697
												],
												"declarations": [
													{
														"constant": false,
														"id": 3697,
														"mutability": "mutable",
														"name": "totalAPY",
														"nameLocation": "8905:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 3728,
														"src": "8897:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8897:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3701,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3698,
														"name": "apy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3680,
														"src": "8916:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3699,
														"name": "volatilityBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3692,
														"src": "8922:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8916:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8897:40:11"
											},
											{
												"assignments": [
													3704
												],
												"declarations": [
													{
														"constant": false,
														"id": 3704,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "8961:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 3728,
														"src": "8947:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
															"typeString": "struct UBI4ALLQuantumFinance.Stake"
														},
														"typeName": {
															"id": 3703,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3702,
																"name": "Stake",
																"nameLocations": [
																	"8947:5:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3109,
																"src": "8947:5:11"
															},
															"referencedDeclaration": 3109,
															"src": "8947:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																"typeString": "struct UBI4ALLQuantumFinance.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3708,
												"initialValue": {
													"baseExpression": {
														"id": 3705,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3115,
														"src": "8973:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
															"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
														}
													},
													"id": 3707,
													"indexExpression": {
														"id": 3706,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3676,
														"src": "8980:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8973:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$3109_storage",
														"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8947:38:11"
											},
											{
												"assignments": [
													3710
												],
												"declarations": [
													{
														"constant": false,
														"id": 3710,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "9003:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 3728,
														"src": "8995:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3709,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8995:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3716,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3711,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9017:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9023:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9017:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 3713,
															"name": "userStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3704,
															"src": "9035:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
															}
														},
														"id": 3714,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9045:10:11",
														"memberName": "lastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3104,
														"src": "9035:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9017:38:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8995:60:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3717,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3678,
																			"src": "9073:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 3718,
																			"name": "totalAPY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3697,
																			"src": "9082:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9073:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 3720,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3710,
																		"src": "9093:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9073:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "333635",
																	"id": 3722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9107:8:11",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"src": "9073:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3724,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9072:44:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31305f303030",
														"id": 3725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9119:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10_000"
													},
													"src": "9072:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3684,
												"id": 3727,
												"nodeType": "Return",
												"src": "9065:60:11"
											}
										]
									},
									"documentation": {
										"id": 3674,
										"nodeType": "StructuredDocumentation",
										"src": "8489:203:11",
										"text": "@notice Calcola le ricompense per un importo staked\n @param user Indirizzo dell'utente\n @param amount Importo staked\n @param apy APY corrente\n @return Ricompensa calcolata"
									},
									"id": 3729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "8706:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3676,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "8730:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3729,
												"src": "8722:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8722:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3678,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8744:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3729,
												"src": "8736:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8736:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3680,
												"mutability": "mutable",
												"name": "apy",
												"nameLocation": "8760:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3729,
												"src": "8752:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8752:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8721:43:11"
									},
									"returnParameters": {
										"id": 3684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3729,
												"src": "8788:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8788:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8787:9:11"
									},
									"scope": 3861,
									"src": "8697:435:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3751,
										"nodeType": "Block",
										"src": "9295:176:11",
										"statements": [
											{
												"assignments": [
													3736
												],
												"declarations": [
													{
														"constant": false,
														"id": 3736,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "9312:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3751,
														"src": "9305:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3735,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "9305:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3740,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3737,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3062,
															"src": "9320:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUBI4ALLOracle_$2572",
																"typeString": "contract IUBI4ALLOracle"
															}
														},
														"id": 3738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9327:14:11",
														"memberName": "getLatestPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2571,
														"src": "9320:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
															"typeString": "function () view external returns (int256)"
														}
													},
													"id": 3739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9320:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9305:38:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3741,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3736,
														"src": "9357:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9366:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9357:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3746,
												"nodeType": "IfStatement",
												"src": "9353:24:11",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 3744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9376:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 3734,
													"id": 3745,
													"nodeType": "Return",
													"src": "9369:8:11"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3749,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3747,
														"name": "VOLATILITY_BONUS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "9444:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 3748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9463:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "9444:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3734,
												"id": 3750,
												"nodeType": "Return",
												"src": "9437:27:11"
											}
										]
									},
									"documentation": {
										"id": 3730,
										"nodeType": "StructuredDocumentation",
										"src": "9138:91:11",
										"text": "@notice Predice la volatilità basata sull'oracolo\n @return Bonus di volatilità"
									},
									"id": 3752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictVolatility",
									"nameLocation": "9243:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9260:2:11"
									},
									"returnParameters": {
										"id": 3734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3752,
												"src": "9286:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9285:9:11"
									},
									"scope": 3861,
									"src": "9234:237:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3770,
										"nodeType": "Block",
										"src": "9697:68:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 3760,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "9714:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																	"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																}
															},
															"id": 3762,
															"indexExpression": {
																"id": 3761,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3755,
																"src": "9721:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9714:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage",
																"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
															}
														},
														"id": 3763,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9727:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3100,
														"src": "9714:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 3764,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3115,
																"src": "9736:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
																	"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
																}
															},
															"id": 3766,
															"indexExpression": {
																"id": 3765,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3755,
																"src": "9743:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9736:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage",
																"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
															}
														},
														"id": 3767,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9749:9:11",
														"memberName": "daoAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3102,
														"src": "9736:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9714:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3759,
												"id": 3769,
												"nodeType": "Return",
												"src": "9707:51:11"
											}
										]
									},
									"documentation": {
										"id": 3753,
										"nodeType": "StructuredDocumentation",
										"src": "9477:143:11",
										"text": "@notice Ottiene il saldo staked di un utente\n @param user Indirizzo dell'utente\n @return Saldo staked totale (standard + DAO)"
									},
									"functionSelector": "3a02a42d",
									"id": 3771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakedBalance",
									"nameLocation": "9634:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3755,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9659:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3771,
												"src": "9651:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9651:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9650:14:11"
									},
									"returnParameters": {
										"id": 3759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3771,
												"src": "9688:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9688:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9687:9:11"
									},
									"scope": 3861,
									"src": "9625:140:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3779,
										"nodeType": "Block",
										"src": "9925:40:11",
										"statements": [
											{
												"expression": {
													"id": 3777,
													"name": "totalValueLocked",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3118,
													"src": "9942:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3776,
												"id": 3778,
												"nodeType": "Return",
												"src": "9935:23:11"
											}
										]
									},
									"documentation": {
										"id": 3772,
										"nodeType": "StructuredDocumentation",
										"src": "9771:86:11",
										"text": "@notice Ottiene il totale dei token staked\n @return Totale dei token staked"
									},
									"functionSelector": "b26025aa",
									"id": 3780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalValueLocked",
									"nameLocation": "9871:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9890:2:11"
									},
									"returnParameters": {
										"id": 3776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3780,
												"src": "9916:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9916:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9915:9:11"
									},
									"scope": 3861,
									"src": "9862:103:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3822,
										"nodeType": "Block",
										"src": "10202:310:11",
										"statements": [
											{
												"assignments": [
													3790
												],
												"declarations": [
													{
														"constant": false,
														"id": 3790,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "10226:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 3822,
														"src": "10212:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
															"typeString": "struct UBI4ALLQuantumFinance.Stake"
														},
														"typeName": {
															"id": 3789,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3788,
																"name": "Stake",
																"nameLocations": [
																	"10212:5:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3109,
																"src": "10212:5:11"
															},
															"referencedDeclaration": 3109,
															"src": "10212:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																"typeString": "struct UBI4ALLQuantumFinance.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3794,
												"initialValue": {
													"baseExpression": {
														"id": 3791,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3115,
														"src": "10238:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$3109_storage_$",
															"typeString": "mapping(address => struct UBI4ALLQuantumFinance.Stake storage ref)"
														}
													},
													"id": 3793,
													"indexExpression": {
														"id": 3792,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3783,
														"src": "10245:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10238:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$3109_storage",
														"typeString": "struct UBI4ALLQuantumFinance.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10212:38:11"
											},
											{
												"assignments": [
													3796
												],
												"declarations": [
													{
														"constant": false,
														"id": 3796,
														"mutability": "mutable",
														"name": "baseReward",
														"nameLocation": "10268:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 3822,
														"src": "10260:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3795,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10260:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3804,
												"initialValue": {
													"arguments": [
														{
															"id": 3798,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3783,
															"src": "10297:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3799,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3790,
																"src": "10303:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																	"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																}
															},
															"id": 3800,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10313:6:11",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3100,
															"src": "10303:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3801,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3790,
																"src": "10321:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																	"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																}
															},
															"id": 3802,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10331:10:11",
															"memberName": "currentAPY",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3108,
															"src": "10321:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3797,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3729,
														"src": "10281:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 3803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10281:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10260:82:11"
											},
											{
												"assignments": [
													3806
												],
												"declarations": [
													{
														"constant": false,
														"id": 3806,
														"mutability": "mutable",
														"name": "daoReward",
														"nameLocation": "10360:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 3822,
														"src": "10352:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3805,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10352:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3814,
												"initialValue": {
													"arguments": [
														{
															"id": 3808,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3783,
															"src": "10388:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3809,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3790,
																"src": "10394:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																	"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																}
															},
															"id": 3810,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10404:9:11",
															"memberName": "daoAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3102,
															"src": "10394:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3811,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3790,
																"src": "10415:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																	"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																}
															},
															"id": 3812,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10425:10:11",
															"memberName": "currentAPY",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3108,
															"src": "10415:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3807,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3729,
														"src": "10372:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256,uint256) view returns (uint256)"
														}
													},
													"id": 3813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10372:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10352:84:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3815,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3790,
																"src": "10453:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$3109_storage_ptr",
																	"typeString": "struct UBI4ALLQuantumFinance.Stake storage pointer"
																}
															},
															"id": 3816,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10463:17:11",
															"memberName": "accumulatedReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3106,
															"src": "10453:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3817,
															"name": "baseReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3796,
															"src": "10483:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10453:40:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3819,
														"name": "daoReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3806,
														"src": "10496:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10453:52:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3787,
												"id": 3821,
												"nodeType": "Return",
												"src": "10446:59:11"
											}
										]
									},
									"documentation": {
										"id": 3781,
										"nodeType": "StructuredDocumentation",
										"src": "9971:155:11",
										"text": "@notice Calcola le ricompense totali per un utente\n @param user Indirizzo dell'utente\n @return Ricompense totali (accumulate + in attesa)"
									},
									"functionSelector": "d82e3962",
									"id": 3823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "10140:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3783,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "10164:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3823,
												"src": "10156:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10156:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10155:14:11"
									},
									"returnParameters": {
										"id": 3787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3823,
												"src": "10193:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10193:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10192:9:11"
									},
									"scope": 3861,
									"src": "10131:381:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3841,
										"nodeType": "Block",
										"src": "10790:107:11",
										"statements": [
											{
												"expression": {
													"id": 3835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3833,
														"name": "callbackGasLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3133,
														"src": "10800:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3834,
														"name": "_callbackGasLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3826,
														"src": "10819:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "10800:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 3836,
												"nodeType": "ExpressionStatement",
												"src": "10800:36:11"
											},
											{
												"expression": {
													"id": 3839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3837,
														"name": "requestConfirmations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3137,
														"src": "10846:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3838,
														"name": "_requestConfirmations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3828,
														"src": "10869:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "10846:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 3840,
												"nodeType": "ExpressionStatement",
												"src": "10846:44:11"
											}
										]
									},
									"documentation": {
										"id": 3824,
										"nodeType": "StructuredDocumentation",
										"src": "10518:167:11",
										"text": "@notice Aggiorna i parametri VRF\n @param _callbackGasLimit Nuovo limite di gas per il callback\n @param _requestConfirmations Nuovo numero di conferme"
									},
									"functionSelector": "bae4e530",
									"id": 3842,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3830,
												"name": "onlyOwner",
												"nameLocations": [
													"10780:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "10780:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10780:9:11"
										}
									],
									"name": "updateVRFParams",
									"nameLocation": "10699:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3826,
												"mutability": "mutable",
												"name": "_callbackGasLimit",
												"nameLocation": "10722:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 3842,
												"src": "10715:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3825,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "10715:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3828,
												"mutability": "mutable",
												"name": "_requestConfirmations",
												"nameLocation": "10748:21:11",
												"nodeType": "VariableDeclaration",
												"scope": 3842,
												"src": "10741:28:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3827,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "10741:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10714:56:11"
									},
									"returnParameters": {
										"id": 3832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:11"
									},
									"scope": 3861,
									"src": "10690:207:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										326,
										2475
									],
									"body": {
										"id": 3859,
										"nodeType": "Block",
										"src": "11144:50:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3856,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3845,
															"src": "11178:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3853,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "11154:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_UBI4ALLQuantumFinance_$3861_$",
																"typeString": "type(contract super UBI4ALLQuantumFinance)"
															}
														},
														"id": 3855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11160:17:11",
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "11154:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11154:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3858,
												"nodeType": "ExpressionStatement",
												"src": "11154:33:11"
											}
										]
									},
									"documentation": {
										"id": 3843,
										"nodeType": "StructuredDocumentation",
										"src": "10903:132:11",
										"text": "@notice Trasferisce la proprietà del contratto a un nuovo proprietario\n @param newOwner Indirizzo del nuovo proprietario"
									},
									"functionSelector": "f2fde38b",
									"id": 3860,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3851,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3850,
												"name": "onlyOwner",
												"nameLocations": [
													"11134:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "11134:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11134:9:11"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "11049:17:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3849,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3847,
												"name": "Ownable",
												"nameLocations": [
													"11101:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 347,
												"src": "11101:7:11"
											},
											{
												"id": 3848,
												"name": "IUBI4ALLQuantumFinance",
												"nameLocations": [
													"11110:22:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2476,
												"src": "11110:22:11"
											}
										],
										"src": "11092:41:11"
									},
									"parameters": {
										"id": 3846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3845,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "11075:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3860,
												"src": "11067:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11067:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11066:18:11"
									},
									"returnParameters": {
										"id": 3852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11144:0:11"
									},
									"scope": 3861,
									"src": "11040:154:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3862,
							"src": "585:10611:11",
							"usedErrors": [
								8,
								213,
								218
							],
							"usedEvents": [
								224,
								3150,
								3157,
								3164,
								3171,
								3178
							]
						}
					],
					"src": "32:11164:11"
				},
				"id": 11
			}
		}
	}
}