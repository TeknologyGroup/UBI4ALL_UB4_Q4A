{
	"id": "4744892ab770007854d1a744abc05aa8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"quantum/UBI4ALLQuantum.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"../interfaces/IUBI4ALLQuantum.sol\";\n\n/// @title UBI4ALLQuantum - Token Q4A per trading con leva avanzata\n/// @notice Gestisce il token Q4A con allocazioni, lock per DAO, vesting e supporto per trading con leva\ncontract UBI4ALLQuantum is ERC20, Ownable, ReentrancyGuard, Pausable, IUBI4ALLQuantum {\n    using SafeMath for uint256;\n\n    /// @dev Total supply del token Q4A (1 miliardo di token, 18 decimali)\n    uint256 public constant TOTAL_SUPPLY = 1_000_000_000 * 10**18;\n    /// @dev Allocazione per il treasury (50%)\n    uint256 public constant TREASURY_ALLOCATION = (TOTAL_SUPPLY * 50) / 100;\n    /// @dev Allocazione per l'ecosistema (20%)\n    uint256 public constant ECOSYSTEM_ALLOCATION = (TOTAL_SUPPLY * 20) / 100;\n    /// @dev Allocazione per la comunità (15%)\n    uint256 public constant COMMUNITY_ALLOCATION = (TOTAL_SUPPLY * 15) / 100;\n    /// @dev Allocazione per la liquidità (10%)\n    uint256 public constant LIQUIDITY_ALLOCATION = (TOTAL_SUPPLY * 10) / 100;\n    /// @dev Allocazione per la riserva (5%)\n    uint256 public constant RESERVE_ALLOCATION = (TOTAL_SUPPLY * 5) / 100;\n\n    /// @dev Periodo di vesting (1 anno)\n    uint256 public constant VESTING_PERIOD = 365 days;\n    /// @dev Timestamp di inizio del vesting\n    uint256 public immutable vestingStart;\n\n    /// @dev Wallet per le allocazioni\n    address public treasuryWallet;\n    address public ecosystemWallet;\n    address public communityWallet;\n    address public liquidityWallet;\n    address public reserveWallet;\n\n    /// @dev Mappatura dei token bloccati per la DAO\n    mapping(address => uint256) public lockedForDAO;\n    /// @dev Totale dei token bloccati per la DAO\n    uint256 public totalLockedForDAO;\n\n    /// @dev Struttura per il vesting\n    struct VestingSchedule {\n        uint256 totalAmount; // Importo totale in vesting\n        uint256 releasedAmount; // Importo già rilasciato\n    }\n\n    /// @dev Mappatura dei vesting per wallet\n    mapping(address => VestingSchedule) public vestingSchedules;\n\n    /// @notice Evento emesso per trasferimenti di token\n    event QuantumTransfer(address indexed from, address indexed to, uint256 amount);\n    /// @notice Evento emesso per token bloccati per la DAO\n    event TokensLockedForDAO(address indexed account, uint256 amount);\n    /// @notice Evento emesso per token sbloccati dalla DAO\n    event TokensUnlockedForDAO(address indexed account, uint256 amount);\n    /// @notice Evento emesso per rilascio di token in vesting\n    event VestingReleased(address indexed wallet, uint256 amount);\n    /// @notice Evento emesso per trasferimenti con leva\n    event LeveragedTransfer(address indexed from, address indexed to, uint256 amount, uint256 leverage);\n\n    /// @notice Costruttore del contratto\n    /// @param _treasuryWallet Indirizzo del wallet treasury\n    /// @param _ecosystemWallet Indirizzo del wallet ecosistema\n    /// @param _communityWallet Indirizzo del wallet comunità\n    /// @param _liquidityWallet Indirizzo del wallet liquidità\n    /// @param _reserveWallet Indirizzo del wallet riserva\n    /// @param initialOwner Indirizzo del proprietario iniziale\n    constructor(\n        address _treasuryWallet,\n        address _ecosystemWallet,\n        address _communityWallet,\n        address _liquidityWallet,\n        address _reserveWallet,\n        address initialOwner\n    ) ERC20(\"Quantum UBI4ALL\", \"Q4A\") Ownable(initialOwner) {\n        require(_treasuryWallet != address(0), \"Invalid treasury wallet\");\n        require(_ecosystemWallet != address(0), \"Invalid ecosystem wallet\");\n        require(_communityWallet != address(0), \"Invalid community wallet\");\n        require(_liquidityWallet != address(0), \"Invalid liquidity wallet\");\n        require(_reserveWallet != address(0), \"Invalid reserve wallet\");\n\n        treasuryWallet = _treasuryWallet;\n        ecosystemWallet = _ecosystemWallet;\n        communityWallet = _communityWallet;\n        liquidityWallet = _liquidityWallet;\n        reserveWallet = _reserveWallet;\n\n        vestingStart = block.timestamp;\n\n        // Inizializza i vesting per treasury ed ecosistema\n        vestingSchedules[treasuryWallet] = VestingSchedule(TREASURY_ALLOCATION, 0);\n        vestingSchedules[ecosystemWallet] = VestingSchedule(ECOSYSTEM_ALLOCATION, 0);\n\n        // Mint iniziale con vesting\n        _mint(address(this), TREASURY_ALLOCATION + ECOSYSTEM_ALLOCATION);\n        _mint(communityWallet, COMMUNITY_ALLOCATION);\n        _mint(liquidityWallet, LIQUIDITY_ALLOCATION);\n        _mint(reserveWallet, RESERVE_ALLOCATION);\n    }\n\n    /// @notice Ottiene il total supply del token\n    /// @return Total supply (1 miliardo di Q4A)\n    function getTotalSupply() external pure override returns (uint256) {\n        return TOTAL_SUPPLY;\n    }\n\n    /// @notice Ottiene le allocazioni dei token\n    /// @return treasury Allocazione treasury\n    /// @return ecosystem Allocazione ecosistema\n    /// @return community Allocazione comunità\n    /// @return liquidity Allocazione liquidità\n    /// @return reserve Allocazione riserva\n    function getAllocations() external pure override returns (\n        uint256 treasury,\n        uint256 ecosystem,\n        uint256 community,\n        uint256 liquidity,\n        uint256 reserve\n    ) {\n        return (\n            TREASURY_ALLOCATION,\n            ECOSYSTEM_ALLOCATION,\n            COMMUNITY_ALLOCATION,\n            LIQUIDITY_ALLOCATION,\n            RESERVE_ALLOCATION\n        );\n    }\n\n    /// @notice Ottiene gli indirizzi dei wallet\n    /// @return treasury Indirizzo wallet treasury\n    /// @return ecosystem Indirizzo wallet ecosistema\n    /// @return community Indirizzo wallet comunità\n    /// @return liquidity Indirizzo wallet liquidità\n    /// @return reserve Indirizzo wallet riserva\n    function getWallets() external view override returns (\n        address treasury,\n        address ecosystem,\n        address community,\n        address liquidity,\n        address reserve\n    ) {\n        return (\n            treasuryWallet,\n            ecosystemWallet,\n            communityWallet,\n            liquidityWallet,\n            reserveWallet\n        );\n    }\n\n    /// @notice Minta nuovi token\n    /// @param to Indirizzo del destinatario\n    /// @param amount Quantità di token da mintare\n    function mint(address to, uint256 amount) external override onlyOwner nonReentrant whenNotPaused {\n        require(to != address(0), \"Invalid recipient\");\n        require(amount > 0, \"Invalid amount\");\n        _mint(to, amount);\n    }\n\n    /// @notice Brucia token dal chiamante\n    /// @param amount Quantità di token da bruciare\n    function burn(uint256 amount) external override nonReentrant whenNotPaused {\n        require(amount > 0, \"Invalid amount\");\n        _burn(msg.sender, amount);\n        emit TokensBurned(msg.sender, amount);\n    }\n\n    /// @notice Recupera token ERC20 bloccati nel contratto\n    /// @param token Indirizzo del token da recuperare\n    /// @param to Indirizzo del destinatario\n    function emergencyRecoverTokens(address token, address to) external override onlyOwner nonReentrant {\n        require(token != address(this), \"Cannot recover Q4A tokens\");\n        require(to != address(0), \"Invalid recipient\");\n        uint256 amount = IERC20(token).balanceOf(address(this));\n        require(amount > 0, \"No tokens to recover\");\n        IERC20(token).transfer(to, amount);\n        emit EmergencyRecovery(token, to, amount);\n    }\n\n    /// @notice Aggiorna l'indirizzo di un wallet\n    /// @param walletType Tipo di wallet (\"treasury\", \"ecosystem\", \"community\", \"liquidity\", \"reserve\")\n    /// @param newWallet Nuovo indirizzo del wallet\n    function updateWallet(string memory walletType, address newWallet) external onlyOwner {\n        require(newWallet != address(0), \"Invalid wallet address\");\n        bytes32 walletHash = keccak256(abi.encodePacked(walletType));\n        if (walletHash == keccak256(abi.encodePacked(\"treasury\"))) {\n            require(newWallet != treasuryWallet, \"Same wallet address\");\n            vestingSchedules[newWallet] = vestingSchedules[treasuryWallet];\n            delete vestingSchedules[treasuryWallet];\n            treasuryWallet = newWallet;\n        } else if (walletHash == keccak256(abi.encodePacked(\"ecosystem\"))) {\n            require(newWallet != ecosystemWallet, \"Same wallet address\");\n            vestingSchedules[newWallet] = vestingSchedules[ecosystemWallet];\n            delete vestingSchedules[ecosystemWallet];\n            ecosystemWallet = newWallet;\n        } else if (walletHash == keccak256(abi.encodePacked(\"community\"))) {\n            require(newWallet != communityWallet, \"Same wallet address\");\n            communityWallet = newWallet;\n        } else if (walletHash == keccak256(abi.encodePacked(\"liquidity\"))) {\n            require(newWallet != liquidityWallet, \"Same wallet address\");\n            liquidityWallet = newWallet;\n        } else if (walletHash == keccak256(abi.encodePacked(\"reserve\"))) {\n            require(newWallet != reserveWallet, \"Same wallet address\");\n            reserveWallet = newWallet;\n        } else {\n            revert(\"Invalid wallet type\");\n        }\n        emit WalletUpdated(walletType, newWallet);\n    }\n\n    /// @notice Blocca token per la DAO\n    /// @param amount Quantità di token da bloccare\n    function lockForDAO(uint256 amount) external nonReentrant whenNotPaused {\n        require(amount > 0, \"Invalid amount\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n        _burn(msg.sender, amount);\n        lockedForDAO[msg.sender] = lockedForDAO[msg.sender].add(amount);\n        totalLockedForDAO = totalLockedForDAO.add(amount);\n        emit TokensLockedForDAO(msg.sender, amount);\n    }\n\n    /// @notice Sblocca token dalla DAO\n    /// @param amount Quantità di token da sbloccare\n    function unlockFromDAO(uint256 amount) external nonReentrant whenNotPaused {\n        require(amount > 0, \"Invalid amount\");\n        require(lockedForDAO[msg.sender] >= amount, \"Insufficient locked balance\");\n        lockedForDAO[msg.sender] = lockedForDAO[msg.sender].sub(amount);\n        totalLockedForDAO = totalLockedForDAO.sub(amount);\n        _mint(msg.sender, amount);\n        emit TokensUnlockedForDAO(msg.sender, amount);\n    }\n\n    /// @notice Rilascia i token in vesting per un wallet\n    /// @param wallet Indirizzo del wallet in vesting\n    function releaseVesting(address wallet) external nonReentrant whenNotPaused {\n        require(wallet == treasuryWallet || wallet == ecosystemWallet, \"Invalid vesting wallet\");\n        VestingSchedule storage schedule = vestingSchedules[wallet];\n        require(schedule.totalAmount > schedule.releasedAmount, \"No tokens to release\");\n\n        uint256 elapsedTime = block.timestamp.sub(vestingStart);\n        uint256 vestedAmount = schedule.totalAmount.mul(elapsedTime).div(VESTING_PERIOD);\n        if (vestedAmount > schedule.totalAmount) {\n            vestedAmount = schedule.totalAmount;\n        }\n\n        uint256 releasable = vestedAmount.sub(schedule.releasedAmount);\n        require(releasable > 0, \"No tokens releasable\");\n\n        schedule.releasedAmount = schedule.releasedAmount.add(releasable);\n        _transfer(address(this), wallet, releasable);\n        emit VestingReleased(wallet, releasable);\n    }\n\n    /// @notice Ottiene l'importo di token in vesting rilasciabile per un wallet\n    /// @param wallet Indirizzo del wallet\n    /// @return Importo rilasciabile\n    function getReleasableVesting(address wallet) external view returns (uint256) {\n        VestingSchedule storage schedule = vestingSchedules[wallet];\n        if (schedule.totalAmount == 0) return 0;\n\n        uint256 elapsedTime = block.timestamp.sub(vestingStart);\n        uint256 vestedAmount = schedule.totalAmount.mul(elapsedTime).div(VESTING_PERIOD);\n        if (vestedAmount > schedule.totalAmount) {\n            vestedAmount = schedule.totalAmount;\n        }\n\n        return vestedAmount.sub(schedule.releasedAmount);\n    }\n\n    /// @notice Trasferisce token con supporto per leva (per trading avanzato)\n    /// @param to Indirizzo del destinatario\n    /// @param amount Quantità di token da trasferire\n    /// @param leverage Fattore di leva (es. 100 = 1x, 200 = 2x)\n    /// @return True se il trasferimento ha successo\n    function transferWithLeverage(address to, uint256 amount, uint256 leverage) external nonReentrant whenNotPaused returns (bool) {\n        require(to != address(0), \"Invalid recipient\");\n        require(amount > 0, \"Invalid amount\");\n        require(leverage >= 100, \"Leverage must be at least 1x\");\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance\");\n\n        // Nota: La logica di leva può essere integrata con UBI4ALLTrading e UBI4ALLOracle\n        // Qui simuliamo un trasferimento con leva emettendo un evento\n        bool success = super.transfer(to, amount);\n        if (success) {\n            emit LeveragedTransfer(msg.sender, to, amount, leverage);\n        }\n        return success;\n    }\n\n    /// @notice Trasferisce token (con supporto per leva futura)\n    /// @param to Indirizzo del destinatario\n    /// @param amount Quantità di token da trasferire\n    /// @return True se il trasferimento ha successo\n    function transfer(address to, uint256 amount) public override(ERC20, IUBI4ALLQuantum) whenNotPaused returns (bool) {\n        bool success = super.transfer(to, amount);\n        if (success) {\n            emit QuantumTransfer(msg.sender, to, amount);\n        }\n        return success;\n    }\n\n    /// @notice Ottiene il saldo di un account\n    /// @param account Indirizzo dell'account\n    /// @return Saldo dell'account\n    function balanceOf(address account) public view override(ERC20, IUBI4ALLQuantum) returns (uint256) {\n        return super.balanceOf(account);\n    }\n\n    /// @notice Mette in pausa il contratto\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /// @notice Ripristina il contratto dalla pausa\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n}"
			},
			"interfaces/IUBI4ALLQuantum.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ninterface IUBI4ALLQuantum {\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 amount) external returns (bool);\n    function getTotalSupply() external pure returns (uint256);\n    function getAllocations() external pure returns (\n        uint256 treasury,\n        uint256 ecosystem,\n        uint256 community,\n        uint256 liquidity,\n        uint256 reserve\n    );\n    function getWallets() external view returns (\n        address treasury,\n        address ecosystem,\n        address community,\n        address liquidity,\n        address reserve\n    );\n    function mint(address to, uint256 amount) external;\n    function burn(uint256 amount) external;\n    function emergencyRecoverTokens(address token, address to) external;\n    function lockedForDAO(address account) external view returns (uint256);\n    function totalLockedForDAO() external view returns (uint256);\n    event TokensBurned(address indexed account, uint256 amount);\n    event EmergencyRecovery(address indexed token, address indexed to, uint256 amount);\n    event WalletUpdated(string walletType, address newWallet);\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.28;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.28;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.28;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.28;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.28;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.28;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.28;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x4c06e6ed107ae827750b2377ba749978c310c0d662367e3ede3342398d6d7564\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3432dcd7e0f266834ffe229e582c95cec3bff892eef832706002b50b60ea53a4\",\"dweb:/ipfs/QmcTF9GX8APQ69FWT9mTHTsGFt9vixxUCyUDE1XoRRJgoR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x4c06e6ed107ae827750b2377ba749978c310c0d662367e3ede3342398d6d7564\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3432dcd7e0f266834ffe229e582c95cec3bff892eef832706002b50b60ea53a4\",\"dweb:/ipfs/QmcTF9GX8APQ69FWT9mTHTsGFt9vixxUCyUDE1XoRRJgoR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x4c06e6ed107ae827750b2377ba749978c310c0d662367e3ede3342398d6d7564\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3432dcd7e0f266834ffe229e582c95cec3bff892eef832706002b50b60ea53a4\",\"dweb:/ipfs/QmcTF9GX8APQ69FWT9mTHTsGFt9vixxUCyUDE1XoRRJgoR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x15490c1ac7fb488198fce8a04211f15277ee816915367bc906110cbb57863bbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3273e1e51c1bfe12b50778dd98d3d322ca315cd8e1185593694a0ac828b820\",\"dweb:/ipfs/QmTyAWneXaURy9Ls4dovFWLV9yxzMkELmLsgLTWeubz8ZA\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xf4d28329285c89e85daf450fbe612ec5ceb19842ae0be976ab1569897940be90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a021f64d3d58a64fd3045afc6b192c82bca29d95cd594a3c0ed93d1c69ecc98\",\"dweb:/ipfs/QmegaH5RM4Sboa22unJm3FdMVTd3K9UUf8ogbvBwx1K8XJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x4c06e6ed107ae827750b2377ba749978c310c0d662367e3ede3342398d6d7564\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3432dcd7e0f266834ffe229e582c95cec3bff892eef832706002b50b60ea53a4\",\"dweb:/ipfs/QmcTF9GX8APQ69FWT9mTHTsGFt9vixxUCyUDE1XoRRJgoR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x7bb71eec1addf6bf49477b47a74c4740b39b651edf4801d41868c4b05a8bd8be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0cd51096f6455b62497d2780b5b7b32b5630dd80b0a0a8d59c3a16a19e0e81\",\"dweb:/ipfs/QmToRJzEZ4w5EnEuTXFDP1NTNVAWEpEatPXDud4T3bBjEj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7b3f74cec9f285c369ee9494c96ca24a6ec23a8985f4ba2eafba78279e48ad1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e02b01bf539c330f41ff408ba5980eeb4a578e790afdc73b62b4f33c04988bc0\",\"dweb:/ipfs/QmSbr7rZqLnws371ENjg9wj1CMtFFJVQFGS4TojKJ3CWzb\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x364eb4d3170b2a469643b2eeccbe6e54159f9c566e154cb5d139c20672f9691b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64e0b563df8633769c034623b1c62e3df02897edd64f223301531ef5e96fe1fa\",\"dweb:/ipfs/QmXxxHbfNYnRXLdF88usW3s1MbJ8EZE7FE94eWk9T2354p\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7b3f74cec9f285c369ee9494c96ca24a6ec23a8985f4ba2eafba78279e48ad1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e02b01bf539c330f41ff408ba5980eeb4a578e790afdc73b62b4f33c04988bc0\",\"dweb:/ipfs/QmSbr7rZqLnws371ENjg9wj1CMtFFJVQFGS4TojKJ3CWzb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7b3f74cec9f285c369ee9494c96ca24a6ec23a8985f4ba2eafba78279e48ad1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e02b01bf539c330f41ff408ba5980eeb4a578e790afdc73b62b4f33c04988bc0\",\"dweb:/ipfs/QmSbr7rZqLnws371ENjg9wj1CMtFFJVQFGS4TojKJ3CWzb\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x364eb4d3170b2a469643b2eeccbe6e54159f9c566e154cb5d139c20672f9691b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64e0b563df8633769c034623b1c62e3df02897edd64f223301531ef5e96fe1fa\",\"dweb:/ipfs/QmXxxHbfNYnRXLdF88usW3s1MbJ8EZE7FE94eWk9T2354p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":483:6693  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":483:6693  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122083caa5e2ca26e26aa948d7c5833cfd4fb008eb26703c19edb18cbb0b2dc42c7f64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122083caa5e2ca26e26aa948d7c5833cfd4fb008eb26703c19edb18cbb0b2dc42c7f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xCA 0xA5 0xE2 0xCA 0x26 0xE2 PUSH11 0xA948D7C5833CFD4FB008EB 0x26 PUSH17 0x3C19EDB18CBB0B2DC42C7F64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "483:6210:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;483:6210:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122083caa5e2ca26e26aa948d7c5833cfd4fb008eb26703c19edb18cbb0b2dc42c7f64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xCA 0xA5 0xE2 0xCA 0x26 0xE2 PUSH11 0xA948D7C5833CFD4FB008EB 0x26 PUSH17 0x3C19EDB18CBB0B2DC42C7F64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "483:6210:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 483,
									"end": 6693,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083caa5e2ca26e26aa948d7c5833cfd4fb008eb26703c19edb18cbb0b2dc42c7f64736f6c634300081c0033",
									".code": [
										{
											"begin": 483,
											"end": 6693,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 483,
											"end": 6693,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 483,
											"end": 6693,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 483,
											"end": 6693,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 483,
											"end": 6693,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 6693,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 483,
											"end": 6693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 483,
											"end": 6693,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 483,
											"end": 6693,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"interfaces/IUBI4ALLQuantum.sol",
								"quantum/UBI4ALLQuantum.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9db94a991829328dd0812b3cd0f677abb9357aa239fec829ae917c22b033e311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00f4330ea774b0fb45b4a9397ddf9385e12a1c6d568f2143af7f4f3176b37c33\",\"dweb:/ipfs/QmXKbfbAohaWzyFZZ8btYJqHx8fPfTJDRk5Q1R4WK51j4E\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"interfaces/IUBI4ALLQuantum.sol": {
				"IUBI4ALLQuantum": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyRecovery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "walletType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newWallet",
									"type": "address"
								}
							],
							"name": "WalletUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "emergencyRecoverTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllocations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "treasury",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ecosystem",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "community",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWallets",
							"outputs": [
								{
									"internalType": "address",
									"name": "treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ecosystem",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "community",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidity",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "lockedForDAO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLockedForDAO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"emergencyRecoverTokens(address,address)": "b7e26a2e",
							"getAllocations()": "65ed6e23",
							"getTotalSupply()": "c4e41b22",
							"getWallets()": "db7a4605",
							"lockedForDAO(address)": "2af44592",
							"mint(address,uint256)": "40c10f19",
							"totalLockedForDAO()": "4a0ced96",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyRecovery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"walletType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"WalletUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"emergencyRecoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"treasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ecosystem\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"community\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ecosystem\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"lockedForDAO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedForDAO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IUBI4ALLQuantum.sol\":\"IUBI4ALLQuantum\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IUBI4ALLQuantum.sol\":{\"keccak256\":\"0xf4be867d12674967d2ec84c63dbc5333f20778f3eb364335b8464bda84ff6ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cec4248f5a044322229e8006ebd6d695d37e7cf06d063ccee0f0f091fd70406\",\"dweb:/ipfs/Qmaad7V52pm9wQmuZ3Wf7FbnMtNEh51pmUsXB2BBcVHeN3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"quantum/UBI4ALLQuantum.sol": {
				"UBI4ALLQuantum": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_treasuryWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ecosystemWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_communityWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_liquidityWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_reserveWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyRecovery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "leverage",
									"type": "uint256"
								}
							],
							"name": "LeveragedTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "QuantumTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensLockedForDAO",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnlockedForDAO",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "VestingReleased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "walletType",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newWallet",
									"type": "address"
								}
							],
							"name": "WalletUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "COMMUNITY_ALLOCATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ECOSYSTEM_ALLOCATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LIQUIDITY_ALLOCATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "RESERVE_ALLOCATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TREASURY_ALLOCATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "VESTING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "communityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ecosystemWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "emergencyRecoverTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllocations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "treasury",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ecosystem",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "community",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserve",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "getReleasableVesting",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWallets",
							"outputs": [
								{
									"internalType": "address",
									"name": "treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "ecosystem",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "community",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidity",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "reserve",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidityWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "lockForDAO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedForDAO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "releaseVesting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLockedForDAO",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "leverage",
									"type": "uint256"
								}
							],
							"name": "transferWithLeverage",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unlockFromDAO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "walletType",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "newWallet",
									"type": "address"
								}
							],
							"name": "updateWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vestingSchedules",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "releasedAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingStart",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"params": {
									"account": "Indirizzo dell'account"
								},
								"returns": {
									"_0": "Saldo dell'account"
								}
							},
							"burn(uint256)": {
								"params": {
									"amount": "Quantità di token da bruciare"
								}
							},
							"constructor": {
								"params": {
									"_communityWallet": "Indirizzo del wallet comunità",
									"_ecosystemWallet": "Indirizzo del wallet ecosistema",
									"_liquidityWallet": "Indirizzo del wallet liquidità",
									"_reserveWallet": "Indirizzo del wallet riserva",
									"_treasuryWallet": "Indirizzo del wallet treasury",
									"initialOwner": "Indirizzo del proprietario iniziale"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"emergencyRecoverTokens(address,address)": {
								"params": {
									"to": "Indirizzo del destinatario",
									"token": "Indirizzo del token da recuperare"
								}
							},
							"getAllocations()": {
								"returns": {
									"community": "Allocazione comunità",
									"ecosystem": "Allocazione ecosistema",
									"liquidity": "Allocazione liquidità",
									"reserve": "Allocazione riserva",
									"treasury": "Allocazione treasury"
								}
							},
							"getReleasableVesting(address)": {
								"params": {
									"wallet": "Indirizzo del wallet"
								},
								"returns": {
									"_0": "Importo rilasciabile"
								}
							},
							"getTotalSupply()": {
								"returns": {
									"_0": "Total supply (1 miliardo di Q4A)"
								}
							},
							"getWallets()": {
								"returns": {
									"community": "Indirizzo wallet comunità",
									"ecosystem": "Indirizzo wallet ecosistema",
									"liquidity": "Indirizzo wallet liquidità",
									"reserve": "Indirizzo wallet riserva",
									"treasury": "Indirizzo wallet treasury"
								}
							},
							"lockForDAO(uint256)": {
								"params": {
									"amount": "Quantità di token da bloccare"
								}
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "Quantità di token da mintare",
									"to": "Indirizzo del destinatario"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"releaseVesting(address)": {
								"params": {
									"wallet": "Indirizzo del wallet in vesting"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"params": {
									"amount": "Quantità di token da trasferire",
									"to": "Indirizzo del destinatario"
								},
								"returns": {
									"_0": "True se il trasferimento ha successo"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferWithLeverage(address,uint256,uint256)": {
								"params": {
									"amount": "Quantità di token da trasferire",
									"leverage": "Fattore di leva (es. 100 = 1x, 200 = 2x)",
									"to": "Indirizzo del destinatario"
								},
								"returns": {
									"_0": "True se il trasferimento ha successo"
								}
							},
							"unlockFromDAO(uint256)": {
								"params": {
									"amount": "Quantità di token da sbloccare"
								}
							},
							"updateWallet(string,address)": {
								"params": {
									"newWallet": "Nuovo indirizzo del wallet",
									"walletType": "Tipo di wallet (\"treasury\", \"ecosystem\", \"community\", \"liquidity\", \"reserve\")"
								}
							}
						},
						"stateVariables": {
							"COMMUNITY_ALLOCATION": {
								"details": "Allocazione per la comunità (15%)"
							},
							"ECOSYSTEM_ALLOCATION": {
								"details": "Allocazione per l'ecosistema (20%)"
							},
							"LIQUIDITY_ALLOCATION": {
								"details": "Allocazione per la liquidità (10%)"
							},
							"RESERVE_ALLOCATION": {
								"details": "Allocazione per la riserva (5%)"
							},
							"TOTAL_SUPPLY": {
								"details": "Total supply del token Q4A (1 miliardo di token, 18 decimali)"
							},
							"TREASURY_ALLOCATION": {
								"details": "Allocazione per il treasury (50%)"
							},
							"VESTING_PERIOD": {
								"details": "Periodo di vesting (1 anno)"
							},
							"lockedForDAO": {
								"details": "Mappatura dei token bloccati per la DAO"
							},
							"totalLockedForDAO": {
								"details": "Totale dei token bloccati per la DAO"
							},
							"treasuryWallet": {
								"details": "Wallet per le allocazioni"
							},
							"vestingSchedules": {
								"details": "Mappatura dei vesting per wallet"
							},
							"vestingStart": {
								"details": "Timestamp di inizio del vesting"
							}
						},
						"title": "UBI4ALLQuantum - Token Q4A per trading con leva avanzata",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"quantum/UBI4ALLQuantum.sol\":562:14358  contract UBI4ALLQuantum is ERC20, Ownable, ReentrancyGuard, Pausable, IUBI4ALLQuantum {... */\n  mstore(0x40, 0xa0)\n    /* \"quantum/UBI4ALLQuantum.sol\":3469:4881  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"quantum/UBI4ALLQuantum.sol\":3724:3736  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0f\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x8a, 0x145d585b9d1d5b481550924d105313)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x513441)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3624:3675   */\n  mstore\n    /* \"#utility.yul\":3597:3615   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_18\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_17:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1822:1829  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1822:1844  _status = _NOT_ENTERED */\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":997:1004  _paused */\n  0x07\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":997:1012  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantum.sol\":3756:3785  _treasuryWallet != address(0) */\n  dup7\n  and\n    /* \"quantum/UBI4ALLQuantum.sol\":3748:3813  require(_treasuryWallet != address(0), \"Invalid treasury wallet\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3888:3890   */\n  0x20\n    /* \"quantum/UBI4ALLQuantum.sol\":3748:3813  require(_treasuryWallet != address(0), \"Invalid treasury wallet\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3870:3891   */\n  mstore\n    /* \"#utility.yul\":3927:3929   */\n  0x17\n    /* \"#utility.yul\":3907:3925   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3900:3930   */\n  mstore\n    /* \"#utility.yul\":3966:3991   */\n  0x496e76616c69642074726561737572792077616c6c6574000000000000000000\n    /* \"#utility.yul\":3946:3964   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3939:3992   */\n  mstore\n    /* \"#utility.yul\":4009:4027   */\n  0x64\n  add\n    /* \"quantum/UBI4ALLQuantum.sol\":3748:3813  require(_treasuryWallet != address(0), \"Invalid treasury wallet\") */\n  tag_15\n    /* \"#utility.yul\":3686:4033   */\n  jump\n    /* \"quantum/UBI4ALLQuantum.sol\":3748:3813  require(_treasuryWallet != address(0), \"Invalid treasury wallet\") */\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantum.sol\":3831:3861  _ecosystemWallet != address(0) */\n  dup6\n  and\n    /* \"quantum/UBI4ALLQuantum.sol\":3823:3890  require(_ecosystemWallet != address(0), \"Invalid ecosystem wallet\") */\n  tag_25\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4240:4242   */\n  0x20\n    /* \"quantum/UBI4ALLQuantum.sol\":3823:3890  require(_ecosystemWallet != address(0), \"Invalid ecosystem wallet\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4222:4243   */\n  mstore\n    /* \"#utility.yul\":4279:4281   */\n  0x18\n    /* \"#utility.yul\":4259:4277   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4252:4282   */\n  mstore\n    /* \"#utility.yul\":4318:4344   */\n  0x496e76616c69642065636f73797374656d2077616c6c65740000000000000000\n    /* \"#utility.yul\":4298:4316   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4291:4345   */\n  mstore\n    /* \"#utility.yul\":4362:4380   */\n  0x64\n  add\n    /* \"quantum/UBI4ALLQuantum.sol\":3823:3890  require(_ecosystemWallet != address(0), \"Invalid ecosystem wallet\") */\n  tag_15\n    /* \"#utility.yul\":4038:4386   */\n  jump\n    /* \"quantum/UBI4ALLQuantum.sol\":3823:3890  require(_ecosystemWallet != address(0), \"Invalid ecosystem wallet\") */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantum.sol\":3908:3938  _communityWallet != address(0) */\n  dup5\n  and\n    /* \"quantum/UBI4ALLQuantum.sol\":3900:3967  require(_communityWallet != address(0), \"Invalid community wallet\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4593:4595   */\n  0x20\n    /* \"quantum/UBI4ALLQuantum.sol\":3900:3967  require(_communityWallet != address(0), \"Invalid community wallet\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4575:4596   */\n  mstore\n    /* \"#utility.yul\":4632:4634   */\n  0x18\n    /* \"#utility.yul\":4612:4630   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4605:4635   */\n  mstore\n    /* \"#utility.yul\":4671:4697   */\n  0x496e76616c696420636f6d6d756e6974792077616c6c65740000000000000000\n    /* \"#utility.yul\":4651:4669   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4644:4698   */\n  mstore\n    /* \"#utility.yul\":4715:4733   */\n  0x64\n  add\n    /* \"quantum/UBI4ALLQuantum.sol\":3900:3967  require(_communityWallet != address(0), \"Invalid community wallet\") */\n  tag_15\n    /* \"#utility.yul\":4391:4739   */\n  jump\n    /* \"quantum/UBI4ALLQuantum.sol\":3900:3967  require(_communityWallet != address(0), \"Invalid community wallet\") */\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantum.sol\":3985:4015  _liquidityWallet != address(0) */\n  dup4\n  and\n    /* \"quantum/UBI4ALLQuantum.sol\":3977:4044  require(_liquidityWallet != address(0), \"Invalid liquidity wallet\") */\n  tag_31\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4946:4948   */\n  0x20\n    /* \"quantum/UBI4ALLQuantum.sol\":3977:4044  require(_liquidityWallet != address(0), \"Invalid liquidity wallet\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4928:4949   */\n  mstore\n    /* \"#utility.yul\":4985:4987   */\n  0x18\n    /* \"#utility.yul\":4965:4983   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4958:4988   */\n  mstore\n    /* \"#utility.yul\":5024:5050   */\n  0x496e76616c6964206c69717569646974792077616c6c65740000000000000000\n    /* \"#utility.yul\":5004:5022   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4997:5051   */\n  mstore\n    /* \"#utility.yul\":5068:5086   */\n  0x64\n  add\n    /* \"quantum/UBI4ALLQuantum.sol\":3977:4044  require(_liquidityWallet != address(0), \"Invalid liquidity wallet\") */\n  tag_15\n    /* \"#utility.yul\":4744:5092   */\n  jump\n    /* \"quantum/UBI4ALLQuantum.sol\":3977:4044  require(_liquidityWallet != address(0), \"Invalid liquidity wallet\") */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantum.sol\":4062:4090  _reserveWallet != address(0) */\n  dup3\n  and\n    /* \"quantum/UBI4ALLQuantum.sol\":4054:4117  require(_reserveWallet != address(0), \"Invalid reserve wallet\") */\n  tag_34\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5299:5301   */\n  0x20\n    /* \"quantum/UBI4ALLQuantum.sol\":4054:4117  require(_reserveWallet != address(0), \"Invalid reserve wallet\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5281:5302   */\n  mstore\n    /* \"#utility.yul\":5338:5340   */\n  0x16\n    /* \"#utility.yul\":5318:5336   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5311:5341   */\n  mstore\n    /* \"#utility.yul\":5377:5401   */\n  0x496e76616c696420726573657276652077616c6c657400000000000000000000\n    /* \"#utility.yul\":5357:5375   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5350:5402   */\n  mstore\n    /* \"#utility.yul\":5419:5437   */\n  0x64\n  add\n    /* \"quantum/UBI4ALLQuantum.sol\":4054:4117  require(_reserveWallet != address(0), \"Invalid reserve wallet\") */\n  tag_15\n    /* \"#utility.yul\":5097:5443   */\n  jump\n    /* \"quantum/UBI4ALLQuantum.sol\":4054:4117  require(_reserveWallet != address(0), \"Invalid reserve wallet\") */\ntag_34:\n    /* \"quantum/UBI4ALLQuantum.sol\":4128:4142  treasuryWallet */\n  0x07\n    /* \"quantum/UBI4ALLQuantum.sol\":4128:4160  treasuryWallet = _treasuryWallet */\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n  0x0100\n  sub(shl(0xa0, 0x01), 0x01)\n  dup10\n  dup2\n  and\n  swap2\n  swap1\n  swap2\n  mul\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4170:4185  ecosystemWallet */\n  0x08\n    /* \"quantum/UBI4ALLQuantum.sol\":4170:4204  ecosystemWallet = _ecosystemWallet */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  dup9\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4214:4229  communityWallet */\n  0x09\n    /* \"quantum/UBI4ALLQuantum.sol\":4214:4248  communityWallet = _communityWallet */\n  dup1\n  sload\n  dup3\n  and\n  dup8\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4258:4273  liquidityWallet */\n  0x0a\n    /* \"quantum/UBI4ALLQuantum.sol\":4258:4292  liquidityWallet = _liquidityWallet */\n  dup1\n  sload\n  dup3\n  and\n  dup7\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4302:4315  reserveWallet */\n  0x0b\n    /* \"quantum/UBI4ALLQuantum.sol\":4302:4332  reserveWallet = _reserveWallet */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap2\n  dup5\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4358:4373  block.timestamp */\n  timestamp\n    /* \"quantum/UBI4ALLQuantum.sol\":4343:4373  vestingStart = block.timestamp */\n  0x80\n  mstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4479:4518  VestingSchedule(TREASURY_ALLOCATION, 0) */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  dup1\n    /* \"quantum/UBI4ALLQuantum.sol\":944:947  100 */\n  0x64\n    /* \"quantum/UBI4ALLQuantum.sol\":923:940  TOTAL_SUPPLY * 50 */\n  tag_37\n    /* \"quantum/UBI4ALLQuantum.sol\":801:823  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"quantum/UBI4ALLQuantum.sol\":938:940  50 */\n  0x32\n    /* \"quantum/UBI4ALLQuantum.sol\":923:940  TOTAL_SUPPLY * 50 */\n  tag_38\n  jump\t// in\ntag_37:\n    /* \"quantum/UBI4ALLQuantum.sol\":922:947  (TOTAL_SUPPLY * 50) / 100 */\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n    /* \"quantum/UBI4ALLQuantum.sol\":4479:4518  VestingSchedule(TREASURY_ALLOCATION, 0) */\n  dup2\n  mstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4516:4517  0 */\n  0x00\n    /* \"quantum/UBI4ALLQuantum.sol\":4479:4518  VestingSchedule(TREASURY_ALLOCATION, 0) */\n  0x20\n  swap2\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4461:4475  treasuryWallet */\n  sload(0x07)\n  0x0100\n  swap1\n  div\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"quantum/UBI4ALLQuantum.sol\":4444:4476  vestingSchedules[treasuryWallet] */\n  dup2\n  mstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4444:4460  vestingSchedules */\n  0x0e\n    /* \"quantum/UBI4ALLQuantum.sol\":4444:4476  vestingSchedules[treasuryWallet] */\n  dup3\n  mstore\n  0x40\n  swap1\n  dup2\n  swap1\n  keccak256\n    /* \"quantum/UBI4ALLQuantum.sol\":4444:4518  vestingSchedules[treasuryWallet] = VestingSchedule(TREASURY_ALLOCATION, 0) */\n  dup4\n  mload\n  dup2\n  sstore\n  swap3\n  swap1\n  swap2\n  add\n  mload\n    /* \"quantum/UBI4ALLQuantum.sol\":4461:4475  treasuryWallet */\n  0x01\n    /* \"quantum/UBI4ALLQuantum.sol\":4444:4518  vestingSchedules[treasuryWallet] = VestingSchedule(TREASURY_ALLOCATION, 0) */\n  swap1\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4564:4604  VestingSchedule(ECOSYSTEM_ALLOCATION, 0) */\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  dup1\n    /* \"quantum/UBI4ALLQuantum.sol\":1070:1073  100 */\n  0x64\n    /* \"quantum/UBI4ALLQuantum.sol\":1049:1066  TOTAL_SUPPLY * 20 */\n  tag_41\n    /* \"quantum/UBI4ALLQuantum.sol\":801:823  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"quantum/UBI4ALLQuantum.sol\":1064:1066  20 */\n  0x14\n    /* \"quantum/UBI4ALLQuantum.sol\":1049:1066  TOTAL_SUPPLY * 20 */\n  tag_38\n  jump\t// in\ntag_41:\n    /* \"quantum/UBI4ALLQuantum.sol\":1048:1073  (TOTAL_SUPPLY * 20) / 100 */\n  tag_42\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_42:\n    /* \"quantum/UBI4ALLQuantum.sol\":4564:4604  VestingSchedule(ECOSYSTEM_ALLOCATION, 0) */\n  dup2\n  mstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4602:4603  0 */\n  0x00\n    /* \"quantum/UBI4ALLQuantum.sol\":4564:4604  VestingSchedule(ECOSYSTEM_ALLOCATION, 0) */\n  0x20\n  swap2\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4545:4560  ecosystemWallet */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n    /* \"quantum/UBI4ALLQuantum.sol\":4528:4561  vestingSchedules[ecosystemWallet] */\n  dup2\n  mstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4528:4544  vestingSchedules */\n  0x0e\n    /* \"quantum/UBI4ALLQuantum.sol\":4528:4561  vestingSchedules[ecosystemWallet] */\n  dup3\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"quantum/UBI4ALLQuantum.sol\":4528:4604  vestingSchedules[ecosystemWallet] = VestingSchedule(ECOSYSTEM_ALLOCATION, 0) */\n  dup3\n  mload\n  dup2\n  sstore\n  swap2\n  add\n  mload\n    /* \"quantum/UBI4ALLQuantum.sol\":4545:4560  ecosystemWallet */\n  0x01\n    /* \"quantum/UBI4ALLQuantum.sol\":4528:4604  vestingSchedules[ecosystemWallet] = VestingSchedule(ECOSYSTEM_ALLOCATION, 0) */\n  swap1\n  swap2\n  add\n  sstore\n    /* \"quantum/UBI4ALLQuantum.sol\":4652:4716  _mint(address(this), TREASURY_ALLOCATION + ECOSYSTEM_ALLOCATION) */\n  tag_43\n    /* \"quantum/UBI4ALLQuantum.sol\":4666:4670  this */\n  address\n    /* \"quantum/UBI4ALLQuantum.sol\":1070:1073  100 */\n  0x64\n    /* \"quantum/UBI4ALLQuantum.sol\":1049:1066  TOTAL_SUPPLY * 20 */\n  tag_44\n    /* \"quantum/UBI4ALLQuantum.sol\":801:823  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"quantum/UBI4ALLQuantum.sol\":1064:1066  20 */\n  0x14\n    /* \"quantum/UBI4ALLQuantum.sol\":1049:1066  TOTAL_SUPPLY * 20 */\n  tag_38\n  jump\t// in\ntag_44:\n    /* \"quantum/UBI4ALLQuantum.sol\":1048:1073  (TOTAL_SUPPLY * 20) / 100 */\n  tag_45\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_45:\n    /* \"quantum/UBI4ALLQuantum.sol\":944:947  100 */\n  0x64\n    /* \"quantum/UBI4ALLQuantum.sol\":923:940  TOTAL_SUPPLY * 50 */\n  tag_46\n    /* \"quantum/UBI4ALLQuantum.sol\":801:823  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"quantum/UBI4ALLQuantum.sol\":938:940  50 */\n  0x32\n    /* \"quantum/UBI4ALLQuantum.sol\":923:940  TOTAL_SUPPLY * 50 */\n  tag_38\n  jump\t// in\ntag_46:\n    /* \"quantum/UBI4ALLQuantum.sol\":922:947  (TOTAL_SUPPLY * 50) / 100 */\n  tag_47\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_47:\n    /* \"quantum/UBI4ALLQuantum.sol\":4673:4715  TREASURY_ALLOCATION + ECOSYSTEM_ALLOCATION */\n  tag_48\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"quantum/UBI4ALLQuantum.sol\":4652:4657  _mint */\n  tag_50\n    /* \"quantum/UBI4ALLQuantum.sol\":4652:4716  _mint(address(this), TREASURY_ALLOCATION + ECOSYSTEM_ALLOCATION) */\n  jump\t// in\ntag_43:\n    /* \"quantum/UBI4ALLQuantum.sol\":4732:4747  communityWallet */\n  sload(0x09)\n    /* \"quantum/UBI4ALLQuantum.sol\":4726:4770  _mint(communityWallet, COMMUNITY_ALLOCATION) */\n  tag_51\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantum.sol\":4732:4747  communityWallet */\n  and\n    /* \"quantum/UBI4ALLQuantum.sol\":1196:1199  100 */\n  0x64\n    /* \"quantum/UBI4ALLQuantum.sol\":1175:1192  TOTAL_SUPPLY * 15 */\n  tag_52\n    /* \"quantum/UBI4ALLQuantum.sol\":801:823  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"quantum/UBI4ALLQuantum.sol\":1190:1192  15 */\n  0x0f\n    /* \"quantum/UBI4ALLQuantum.sol\":1175:1192  TOTAL_SUPPLY * 15 */\n  tag_38\n  jump\t// in\ntag_52:\n    /* \"quantum/UBI4ALLQuantum.sol\":1174:1199  (TOTAL_SUPPLY * 15) / 100 */\n  tag_48\n  swap2\n  swap1\n  tag_40\n  jump\t// in\n    /* \"quantum/UBI4ALLQuantum.sol\":4726:4770  _mint(communityWallet, COMMUNITY_ALLOCATION) */\ntag_51:\n    /* \"quantum/UBI4ALLQuantum.sol\":4786:4801  liquidityWallet */\n  0x0a\n  dup1\n  sload\n    /* \"quantum/UBI4ALLQuantum.sol\":4780:4824  _mint(liquidityWallet, LIQUIDITY_ALLOCATION) */\n  tag_54\n  swap2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantum.sol\":4786:4801  liquidityWallet */\n  swap1\n  swap2\n  and\n  swap1\n    /* \"quantum/UBI4ALLQuantum.sol\":1323:1326  100 */\n  0x64\n  swap1\n    /* \"quantum/UBI4ALLQuantum.sol\":1302:1319  TOTAL_SUPPLY * 10 */\n  tag_52\n  swap1\n    /* \"quantum/UBI4ALLQuantum.sol\":801:823  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n  swap1\n    /* \"quantum/UBI4ALLQuantum.sol\":1302:1319  TOTAL_SUPPLY * 10 */\n  tag_38\n  jump\t// in\n    /* \"quantum/UBI4ALLQuantum.sol\":4780:4824  _mint(liquidityWallet, LIQUIDITY_ALLOCATION) */\ntag_54:\n    /* \"quantum/UBI4ALLQuantum.sol\":4840:4853  reserveWallet */\n  sload(0x0b)\n    /* \"quantum/UBI4ALLQuantum.sol\":4834:4874  _mint(reserveWallet, RESERVE_ALLOCATION) */\n  tag_57\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"quantum/UBI4ALLQuantum.sol\":4840:4853  reserveWallet */\n  and\n    /* \"quantum/UBI4ALLQuantum.sol\":1443:1446  100 */\n  0x64\n    /* \"quantum/UBI4ALLQuantum.sol\":1423:1439  TOTAL_SUPPLY * 5 */\n  tag_52\n    /* \"quantum/UBI4ALLQuantum.sol\":801:823  1_000_000_000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"quantum/UBI4ALLQuantum.sol\":1438:1439  5 */\n  0x05\n    /* \"quantum/UBI4ALLQuantum.sol\":1423:1439  TOTAL_SUPPLY * 5 */\n  tag_38\n  jump\t// in\n    /* \"quantum/UBI4ALLQuantum.sol\":4834:4874  _mint(reserveWallet, RESERVE_ALLOCATION) */\ntag_57:\n    /* \"quantum/UBI4ALLQuantum.sol\":3469:4881  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"quantum/UBI4ALLQuantum.sol\":562:14358  contract UBI4ALLQuantum is ERC20, Ownable, ReentrancyGuard, Pausable, IUBI4ALLQuantum {... */\n  jump(tag_85)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_50:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_63\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3624:3675   */\n  mstore\n    /* \"#utility.yul\":3597:3615   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  tag_15\n    /* \"#utility.yul\":3478:3681   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_65\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  tag_66\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  jump\t// in\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_66:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_68\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_69\n  swap2\n  swap1\n  tag_49\n  jump\t// in\ntag_69:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_70\n  swap1\n  pop\n  jump\ntag_68:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_71\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":6325:6357   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6307:6358   */\n  mstore\n    /* \"#utility.yul\":6374:6392   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":6367:6401   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":6417:6435   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":6410:6444   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":6280:6298   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_15\n    /* \"#utility.yul\":6105:6450   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_71:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_70:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_74\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_75)\ntag_74:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_75:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_76\n  swap2\n    /* \"#utility.yul\":6601:6626   */\n  dup2\n  mstore\n    /* \"#utility.yul\":6589:6591   */\n  0x20\n    /* \"#utility.yul\":6574:6592   */\n  add\n  swap1\n    /* \"#utility.yul\":6455:6632   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\ntag_76:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_78:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_87:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:832   */\ntag_3:\n    /* \"#utility.yul\":311:317   */\n  0x00\n    /* \"#utility.yul\":319:325   */\n  dup1\n    /* \"#utility.yul\":327:333   */\n  0x00\n    /* \"#utility.yul\":335:341   */\n  dup1\n    /* \"#utility.yul\":343:349   */\n  0x00\n    /* \"#utility.yul\":351:357   */\n  dup1\n    /* \"#utility.yul\":404:407   */\n  0xc0\n    /* \"#utility.yul\":392:401   */\n  dup8\n    /* \"#utility.yul\":383:390   */\n  dup10\n    /* \"#utility.yul\":379:402   */\n  sub\n    /* \"#utility.yul\":375:408   */\n  slt\n    /* \"#utility.yul\":372:425   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":421:422   */\n  0x00\n    /* \"#utility.yul\":418:419   */\n  dup1\n    /* \"#utility.yul\":411:423   */\n  revert\n    /* \"#utility.yul\":372:425   */\ntag_89:\n    /* \"#utility.yul\":444:484   */\n  tag_90\n    /* \"#utility.yul\":474:483   */\n  dup8\n    /* \"#utility.yul\":444:484   */\n  tag_78\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":434:484   */\n  swap6\n  pop\n    /* \"#utility.yul\":503:552   */\n  tag_91\n    /* \"#utility.yul\":548:550   */\n  0x20\n    /* \"#utility.yul\":537:546   */\n  dup9\n    /* \"#utility.yul\":533:551   */\n  add\n    /* \"#utility.yul\":503:552   */\n  tag_78\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":493:552   */\n  swap5\n  pop\n    /* \"#utility.yul\":571:620   */\n  tag_92\n    /* \"#utility.yul\":616:618   */\n  0x40\n    /* \"#utility.yul\":605:614   */\n  dup9\n    /* \"#utility.yul\":601:619   */\n  add\n    /* \"#utility.yul\":571:620   */\n  tag_78\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":561:620   */\n  swap4\n  pop\n    /* \"#utility.yul\":639:688   */\n  tag_93\n    /* \"#utility.yul\":684:686   */\n  0x60\n    /* \"#utility.yul\":673:682   */\n  dup9\n    /* \"#utility.yul\":669:687   */\n  add\n    /* \"#utility.yul\":639:688   */\n  tag_78\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":629:688   */\n  swap3\n  pop\n    /* \"#utility.yul\":707:757   */\n  tag_94\n    /* \"#utility.yul\":752:755   */\n  0x80\n    /* \"#utility.yul\":741:750   */\n  dup9\n    /* \"#utility.yul\":737:756   */\n  add\n    /* \"#utility.yul\":707:757   */\n  tag_78\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":697:757   */\n  swap2\n  pop\n    /* \"#utility.yul\":776:826   */\n  tag_95\n    /* \"#utility.yul\":821:824   */\n  0xa0\n    /* \"#utility.yul\":810:819   */\n  dup9\n    /* \"#utility.yul\":806:825   */\n  add\n    /* \"#utility.yul\":776:826   */\n  tag_78\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":766:826   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:832   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":837:964   */\ntag_79:\n    /* \"#utility.yul\":898:908   */\n  0x4e487b71\n    /* \"#utility.yul\":893:896   */\n  0xe0\n    /* \"#utility.yul\":889:909   */\n  shl\n    /* \"#utility.yul\":886:887   */\n  0x00\n    /* \"#utility.yul\":879:910   */\n  mstore\n    /* \"#utility.yul\":929:933   */\n  0x41\n    /* \"#utility.yul\":926:927   */\n  0x04\n    /* \"#utility.yul\":919:934   */\n  mstore\n    /* \"#utility.yul\":953:957   */\n  0x24\n    /* \"#utility.yul\":950:951   */\n  0x00\n    /* \"#utility.yul\":943:958   */\n  revert\n    /* \"#utility.yul\":969:1349   */\ntag_80:\n    /* \"#utility.yul\":1048:1049   */\n  0x01\n    /* \"#utility.yul\":1044:1056   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1091:1103   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1112:1173   */\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1166:1170   */\n  0x7f\n    /* \"#utility.yul\":1158:1164   */\n  dup3\n    /* \"#utility.yul\":1154:1171   */\n  and\n    /* \"#utility.yul\":1144:1171   */\n  swap2\n  pop\n    /* \"#utility.yul\":1112:1173   */\ntag_98:\n    /* \"#utility.yul\":1219:1221   */\n  0x20\n    /* \"#utility.yul\":1211:1217   */\n  dup3\n    /* \"#utility.yul\":1208:1222   */\n  lt\n    /* \"#utility.yul\":1188:1206   */\n  dup2\n    /* \"#utility.yul\":1185:1223   */\n  sub\n    /* \"#utility.yul\":1182:1343   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":1265:1275   */\n  0x4e487b71\n    /* \"#utility.yul\":1260:1263   */\n  0xe0\n    /* \"#utility.yul\":1256:1276   */\n  shl\n    /* \"#utility.yul\":1253:1254   */\n  0x00\n    /* \"#utility.yul\":1246:1277   */\n  mstore\n    /* \"#utility.yul\":1300:1304   */\n  0x22\n    /* \"#utility.yul\":1297:1298   */\n  0x04\n    /* \"#utility.yul\":1290:1305   */\n  mstore\n    /* \"#utility.yul\":1328:1332   */\n  0x24\n    /* \"#utility.yul\":1325:1326   */\n  0x00\n    /* \"#utility.yul\":1318:1333   */\n  revert\n    /* \"#utility.yul\":1182:1343   */\ntag_99:\n  pop\n    /* \"#utility.yul\":969:1349   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1480:1998   */\ntag_82:\n    /* \"#utility.yul\":1582:1584   */\n  0x1f\n    /* \"#utility.yul\":1577:1580   */\n  dup3\n    /* \"#utility.yul\":1574:1585   */\n  gt\n    /* \"#utility.yul\":1571:1992   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1618:1623   */\n  dup1\n    /* \"#utility.yul\":1615:1616   */\n  0x00\n    /* \"#utility.yul\":1608:1624   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x20\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1649:1667   */\n  keccak256\n    /* \"#utility.yul\":1732:1734   */\n  0x1f\n    /* \"#utility.yul\":1720:1730   */\n  dup5\n    /* \"#utility.yul\":1716:1735   */\n  add\n    /* \"#utility.yul\":1713:1714   */\n  0x05\n    /* \"#utility.yul\":1709:1736   */\n  shr\n    /* \"#utility.yul\":1703:1707   */\n  dup2\n    /* \"#utility.yul\":1699:1737   */\n  add\n    /* \"#utility.yul\":1768:1772   */\n  0x20\n    /* \"#utility.yul\":1756:1766   */\n  dup6\n    /* \"#utility.yul\":1753:1773   */\n  lt\n    /* \"#utility.yul\":1750:1797   */\n  iszero\n  tag_103\n  jumpi\n  pop\n    /* \"#utility.yul\":1791:1795   */\n  dup1\n    /* \"#utility.yul\":1750:1797   */\ntag_103:\n    /* \"#utility.yul\":1846:1848   */\n  0x1f\n    /* \"#utility.yul\":1841:1844   */\n  dup5\n    /* \"#utility.yul\":1837:1849   */\n  add\n    /* \"#utility.yul\":1834:1835   */\n  0x05\n    /* \"#utility.yul\":1830:1850   */\n  shr\n    /* \"#utility.yul\":1824:1828   */\n  dup3\n    /* \"#utility.yul\":1820:1851   */\n  add\n    /* \"#utility.yul\":1810:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1901:1982   */\ntag_104:\n    /* \"#utility.yul\":1919:1921   */\n  dup2\n    /* \"#utility.yul\":1912:1917   */\n  dup2\n    /* \"#utility.yul\":1909:1922   */\n  lt\n    /* \"#utility.yul\":1901:1982   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":1978:1979   */\n  0x00\n    /* \"#utility.yul\":1964:1980   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1945:1946   */\n  0x01\n    /* \"#utility.yul\":1934:1947   */\n  add\n    /* \"#utility.yul\":1901:1982   */\n  jump(tag_104)\ntag_106:\n    /* \"#utility.yul\":1905:1908   */\n  pop\n  pop\n    /* \"#utility.yul\":1571:1992   */\ntag_102:\n    /* \"#utility.yul\":1480:1998   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2174:3473   */\ntag_11:\n    /* \"#utility.yul\":2294:2304   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2316:2346   */\n  dup2\n  gt\n    /* \"#utility.yul\":2313:2369   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2349:2367   */\n  tag_110\n  tag_79\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2378:2475   */\n  tag_111\n    /* \"#utility.yul\":2468:2474   */\n  dup2\n    /* \"#utility.yul\":2428:2466   */\n  tag_112\n    /* \"#utility.yul\":2460:2464   */\n  dup5\n    /* \"#utility.yul\":2454:2465   */\n  sload\n    /* \"#utility.yul\":2428:2466   */\n  tag_80\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2422:2426   */\n  dup5\n    /* \"#utility.yul\":2378:2475   */\n  tag_82\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2524:2528   */\n  0x20\n    /* \"#utility.yul\":2555:2557   */\n  0x1f\n    /* \"#utility.yul\":2544:2558   */\n  dup3\n  gt\n    /* \"#utility.yul\":2572:2573   */\n  0x01\n    /* \"#utility.yul\":2567:3216   */\n  dup2\n  eq\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3260:3261   */\n  0x00\n    /* \"#utility.yul\":3277:3283   */\n  dup4\n    /* \"#utility.yul\":3274:3363   */\n  iszero\n  tag_115\n  jumpi\n  pop\n    /* \"#utility.yul\":3329:3348   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3323:3349   */\n  mload\n    /* \"#utility.yul\":3274:3363   */\ntag_115:\n  not(0x00)\n    /* \"#utility.yul\":2131:2132   */\n  0x03\n    /* \"#utility.yul\":2127:2138   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2123:2147   */\n  shr\n    /* \"#utility.yul\":2119:2148   */\n  not\n    /* \"#utility.yul\":2109:2149   */\n  and\n    /* \"#utility.yul\":2155:2156   */\n  0x01\n    /* \"#utility.yul\":2151:2162   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2106:2163   */\n  or\n    /* \"#utility.yul\":3376:3457   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2537:3467   */\n  jump(tag_106)\n    /* \"#utility.yul\":2567:3216   */\ntag_114:\n    /* \"#utility.yul\":1427:1428   */\n  0x00\n    /* \"#utility.yul\":1420:1434   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1464:1468   */\n  0x20\n    /* \"#utility.yul\":1451:1469   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2603:2623   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2721:2943   */\ntag_118:\n    /* \"#utility.yul\":2735:2742   */\n  dup3\n    /* \"#utility.yul\":2732:2733   */\n  dup2\n    /* \"#utility.yul\":2729:2743   */\n  lt\n    /* \"#utility.yul\":2721:2943   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":2817:2836   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2811:2837   */\n  mload\n    /* \"#utility.yul\":2796:2838   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2924:2928   */\n  0x20\n    /* \"#utility.yul\":2909:2929   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2877:2878   */\n  0x01\n    /* \"#utility.yul\":2865:2879   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2751:2763   */\n  add\n    /* \"#utility.yul\":2721:2943   */\n  jump(tag_118)\ntag_120:\n    /* \"#utility.yul\":2725:2728   */\n  pop\n    /* \"#utility.yul\":2971:2977   */\n  dup5\n    /* \"#utility.yul\":2962:2969   */\n  dup3\n    /* \"#utility.yul\":2959:2978   */\n  lt\n    /* \"#utility.yul\":2956:3157   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":3032:3051   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3026:3052   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3115:3116   */\n  0x03\n    /* \"#utility.yul\":3111:3125   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3127:3130   */\n  0xf8\n    /* \"#utility.yul\":3107:3131   */\n  and\n    /* \"#utility.yul\":3103:3140   */\n  shr\n    /* \"#utility.yul\":3099:3141   */\n  not\n    /* \"#utility.yul\":3084:3142   */\n  and\n    /* \"#utility.yul\":3069:3143   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2956:3157   */\ntag_121:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3203:3204   */\n  0x01\n    /* \"#utility.yul\":3187:3201   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3183:3205   */\n  add\n    /* \"#utility.yul\":3170:3206   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2174:3473   */\n  jump\t// out\n    /* \"#utility.yul\":5448:5575   */\ntag_84:\n    /* \"#utility.yul\":5509:5519   */\n  0x4e487b71\n    /* \"#utility.yul\":5504:5507   */\n  0xe0\n    /* \"#utility.yul\":5500:5520   */\n  shl\n    /* \"#utility.yul\":5497:5498   */\n  0x00\n    /* \"#utility.yul\":5490:5521   */\n  mstore\n    /* \"#utility.yul\":5540:5544   */\n  0x11\n    /* \"#utility.yul\":5537:5538   */\n  0x04\n    /* \"#utility.yul\":5530:5545   */\n  mstore\n    /* \"#utility.yul\":5564:5568   */\n  0x24\n    /* \"#utility.yul\":5561:5562   */\n  0x00\n    /* \"#utility.yul\":5554:5569   */\n  revert\n    /* \"#utility.yul\":5580:5748   */\ntag_38:\n    /* \"#utility.yul\":5653:5662   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5684:5693   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5701:5716   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5695:5717   */\n  dup5\n  eq\n    /* \"#utility.yul\":5681:5718   */\n  or\n    /* \"#utility.yul\":5671:5742   */\n  tag_131\n  jumpi\n    /* \"#utility.yul\":5722:5740   */\n  tag_131\n  tag_84\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5580:5748   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5753:5970   */\ntag_40:\n    /* \"#utility.yul\":5793:5794   */\n  0x00\n    /* \"#utility.yul\":5819:5820   */\n  dup3\n    /* \"#utility.yul\":5809:5941   */\n  tag_133\n  jumpi\n    /* \"#utility.yul\":5863:5873   */\n  0x4e487b71\n    /* \"#utility.yul\":5858:5861   */\n  0xe0\n    /* \"#utility.yul\":5854:5874   */\n  shl\n    /* \"#utility.yul\":5851:5852   */\n  0x00\n    /* \"#utility.yul\":5844:5875   */\n  mstore\n    /* \"#utility.yul\":5898:5902   */\n  0x12\n    /* \"#utility.yul\":5895:5896   */\n  0x04\n    /* \"#utility.yul\":5888:5903   */\n  mstore\n    /* \"#utility.yul\":5926:5930   */\n  0x24\n    /* \"#utility.yul\":5923:5924   */\n  0x00\n    /* \"#utility.yul\":5916:5931   */\n  revert\n    /* \"#utility.yul\":5809:5941   */\ntag_133:\n  pop\n    /* \"#utility.yul\":5955:5964   */\n  div\n  swap1\n    /* \"#utility.yul\":5753:5970   */\n  jump\t// out\n    /* \"#utility.yul\":5975:6100   */\ntag_49:\n    /* \"#utility.yul\":6040:6049   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":6061:6071   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":6058:6094   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":6074:6092   */\n  tag_131\n  tag_84\n  jump\t// in\n    /* \"#utility.yul\":6455:6632   */\ntag_85:\n    /* \"quantum/UBI4ALLQuantum.sol\":562:14358  contract UBI4ALLQuantum is ERC20, Ownable, ReentrancyGuard, Pausable, IUBI4ALLQuantum {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4d10a0db24f434e6025a5ab91426fb885a8a41f2a9a3e3f8c3bfdea4a211adc4\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"quantum/UBI4ALLQuantum.sol\":562:14358  contract UBI4ALLQuantum is ERC20, Ownable, ReentrancyGuard, Pausable, IUBI4ALLQuantum {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x780b9737\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xbf1ad7e0\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xd72b11bd\n      gt\n      tag_48\n      jumpi\n      dup1\n      0xd72b11bd\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xdb7a4605\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf9428f38\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xfdb20ccb\n      eq\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      0xbf1ad7e0\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xc7574839\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd4698016\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xd486d129\n      eq\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0x90534f24\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x90534f24\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x9576a374\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x993eb1c5\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xb7e26a2e\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x780b9737\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x7b5c7f03\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x4a0ced96\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x4a0ced96\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x65ed6e23\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x74300378\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x435263ef\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0x23b872dd\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x254800d4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2af44592\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x33127b0d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup1\n      0x0197d972\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0553be1e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"quantum/UBI4ALLQuantum.sol\":1494:1543  uint256 public constant VESTING_PERIOD = 365 days */\n    tag_3:\n      tag_53\n        /* \"quantum/UBI4ALLQuantum.sol\":1535:1543  365 days */\n      0x01e13380\n        /* \"quantum/UBI4ALLQuantum.sol\":1494:1543  uint256 public constant VESTING_PERIOD = 365 days */\n      dup2\n      jump\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":1494:1543  uint256 public constant VESTING_PERIOD = 365 days */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"quantum/UBI4ALLQuantum.sol\":11779:12307  function getReleasableVesting(address wallet) external view returns (uint256) {... */\n    tag_4:\n      tag_53\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n        /* \"#utility.yul\":1791:1805   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1784:1806   */\n      iszero\n        /* \"#utility.yul\":1766:1807   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1754:1756   */\n      0x20\n        /* \"#utility.yul\":1739:1757   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_55\n        /* \"#utility.yul\":1626:1813   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_53)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_66\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":1594:1631  uint256 public immutable vestingStart */\n    tag_9:\n      tag_53\n      immutable(\"0x4d10a0db24f434e6025a5ab91426fb885a8a41f2a9a3e3f8c3bfdea4a211adc4\")\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":1908:1955  mapping(address => uint256) public lockedForDAO */\n    tag_10:\n      tag_53\n      tag_84\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_84:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":2339:2375   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2327:2329   */\n      0x20\n        /* \"#utility.yul\":2312:2330   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_55\n        /* \"#utility.yul\":2197:2381   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":12610:13329  function transferWithLeverage(address to, uint256 amount, uint256 leverage) external nonReentrant whenNotPaused returns (bool) {... */\n    tag_12:\n      tag_66\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":14291:14356  function unpause() external onlyOwner {... */\n    tag_13:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      stop\n        /* \"quantum/UBI4ALLQuantum.sol\":6598:6832  function mint(address to, uint256 amount) external override onlyOwner nonReentrant whenNotPaused {... */\n    tag_14:\n      tag_96\n      tag_99\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":6934:7145  function burn(uint256 amount) external override nonReentrant whenNotPaused {... */\n    tag_15:\n      tag_96\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":1712:1742  address public ecosystemWallet */\n    tag_16:\n      sload(0x08)\n      tag_105\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_105:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3206:3238   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3188:3239   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3176:3178   */\n      0x20\n        /* \"#utility.yul\":3161:3179   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":1712:1742  address public ecosystemWallet */\n      tag_55\n        /* \"#utility.yul\":3042:3245   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":1677:1706  address public treasuryWallet */\n    tag_17:\n      sload(0x07)\n      tag_105\n      swap1\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":2011:2043  uint256 public totalLockedForDAO */\n    tag_18:\n      tag_53\n      sload(0x0d)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1616:1700  function paused() public view virtual returns (bool) {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1686:1693  _paused */\n      and(0xff, sload(0x07))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1616:1700  function paused() public view virtual returns (bool) {... */\n      jump(tag_66)\n        /* \"quantum/UBI4ALLQuantum.sol\":5380:5777  function getAllocations() external pure override returns (... */\n    tag_20:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":3509:3534   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":3565:3567   */\n      0x20\n        /* \"#utility.yul\":3550:3568   */\n      dup7\n      add\n        /* \"#utility.yul\":3543:3577   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":3593:3611   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":3586:3620   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3651:3653   */\n      0x60\n        /* \"#utility.yul\":3636:3654   */\n      dup4\n      add\n        /* \"#utility.yul\":3629:3663   */\n      mstore\n        /* \"#utility.yul\":3694:3697   */\n      0x80\n        /* \"#utility.yul\":3679:3698   */\n      dup3\n      add\n        /* \"#utility.yul\":3672:3707   */\n      mstore\n        /* \"#utility.yul\":3496:3499   */\n      0xa0\n        /* \"#utility.yul\":3481:3500   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":5380:5777  function getAllocations() external pure override returns (... */\n      tag_55\n        /* \"#utility.yul\":3250:3713   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":13975:14122  function balanceOf(address account) public view override(ERC20, IUBI4ALLQuantum) returns (uint256) {... */\n    tag_21:\n      tag_53\n      tag_123\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n      tag_96\n      tag_127\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":10144:10579  function unlockFromDAO(uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_23:\n      tag_96\n      tag_129\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":7969:9525  function updateWallet(string memory walletType, address newWallet) external onlyOwner {... */\n    tag_24:\n      tag_96\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":1377:1446  uint256 public constant RESERVE_ALLOCATION = (TOTAL_SUPPLY * 5) / 100 */\n    tag_25:\n      tag_53\n      tag_136\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":14172:14233  function pause() external onlyOwner {... */\n    tag_26:\n      tag_96\n      tag_139\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_105)\n        /* \"quantum/UBI4ALLQuantum.sol\":762:823  uint256 public constant TOTAL_SUPPLY = 1_000_000_000 * 10**18 */\n    tag_28:\n      tag_53\n      shl(0x1b, 0x6765c793fa10079d)\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":1001:1073  uint256 public constant ECOSYSTEM_ALLOCATION = (TOTAL_SUPPLY * 20) / 100 */\n    tag_29:\n      tag_53\n      tag_147\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":9624:10044  function lockForDAO(uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_30:\n      tag_96\n      tag_150\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_150:\n      tag_151\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_31:\n      tag_62\n      tag_153\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":1127:1199  uint256 public constant COMMUNITY_ALLOCATION = (TOTAL_SUPPLY * 15) / 100 */\n    tag_32:\n      tag_53\n      tag_156\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":13553:13841  function transfer(address to, uint256 amount) public override(ERC20, IUBI4ALLQuantum) whenNotPaused returns (bool) {... */\n    tag_33:\n      tag_66\n      tag_159\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":7311:7757  function emergencyRecoverTokens(address token, address to) external override onlyOwner nonReentrant {... */\n    tag_34:\n      tag_96\n      tag_163\n      calldatasize\n      0x04\n      tag_164\n      jump\t// in\n    tag_163:\n      tag_165\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":876:947  uint256 public constant TREASURY_ALLOCATION = (TOTAL_SUPPLY * 50) / 100 */\n    tag_35:\n      tag_53\n      tag_167\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":4986:5089  function getTotalSupply() external pure override returns (uint256) {... */\n    tag_36:\n      shl(0x1b, 0x6765c793fa10079d)\n      jump(tag_53)\n        /* \"quantum/UBI4ALLQuantum.sol\":1748:1778  address public communityWallet */\n    tag_37:\n      sload(0x09)\n      tag_105\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":1784:1814  address public liquidityWallet */\n    tag_38:\n      sload(0x0a)\n      tag_105\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":10697:11612  function releaseVesting(address wallet) external nonReentrant whenNotPaused {... */\n    tag_39:\n      tag_96\n      tag_179\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_179:\n      tag_180\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":1820:1848  address public reserveWallet */\n    tag_40:\n      sload(0x0b)\n      tag_105\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":6093:6461  function getWallets() external view override returns (... */\n    tag_41:\n        /* \"quantum/UBI4ALLQuantum.sol\":6316:6330  treasuryWallet */\n      sload(0x07)\n        /* \"quantum/UBI4ALLQuantum.sol\":6344:6359  ecosystemWallet */\n      sload(0x08)\n        /* \"quantum/UBI4ALLQuantum.sol\":6373:6388  communityWallet */\n      sload(0x09)\n        /* \"quantum/UBI4ALLQuantum.sol\":6402:6417  liquidityWallet */\n      sload(0x0a)\n        /* \"quantum/UBI4ALLQuantum.sol\":6431:6444  reserveWallet */\n      sload(0x0b)\n        /* \"quantum/UBI4ALLQuantum.sol\":6093:6461  function getWallets() external view override returns (... */\n      0x40\n      dup1\n      mload\n        /* \"quantum/UBI4ALLQuantum.sol\":6316:6330  treasuryWallet */\n      0x0100\n      swap1\n      swap7\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5408:5459   */\n      dup8\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":6344:6359  ecosystemWallet */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":5490:5492   */\n      0x20\n        /* \"#utility.yul\":5475:5493   */\n      dup8\n      add\n        /* \"#utility.yul\":5468:5528   */\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":6373:6388  communityWallet */\n      swap3\n      dup5\n      and\n        /* \"#utility.yul\":5544:5562   */\n      swap3\n      dup6\n      add\n        /* \"#utility.yul\":5537:5597   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":6402:6417  liquidityWallet */\n      dup3\n      and\n        /* \"#utility.yul\":5628:5630   */\n      0x60\n        /* \"#utility.yul\":5613:5631   */\n      dup5\n      add\n        /* \"#utility.yul\":5606:5666   */\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":6431:6444  reserveWallet */\n      and\n        /* \"#utility.yul\":5697:5700   */\n      0x80\n        /* \"#utility.yul\":5682:5701   */\n      dup3\n      add\n        /* \"#utility.yul\":5675:5736   */\n      mstore\n        /* \"#utility.yul\":5395:5398   */\n      0xa0\n        /* \"#utility.yul\":5380:5399   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":6093:6461  function getWallets() external view override returns (... */\n      tag_55\n        /* \"#utility.yul\":5149:5742   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_42:\n      tag_53\n      tag_189\n      calldatasize\n      0x04\n      tag_164\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_43:\n      tag_96\n      tag_193\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_193:\n      tag_194\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":1254:1326  uint256 public constant LIQUIDITY_ALLOCATION = (TOTAL_SUPPLY * 10) / 100 */\n    tag_44:\n      tag_53\n      tag_196\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":2287:2346  mapping(address => VestingSchedule) public vestingSchedules */\n    tag_45:\n      tag_198\n      tag_199\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_199:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_198:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5921:5946   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":5977:5979   */\n      0x20\n        /* \"#utility.yul\":5962:5980   */\n      dup4\n      add\n        /* \"#utility.yul\":5955:5989   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5894:5912   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":2287:2346  mapping(address => VestingSchedule) public vestingSchedules */\n      tag_55\n        /* \"#utility.yul\":5747:5995   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":11779:12307  function getReleasableVesting(address wallet) external view returns (uint256) {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":11902:11926  vestingSchedules[wallet] */\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":11848:11855  uint256 */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":11902:11926  vestingSchedules[wallet] */\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":11902:11918  vestingSchedules */\n      0x0e\n        /* \"quantum/UBI4ALLQuantum.sol\":11902:11926  vestingSchedules[wallet] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":11940:11960  schedule.totalAmount */\n      dup1\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":11940:11965  schedule.totalAmount == 0 */\n      dup3\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":11936:11975  if (schedule.totalAmount == 0) return 0 */\n      tag_204\n      jumpi\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":11974:11975  0 */\n      0x00\n      swap3\n        /* \"quantum/UBI4ALLQuantum.sol\":11779:12307  function getReleasableVesting(address wallet) external view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantum.sol\":11936:11975  if (schedule.totalAmount == 0) return 0 */\n    tag_204:\n        /* \"quantum/UBI4ALLQuantum.sol\":11986:12005  uint256 elapsedTime */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":12008:12041  block.timestamp.sub(vestingStart) */\n      tag_205\n        /* \"quantum/UBI4ALLQuantum.sol\":12008:12023  block.timestamp */\n      timestamp\n        /* \"quantum/UBI4ALLQuantum.sol\":12028:12040  vestingStart */\n      immutable(\"0x4d10a0db24f434e6025a5ab91426fb885a8a41f2a9a3e3f8c3bfdea4a211adc4\")\n        /* \"quantum/UBI4ALLQuantum.sol\":12008:12027  block.timestamp.sub */\n      tag_206\n        /* \"quantum/UBI4ALLQuantum.sol\":12008:12041  block.timestamp.sub(vestingStart) */\n      jump\t// in\n    tag_205:\n        /* \"quantum/UBI4ALLQuantum.sol\":11986:12041  uint256 elapsedTime = block.timestamp.sub(vestingStart) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":12051:12071  uint256 vestedAmount */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":12074:12131  schedule.totalAmount.mul(elapsedTime).div(VESTING_PERIOD) */\n      tag_207\n        /* \"quantum/UBI4ALLQuantum.sol\":1535:1543  365 days */\n      0x01e13380\n        /* \"quantum/UBI4ALLQuantum.sol\":12074:12111  schedule.totalAmount.mul(elapsedTime) */\n      tag_208\n        /* \"quantum/UBI4ALLQuantum.sol\":12099:12110  elapsedTime */\n      dup5\n        /* \"quantum/UBI4ALLQuantum.sol\":12074:12082  schedule */\n      dup7\n        /* \"quantum/UBI4ALLQuantum.sol\":12074:12094  schedule.totalAmount */\n      0x00\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":12074:12098  schedule.totalAmount.mul */\n      tag_209\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":12074:12111  schedule.totalAmount.mul(elapsedTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"quantum/UBI4ALLQuantum.sol\":12074:12115  schedule.totalAmount.mul(elapsedTime).div */\n      swap1\n      tag_210\n        /* \"quantum/UBI4ALLQuantum.sol\":12074:12131  schedule.totalAmount.mul(elapsedTime).div(VESTING_PERIOD) */\n      jump\t// in\n    tag_207:\n        /* \"quantum/UBI4ALLQuantum.sol\":12160:12180  schedule.totalAmount */\n      dup4\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":12051:12131  uint256 vestedAmount = schedule.totalAmount.mul(elapsedTime).div(VESTING_PERIOD) */\n      swap1\n      swap2\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":12145:12180  vestedAmount > schedule.totalAmount */\n      dup2\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":12141:12242  if (vestedAmount > schedule.totalAmount) {... */\n      iszero\n      tag_211\n      jumpi\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":12211:12231  schedule.totalAmount */\n      dup2\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":12141:12242  if (vestedAmount > schedule.totalAmount) {... */\n    tag_211:\n        /* \"quantum/UBI4ALLQuantum.sol\":12276:12299  schedule.releasedAmount */\n      0x01\n      dup4\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":12259:12300  vestedAmount.sub(schedule.releasedAmount) */\n      tag_212\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":12259:12271  vestedAmount */\n      dup3\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":12259:12275  vestedAmount.sub */\n      tag_206\n        /* \"quantum/UBI4ALLQuantum.sol\":12259:12300  vestedAmount.sub(schedule.releasedAmount) */\n      jump\t// in\n    tag_212:\n        /* \"quantum/UBI4ALLQuantum.sol\":12252:12300  return vestedAmount.sub(schedule.releasedAmount) */\n      swap6\n        /* \"quantum/UBI4ALLQuantum.sol\":11779:12307  function getReleasableVesting(address wallet) external view returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_216\n      swap1\n      tag_215\n      jump\t// in\n    tag_216:\n      dup1\n      iszero\n      tag_217\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_218\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_217)\n    tag_218:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_219:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_219\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_223\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_220:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_226:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantum.sol\":12610:13329  function transferWithLeverage(address to, uint256 amount, uint256 leverage) external nonReentrant whenNotPaused returns (bool) {... */\n    tag_94:\n        /* \"quantum/UBI4ALLQuantum.sol\":12731:12735  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_234\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_235\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_237\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_238\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":12755:12771  to != address(0) */\n      dup5\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":12747:12793  require(to != address(0), \"Invalid recipient\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"quantum/UBI4ALLQuantum.sol\":12820:12821  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":12811:12817  amount */\n      dup4\n        /* \"quantum/UBI4ALLQuantum.sol\":12811:12821  amount > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":12803:12840  require(amount > 0, \"Invalid amount\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_245\n      jump\t// in\n    tag_243:\n        /* \"quantum/UBI4ALLQuantum.sol\":12870:12873  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":12858:12866  leverage */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":12858:12873  leverage >= 100 */\n      lt\n      iszero\n        /* \"quantum/UBI4ALLQuantum.sol\":12850:12906  require(leverage >= 100, \"Leverage must be at least 1x\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7276:7278   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":12850:12906  require(leverage >= 100, \"Leverage must be at least 1x\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7258:7279   */\n      mstore\n        /* \"#utility.yul\":7315:7317   */\n      0x1c\n        /* \"#utility.yul\":7295:7313   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7288:7318   */\n      mstore\n        /* \"#utility.yul\":7354:7384   */\n      0x4c65766572616765206d757374206265206174206c6561737420317800000000\n        /* \"#utility.yul\":7334:7352   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7327:7385   */\n      mstore\n        /* \"#utility.yul\":7402:7420   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":12850:12906  require(leverage >= 100, \"Leverage must be at least 1x\") */\n      tag_241\n        /* \"#utility.yul\":7074:7426   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":12850:12906  require(leverage >= 100, \"Leverage must be at least 1x\") */\n    tag_246:\n        /* \"quantum/UBI4ALLQuantum.sol\":12949:12955  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":12924:12945  balanceOf(msg.sender) */\n      tag_249\n        /* \"quantum/UBI4ALLQuantum.sol\":12934:12944  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":12924:12933  balanceOf */\n      tag_124\n        /* \"quantum/UBI4ALLQuantum.sol\":12924:12945  balanceOf(msg.sender) */\n      jump\t// in\n    tag_249:\n        /* \"quantum/UBI4ALLQuantum.sol\":12924:12955  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"quantum/UBI4ALLQuantum.sol\":12916:12980  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7633:7635   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":12916:12980  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7615:7636   */\n      mstore\n        /* \"#utility.yul\":7672:7674   */\n      0x14\n        /* \"#utility.yul\":7652:7670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7645:7675   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":7691:7709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7684:7734   */\n      mstore\n        /* \"#utility.yul\":7751:7769   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":12916:12980  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_241\n        /* \"#utility.yul\":7431:7775   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":12916:12980  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n    tag_250:\n        /* \"quantum/UBI4ALLQuantum.sol\":13154:13166  bool success */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":13169:13195  super.transfer(to, amount) */\n      tag_253\n        /* \"quantum/UBI4ALLQuantum.sol\":13184:13186  to */\n      dup6\n        /* \"quantum/UBI4ALLQuantum.sol\":13188:13194  amount */\n      dup6\n        /* \"quantum/UBI4ALLQuantum.sol\":13169:13183  super.transfer */\n      tag_254\n        /* \"quantum/UBI4ALLQuantum.sol\":13169:13195  super.transfer(to, amount) */\n      jump\t// in\n    tag_253:\n        /* \"quantum/UBI4ALLQuantum.sol\":13154:13195  bool success = super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":13209:13216  success */\n      dup1\n        /* \"quantum/UBI4ALLQuantum.sol\":13205:13299  if (success) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"quantum/UBI4ALLQuantum.sol\":13237:13288  LeveragedTransfer(msg.sender, to, amount, leverage) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5921:5946   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":5977:5979   */\n      0x20\n        /* \"#utility.yul\":5962:5980   */\n      dup2\n      add\n        /* \"#utility.yul\":5955:5989   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":13237:13288  LeveragedTransfer(msg.sender, to, amount, leverage) */\n      dup8\n      and\n      swap2\n        /* \"quantum/UBI4ALLQuantum.sol\":13255:13265  msg.sender */\n      caller\n      swap2\n        /* \"quantum/UBI4ALLQuantum.sol\":13237:13288  LeveragedTransfer(msg.sender, to, amount, leverage) */\n      0xae5a72e837b1c61d8f56d35c16816d1e29cc1a1e858253419499dda337ea03e3\n      swap2\n        /* \"#utility.yul\":5894:5912   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":13237:13288  LeveragedTransfer(msg.sender, to, amount, leverage) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"quantum/UBI4ALLQuantum.sol\":13205:13299  if (success) {... */\n    tag_255:\n        /* \"quantum/UBI4ALLQuantum.sol\":13315:13322  success */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n      tag_226\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2817  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2832  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2630:2839  function _nonReentrantAfter() private {... */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":14291:14356  function unpause() external onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_260:\n        /* \"quantum/UBI4ALLQuantum.sol\":14339:14349  _unpause() */\n      tag_263\n        /* \"quantum/UBI4ALLQuantum.sol\":14339:14347  _unpause */\n      tag_264\n        /* \"quantum/UBI4ALLQuantum.sol\":14339:14349  _unpause() */\n      jump\t// in\n    tag_263:\n        /* \"quantum/UBI4ALLQuantum.sol\":14291:14356  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantum.sol\":6598:6832  function mint(address to, uint256 amount) external override onlyOwner nonReentrant whenNotPaused {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_268\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_235\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_270\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_238\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_270:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":6713:6729  to != address(0) */\n      dup3\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":6705:6751  require(to != address(0), \"Invalid recipient\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_272:\n        /* \"quantum/UBI4ALLQuantum.sol\":6778:6779  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":6769:6775  amount */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":6769:6779  amount > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":6761:6798  require(amount > 0, \"Invalid amount\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_245\n      jump\t// in\n    tag_274:\n        /* \"quantum/UBI4ALLQuantum.sol\":6808:6825  _mint(to, amount) */\n      tag_276\n        /* \"quantum/UBI4ALLQuantum.sol\":6814:6816  to */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":6818:6824  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":6808:6813  _mint */\n      tag_277\n        /* \"quantum/UBI4ALLQuantum.sol\":6808:6825  _mint(to, amount) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n      tag_278\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2817  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2832  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2630:2839  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n    tag_278:\n        /* \"quantum/UBI4ALLQuantum.sol\":6598:6832  function mint(address to, uint256 amount) external override onlyOwner nonReentrant whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantum.sol\":6934:7145  function burn(uint256 amount) external override nonReentrant whenNotPaused {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_280\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_235\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_282\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_238\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_282:\n        /* \"quantum/UBI4ALLQuantum.sol\":7036:7037  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":7027:7033  amount */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":7027:7037  amount > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":7019:7056  require(amount > 0, \"Invalid amount\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_245\n      jump\t// in\n    tag_284:\n        /* \"quantum/UBI4ALLQuantum.sol\":7066:7091  _burn(msg.sender, amount) */\n      tag_286\n        /* \"quantum/UBI4ALLQuantum.sol\":7072:7082  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":7084:7090  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":7066:7071  _burn */\n      tag_287\n        /* \"quantum/UBI4ALLQuantum.sol\":7066:7091  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_286:\n        /* \"quantum/UBI4ALLQuantum.sol\":7106:7138  TokensBurned(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":7119:7129  msg.sender */\n      caller\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":7106:7138  TokensBurned(msg.sender, amount) */\n      0xfd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":7106:7138  TokensBurned(msg.sender, amount) */\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n      tag_289\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2817  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2832  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2630:2839  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n    tag_289:\n        /* \"quantum/UBI4ALLQuantum.sol\":6934:7145  function burn(uint256 amount) external override nonReentrant whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantum.sol\":5380:5777  function getAllocations() external pure override returns (... */\n    tag_119:\n        /* \"quantum/UBI4ALLQuantum.sol\":5447:5463  uint256 treasury */\n      0x00\n      dup1\n      dup1\n      dup1\n      dup1\n        /* \"quantum/UBI4ALLQuantum.sol\":944:947  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":923:940  TOTAL_SUPPLY * 50 */\n      tag_292\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":938:940  50 */\n      0x32\n        /* \"quantum/UBI4ALLQuantum.sol\":923:940  TOTAL_SUPPLY * 50 */\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"quantum/UBI4ALLQuantum.sol\":922:947  (TOTAL_SUPPLY * 50) / 100 */\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"quantum/UBI4ALLQuantum.sol\":1070:1073  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":1049:1066  TOTAL_SUPPLY * 20 */\n      tag_296\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":1064:1066  20 */\n      0x14\n        /* \"quantum/UBI4ALLQuantum.sol\":1049:1066  TOTAL_SUPPLY * 20 */\n      tag_293\n      jump\t// in\n    tag_296:\n        /* \"quantum/UBI4ALLQuantum.sol\":1048:1073  (TOTAL_SUPPLY * 20) / 100 */\n      tag_297\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_297:\n        /* \"quantum/UBI4ALLQuantum.sol\":1196:1199  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":1175:1192  TOTAL_SUPPLY * 15 */\n      tag_298\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":1190:1192  15 */\n      0x0f\n        /* \"quantum/UBI4ALLQuantum.sol\":1175:1192  TOTAL_SUPPLY * 15 */\n      tag_293\n      jump\t// in\n    tag_298:\n        /* \"quantum/UBI4ALLQuantum.sol\":1174:1199  (TOTAL_SUPPLY * 15) / 100 */\n      tag_299\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_299:\n        /* \"quantum/UBI4ALLQuantum.sol\":1323:1326  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":1302:1319  TOTAL_SUPPLY * 10 */\n      tag_300\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":1317:1319  10 */\n      0x0a\n        /* \"quantum/UBI4ALLQuantum.sol\":1302:1319  TOTAL_SUPPLY * 10 */\n      tag_293\n      jump\t// in\n    tag_300:\n        /* \"quantum/UBI4ALLQuantum.sol\":1301:1326  (TOTAL_SUPPLY * 10) / 100 */\n      tag_301\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_301:\n        /* \"quantum/UBI4ALLQuantum.sol\":1443:1446  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":1423:1439  TOTAL_SUPPLY * 5 */\n      tag_302\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":1438:1439  5 */\n      0x05\n        /* \"quantum/UBI4ALLQuantum.sol\":1423:1439  TOTAL_SUPPLY * 5 */\n      tag_293\n      jump\t// in\n    tag_302:\n        /* \"quantum/UBI4ALLQuantum.sol\":1422:1446  (TOTAL_SUPPLY * 5) / 100 */\n      tag_303\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_303:\n        /* \"quantum/UBI4ALLQuantum.sol\":5586:5770  return (... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":5380:5777  function getAllocations() external pure override returns (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantum.sol\":13975:14122  function balanceOf(address account) public view override(ERC20, IUBI4ALLQuantum) returns (uint256) {... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":14065:14072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":14091:14115  super.balanceOf(account) */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_308\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":10144:10579  function unlockFromDAO(uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_313\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_235\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_315\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_238\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_315:\n        /* \"quantum/UBI4ALLQuantum.sol\":10246:10247  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":10237:10243  amount */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":10237:10247  amount > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":10229:10266  require(amount > 0, \"Invalid amount\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_245\n      jump\t// in\n    tag_317:\n        /* \"quantum/UBI4ALLQuantum.sol\":10297:10307  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":10284:10308  lockedForDAO[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":10284:10296  lockedForDAO */\n      0x0c\n        /* \"quantum/UBI4ALLQuantum.sol\":10284:10308  lockedForDAO[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":10284:10318  lockedForDAO[msg.sender] >= amount */\n      dup2\n      gt\n      iszero\n        /* \"quantum/UBI4ALLQuantum.sol\":10276:10350  require(lockedForDAO[msg.sender] >= amount, \"Insufficient locked balance\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8509:8511   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":10276:10350  require(lockedForDAO[msg.sender] >= amount, \"Insufficient locked balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8491:8512   */\n      mstore\n        /* \"#utility.yul\":8548:8550   */\n      0x1b\n        /* \"#utility.yul\":8528:8546   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8521:8551   */\n      mstore\n        /* \"#utility.yul\":8587:8616   */\n      0x496e73756666696369656e74206c6f636b65642062616c616e63650000000000\n        /* \"#utility.yul\":8567:8585   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8560:8617   */\n      mstore\n        /* \"#utility.yul\":8634:8652   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":10276:10350  require(lockedForDAO[msg.sender] >= amount, \"Insufficient locked balance\") */\n      tag_241\n        /* \"#utility.yul\":8307:8658   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":10276:10350  require(lockedForDAO[msg.sender] >= amount, \"Insufficient locked balance\") */\n    tag_319:\n        /* \"quantum/UBI4ALLQuantum.sol\":10400:10410  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":10387:10411  lockedForDAO[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":10387:10399  lockedForDAO */\n      0x0c\n        /* \"quantum/UBI4ALLQuantum.sol\":10387:10411  lockedForDAO[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":10387:10423  lockedForDAO[msg.sender].sub(amount) */\n      tag_322\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":10416:10422  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":10387:10415  lockedForDAO[msg.sender].sub */\n      tag_206\n        /* \"quantum/UBI4ALLQuantum.sol\":10387:10423  lockedForDAO[msg.sender].sub(amount) */\n      jump\t// in\n    tag_322:\n        /* \"quantum/UBI4ALLQuantum.sol\":10373:10383  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":10360:10384  lockedForDAO[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":10360:10372  lockedForDAO */\n      0x0c\n        /* \"quantum/UBI4ALLQuantum.sol\":10360:10384  lockedForDAO[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":10360:10423  lockedForDAO[msg.sender] = lockedForDAO[msg.sender].sub(amount) */\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":10453:10470  totalLockedForDAO */\n      sload(0x0d)\n        /* \"quantum/UBI4ALLQuantum.sol\":10453:10482  totalLockedForDAO.sub(amount) */\n      tag_323\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":10475:10481  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":10453:10474  totalLockedForDAO.sub */\n      tag_206\n        /* \"quantum/UBI4ALLQuantum.sol\":10453:10482  totalLockedForDAO.sub(amount) */\n      jump\t// in\n    tag_323:\n        /* \"quantum/UBI4ALLQuantum.sol\":10433:10450  totalLockedForDAO */\n      0x0d\n        /* \"quantum/UBI4ALLQuantum.sol\":10433:10482  totalLockedForDAO = totalLockedForDAO.sub(amount) */\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":10492:10517  _mint(msg.sender, amount) */\n      tag_324\n        /* \"quantum/UBI4ALLQuantum.sol\":10498:10508  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":10510:10516  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":10492:10497  _mint */\n      tag_277\n        /* \"quantum/UBI4ALLQuantum.sol\":10492:10517  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_324:\n        /* \"quantum/UBI4ALLQuantum.sol\":10532:10572  TokensUnlockedForDAO(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":10553:10563  msg.sender */\n      caller\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":10532:10572  TokensUnlockedForDAO(msg.sender, amount) */\n      0x86e5f036736269c50194228317f229b5684d89d9db959c604a1ef646d6cd6ca9\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":10532:10572  TokensUnlockedForDAO(msg.sender, amount) */\n      tag_288\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":7969:9525  function updateWallet(string memory walletType, address newWallet) external onlyOwner {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_328\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":8073:8096  newWallet != address(0) */\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":8065:8123  require(newWallet != address(0), \"Invalid wallet address\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8865:8867   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":8065:8123  require(newWallet != address(0), \"Invalid wallet address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8847:8868   */\n      mstore\n        /* \"#utility.yul\":8904:8906   */\n      0x16\n        /* \"#utility.yul\":8884:8902   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8877:8907   */\n      mstore\n      shl(0x50, 0x496e76616c69642077616c6c65742061646472657373)\n        /* \"#utility.yul\":8923:8941   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8916:8968   */\n      mstore\n        /* \"#utility.yul\":8985:9003   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":8065:8123  require(newWallet != address(0), \"Invalid wallet address\") */\n      tag_241\n        /* \"#utility.yul\":8663:9009   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":8065:8123  require(newWallet != address(0), \"Invalid wallet address\") */\n    tag_330:\n        /* \"quantum/UBI4ALLQuantum.sol\":8133:8151  bytes32 walletHash */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":8181:8191  walletType */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":8164:8192  abi.encodePacked(walletType) */\n      add(0x20, mload(0x40))\n      tag_333\n      swap2\n      swap1\n      tag_334\n      jump\t// in\n    tag_333:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8154:8193  keccak256(abi.encodePacked(walletType)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8133:8193  bytes32 walletHash = keccak256(abi.encodePacked(walletType)) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":8231:8259  abi.encodePacked(\"treasury\") */\n      add(0x20, mload(0x40))\n      tag_335\n      swap1\n      shl(0xc0, 0x7472656173757279)\n        /* \"#utility.yul\":9510:9533   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9558:9559   */\n      0x08\n        /* \"#utility.yul\":9549:9560   */\n      add\n      swap1\n        /* \"#utility.yul\":9308:9566   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":8231:8259  abi.encodePacked(\"treasury\") */\n    tag_335:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8221:8260  keccak256(abi.encodePacked(\"treasury\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8207:8217  walletHash */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":8207:8260  walletHash == keccak256(abi.encodePacked(\"treasury\")) */\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":8203:9468  if (walletHash == keccak256(abi.encodePacked(\"treasury\"))) {... */\n      tag_337\n      jumpi\n        /* \"quantum/UBI4ALLQuantum.sol\":8297:8311  treasuryWallet */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":8284:8311  newWallet != treasuryWallet */\n      swap1\n      dup4\n      and\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":8276:8335  require(newWallet != treasuryWallet, \"Same wallet address\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_340\n      jump\t// in\n    tag_338:\n        /* \"quantum/UBI4ALLQuantum.sol\":8396:8410  treasuryWallet */\n      0x07\n      dup1\n      sload\n      0x0100\n      swap1\n      dup2\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":8379:8411  vestingSchedules[treasuryWallet] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8379:8395  vestingSchedules */\n      0x0e\n        /* \"quantum/UBI4ALLQuantum.sol\":8379:8411  vestingSchedules[treasuryWallet] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8349:8376  vestingSchedules[newWallet] */\n      dup8\n      dup5\n      and\n      dup1\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8349:8411  vestingSchedules[newWallet] = vestingSchedules[treasuryWallet] */\n      dup3\n      sload\n      dup2\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8396:8410  treasuryWallet */\n      0x01\n        /* \"quantum/UBI4ALLQuantum.sol\":8349:8411  vestingSchedules[newWallet] = vestingSchedules[treasuryWallet] */\n      swap3\n      dup4\n      add\n      sload\n      swap1\n      dup4\n      add\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8449:8463  treasuryWallet */\n      dup7\n      sload\n      dup7\n      swap1\n      div\n      swap1\n      swap5\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":8432:8464  vestingSchedules[treasuryWallet] */\n      dup4\n      mstore\n      swap1\n      dup3\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8425:8464  delete vestingSchedules[treasuryWallet] */\n      dup3\n      dup2\n      sstore\n      add\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8478:8504  treasuryWallet = newWallet */\n      dup3\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      swap2\n      mul\n      or\n      swap1\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8203:9468  if (walletHash == keccak256(abi.encodePacked(\"treasury\"))) {... */\n      jump(tag_365)\n    tag_337:\n        /* \"quantum/UBI4ALLQuantum.sol\":8549:8578  abi.encodePacked(\"ecosystem\") */\n      mload(0x40)\n      shl(0xb8, 0x65636f73797374656d)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":10121:10145   */\n      mstore\n        /* \"#utility.yul\":10161:10172   */\n      0x29\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":8549:8578  abi.encodePacked(\"ecosystem\") */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8539:8579  keccak256(abi.encodePacked(\"ecosystem\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8525:8535  walletHash */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":8525:8579  walletHash == keccak256(abi.encodePacked(\"ecosystem\")) */\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":8521:9468  if (walletHash == keccak256(abi.encodePacked(\"ecosystem\"))) {... */\n      tag_344\n      jumpi\n        /* \"quantum/UBI4ALLQuantum.sol\":8616:8631  ecosystemWallet */\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":8603:8631  newWallet != ecosystemWallet */\n      swap1\n      dup4\n      and\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":8595:8655  require(newWallet != ecosystemWallet, \"Same wallet address\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_340\n      jump\t// in\n    tag_345:\n        /* \"quantum/UBI4ALLQuantum.sol\":8716:8731  ecosystemWallet */\n      0x08\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":8699:8732  vestingSchedules[ecosystemWallet] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8699:8715  vestingSchedules */\n      0x0e\n        /* \"quantum/UBI4ALLQuantum.sol\":8699:8732  vestingSchedules[ecosystemWallet] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8669:8696  vestingSchedules[newWallet] */\n      dup7\n      dup5\n      and\n      dup1\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8669:8732  vestingSchedules[newWallet] = vestingSchedules[ecosystemWallet] */\n      dup3\n      sload\n      dup2\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8716:8731  ecosystemWallet */\n      0x01\n        /* \"quantum/UBI4ALLQuantum.sol\":8669:8732  vestingSchedules[newWallet] = vestingSchedules[ecosystemWallet] */\n      swap3\n      dup4\n      add\n      sload\n      swap1\n      dup4\n      add\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8770:8785  ecosystemWallet */\n      dup6\n      sload\n      swap1\n      swap5\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":8753:8786  vestingSchedules[ecosystemWallet] */\n      dup4\n      mstore\n      swap1\n      dup3\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8746:8786  delete vestingSchedules[ecosystemWallet] */\n      dup3\n      dup2\n      sstore\n      add\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8800:8827  ecosystemWallet = newWallet */\n      dup2\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      or\n      swap1\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8521:9468  if (walletHash == keccak256(abi.encodePacked(\"ecosystem\"))) {... */\n      jump(tag_365)\n    tag_344:\n        /* \"quantum/UBI4ALLQuantum.sol\":8872:8901  abi.encodePacked(\"community\") */\n      mload(0x40)\n      shl(0xb8, 0x636f6d6d756e697479)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":10385:10409   */\n      mstore\n        /* \"#utility.yul\":10425:10436   */\n      0x29\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":8872:8901  abi.encodePacked(\"community\") */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8862:8902  keccak256(abi.encodePacked(\"community\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":8848:8858  walletHash */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":8848:8902  walletHash == keccak256(abi.encodePacked(\"community\")) */\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":8844:9468  if (walletHash == keccak256(abi.encodePacked(\"community\"))) {... */\n      tag_350\n      jumpi\n        /* \"quantum/UBI4ALLQuantum.sol\":8939:8954  communityWallet */\n      sload(0x09)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":8926:8954  newWallet != communityWallet */\n      swap1\n      dup4\n      and\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":8918:8978  require(newWallet != communityWallet, \"Same wallet address\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_340\n      jump\t// in\n    tag_351:\n        /* \"quantum/UBI4ALLQuantum.sol\":8992:9007  communityWallet */\n      0x09\n        /* \"quantum/UBI4ALLQuantum.sol\":8992:9019  communityWallet = newWallet */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":8844:9468  if (walletHash == keccak256(abi.encodePacked(\"community\"))) {... */\n      jump(tag_365)\n    tag_350:\n        /* \"quantum/UBI4ALLQuantum.sol\":9064:9093  abi.encodePacked(\"liquidity\") */\n      mload(0x40)\n      shl(0xb8, 0x6c6971756964697479)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":10649:10673   */\n      mstore\n        /* \"#utility.yul\":10689:10700   */\n      0x29\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":9064:9093  abi.encodePacked(\"liquidity\") */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":9054:9094  keccak256(abi.encodePacked(\"liquidity\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":9040:9050  walletHash */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":9040:9094  walletHash == keccak256(abi.encodePacked(\"liquidity\")) */\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":9036:9468  if (walletHash == keccak256(abi.encodePacked(\"liquidity\"))) {... */\n      tag_356\n      jumpi\n        /* \"quantum/UBI4ALLQuantum.sol\":9131:9146  liquidityWallet */\n      sload(0x0a)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":9118:9146  newWallet != liquidityWallet */\n      swap1\n      dup4\n      and\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":9110:9170  require(newWallet != liquidityWallet, \"Same wallet address\") */\n      tag_357\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_340\n      jump\t// in\n    tag_357:\n        /* \"quantum/UBI4ALLQuantum.sol\":9184:9199  liquidityWallet */\n      0x0a\n        /* \"quantum/UBI4ALLQuantum.sol\":9184:9211  liquidityWallet = newWallet */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":9036:9468  if (walletHash == keccak256(abi.encodePacked(\"liquidity\"))) {... */\n      jump(tag_365)\n    tag_356:\n        /* \"quantum/UBI4ALLQuantum.sol\":9256:9283  abi.encodePacked(\"reserve\") */\n      mload(0x40)\n      shl(0xc8, 0x72657365727665)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":10913:10935   */\n      mstore\n        /* \"#utility.yul\":10951:10962   */\n      0x27\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":9256:9283  abi.encodePacked(\"reserve\") */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":9246:9284  keccak256(abi.encodePacked(\"reserve\")) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":9232:9242  walletHash */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":9232:9284  walletHash == keccak256(abi.encodePacked(\"reserve\")) */\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":9228:9468  if (walletHash == keccak256(abi.encodePacked(\"reserve\"))) {... */\n      tag_362\n      jumpi\n        /* \"quantum/UBI4ALLQuantum.sol\":9321:9334  reserveWallet */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":9308:9334  newWallet != reserveWallet */\n      swap1\n      dup4\n      and\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":9300:9358  require(newWallet != reserveWallet, \"Same wallet address\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_340\n      jump\t// in\n    tag_363:\n        /* \"quantum/UBI4ALLQuantum.sol\":9372:9385  reserveWallet */\n      0x0b\n        /* \"quantum/UBI4ALLQuantum.sol\":9372:9397  reserveWallet = newWallet */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":9228:9468  if (walletHash == keccak256(abi.encodePacked(\"reserve\"))) {... */\n      jump(tag_365)\n    tag_362:\n        /* \"quantum/UBI4ALLQuantum.sol\":9428:9457  revert(\"Invalid wallet type\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11175:11177   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":9428:9457  revert(\"Invalid wallet type\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11157:11178   */\n      mstore\n        /* \"#utility.yul\":11214:11216   */\n      0x13\n        /* \"#utility.yul\":11194:11212   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11187:11217   */\n      mstore\n      shl(0x68, 0x496e76616c69642077616c6c65742074797065)\n        /* \"#utility.yul\":11233:11251   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11226:11275   */\n      mstore\n        /* \"#utility.yul\":11292:11310   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":9428:9457  revert(\"Invalid wallet type\") */\n      tag_241\n        /* \"#utility.yul\":10973:11316   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":9228:9468  if (walletHash == keccak256(abi.encodePacked(\"reserve\"))) {... */\n    tag_365:\n        /* \"quantum/UBI4ALLQuantum.sol\":9482:9518  WalletUpdated(walletType, newWallet) */\n      0x6ff3a4003b90be84595beb5f6acb9d54f88bd3e6dd4887ca67e53dc9645465ea\n        /* \"quantum/UBI4ALLQuantum.sol\":9496:9506  walletType */\n      dup4\n        /* \"quantum/UBI4ALLQuantum.sol\":9508:9517  newWallet */\n      dup4\n        /* \"quantum/UBI4ALLQuantum.sol\":9482:9518  WalletUpdated(walletType, newWallet) */\n      mload(0x40)\n      tag_368\n      swap3\n      swap2\n      swap1\n      tag_369\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"quantum/UBI4ALLQuantum.sol\":8055:9525  {... */\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":7969:9525  function updateWallet(string memory walletType, address newWallet) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantum.sol\":1377:1446  uint256 public constant RESERVE_ALLOCATION = (TOTAL_SUPPLY * 5) / 100 */\n    tag_136:\n        /* \"quantum/UBI4ALLQuantum.sol\":1443:1446  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":1423:1439  TOTAL_SUPPLY * 5 */\n      tag_370\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":1438:1439  5 */\n      0x05\n        /* \"quantum/UBI4ALLQuantum.sol\":1423:1439  TOTAL_SUPPLY * 5 */\n      tag_293\n      jump\t// in\n    tag_370:\n        /* \"quantum/UBI4ALLQuantum.sol\":1422:1446  (TOTAL_SUPPLY * 5) / 100 */\n      tag_371\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_371:\n        /* \"quantum/UBI4ALLQuantum.sol\":1377:1446  uint256 public constant RESERVE_ALLOCATION = (TOTAL_SUPPLY * 5) / 100 */\n      dup2\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantum.sol\":14172:14233  function pause() external onlyOwner {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_373\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_373:\n        /* \"quantum/UBI4ALLQuantum.sol\":14218:14226  _pause() */\n      tag_263\n        /* \"quantum/UBI4ALLQuantum.sol\":14218:14224  _pause */\n      tag_376\n        /* \"quantum/UBI4ALLQuantum.sol\":14218:14226  _pause() */\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":1001:1073  uint256 public constant ECOSYSTEM_ALLOCATION = (TOTAL_SUPPLY * 20) / 100 */\n    tag_147:\n        /* \"quantum/UBI4ALLQuantum.sol\":1070:1073  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":1049:1066  TOTAL_SUPPLY * 20 */\n      tag_370\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":1064:1066  20 */\n      0x14\n        /* \"quantum/UBI4ALLQuantum.sol\":1049:1066  TOTAL_SUPPLY * 20 */\n      tag_293\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":9624:10044  function lockForDAO(uint256 amount) external nonReentrant whenNotPaused {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_381\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_235\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_383\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_238\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_383:\n        /* \"quantum/UBI4ALLQuantum.sol\":9723:9724  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":9714:9720  amount */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":9714:9724  amount > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":9706:9743  require(amount > 0, \"Invalid amount\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_245\n      jump\t// in\n    tag_385:\n        /* \"quantum/UBI4ALLQuantum.sol\":9786:9792  amount */\n      dup1\n        /* \"quantum/UBI4ALLQuantum.sol\":9761:9782  balanceOf(msg.sender) */\n      tag_387\n        /* \"quantum/UBI4ALLQuantum.sol\":9771:9781  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":9761:9770  balanceOf */\n      tag_124\n        /* \"quantum/UBI4ALLQuantum.sol\":9761:9782  balanceOf(msg.sender) */\n      jump\t// in\n    tag_387:\n        /* \"quantum/UBI4ALLQuantum.sol\":9761:9792  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"quantum/UBI4ALLQuantum.sol\":9753:9817  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7633:7635   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":9753:9817  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7615:7636   */\n      mstore\n        /* \"#utility.yul\":7672:7674   */\n      0x14\n        /* \"#utility.yul\":7652:7670   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7645:7675   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":7691:7709   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7684:7734   */\n      mstore\n        /* \"#utility.yul\":7751:7769   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":9753:9817  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_241\n        /* \"#utility.yul\":7431:7775   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":9753:9817  require(balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n    tag_388:\n        /* \"quantum/UBI4ALLQuantum.sol\":9827:9852  _burn(msg.sender, amount) */\n      tag_390\n        /* \"quantum/UBI4ALLQuantum.sol\":9833:9843  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":9845:9851  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":9827:9832  _burn */\n      tag_287\n        /* \"quantum/UBI4ALLQuantum.sol\":9827:9852  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_390:\n        /* \"quantum/UBI4ALLQuantum.sol\":9902:9912  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":9889:9913  lockedForDAO[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":9889:9901  lockedForDAO */\n      0x0c\n        /* \"quantum/UBI4ALLQuantum.sol\":9889:9913  lockedForDAO[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":9889:9925  lockedForDAO[msg.sender].add(amount) */\n      tag_391\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":9918:9924  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":9889:9917  lockedForDAO[msg.sender].add */\n      tag_392\n        /* \"quantum/UBI4ALLQuantum.sol\":9889:9925  lockedForDAO[msg.sender].add(amount) */\n      jump\t// in\n    tag_391:\n        /* \"quantum/UBI4ALLQuantum.sol\":9875:9885  msg.sender */\n      caller\n        /* \"quantum/UBI4ALLQuantum.sol\":9862:9886  lockedForDAO[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":9862:9874  lockedForDAO */\n      0x0c\n        /* \"quantum/UBI4ALLQuantum.sol\":9862:9886  lockedForDAO[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":9862:9925  lockedForDAO[msg.sender] = lockedForDAO[msg.sender].add(amount) */\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":9955:9972  totalLockedForDAO */\n      sload(0x0d)\n        /* \"quantum/UBI4ALLQuantum.sol\":9955:9984  totalLockedForDAO.add(amount) */\n      tag_393\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":9977:9983  amount */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":9955:9976  totalLockedForDAO.add */\n      tag_392\n        /* \"quantum/UBI4ALLQuantum.sol\":9955:9984  totalLockedForDAO.add(amount) */\n      jump\t// in\n    tag_393:\n        /* \"quantum/UBI4ALLQuantum.sol\":9935:9952  totalLockedForDAO */\n      0x0d\n        /* \"quantum/UBI4ALLQuantum.sol\":9935:9984  totalLockedForDAO = totalLockedForDAO.add(amount) */\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":9999:10037  TokensLockedForDAO(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":10018:10028  msg.sender */\n      caller\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":9999:10037  TokensLockedForDAO(msg.sender, amount) */\n      0x6b4f55697b6ddad583b377bb7ab9d921afc2eb9ffa0b12fbcea5ae24a7a34e6a\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":9999:10037  TokensLockedForDAO(msg.sender, amount) */\n      tag_288\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":1127:1199  uint256 public constant COMMUNITY_ALLOCATION = (TOTAL_SUPPLY * 15) / 100 */\n    tag_156:\n        /* \"quantum/UBI4ALLQuantum.sol\":1196:1199  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":1175:1192  TOTAL_SUPPLY * 15 */\n      tag_370\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":1190:1192  15 */\n      0x0f\n        /* \"quantum/UBI4ALLQuantum.sol\":1175:1192  TOTAL_SUPPLY * 15 */\n      tag_293\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":13553:13841  function transfer(address to, uint256 amount) public override(ERC20, IUBI4ALLQuantum) whenNotPaused returns (bool) {... */\n    tag_160:\n        /* \"quantum/UBI4ALLQuantum.sol\":13662:13666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_405\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_238\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_405:\n        /* \"quantum/UBI4ALLQuantum.sol\":13678:13690  bool success */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":13693:13719  super.transfer(to, amount) */\n      tag_407\n        /* \"quantum/UBI4ALLQuantum.sol\":13708:13710  to */\n      dup5\n        /* \"quantum/UBI4ALLQuantum.sol\":13712:13718  amount */\n      dup5\n        /* \"quantum/UBI4ALLQuantum.sol\":13693:13707  super.transfer */\n      tag_254\n        /* \"quantum/UBI4ALLQuantum.sol\":13693:13719  super.transfer(to, amount) */\n      jump\t// in\n    tag_407:\n        /* \"quantum/UBI4ALLQuantum.sol\":13678:13719  bool success = super.transfer(to, amount) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":13733:13740  success */\n      dup1\n        /* \"quantum/UBI4ALLQuantum.sol\":13729:13811  if (success) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"quantum/UBI4ALLQuantum.sol\":13761:13800  QuantumTransfer(msg.sender, to, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":13761:13800  QuantumTransfer(msg.sender, to, amount) */\n      dup6\n      and\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":13777:13787  msg.sender */\n      caller\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":13761:13800  QuantumTransfer(msg.sender, to, amount) */\n      0x94e83ca767b0d965638d27b68a75ea07cd5c28c86299b5c7e02d2d5f1ee9aff2\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":13761:13800  QuantumTransfer(msg.sender, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"quantum/UBI4ALLQuantum.sol\":13827:13834  success */\n      swap4\n        /* \"quantum/UBI4ALLQuantum.sol\":13553:13841  function transfer(address to, uint256 amount) public override(ERC20, IUBI4ALLQuantum) whenNotPaused returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"quantum/UBI4ALLQuantum.sol\":7311:7757  function emergencyRecoverTokens(address token, address to) external override onlyOwner nonReentrant {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_411\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_413\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_235\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_413:\n        /* \"quantum/UBI4ALLQuantum.sol\":7446:7450  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":7429:7451  token != address(this) */\n      dup4\n      and\n      sub\n        /* \"quantum/UBI4ALLQuantum.sol\":7421:7481  require(token != address(this), \"Cannot recover Q4A tokens\") */\n      tag_415\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11845:11847   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":7421:7481  require(token != address(this), \"Cannot recover Q4A tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11827:11848   */\n      mstore\n        /* \"#utility.yul\":11884:11886   */\n      0x19\n        /* \"#utility.yul\":11864:11882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11857:11887   */\n      mstore\n        /* \"#utility.yul\":11923:11950   */\n      0x43616e6e6f74207265636f7665722051344120746f6b656e7300000000000000\n        /* \"#utility.yul\":11903:11921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11896:11951   */\n      mstore\n        /* \"#utility.yul\":11968:11986   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":7421:7481  require(token != address(this), \"Cannot recover Q4A tokens\") */\n      tag_241\n        /* \"#utility.yul\":11643:11992   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":7421:7481  require(token != address(this), \"Cannot recover Q4A tokens\") */\n    tag_415:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":7499:7515  to != address(0) */\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":7491:7537  require(to != address(0), \"Invalid recipient\") */\n      tag_418\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_418:\n        /* \"quantum/UBI4ALLQuantum.sol\":7564:7602  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":7596:7600  this */\n      address\n        /* \"quantum/UBI4ALLQuantum.sol\":7564:7602  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3188:3239   */\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":7547:7561  uint256 amount */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":7564:7587  IERC20(token).balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3161:3179   */\n      0x24\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":7564:7602  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_422\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_422:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_423\n      swap2\n      swap1\n      tag_424\n      jump\t// in\n    tag_423:\n        /* \"quantum/UBI4ALLQuantum.sol\":7547:7602  uint256 amount = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":7629:7630  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":7620:7626  amount */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":7620:7630  amount > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":7612:7655  require(amount > 0, \"No tokens to recover\") */\n      tag_425\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12388:12390   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":7612:7655  require(amount > 0, \"No tokens to recover\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12370:12391   */\n      mstore\n        /* \"#utility.yul\":12427:12429   */\n      0x14\n        /* \"#utility.yul\":12407:12425   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12400:12430   */\n      mstore\n      shl(0x61, 0x2737903a37b5b2b739903a37903932b1b7bb32b9)\n        /* \"#utility.yul\":12446:12464   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12439:12489   */\n      mstore\n        /* \"#utility.yul\":12506:12524   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":7612:7655  require(amount > 0, \"No tokens to recover\") */\n      tag_241\n        /* \"#utility.yul\":12186:12530   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":7612:7655  require(amount > 0, \"No tokens to recover\") */\n    tag_425:\n        /* \"quantum/UBI4ALLQuantum.sol\":7665:7699  IERC20(token).transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12727:12759   */\n      dup4\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":7665:7699  IERC20(token).transfer(to, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":12709:12760   */\n      mstore\n        /* \"#utility.yul\":12776:12794   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12769:12803   */\n      dup4\n      swap1\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":7665:7687  IERC20(token).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":12682:12700   */\n      0x44\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":7665:7699  IERC20(token).transfer(to, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_431\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_431:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_432\n      swap2\n      swap1\n      tag_433\n      jump\t// in\n    tag_432:\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":7739:7741  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":7714:7750  EmergencyRecovery(token, to, amount) */\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":7732:7737  token */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":7714:7750  EmergencyRecovery(token, to, amount) */\n      and\n      0x1ac506e936e7f02f4036dbe44708f5e8d72af9ace8745a29fd391481a8fbcb87\n        /* \"quantum/UBI4ALLQuantum.sol\":7743:7749  amount */\n      dup4\n        /* \"quantum/UBI4ALLQuantum.sol\":7714:7750  EmergencyRecovery(token, to, amount) */\n      mload(0x40)\n      tag_434\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":7714:7750  EmergencyRecovery(token, to, amount) */\n    tag_434:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"quantum/UBI4ALLQuantum.sol\":7411:7757  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n      tag_278\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2817  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2832  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2630:2839  function _nonReentrantAfter() private {... */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":876:947  uint256 public constant TREASURY_ALLOCATION = (TOTAL_SUPPLY * 50) / 100 */\n    tag_167:\n        /* \"quantum/UBI4ALLQuantum.sol\":944:947  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":923:940  TOTAL_SUPPLY * 50 */\n      tag_370\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":938:940  50 */\n      0x32\n        /* \"quantum/UBI4ALLQuantum.sol\":923:940  TOTAL_SUPPLY * 50 */\n      tag_293\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":10697:11612  function releaseVesting(address wallet) external nonReentrant whenNotPaused {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      tag_440\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2281  _nonReentrantBefore */\n      tag_235\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2262:2283  _nonReentrantBefore() */\n      jump\t// in\n    tag_440:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_442\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_238\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_442:\n        /* \"quantum/UBI4ALLQuantum.sol\":10801:10815  treasuryWallet */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":10791:10815  wallet == treasuryWallet */\n      dup3\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":10801:10815  treasuryWallet */\n      0x0100\n      swap1\n      swap3\n      div\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":10791:10815  wallet == treasuryWallet */\n      eq\n      dup1\n        /* \"quantum/UBI4ALLQuantum.sol\":10791:10844  wallet == treasuryWallet || wallet == ecosystemWallet */\n      tag_444\n      jumpi\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":10829:10844  ecosystemWallet */\n      sload(0x08)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":10819:10844  wallet == ecosystemWallet */\n      dup3\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":10829:10844  ecosystemWallet */\n      swap2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":10819:10844  wallet == ecosystemWallet */\n      eq\n        /* \"quantum/UBI4ALLQuantum.sol\":10791:10844  wallet == treasuryWallet || wallet == ecosystemWallet */\n    tag_444:\n        /* \"quantum/UBI4ALLQuantum.sol\":10783:10871  require(wallet == treasuryWallet || wallet == ecosystemWallet, \"Invalid vesting wallet\") */\n      tag_445\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13298:13300   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":10783:10871  require(wallet == treasuryWallet || wallet == ecosystemWallet, \"Invalid vesting wallet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13280:13301   */\n      mstore\n        /* \"#utility.yul\":13337:13339   */\n      0x16\n        /* \"#utility.yul\":13317:13335   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13310:13340   */\n      mstore\n      shl(0x52, 0x125b9d985b1a59081d995cdd1a5b99c81dd85b1b195d)\n        /* \"#utility.yul\":13356:13374   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13349:13401   */\n      mstore\n        /* \"#utility.yul\":13418:13436   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":10783:10871  require(wallet == treasuryWallet || wallet == ecosystemWallet, \"Invalid vesting wallet\") */\n      tag_241\n        /* \"#utility.yul\":13096:13442   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":10783:10871  require(wallet == treasuryWallet || wallet == ecosystemWallet, \"Invalid vesting wallet\") */\n    tag_445:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":10916:10940  vestingSchedules[wallet] */\n      dup2\n      and\n        /* \"quantum/UBI4ALLQuantum.sol\":10881:10913  VestingSchedule storage schedule */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":10916:10940  vestingSchedules[wallet] */\n      swap1\n      dup2\n      mstore\n        /* \"quantum/UBI4ALLQuantum.sol\":10916:10932  vestingSchedules */\n      0x0e\n        /* \"quantum/UBI4ALLQuantum.sol\":10916:10940  vestingSchedules[wallet] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"quantum/UBI4ALLQuantum.sol\":10981:11004  schedule.releasedAmount */\n      0x01\n      dup2\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":10958:10978  schedule.totalAmount */\n      dup2\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":10958:11004  schedule.totalAmount > schedule.releasedAmount */\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":10950:11029  require(schedule.totalAmount > schedule.releasedAmount, \"No tokens to release\") */\n      tag_448\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13649:13651   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":10950:11029  require(schedule.totalAmount > schedule.releasedAmount, \"No tokens to release\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13631:13652   */\n      mstore\n        /* \"#utility.yul\":13688:13690   */\n      0x14\n        /* \"#utility.yul\":13668:13686   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13661:13691   */\n      mstore\n      shl(0x60, 0x4e6f20746f6b656e7320746f2072656c65617365)\n        /* \"#utility.yul\":13707:13725   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13700:13750   */\n      mstore\n        /* \"#utility.yul\":13767:13785   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":10950:11029  require(schedule.totalAmount > schedule.releasedAmount, \"No tokens to release\") */\n      tag_241\n        /* \"#utility.yul\":13447:13791   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":10950:11029  require(schedule.totalAmount > schedule.releasedAmount, \"No tokens to release\") */\n    tag_448:\n        /* \"quantum/UBI4ALLQuantum.sol\":11040:11059  uint256 elapsedTime */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":11062:11095  block.timestamp.sub(vestingStart) */\n      tag_451\n        /* \"quantum/UBI4ALLQuantum.sol\":11062:11077  block.timestamp */\n      timestamp\n        /* \"quantum/UBI4ALLQuantum.sol\":11082:11094  vestingStart */\n      immutable(\"0x4d10a0db24f434e6025a5ab91426fb885a8a41f2a9a3e3f8c3bfdea4a211adc4\")\n        /* \"quantum/UBI4ALLQuantum.sol\":11062:11081  block.timestamp.sub */\n      tag_206\n        /* \"quantum/UBI4ALLQuantum.sol\":11062:11095  block.timestamp.sub(vestingStart) */\n      jump\t// in\n    tag_451:\n        /* \"quantum/UBI4ALLQuantum.sol\":11040:11095  uint256 elapsedTime = block.timestamp.sub(vestingStart) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":11105:11125  uint256 vestedAmount */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":11128:11185  schedule.totalAmount.mul(elapsedTime).div(VESTING_PERIOD) */\n      tag_452\n        /* \"quantum/UBI4ALLQuantum.sol\":1535:1543  365 days */\n      0x01e13380\n        /* \"quantum/UBI4ALLQuantum.sol\":11128:11165  schedule.totalAmount.mul(elapsedTime) */\n      tag_208\n        /* \"quantum/UBI4ALLQuantum.sol\":11153:11164  elapsedTime */\n      dup5\n        /* \"quantum/UBI4ALLQuantum.sol\":11128:11136  schedule */\n      dup7\n        /* \"quantum/UBI4ALLQuantum.sol\":11128:11148  schedule.totalAmount */\n      0x00\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":11128:11152  schedule.totalAmount.mul */\n      tag_209\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":11128:11165  schedule.totalAmount.mul(elapsedTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":11128:11185  schedule.totalAmount.mul(elapsedTime).div(VESTING_PERIOD) */\n    tag_452:\n        /* \"quantum/UBI4ALLQuantum.sol\":11214:11234  schedule.totalAmount */\n      dup4\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":11105:11185  uint256 vestedAmount = schedule.totalAmount.mul(elapsedTime).div(VESTING_PERIOD) */\n      swap1\n      swap2\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":11199:11234  vestedAmount > schedule.totalAmount */\n      dup2\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":11195:11296  if (vestedAmount > schedule.totalAmount) {... */\n      iszero\n      tag_454\n      jumpi\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":11265:11285  schedule.totalAmount */\n      dup2\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":11195:11296  if (vestedAmount > schedule.totalAmount) {... */\n    tag_454:\n        /* \"quantum/UBI4ALLQuantum.sol\":11306:11324  uint256 releasable */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":11327:11368  vestedAmount.sub(schedule.releasedAmount) */\n      tag_455\n        /* \"quantum/UBI4ALLQuantum.sol\":11344:11352  schedule */\n      dup5\n        /* \"quantum/UBI4ALLQuantum.sol\":11344:11367  schedule.releasedAmount */\n      0x01\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":11327:11339  vestedAmount */\n      dup4\n        /* \"quantum/UBI4ALLQuantum.sol\":11327:11343  vestedAmount.sub */\n      tag_206\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":11327:11368  vestedAmount.sub(schedule.releasedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_455:\n        /* \"quantum/UBI4ALLQuantum.sol\":11306:11368  uint256 releasable = vestedAmount.sub(schedule.releasedAmount) */\n      swap1\n      pop\n        /* \"quantum/UBI4ALLQuantum.sol\":11399:11400  0 */\n      0x00\n        /* \"quantum/UBI4ALLQuantum.sol\":11386:11396  releasable */\n      dup2\n        /* \"quantum/UBI4ALLQuantum.sol\":11386:11400  releasable > 0 */\n      gt\n        /* \"quantum/UBI4ALLQuantum.sol\":11378:11425  require(releasable > 0, \"No tokens releasable\") */\n      tag_456\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13998:14000   */\n      0x20\n        /* \"quantum/UBI4ALLQuantum.sol\":11378:11425  require(releasable > 0, \"No tokens releasable\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13980:14001   */\n      mstore\n        /* \"#utility.yul\":14037:14039   */\n      0x14\n        /* \"#utility.yul\":14017:14035   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14010:14040   */\n      mstore\n      shl(0x60, 0x4e6f20746f6b656e732072656c65617361626c65)\n        /* \"#utility.yul\":14056:14074   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14049:14099   */\n      mstore\n        /* \"#utility.yul\":14116:14134   */\n      0x64\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":11378:11425  require(releasable > 0, \"No tokens releasable\") */\n      tag_241\n        /* \"#utility.yul\":13796:14140   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":11378:11425  require(releasable > 0, \"No tokens releasable\") */\n    tag_456:\n        /* \"quantum/UBI4ALLQuantum.sol\":11462:11485  schedule.releasedAmount */\n      0x01\n      dup5\n      add\n      sload\n        /* \"quantum/UBI4ALLQuantum.sol\":11462:11501  schedule.releasedAmount.add(releasable) */\n      tag_459\n      swap1\n        /* \"quantum/UBI4ALLQuantum.sol\":11490:11500  releasable */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":11462:11489  schedule.releasedAmount.add */\n      tag_392\n        /* \"quantum/UBI4ALLQuantum.sol\":11462:11501  schedule.releasedAmount.add(releasable) */\n      jump\t// in\n    tag_459:\n        /* \"quantum/UBI4ALLQuantum.sol\":11436:11459  schedule.releasedAmount */\n      0x01\n      dup6\n      add\n        /* \"quantum/UBI4ALLQuantum.sol\":11436:11501  schedule.releasedAmount = schedule.releasedAmount.add(releasable) */\n      sstore\n        /* \"quantum/UBI4ALLQuantum.sol\":11511:11555  _transfer(address(this), wallet, releasable) */\n      tag_460\n        /* \"quantum/UBI4ALLQuantum.sol\":11529:11533  this */\n      address\n        /* \"quantum/UBI4ALLQuantum.sol\":11536:11542  wallet */\n      dup7\n        /* \"quantum/UBI4ALLQuantum.sol\":11544:11554  releasable */\n      dup4\n        /* \"quantum/UBI4ALLQuantum.sol\":11511:11520  _transfer */\n      tag_231\n        /* \"quantum/UBI4ALLQuantum.sol\":11511:11555  _transfer(address(this), wallet, releasable) */\n      jump\t// in\n    tag_460:\n        /* \"quantum/UBI4ALLQuantum.sol\":11586:11592  wallet */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"quantum/UBI4ALLQuantum.sol\":11570:11605  VestingReleased(wallet, releasable) */\n      and\n      0x4ad7799f99297062cea73c5a21d23a1fcf49f6a1957f7409712e555a0dcd1e1d\n        /* \"quantum/UBI4ALLQuantum.sol\":11594:11604  releasable */\n      dup3\n        /* \"quantum/UBI4ALLQuantum.sol\":11570:11605  VestingReleased(wallet, releasable) */\n      mload(0x40)\n      tag_461\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"quantum/UBI4ALLQuantum.sol\":11570:11605  VestingReleased(wallet, releasable) */\n    tag_461:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"quantum/UBI4ALLQuantum.sol\":10773:11612  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2304:2324  _nonReentrantAfter() */\n      tag_289\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1717:1718  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2817  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2810:2832  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2630:2839  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_466\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_466:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_468\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3188:3239   */\n      mstore\n        /* \"#utility.yul\":3161:3179   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_241\n        /* \"#utility.yul\":3042:3245   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_468:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"quantum/UBI4ALLQuantum.sol\":1254:1326  uint256 public constant LIQUIDITY_ALLOCATION = (TOTAL_SUPPLY * 10) / 100 */\n    tag_196:\n        /* \"quantum/UBI4ALLQuantum.sol\":1323:1326  100 */\n      0x64\n        /* \"quantum/UBI4ALLQuantum.sol\":1302:1319  TOTAL_SUPPLY * 10 */\n      tag_370\n      shl(0x1b, 0x6765c793fa10079d)\n        /* \"quantum/UBI4ALLQuantum.sol\":1317:1319  10 */\n      0x0a\n        /* \"quantum/UBI4ALLQuantum.sol\":1302:1319  TOTAL_SUPPLY * 10 */\n      tag_293\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3123:3219  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3181:3188  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3207:3212  a - b */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3211:3212  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3207:3208  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3207:3212  a - b */\n      tag_475\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3466:3562  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3524:3531  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3550:3555  a * b */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3554:3555  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3550:3551  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3550:3555  a * b */\n      tag_293\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3851:3947  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3909:3916  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3935:3940  a / b */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3939:3940  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3935:3936  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3935:3940  a / b */\n      tag_295\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_482\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_483\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_482:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_490\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_487\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14498:14530   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14480:14531   */\n      mstore\n        /* \"#utility.yul\":14547:14565   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14540:14574   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14590:14608   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14583:14617   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14453:14471   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_241\n        /* \"#utility.yul\":14278:14623   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_487:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_490\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_483\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_490:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_492\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3188:3239   */\n      mstore\n        /* \"#utility.yul\":3161:3179   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_241\n        /* \"#utility.yul\":3042:3245   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_492:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3188:3239   */\n      mstore\n        /* \"#utility.yul\":3161:3179   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_241\n        /* \"#utility.yul\":3042:3245   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_494:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_482\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_497\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2337:2624  function _nonReentrantBefore() private {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1760:1761  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2469:2476  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2469:2488  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_499\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14830:14832   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14812:14833   */\n      mstore\n        /* \"#utility.yul\":14869:14871   */\n      0x1f\n        /* \"#utility.yul\":14849:14867   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14842:14872   */\n      mstore\n        /* \"#utility.yul\":14908:14941   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14888:14906   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14881:14942   */\n      mstore\n        /* \"#utility.yul\":14959:14977   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_241\n        /* \"#utility.yul\":14628:14983   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2461:2524  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_499:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1760:1761  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2599:2606  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2599:2617  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2337:2624  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1768:1874  function _requireNotPaused() internal view virtual {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1686:1693  _paused */\n      and(0xff, sload(0x07))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1846  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1829:1867  require(!paused(), \"Pausable: paused\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15190:15192   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1829:1867  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15172:15193   */\n      mstore\n        /* \"#utility.yul\":15229:15231   */\n      0x10\n        /* \"#utility.yul\":15209:15227   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15202:15232   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":15248:15266   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15241:15287   */\n      mstore\n        /* \"#utility.yul\":15304:15322   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1829:1867  require(!paused(), \"Pausable: paused\") */\n      tag_241\n        /* \"#utility.yul\":14988:15328   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_223\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3188:3239   */\n      mstore\n        /* \"#utility.yul\":3161:3179   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_241\n        /* \"#utility.yul\":3042:3245   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2434:2551  function _unpause() internal virtual whenPaused {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1487:1503  _requirePaused() */\n      tag_518\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1487:1501  _requirePaused */\n      tag_519\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1487:1503  _requirePaused() */\n      jump\t// in\n    tag_518:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2492:2499  _paused */\n      0x07\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2492:2507  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2522:2544  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2531:2543  _msgSender() */\n    tag_521:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2522:2544  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3206:3238   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3188:3239   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3176:3178   */\n      0x20\n        /* \"#utility.yul\":3161:3179   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2522:2544  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2434:2551  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_524\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3188:3239   */\n      mstore\n        /* \"#utility.yul\":3161:3179   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      tag_241\n        /* \"#utility.yul\":3042:3245   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_524:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_497\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_528\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3188:3239   */\n      mstore\n        /* \"#utility.yul\":3161:3179   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      tag_241\n        /* \"#utility.yul\":3042:3245   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_528:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_497\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2187:2302  function _pause() internal virtual whenNotPaused {... */\n    tag_376:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      tag_534\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1257  _requireNotPaused */\n      tag_238\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1240:1259  _requireNotPaused() */\n      jump\t// in\n    tag_534:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2246:2253  _paused */\n      0x07\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2246:2260  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2256:2260  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2246:2260  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2275:2295  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2282:2294  _msgSender() */\n      tag_521\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2756:2852  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2814:2821  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2840:2845  a + b */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2844:2845  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2840:2841  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2840:2845  a + b */\n      tag_540\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_483:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_542\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3188:3239   */\n      mstore\n        /* \"#utility.yul\":3161:3179   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_241\n        /* \"#utility.yul\":3042:3245   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_542:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_544\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3188:3239   */\n      mstore\n        /* \"#utility.yul\":3161:3179   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_241\n        /* \"#utility.yul\":3042:3245   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_544:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_490\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_547\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_547:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_497:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_549\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_550\n      swap2\n      swap1\n      tag_540\n      jump\t// in\n    tag_550:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_551\n      swap1\n      pop\n      jump\n    tag_549:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_552\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14498:14530   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14480:14531   */\n      mstore\n        /* \"#utility.yul\":14547:14565   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":14540:14574   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":14590:14608   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14583:14617   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":14453:14471   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_241\n        /* \"#utility.yul\":14278:14623   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_552:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_551:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_554\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_555)\n    tag_554:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_555:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_556\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_556:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1946:2052  function _requirePaused() internal view virtual {... */\n    tag_519:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1686:1693  _paused */\n      and(0xff, sload(0x07))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2004:2045  require(paused(), \"Pausable: not paused\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15665:15667   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2004:2045  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15647:15668   */\n      mstore\n        /* \"#utility.yul\":15704:15706   */\n      0x14\n        /* \"#utility.yul\":15684:15702   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15677:15707   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":15723:15741   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15716:15766   */\n      mstore\n        /* \"#utility.yul\":15783:15801   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2004:2045  require(paused(), \"Pausable: not paused\") */\n      tag_241\n        /* \"#utility.yul\":15463:15807   */\n      jump\n        /* \"#utility.yul\":196:369   */\n    tag_562:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      dup1\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_570:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:560   */\n    tag_59:\n        /* \"#utility.yul\":433:439   */\n      0x00\n        /* \"#utility.yul\":486:488   */\n      0x20\n        /* \"#utility.yul\":474:483   */\n      dup3\n        /* \"#utility.yul\":465:472   */\n      dup5\n        /* \"#utility.yul\":461:484   */\n      sub\n        /* \"#utility.yul\":457:489   */\n      slt\n        /* \"#utility.yul\":454:506   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":499:500   */\n      dup1\n        /* \"#utility.yul\":492:504   */\n      revert\n        /* \"#utility.yul\":454:506   */\n    tag_572:\n        /* \"#utility.yul\":525:554   */\n      tag_226\n        /* \"#utility.yul\":544:553   */\n      dup3\n        /* \"#utility.yul\":525:554   */\n      tag_562\n      jump\t// in\n        /* \"#utility.yul\":565:815   */\n    tag_563:\n        /* \"#utility.yul\":650:651   */\n      0x00\n        /* \"#utility.yul\":660:773   */\n    tag_575:\n        /* \"#utility.yul\":674:680   */\n      dup4\n        /* \"#utility.yul\":671:672   */\n      dup2\n        /* \"#utility.yul\":668:681   */\n      lt\n        /* \"#utility.yul\":660:773   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":750:761   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":744:762   */\n      mload\n        /* \"#utility.yul\":731:742   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":724:763   */\n      mstore\n        /* \"#utility.yul\":696:698   */\n      0x20\n        /* \"#utility.yul\":689:699   */\n      add\n        /* \"#utility.yul\":660:773   */\n      jump(tag_575)\n    tag_577:\n      pop\n      pop\n        /* \"#utility.yul\":807:808   */\n      0x00\n        /* \"#utility.yul\":789:805   */\n      swap2\n      add\n        /* \"#utility.yul\":782:809   */\n      mstore\n        /* \"#utility.yul\":565:815   */\n      jump\t// out\n        /* \"#utility.yul\":820:1091   */\n    tag_564:\n        /* \"#utility.yul\":862:865   */\n      0x00\n        /* \"#utility.yul\":900:905   */\n      dup2\n        /* \"#utility.yul\":894:906   */\n      mload\n        /* \"#utility.yul\":927:933   */\n      dup1\n        /* \"#utility.yul\":922:925   */\n      dup5\n        /* \"#utility.yul\":915:934   */\n      mstore\n        /* \"#utility.yul\":943:1019   */\n      tag_579\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":1005:1009   */\n      0x20\n        /* \"#utility.yul\":1000:1003   */\n      dup7\n        /* \"#utility.yul\":996:1010   */\n      add\n        /* \"#utility.yul\":989:993   */\n      0x20\n        /* \"#utility.yul\":982:987   */\n      dup7\n        /* \"#utility.yul\":978:994   */\n      add\n        /* \"#utility.yul\":943:1019   */\n      tag_563\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":1073:1075   */\n      0x1f\n        /* \"#utility.yul\":1052:1067   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1048:1077   */\n      and\n        /* \"#utility.yul\":1039:1078   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1080:1084   */\n      0x20\n        /* \"#utility.yul\":1035:1085   */\n      add\n      swap3\n        /* \"#utility.yul\":820:1091   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1096:1316   */\n    tag_65:\n        /* \"#utility.yul\":1245:1247   */\n      0x20\n        /* \"#utility.yul\":1234:1243   */\n      dup2\n        /* \"#utility.yul\":1227:1248   */\n      mstore\n        /* \"#utility.yul\":1208:1212   */\n      0x00\n        /* \"#utility.yul\":1265:1310   */\n      tag_226\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1295:1304   */\n      dup4\n        /* \"#utility.yul\":1291:1309   */\n      add\n        /* \"#utility.yul\":1283:1289   */\n      dup5\n        /* \"#utility.yul\":1265:1310   */\n      tag_564\n      jump\t// in\n        /* \"#utility.yul\":1321:1621   */\n    tag_68:\n        /* \"#utility.yul\":1389:1395   */\n      0x00\n        /* \"#utility.yul\":1397:1403   */\n      dup1\n        /* \"#utility.yul\":1450:1452   */\n      0x40\n        /* \"#utility.yul\":1438:1447   */\n      dup4\n        /* \"#utility.yul\":1429:1436   */\n      dup6\n        /* \"#utility.yul\":1425:1448   */\n      sub\n        /* \"#utility.yul\":1421:1453   */\n      slt\n        /* \"#utility.yul\":1418:1470   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":1466:1467   */\n      0x00\n        /* \"#utility.yul\":1463:1464   */\n      dup1\n        /* \"#utility.yul\":1456:1468   */\n      revert\n        /* \"#utility.yul\":1418:1470   */\n    tag_583:\n        /* \"#utility.yul\":1489:1518   */\n      tag_584\n        /* \"#utility.yul\":1508:1517   */\n      dup4\n        /* \"#utility.yul\":1489:1518   */\n      tag_562\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":1479:1518   */\n      swap5\n        /* \"#utility.yul\":1587:1589   */\n      0x20\n        /* \"#utility.yul\":1572:1590   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1559:1591   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1321:1621   */\n      jump\t// out\n        /* \"#utility.yul\":1818:2192   */\n    tag_77:\n        /* \"#utility.yul\":1895:1901   */\n      0x00\n        /* \"#utility.yul\":1903:1909   */\n      dup1\n        /* \"#utility.yul\":1911:1917   */\n      0x00\n        /* \"#utility.yul\":1964:1966   */\n      0x60\n        /* \"#utility.yul\":1952:1961   */\n      dup5\n        /* \"#utility.yul\":1943:1950   */\n      dup7\n        /* \"#utility.yul\":1939:1962   */\n      sub\n        /* \"#utility.yul\":1935:1967   */\n      slt\n        /* \"#utility.yul\":1932:1984   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":1980:1981   */\n      0x00\n        /* \"#utility.yul\":1977:1978   */\n      dup1\n        /* \"#utility.yul\":1970:1982   */\n      revert\n        /* \"#utility.yul\":1932:1984   */\n    tag_587:\n        /* \"#utility.yul\":2003:2032   */\n      tag_588\n        /* \"#utility.yul\":2022:2031   */\n      dup5\n        /* \"#utility.yul\":2003:2032   */\n      tag_562\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":1993:2032   */\n      swap3\n      pop\n        /* \"#utility.yul\":2051:2089   */\n      tag_589\n        /* \"#utility.yul\":2085:2087   */\n      0x20\n        /* \"#utility.yul\":2074:2083   */\n      dup6\n        /* \"#utility.yul\":2070:2088   */\n      add\n        /* \"#utility.yul\":2051:2089   */\n      tag_562\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":1818:2192   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2041:2089   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2158:2160   */\n      0x40\n        /* \"#utility.yul\":2143:2161   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1818:2192   */\n      jump\t// out\n        /* \"#utility.yul\":2386:2806   */\n    tag_93:\n        /* \"#utility.yul\":2463:2469   */\n      0x00\n        /* \"#utility.yul\":2471:2477   */\n      dup1\n        /* \"#utility.yul\":2479:2485   */\n      0x00\n        /* \"#utility.yul\":2532:2534   */\n      0x60\n        /* \"#utility.yul\":2520:2529   */\n      dup5\n        /* \"#utility.yul\":2511:2518   */\n      dup7\n        /* \"#utility.yul\":2507:2530   */\n      sub\n        /* \"#utility.yul\":2503:2535   */\n      slt\n        /* \"#utility.yul\":2500:2552   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":2548:2549   */\n      0x00\n        /* \"#utility.yul\":2545:2546   */\n      dup1\n        /* \"#utility.yul\":2538:2550   */\n      revert\n        /* \"#utility.yul\":2500:2552   */\n    tag_592:\n        /* \"#utility.yul\":2571:2600   */\n      tag_593\n        /* \"#utility.yul\":2590:2599   */\n      dup5\n        /* \"#utility.yul\":2571:2600   */\n      tag_562\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":2561:2600   */\n      swap6\n        /* \"#utility.yul\":2669:2671   */\n      0x20\n        /* \"#utility.yul\":2654:2672   */\n      dup6\n      add\n        /* \"#utility.yul\":2641:2673   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2770:2772   */\n      0x40\n        /* \"#utility.yul\":2755:2773   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2742:2774   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2386:2806   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2811:3037   */\n    tag_103:\n        /* \"#utility.yul\":2870:2876   */\n      0x00\n        /* \"#utility.yul\":2923:2925   */\n      0x20\n        /* \"#utility.yul\":2911:2920   */\n      dup3\n        /* \"#utility.yul\":2902:2909   */\n      dup5\n        /* \"#utility.yul\":2898:2921   */\n      sub\n        /* \"#utility.yul\":2894:2926   */\n      slt\n        /* \"#utility.yul\":2891:2943   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2936:2937   */\n      dup1\n        /* \"#utility.yul\":2929:2941   */\n      revert\n        /* \"#utility.yul\":2891:2943   */\n    tag_595:\n      pop\n        /* \"#utility.yul\":2984:3007   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2811:3037   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3718:3845   */\n    tag_565:\n        /* \"#utility.yul\":3779:3789   */\n      0x4e487b71\n        /* \"#utility.yul\":3774:3777   */\n      0xe0\n        /* \"#utility.yul\":3770:3790   */\n      shl\n        /* \"#utility.yul\":3767:3768   */\n      0x00\n        /* \"#utility.yul\":3760:3791   */\n      mstore\n        /* \"#utility.yul\":3810:3814   */\n      0x41\n        /* \"#utility.yul\":3807:3808   */\n      0x04\n        /* \"#utility.yul\":3800:3815   */\n      mstore\n        /* \"#utility.yul\":3834:3838   */\n      0x24\n        /* \"#utility.yul\":3831:3832   */\n      0x00\n        /* \"#utility.yul\":3824:3839   */\n      revert\n        /* \"#utility.yul\":3850:4879   */\n    tag_133:\n        /* \"#utility.yul\":3928:3934   */\n      0x00\n        /* \"#utility.yul\":3936:3942   */\n      dup1\n        /* \"#utility.yul\":3989:3991   */\n      0x40\n        /* \"#utility.yul\":3977:3986   */\n      dup4\n        /* \"#utility.yul\":3968:3975   */\n      dup6\n        /* \"#utility.yul\":3964:3987   */\n      sub\n        /* \"#utility.yul\":3960:3992   */\n      slt\n        /* \"#utility.yul\":3957:4009   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":4005:4006   */\n      0x00\n        /* \"#utility.yul\":4002:4003   */\n      dup1\n        /* \"#utility.yul\":3995:4007   */\n      revert\n        /* \"#utility.yul\":3957:4009   */\n    tag_600:\n        /* \"#utility.yul\":4045:4054   */\n      dup3\n        /* \"#utility.yul\":4032:4055   */\n      calldataload\n        /* \"#utility.yul\":4078:4096   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4070:4076   */\n      dup2\n        /* \"#utility.yul\":4067:4097   */\n      gt\n        /* \"#utility.yul\":4064:4114   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":4110:4111   */\n      0x00\n        /* \"#utility.yul\":4107:4108   */\n      dup1\n        /* \"#utility.yul\":4100:4112   */\n      revert\n        /* \"#utility.yul\":4064:4114   */\n    tag_601:\n        /* \"#utility.yul\":4133:4155   */\n      dup4\n      add\n        /* \"#utility.yul\":4186:4190   */\n      0x1f\n        /* \"#utility.yul\":4178:4191   */\n      dup2\n      add\n        /* \"#utility.yul\":4174:4201   */\n      dup6\n      sgt\n        /* \"#utility.yul\":4164:4219   */\n      tag_602\n      jumpi\n        /* \"#utility.yul\":4215:4216   */\n      0x00\n        /* \"#utility.yul\":4212:4213   */\n      dup1\n        /* \"#utility.yul\":4205:4217   */\n      revert\n        /* \"#utility.yul\":4164:4219   */\n    tag_602:\n        /* \"#utility.yul\":4255:4257   */\n      dup1\n        /* \"#utility.yul\":4242:4258   */\n      calldataload\n        /* \"#utility.yul\":4281:4299   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4273:4279   */\n      dup2\n        /* \"#utility.yul\":4270:4300   */\n      gt\n        /* \"#utility.yul\":4267:4323   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":4303:4321   */\n      tag_604\n      tag_565\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":4352:4354   */\n      0x40\n        /* \"#utility.yul\":4346:4355   */\n      mload\n        /* \"#utility.yul\":4444:4446   */\n      0x1f\n        /* \"#utility.yul\":4406:4423   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4402:4433   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4435:4437   */\n      0x3f\n        /* \"#utility.yul\":4398:4438   */\n      add\n        /* \"#utility.yul\":4394:4448   */\n      and\n        /* \"#utility.yul\":4382:4449   */\n      dup2\n      add\n        /* \"#utility.yul\":4479:4497   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4464:4498   */\n      dup2\n      gt\n        /* \"#utility.yul\":4500:4522   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":4461:4523   */\n      or\n        /* \"#utility.yul\":4458:4546   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":4526:4544   */\n      tag_606\n      tag_565\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":4562:4564   */\n      0x40\n        /* \"#utility.yul\":4555:4577   */\n      mstore\n        /* \"#utility.yul\":4586:4608   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":4627:4642   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4644:4648   */\n      0x20\n        /* \"#utility.yul\":4623:4649   */\n      add\n        /* \"#utility.yul\":4620:4659   */\n      dup8\n      lt\n        /* \"#utility.yul\":4617:4676   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":4672:4673   */\n      0x00\n        /* \"#utility.yul\":4669:4670   */\n      dup1\n        /* \"#utility.yul\":4662:4674   */\n      revert\n        /* \"#utility.yul\":4617:4676   */\n    tag_607:\n        /* \"#utility.yul\":4732:4738   */\n      dup2\n        /* \"#utility.yul\":4725:4729   */\n      0x20\n        /* \"#utility.yul\":4721:4723   */\n      dup5\n        /* \"#utility.yul\":4717:4730   */\n      add\n        /* \"#utility.yul\":4710:4714   */\n      0x20\n        /* \"#utility.yul\":4702:4708   */\n      dup4\n        /* \"#utility.yul\":4698:4715   */\n      add\n        /* \"#utility.yul\":4685:4739   */\n      calldatacopy\n        /* \"#utility.yul\":4787:4788   */\n      0x00\n        /* \"#utility.yul\":4780:4784   */\n      0x20\n        /* \"#utility.yul\":4771:4777   */\n      dup4\n        /* \"#utility.yul\":4763:4769   */\n      dup4\n        /* \"#utility.yul\":4759:4778   */\n      add\n        /* \"#utility.yul\":4755:4785   */\n      add\n        /* \"#utility.yul\":4748:4789   */\n      mstore\n        /* \"#utility.yul\":4808:4814   */\n      dup1\n        /* \"#utility.yul\":4798:4814   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4833:4873   */\n      tag_608\n        /* \"#utility.yul\":4867:4871   */\n      0x20\n        /* \"#utility.yul\":4856:4865   */\n      dup5\n        /* \"#utility.yul\":4852:4872   */\n      add\n        /* \"#utility.yul\":4833:4873   */\n      tag_562\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":4823:4873   */\n      swap1\n      pop\n        /* \"#utility.yul\":3850:4879   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4884:5144   */\n    tag_164:\n        /* \"#utility.yul\":4952:4958   */\n      0x00\n        /* \"#utility.yul\":4960:4966   */\n      dup1\n        /* \"#utility.yul\":5013:5015   */\n      0x40\n        /* \"#utility.yul\":5001:5010   */\n      dup4\n        /* \"#utility.yul\":4992:4999   */\n      dup6\n        /* \"#utility.yul\":4988:5011   */\n      sub\n        /* \"#utility.yul\":4984:5016   */\n      slt\n        /* \"#utility.yul\":4981:5033   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":5029:5030   */\n      0x00\n        /* \"#utility.yul\":5026:5027   */\n      dup1\n        /* \"#utility.yul\":5019:5031   */\n      revert\n        /* \"#utility.yul\":4981:5033   */\n    tag_610:\n        /* \"#utility.yul\":5052:5081   */\n      tag_611\n        /* \"#utility.yul\":5071:5080   */\n      dup4\n        /* \"#utility.yul\":5052:5081   */\n      tag_562\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":5042:5081   */\n      swap2\n      pop\n        /* \"#utility.yul\":5100:5138   */\n      tag_608\n        /* \"#utility.yul\":5134:5136   */\n      0x20\n        /* \"#utility.yul\":5123:5132   */\n      dup5\n        /* \"#utility.yul\":5119:5137   */\n      add\n        /* \"#utility.yul\":5100:5138   */\n      tag_562\n      jump\t// in\n        /* \"#utility.yul\":6000:6380   */\n    tag_215:\n        /* \"#utility.yul\":6079:6080   */\n      0x01\n        /* \"#utility.yul\":6075:6087   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6122:6134   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6143:6204   */\n      tag_616\n      jumpi\n        /* \"#utility.yul\":6197:6201   */\n      0x7f\n        /* \"#utility.yul\":6189:6195   */\n      dup3\n        /* \"#utility.yul\":6185:6202   */\n      and\n        /* \"#utility.yul\":6175:6202   */\n      swap2\n      pop\n        /* \"#utility.yul\":6143:6204   */\n    tag_616:\n        /* \"#utility.yul\":6250:6252   */\n      0x20\n        /* \"#utility.yul\":6242:6248   */\n      dup3\n        /* \"#utility.yul\":6239:6253   */\n      lt\n        /* \"#utility.yul\":6219:6237   */\n      dup2\n        /* \"#utility.yul\":6216:6254   */\n      sub\n        /* \"#utility.yul\":6213:6374   */\n      tag_617\n      jumpi\n        /* \"#utility.yul\":6296:6306   */\n      0x4e487b71\n        /* \"#utility.yul\":6291:6294   */\n      0xe0\n        /* \"#utility.yul\":6287:6307   */\n      shl\n        /* \"#utility.yul\":6284:6285   */\n      0x00\n        /* \"#utility.yul\":6277:6308   */\n      mstore\n        /* \"#utility.yul\":6331:6335   */\n      0x22\n        /* \"#utility.yul\":6328:6329   */\n      0x04\n        /* \"#utility.yul\":6321:6336   */\n      mstore\n        /* \"#utility.yul\":6359:6363   */\n      0x24\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6349:6364   */\n      revert\n        /* \"#utility.yul\":6213:6374   */\n    tag_617:\n      pop\n        /* \"#utility.yul\":6000:6380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6385:6726   */\n    tag_242:\n        /* \"#utility.yul\":6587:6589   */\n      0x20\n        /* \"#utility.yul\":6569:6590   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6626:6628   */\n      0x11\n        /* \"#utility.yul\":6606:6624   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6599:6629   */\n      mstore\n      shl(0x7a, 0x125b9d985b1a59081c9958da5c1a595b9d)\n        /* \"#utility.yul\":6660:6662   */\n      0x40\n        /* \"#utility.yul\":6645:6663   */\n      dup3\n      add\n        /* \"#utility.yul\":6638:6685   */\n      mstore\n        /* \"#utility.yul\":6717:6719   */\n      0x60\n        /* \"#utility.yul\":6702:6720   */\n      add\n      swap1\n        /* \"#utility.yul\":6385:6726   */\n      jump\t// out\n        /* \"#utility.yul\":6731:7069   */\n    tag_245:\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6915:6936   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6972:6974   */\n      0x0e\n        /* \"#utility.yul\":6952:6970   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6945:6975   */\n      mstore\n      shl(0x92, 0x125b9d985b1a5908185b5bdd5b9d)\n        /* \"#utility.yul\":7006:7008   */\n      0x40\n        /* \"#utility.yul\":6991:7009   */\n      dup3\n      add\n        /* \"#utility.yul\":6984:7028   */\n      mstore\n        /* \"#utility.yul\":7060:7062   */\n      0x60\n        /* \"#utility.yul\":7045:7063   */\n      add\n      swap1\n        /* \"#utility.yul\":6731:7069   */\n      jump\t// out\n        /* \"#utility.yul\":7780:7907   */\n    tag_566:\n        /* \"#utility.yul\":7841:7851   */\n      0x4e487b71\n        /* \"#utility.yul\":7836:7839   */\n      0xe0\n        /* \"#utility.yul\":7832:7852   */\n      shl\n        /* \"#utility.yul\":7829:7830   */\n      0x00\n        /* \"#utility.yul\":7822:7853   */\n      mstore\n        /* \"#utility.yul\":7872:7876   */\n      0x11\n        /* \"#utility.yul\":7869:7870   */\n      0x04\n        /* \"#utility.yul\":7862:7877   */\n      mstore\n        /* \"#utility.yul\":7896:7900   */\n      0x24\n        /* \"#utility.yul\":7893:7894   */\n      0x00\n        /* \"#utility.yul\":7886:7901   */\n      revert\n        /* \"#utility.yul\":7912:8080   */\n    tag_293:\n        /* \"#utility.yul\":7985:7994   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":8016:8025   */\n      dup2\n      iszero\n        /* \"#utility.yul\":8033:8048   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":8027:8049   */\n      dup5\n      eq\n        /* \"#utility.yul\":8013:8050   */\n      or\n        /* \"#utility.yul\":8003:8074   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":8054:8072   */\n      tag_220\n      tag_566\n      jump\t// in\n        /* \"#utility.yul\":8085:8302   */\n    tag_295:\n        /* \"#utility.yul\":8125:8126   */\n      0x00\n        /* \"#utility.yul\":8151:8152   */\n      dup3\n        /* \"#utility.yul\":8141:8273   */\n      tag_627\n      jumpi\n        /* \"#utility.yul\":8195:8205   */\n      0x4e487b71\n        /* \"#utility.yul\":8190:8193   */\n      0xe0\n        /* \"#utility.yul\":8186:8206   */\n      shl\n        /* \"#utility.yul\":8183:8184   */\n      0x00\n        /* \"#utility.yul\":8176:8207   */\n      mstore\n        /* \"#utility.yul\":8230:8234   */\n      0x12\n        /* \"#utility.yul\":8227:8228   */\n      0x04\n        /* \"#utility.yul\":8220:8235   */\n      mstore\n        /* \"#utility.yul\":8258:8262   */\n      0x24\n        /* \"#utility.yul\":8255:8256   */\n      0x00\n        /* \"#utility.yul\":8248:8263   */\n      revert\n        /* \"#utility.yul\":8141:8273   */\n    tag_627:\n      pop\n        /* \"#utility.yul\":8287:8296   */\n      div\n      swap1\n        /* \"#utility.yul\":8085:8302   */\n      jump\t// out\n        /* \"#utility.yul\":9014:9303   */\n    tag_334:\n        /* \"#utility.yul\":9145:9148   */\n      0x00\n        /* \"#utility.yul\":9183:9189   */\n      dup3\n        /* \"#utility.yul\":9177:9190   */\n      mload\n        /* \"#utility.yul\":9199:9265   */\n      tag_631\n        /* \"#utility.yul\":9258:9264   */\n      dup2\n        /* \"#utility.yul\":9253:9256   */\n      dup5\n        /* \"#utility.yul\":9246:9250   */\n      0x20\n        /* \"#utility.yul\":9238:9244   */\n      dup8\n        /* \"#utility.yul\":9234:9251   */\n      add\n        /* \"#utility.yul\":9199:9265   */\n      tag_563\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":9281:9297   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":9014:9303   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9571:9914   */\n    tag_340:\n        /* \"#utility.yul\":9773:9775   */\n      0x20\n        /* \"#utility.yul\":9755:9776   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9812:9814   */\n      0x13\n        /* \"#utility.yul\":9792:9810   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9785:9815   */\n      mstore\n      shl(0x68, 0x53616d652077616c6c65742061646472657373)\n        /* \"#utility.yul\":9846:9848   */\n      0x40\n        /* \"#utility.yul\":9831:9849   */\n      dup3\n      add\n        /* \"#utility.yul\":9824:9873   */\n      mstore\n        /* \"#utility.yul\":9905:9907   */\n      0x60\n        /* \"#utility.yul\":9890:9908   */\n      add\n      swap1\n        /* \"#utility.yul\":9571:9914   */\n      jump\t// out\n        /* \"#utility.yul\":11321:11638   */\n    tag_369:\n        /* \"#utility.yul\":11498:11500   */\n      0x40\n        /* \"#utility.yul\":11487:11496   */\n      dup2\n        /* \"#utility.yul\":11480:11501   */\n      mstore\n        /* \"#utility.yul\":11461:11465   */\n      0x00\n        /* \"#utility.yul\":11518:11563   */\n      tag_640\n        /* \"#utility.yul\":11559:11561   */\n      0x40\n        /* \"#utility.yul\":11548:11557   */\n      dup4\n        /* \"#utility.yul\":11544:11562   */\n      add\n        /* \"#utility.yul\":11536:11542   */\n      dup6\n        /* \"#utility.yul\":11518:11563   */\n      tag_564\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":11510:11563   */\n      swap1\n      pop\n        /* \"#utility.yul\":11628:11629   */\n      0x01\n        /* \"#utility.yul\":11624:11625   */\n      dup1\n        /* \"#utility.yul\":11619:11622   */\n      0xa0\n        /* \"#utility.yul\":11615:11626   */\n      shl\n        /* \"#utility.yul\":11611:11630   */\n      sub\n        /* \"#utility.yul\":11603:11609   */\n      dup4\n        /* \"#utility.yul\":11599:11631   */\n      and\n        /* \"#utility.yul\":11594:11596   */\n      0x20\n        /* \"#utility.yul\":11583:11592   */\n      dup4\n        /* \"#utility.yul\":11579:11597   */\n      add\n        /* \"#utility.yul\":11572:11632   */\n      mstore\n        /* \"#utility.yul\":11321:11638   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11997:12181   */\n    tag_424:\n        /* \"#utility.yul\":12067:12073   */\n      0x00\n        /* \"#utility.yul\":12120:12122   */\n      0x20\n        /* \"#utility.yul\":12108:12117   */\n      dup3\n        /* \"#utility.yul\":12099:12106   */\n      dup5\n        /* \"#utility.yul\":12095:12118   */\n      sub\n        /* \"#utility.yul\":12091:12123   */\n      slt\n        /* \"#utility.yul\":12088:12140   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":12136:12137   */\n      0x00\n        /* \"#utility.yul\":12133:12134   */\n      dup1\n        /* \"#utility.yul\":12126:12138   */\n      revert\n        /* \"#utility.yul\":12088:12140   */\n    tag_643:\n      pop\n        /* \"#utility.yul\":12159:12175   */\n      mload\n      swap2\n        /* \"#utility.yul\":11997:12181   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12814:13091   */\n    tag_433:\n        /* \"#utility.yul\":12881:12887   */\n      0x00\n        /* \"#utility.yul\":12934:12936   */\n      0x20\n        /* \"#utility.yul\":12922:12931   */\n      dup3\n        /* \"#utility.yul\":12913:12920   */\n      dup5\n        /* \"#utility.yul\":12909:12932   */\n      sub\n        /* \"#utility.yul\":12905:12937   */\n      slt\n        /* \"#utility.yul\":12902:12954   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":12950:12951   */\n      0x00\n        /* \"#utility.yul\":12947:12948   */\n      dup1\n        /* \"#utility.yul\":12940:12952   */\n      revert\n        /* \"#utility.yul\":12902:12954   */\n    tag_647:\n        /* \"#utility.yul\":12982:12991   */\n      dup2\n        /* \"#utility.yul\":12976:12992   */\n      mload\n        /* \"#utility.yul\":13035:13040   */\n      dup1\n        /* \"#utility.yul\":13028:13041   */\n      iszero\n        /* \"#utility.yul\":13021:13042   */\n      iszero\n        /* \"#utility.yul\":13014:13019   */\n      dup2\n        /* \"#utility.yul\":13011:13043   */\n      eq\n        /* \"#utility.yul\":13001:13061   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":13057:13058   */\n      0x00\n        /* \"#utility.yul\":13054:13055   */\n      dup1\n        /* \"#utility.yul\":13047:13059   */\n      revert\n        /* \"#utility.yul\":14145:14273   */\n    tag_475:\n        /* \"#utility.yul\":14212:14221   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":14233:14244   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":14230:14267   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":14247:14265   */\n      tag_220\n      tag_566\n      jump\t// in\n        /* \"#utility.yul\":15333:15458   */\n    tag_540:\n        /* \"#utility.yul\":15398:15407   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":15419:15429   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":15416:15452   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":15432:15450   */\n      tag_220\n      tag_566\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220f184e98d2f389374b4bad94c2d07accf52fb3a7d3f3bb13acd4d85349f93f33a64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1815": {
									"entryPoint": null,
									"id": 1815,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_311": {
									"entryPoint": null,
									"id": 311,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_812": {
									"entryPoint": 1272,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1190,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 1330,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e6aa9e82df9ed735f6dba8fe33ecac07fe34e5696eb7e317a220817b24d3a2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_139c4f1312240fd33ddbb308a6e6b27481dd8a672750151fbe0ca28f85588b38__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_618e06b925dc1c261ab77636de637a065ab7ceef1a2509a21be38a727110d230__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f6bd4eeef749285304a1dee11bf473ac68a9249155d6123350512d261d5957a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6634:11",
										"nodeType": "YulBlock",
										"src": "0:6634:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:11",
													"nodeType": "YulBlock",
													"src": "74:117:11",
													"statements": [
														{
															"nativeSrc": "84:22:11",
															"nodeType": "YulAssignment",
															"src": "84:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:11"
																},
																"nativeSrc": "93:13:11",
																"nodeType": "YulFunctionCall",
																"src": "93:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:11",
																"nodeType": "YulBlock",
																"src": "169:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:11",
																					"nodeType": "YulLiteral",
																					"src": "178:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:11",
																					"nodeType": "YulLiteral",
																					"src": "181:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:11"
																			},
																			"nativeSrc": "171:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:11"
																		},
																		"nativeSrc": "171:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:11",
																										"nodeType": "YulLiteral",
																										"src": "154:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:11",
																										"nodeType": "YulLiteral",
																										"src": "159:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:11"
																								},
																								"nativeSrc": "150:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:11",
																								"nodeType": "YulLiteral",
																								"src": "163:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:11"
																						},
																						"nativeSrc": "146:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:11"
																				},
																				"nativeSrc": "135:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:11"
																		},
																		"nativeSrc": "125:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:11"
																},
																"nativeSrc": "118:50:11",
																"nodeType": "YulFunctionCall",
																"src": "118:50:11"
															},
															"nativeSrc": "115:70:11",
															"nodeType": "YulIf",
															"src": "115:70:11"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:11",
														"nodeType": "YulTypedName",
														"src": "53:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:11",
														"nodeType": "YulTypedName",
														"src": "64:5:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											},
											{
												"body": {
													"nativeSrc": "362:470:11",
													"nodeType": "YulBlock",
													"src": "362:470:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "409:16:11",
																"nodeType": "YulBlock",
																"src": "409:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "418:1:11",
																					"nodeType": "YulLiteral",
																					"src": "418:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "421:1:11",
																					"nodeType": "YulLiteral",
																					"src": "421:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "411:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:11"
																			},
																			"nativeSrc": "411:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:11"
																		},
																		"nativeSrc": "411:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "383:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "383:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "392:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "392:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "379:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "379:3:11"
																		},
																		"nativeSrc": "379:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "379:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "404:3:11",
																		"nodeType": "YulLiteral",
																		"src": "404:3:11",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "375:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "375:3:11"
																},
																"nativeSrc": "375:33:11",
																"nodeType": "YulFunctionCall",
																"src": "375:33:11"
															},
															"nativeSrc": "372:53:11",
															"nodeType": "YulIf",
															"src": "372:53:11"
														},
														{
															"nativeSrc": "434:50:11",
															"nodeType": "YulAssignment",
															"src": "434:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "474:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "474:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "444:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "444:29:11"
																},
																"nativeSrc": "444:40:11",
																"nodeType": "YulFunctionCall",
																"src": "444:40:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "434:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "434:6:11"
																}
															]
														},
														{
															"nativeSrc": "493:59:11",
															"nodeType": "YulAssignment",
															"src": "493:59:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "537:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "537:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "548:2:11",
																				"nodeType": "YulLiteral",
																				"src": "548:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "533:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "533:3:11"
																		},
																		"nativeSrc": "533:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "533:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "503:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "503:29:11"
																},
																"nativeSrc": "503:49:11",
																"nodeType": "YulFunctionCall",
																"src": "503:49:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "493:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:11"
																}
															]
														},
														{
															"nativeSrc": "561:59:11",
															"nodeType": "YulAssignment",
															"src": "561:59:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "605:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "605:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "616:2:11",
																				"nodeType": "YulLiteral",
																				"src": "616:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "601:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "601:3:11"
																		},
																		"nativeSrc": "601:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "601:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "571:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "571:29:11"
																},
																"nativeSrc": "571:49:11",
																"nodeType": "YulFunctionCall",
																"src": "571:49:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "561:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:11"
																}
															]
														},
														{
															"nativeSrc": "629:59:11",
															"nodeType": "YulAssignment",
															"src": "629:59:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "673:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "673:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "684:2:11",
																				"nodeType": "YulLiteral",
																				"src": "684:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "669:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "669:3:11"
																		},
																		"nativeSrc": "669:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "669:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "639:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "639:29:11"
																},
																"nativeSrc": "639:49:11",
																"nodeType": "YulFunctionCall",
																"src": "639:49:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "629:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "629:6:11"
																}
															]
														},
														{
															"nativeSrc": "697:60:11",
															"nodeType": "YulAssignment",
															"src": "697:60:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "741:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "741:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "752:3:11",
																				"nodeType": "YulLiteral",
																				"src": "752:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "737:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:11"
																		},
																		"nativeSrc": "737:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "737:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "707:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "707:29:11"
																},
																"nativeSrc": "707:50:11",
																"nodeType": "YulFunctionCall",
																"src": "707:50:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "697:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:11"
																}
															]
														},
														{
															"nativeSrc": "766:60:11",
															"nodeType": "YulAssignment",
															"src": "766:60:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "810:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "810:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "821:3:11",
																				"nodeType": "YulLiteral",
																				"src": "821:3:11",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "806:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "806:3:11"
																		},
																		"nativeSrc": "806:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "806:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "776:29:11",
																	"nodeType": "YulIdentifier",
																	"src": "776:29:11"
																},
																"nativeSrc": "776:50:11",
																"nodeType": "YulFunctionCall",
																"src": "776:50:11"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "766:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "196:636:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "288:9:11",
														"nodeType": "YulTypedName",
														"src": "288:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "299:7:11",
														"nodeType": "YulTypedName",
														"src": "299:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "311:6:11",
														"nodeType": "YulTypedName",
														"src": "311:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "319:6:11",
														"nodeType": "YulTypedName",
														"src": "319:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "327:6:11",
														"nodeType": "YulTypedName",
														"src": "327:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "335:6:11",
														"nodeType": "YulTypedName",
														"src": "335:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "343:6:11",
														"nodeType": "YulTypedName",
														"src": "343:6:11",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "351:6:11",
														"nodeType": "YulTypedName",
														"src": "351:6:11",
														"type": ""
													}
												],
												"src": "196:636:11"
											},
											{
												"body": {
													"nativeSrc": "869:95:11",
													"nodeType": "YulBlock",
													"src": "869:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "886:1:11",
																		"nodeType": "YulLiteral",
																		"src": "886:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "893:3:11",
																				"nodeType": "YulLiteral",
																				"src": "893:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "898:10:11",
																				"nodeType": "YulLiteral",
																				"src": "898:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "889:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "889:3:11"
																		},
																		"nativeSrc": "889:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "889:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "879:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "879:6:11"
																},
																"nativeSrc": "879:31:11",
																"nodeType": "YulFunctionCall",
																"src": "879:31:11"
															},
															"nativeSrc": "879:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "879:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "926:1:11",
																		"nodeType": "YulLiteral",
																		"src": "926:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:4:11",
																		"nodeType": "YulLiteral",
																		"src": "929:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "919:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:11"
																},
																"nativeSrc": "919:15:11",
																"nodeType": "YulFunctionCall",
																"src": "919:15:11"
															},
															"nativeSrc": "919:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "919:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "950:1:11",
																		"nodeType": "YulLiteral",
																		"src": "950:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "953:4:11",
																		"nodeType": "YulLiteral",
																		"src": "953:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "943:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "943:6:11"
																},
																"nativeSrc": "943:15:11",
																"nodeType": "YulFunctionCall",
																"src": "943:15:11"
															},
															"nativeSrc": "943:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "943:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "837:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "837:127:11"
											},
											{
												"body": {
													"nativeSrc": "1024:325:11",
													"nodeType": "YulBlock",
													"src": "1024:325:11",
													"statements": [
														{
															"nativeSrc": "1034:22:11",
															"nodeType": "YulAssignment",
															"src": "1034:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1048:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1048:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1051:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1051:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1044:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1044:3:11"
																},
																"nativeSrc": "1044:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1044:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1034:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1034:6:11"
																}
															]
														},
														{
															"nativeSrc": "1065:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1065:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1095:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1095:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1101:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1101:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:11"
																},
																"nativeSrc": "1091:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1091:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1069:18:11",
																	"nodeType": "YulTypedName",
																	"src": "1069:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1142:31:11",
																"nodeType": "YulBlock",
																"src": "1142:31:11",
																"statements": [
																	{
																		"nativeSrc": "1144:27:11",
																		"nodeType": "YulAssignment",
																		"src": "1144:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1158:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1158:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1166:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1166:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1154:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1154:3:11"
																			},
																			"nativeSrc": "1154:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1154:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1144:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1144:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1122:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1122:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1115:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1115:6:11"
																},
																"nativeSrc": "1115:26:11",
																"nodeType": "YulFunctionCall",
																"src": "1115:26:11"
															},
															"nativeSrc": "1112:61:11",
															"nodeType": "YulIf",
															"src": "1112:61:11"
														},
														{
															"body": {
																"nativeSrc": "1232:111:11",
																"nodeType": "YulBlock",
																"src": "1232:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1253:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1253:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1260:3:11",
																							"nodeType": "YulLiteral",
																							"src": "1260:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1265:10:11",
																							"nodeType": "YulLiteral",
																							"src": "1265:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1256:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "1256:3:11"
																					},
																					"nativeSrc": "1256:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1256:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1246:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1246:6:11"
																			},
																			"nativeSrc": "1246:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1246:31:11"
																		},
																		"nativeSrc": "1246:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1246:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1297:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1297:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1300:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1300:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1290:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1290:6:11"
																			},
																			"nativeSrc": "1290:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1290:15:11"
																		},
																		"nativeSrc": "1290:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1290:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1325:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1325:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1328:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1328:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1318:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:11"
																			},
																			"nativeSrc": "1318:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1318:15:11"
																		},
																		"nativeSrc": "1318:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1318:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1188:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "1188:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1211:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1211:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1219:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1219:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1208:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1208:2:11"
																		},
																		"nativeSrc": "1208:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1208:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1185:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1185:2:11"
																},
																"nativeSrc": "1185:38:11",
																"nodeType": "YulFunctionCall",
																"src": "1185:38:11"
															},
															"nativeSrc": "1182:161:11",
															"nodeType": "YulIf",
															"src": "1182:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "969:380:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1004:4:11",
														"nodeType": "YulTypedName",
														"src": "1004:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1013:6:11",
														"nodeType": "YulTypedName",
														"src": "1013:6:11",
														"type": ""
													}
												],
												"src": "969:380:11"
											},
											{
												"body": {
													"nativeSrc": "1410:65:11",
													"nodeType": "YulBlock",
													"src": "1410:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1427:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1430:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1430:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1420:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1420:6:11"
																},
																"nativeSrc": "1420:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1420:14:11"
															},
															"nativeSrc": "1420:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "1420:14:11"
														},
														{
															"nativeSrc": "1443:26:11",
															"nodeType": "YulAssignment",
															"src": "1443:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1461:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1464:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1464:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1451:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "1451:9:11"
																},
																"nativeSrc": "1451:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1451:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1443:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1443:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1354:121:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1393:3:11",
														"nodeType": "YulTypedName",
														"src": "1393:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1401:4:11",
														"nodeType": "YulTypedName",
														"src": "1401:4:11",
														"type": ""
													}
												],
												"src": "1354:121:11"
											},
											{
												"body": {
													"nativeSrc": "1561:437:11",
													"nodeType": "YulBlock",
													"src": "1561:437:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1594:398:11",
																"nodeType": "YulBlock",
																"src": "1594:398:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1615:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1615:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1618:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "1618:5:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1608:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:11"
																			},
																			"nativeSrc": "1608:16:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1608:16:11"
																		},
																		"nativeSrc": "1608:16:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1608:16:11"
																	},
																	{
																		"nativeSrc": "1637:30:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1637:30:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1659:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1659:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1662:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1662:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1649:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:11"
																			},
																			"nativeSrc": "1649:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1649:18:11"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1641:4:11",
																				"nodeType": "YulTypedName",
																				"src": "1641:4:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1680:57:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1680:57:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1703:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "1703:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1713:1:11",
																							"nodeType": "YulLiteral",
																							"src": "1713:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1720:10:11",
																									"nodeType": "YulIdentifier",
																									"src": "1720:10:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1732:2:11",
																									"nodeType": "YulLiteral",
																									"src": "1732:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1716:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "1716:3:11"
																							},
																							"nativeSrc": "1716:19:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1716:19:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1709:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "1709:3:11"
																					},
																					"nativeSrc": "1709:27:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1709:27:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1699:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1699:3:11"
																			},
																			"nativeSrc": "1699:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1699:38:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1684:11:11",
																				"nodeType": "YulTypedName",
																				"src": "1684:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1774:23:11",
																			"nodeType": "YulBlock",
																			"src": "1774:23:11",
																			"statements": [
																				{
																					"nativeSrc": "1776:19:11",
																					"nodeType": "YulAssignment",
																					"src": "1776:19:11",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1791:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "1791:4:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1776:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "1776:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1756:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "1756:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1768:4:11",
																					"nodeType": "YulLiteral",
																					"src": "1768:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1753:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1753:2:11"
																			},
																			"nativeSrc": "1753:20:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1753:20:11"
																		},
																		"nativeSrc": "1750:47:11",
																		"nodeType": "YulIf",
																		"src": "1750:47:11"
																	},
																	{
																		"nativeSrc": "1810:41:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1810:41:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1824:4:11",
																					"nodeType": "YulIdentifier",
																					"src": "1824:4:11"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1834:1:11",
																							"nodeType": "YulLiteral",
																							"src": "1834:1:11",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1841:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1841:3:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1846:2:11",
																									"nodeType": "YulLiteral",
																									"src": "1846:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1837:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "1837:3:11"
																							},
																							"nativeSrc": "1837:12:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1837:12:11"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1830:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "1830:3:11"
																					},
																					"nativeSrc": "1830:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1830:20:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1820:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1820:3:11"
																			},
																			"nativeSrc": "1820:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1820:31:11"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1814:2:11",
																				"nodeType": "YulTypedName",
																				"src": "1814:2:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1864:24:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1864:24:11",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1877:11:11",
																			"nodeType": "YulIdentifier",
																			"src": "1877:11:11"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1868:5:11",
																				"nodeType": "YulTypedName",
																				"src": "1868:5:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1962:20:11",
																			"nodeType": "YulBlock",
																			"src": "1962:20:11",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1971:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "1971:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1978:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1978:1:11",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1964:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "1964:6:11"
																						},
																						"nativeSrc": "1964:16:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1964:16:11"
																					},
																					"nativeSrc": "1964:16:11",
																					"nodeType": "YulExpressionStatement",
																					"src": "1964:16:11"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1912:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "1912:5:11"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1919:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "1919:2:11"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1909:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "1909:2:11"
																			},
																			"nativeSrc": "1909:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1909:13:11"
																		},
																		"nativeSrc": "1901:81:11",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1923:26:11",
																			"nodeType": "YulBlock",
																			"src": "1923:26:11",
																			"statements": [
																				{
																					"nativeSrc": "1925:22:11",
																					"nodeType": "YulAssignment",
																					"src": "1925:22:11",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1938:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "1938:5:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1945:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1945:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1934:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1934:3:11"
																						},
																						"nativeSrc": "1934:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1934:13:11"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1925:5:11",
																							"nodeType": "YulIdentifier",
																							"src": "1925:5:11"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1905:3:11",
																			"nodeType": "YulBlock",
																			"src": "1905:3:11",
																			"statements": []
																		},
																		"src": "1901:81:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1577:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1577:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1582:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1582:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1574:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1574:2:11"
																},
																"nativeSrc": "1574:11:11",
																"nodeType": "YulFunctionCall",
																"src": "1574:11:11"
															},
															"nativeSrc": "1571:421:11",
															"nodeType": "YulIf",
															"src": "1571:421:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1480:518:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1533:5:11",
														"nodeType": "YulTypedName",
														"src": "1533:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1540:3:11",
														"nodeType": "YulTypedName",
														"src": "1540:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1545:10:11",
														"nodeType": "YulTypedName",
														"src": "1545:10:11",
														"type": ""
													}
												],
												"src": "1480:518:11"
											},
											{
												"body": {
													"nativeSrc": "2088:81:11",
													"nodeType": "YulBlock",
													"src": "2088:81:11",
													"statements": [
														{
															"nativeSrc": "2098:65:11",
															"nodeType": "YulAssignment",
															"src": "2098:65:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2113:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2113:4:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2131:1:11",
																										"nodeType": "YulLiteral",
																										"src": "2131:1:11",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2134:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "2134:3:11"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2127:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2127:3:11"
																								},
																								"nativeSrc": "2127:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2127:11:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2144:1:11",
																										"nodeType": "YulLiteral",
																										"src": "2144:1:11",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2140:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2140:3:11"
																								},
																								"nativeSrc": "2140:6:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2140:6:11"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2123:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2123:3:11"
																						},
																						"nativeSrc": "2123:24:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2123:24:11"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2119:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2119:3:11"
																				},
																				"nativeSrc": "2119:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2119:29:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2109:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2109:3:11"
																		},
																		"nativeSrc": "2109:40:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2109:40:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2155:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2155:1:11",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2158:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2158:3:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2151:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2151:3:11"
																		},
																		"nativeSrc": "2151:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2151:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2106:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2106:2:11"
																},
																"nativeSrc": "2106:57:11",
																"nodeType": "YulFunctionCall",
																"src": "2106:57:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2098:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2098:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2003:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2065:4:11",
														"nodeType": "YulTypedName",
														"src": "2065:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2071:3:11",
														"nodeType": "YulTypedName",
														"src": "2071:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2079:4:11",
														"nodeType": "YulTypedName",
														"src": "2079:4:11",
														"type": ""
													}
												],
												"src": "2003:166:11"
											},
											{
												"body": {
													"nativeSrc": "2270:1203:11",
													"nodeType": "YulBlock",
													"src": "2270:1203:11",
													"statements": [
														{
															"nativeSrc": "2280:24:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2280:24:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2300:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2300:3:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2294:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2294:5:11"
																},
																"nativeSrc": "2294:10:11",
																"nodeType": "YulFunctionCall",
																"src": "2294:10:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2284:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2284:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2347:22:11",
																"nodeType": "YulBlock",
																"src": "2347:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2349:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "2349:16:11"
																			},
																			"nativeSrc": "2349:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2349:18:11"
																		},
																		"nativeSrc": "2349:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2349:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2319:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2319:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2335:2:11",
																						"nodeType": "YulLiteral",
																						"src": "2335:2:11",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2339:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2339:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2331:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2331:3:11"
																				},
																				"nativeSrc": "2331:10:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2331:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2343:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2343:1:11",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2327:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2327:3:11"
																		},
																		"nativeSrc": "2327:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2327:18:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2316:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2316:2:11"
																},
																"nativeSrc": "2316:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2316:30:11"
															},
															"nativeSrc": "2313:56:11",
															"nodeType": "YulIf",
															"src": "2313:56:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2422:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2422:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2460:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "2460:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2454:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "2454:5:11"
																				},
																				"nativeSrc": "2454:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2454:11:11"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2428:25:11",
																			"nodeType": "YulIdentifier",
																			"src": "2428:25:11"
																		},
																		"nativeSrc": "2428:38:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2428:38:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2468:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2378:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2378:43:11"
																},
																"nativeSrc": "2378:97:11",
																"nodeType": "YulFunctionCall",
																"src": "2378:97:11"
															},
															"nativeSrc": "2378:97:11",
															"nodeType": "YulExpressionStatement",
															"src": "2378:97:11"
														},
														{
															"nativeSrc": "2484:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2484:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2501:1:11",
																"nodeType": "YulLiteral",
																"src": "2501:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2488:9:11",
																	"nodeType": "YulTypedName",
																	"src": "2488:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2511:17:11",
															"nodeType": "YulAssignment",
															"src": "2511:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2524:4:11",
																"nodeType": "YulLiteral",
																"src": "2524:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2511:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2511:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2574:642:11",
																		"nodeType": "YulBlock",
																		"src": "2574:642:11",
																		"statements": [
																			{
																				"nativeSrc": "2588:35:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2588:35:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2607:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "2607:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2619:2:11",
																									"nodeType": "YulLiteral",
																									"src": "2619:2:11",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2615:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "2615:3:11"
																							},
																							"nativeSrc": "2615:7:11",
																							"nodeType": "YulFunctionCall",
																							"src": "2615:7:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2603:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2603:3:11"
																					},
																					"nativeSrc": "2603:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2603:20:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2592:7:11",
																						"nodeType": "YulTypedName",
																						"src": "2592:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2636:49:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2636:49:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2680:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "2680:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2650:29:11",
																						"nodeType": "YulIdentifier",
																						"src": "2650:29:11"
																					},
																					"nativeSrc": "2650:35:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2650:35:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2640:6:11",
																						"nodeType": "YulTypedName",
																						"src": "2640:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2698:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2698:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2707:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2707:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2702:1:11",
																						"nodeType": "YulTypedName",
																						"src": "2702:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2778:165:11",
																					"nodeType": "YulBlock",
																					"src": "2778:165:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2803:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "2803:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2821:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "2821:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2826:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "2826:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2817:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "2817:3:11"
																												},
																												"nativeSrc": "2817:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "2817:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2811:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "2811:5:11"
																										},
																										"nativeSrc": "2811:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "2811:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2796:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "2796:6:11"
																								},
																								"nativeSrc": "2796:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2796:42:11"
																							},
																							"nativeSrc": "2796:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "2796:42:11"
																						},
																						{
																							"nativeSrc": "2855:24:11",
																							"nodeType": "YulAssignment",
																							"src": "2855:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2869:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "2869:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2877:1:11",
																										"nodeType": "YulLiteral",
																										"src": "2877:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2865:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2865:3:11"
																								},
																								"nativeSrc": "2865:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2865:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2855:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "2855:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2896:33:11",
																							"nodeType": "YulAssignment",
																							"src": "2896:33:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2913:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "2913:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2924:4:11",
																										"nodeType": "YulLiteral",
																										"src": "2924:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2909:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2909:3:11"
																								},
																								"nativeSrc": "2909:20:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2909:20:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2896:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "2896:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2732:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "2732:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2735:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "2735:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2729:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2729:2:11"
																					},
																					"nativeSrc": "2729:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2729:14:11"
																				},
																				"nativeSrc": "2721:222:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2744:21:11",
																					"nodeType": "YulBlock",
																					"src": "2744:21:11",
																					"statements": [
																						{
																							"nativeSrc": "2746:17:11",
																							"nodeType": "YulAssignment",
																							"src": "2746:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2755:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "2755:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2758:4:11",
																										"nodeType": "YulLiteral",
																										"src": "2758:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2751:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "2751:3:11"
																								},
																								"nativeSrc": "2751:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "2751:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2746:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "2746:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2725:3:11",
																					"nodeType": "YulBlock",
																					"src": "2725:3:11",
																					"statements": []
																				},
																				"src": "2721:222:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "2991:166:11",
																					"nodeType": "YulBlock",
																					"src": "2991:166:11",
																					"statements": [
																						{
																							"nativeSrc": "3009:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3009:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3036:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "3036:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3041:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3041:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3032:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3032:3:11"
																										},
																										"nativeSrc": "3032:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3032:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3026:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3026:5:11"
																								},
																								"nativeSrc": "3026:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3026:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3013:9:11",
																									"nodeType": "YulTypedName",
																									"src": "3013:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3076:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "3076:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3088:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3088:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3115:1:11",
																																				"nodeType": "YulLiteral",
																																				"src": "3115:1:11",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3118:6:11",
																																				"nodeType": "YulIdentifier",
																																				"src": "3118:6:11"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3111:3:11",
																																			"nodeType": "YulIdentifier",
																																			"src": "3111:3:11"
																																		},
																																		"nativeSrc": "3111:14:11",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3111:14:11"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3127:3:11",
																																		"nodeType": "YulLiteral",
																																		"src": "3127:3:11",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3107:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "3107:3:11"
																																},
																																"nativeSrc": "3107:24:11",
																																"nodeType": "YulFunctionCall",
																																"src": "3107:24:11"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3137:1:11",
																																		"nodeType": "YulLiteral",
																																		"src": "3137:1:11",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3133:3:11",
																																	"nodeType": "YulIdentifier",
																																	"src": "3133:3:11"
																																},
																																"nativeSrc": "3133:6:11",
																																"nodeType": "YulFunctionCall",
																																"src": "3133:6:11"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3103:3:11",
																															"nodeType": "YulIdentifier",
																															"src": "3103:3:11"
																														},
																														"nativeSrc": "3103:37:11",
																														"nodeType": "YulFunctionCall",
																														"src": "3103:37:11"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3099:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "3099:3:11"
																												},
																												"nativeSrc": "3099:42:11",
																												"nodeType": "YulFunctionCall",
																												"src": "3099:42:11"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3084:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3084:3:11"
																										},
																										"nativeSrc": "3084:58:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3084:58:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3069:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3069:6:11"
																								},
																								"nativeSrc": "3069:74:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3069:74:11"
																							},
																							"nativeSrc": "3069:74:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "3069:74:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2962:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "2962:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2971:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "2971:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2959:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2959:2:11"
																					},
																					"nativeSrc": "2959:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2959:19:11"
																				},
																				"nativeSrc": "2956:201:11",
																				"nodeType": "YulIf",
																				"src": "2956:201:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3177:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "3177:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3191:1:11",
																											"nodeType": "YulLiteral",
																											"src": "3191:1:11",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3194:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "3194:6:11"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3187:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "3187:3:11"
																									},
																									"nativeSrc": "3187:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "3187:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3203:1:11",
																									"nodeType": "YulLiteral",
																									"src": "3203:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3183:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "3183:3:11"
																							},
																							"nativeSrc": "3183:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3183:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3170:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3170:6:11"
																					},
																					"nativeSrc": "3170:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3170:36:11"
																				},
																				"nativeSrc": "3170:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3170:36:11"
																			}
																		]
																	},
																	"nativeSrc": "2567:649:11",
																	"nodeType": "YulCase",
																	"src": "2567:649:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2572:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2572:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3233:234:11",
																		"nodeType": "YulBlock",
																		"src": "3233:234:11",
																		"statements": [
																			{
																				"nativeSrc": "3247:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3247:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3260:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3260:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3251:5:11",
																						"nodeType": "YulTypedName",
																						"src": "3251:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3296:67:11",
																					"nodeType": "YulBlock",
																					"src": "3296:67:11",
																					"statements": [
																						{
																							"nativeSrc": "3314:35:11",
																							"nodeType": "YulAssignment",
																							"src": "3314:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3333:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "3333:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3338:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "3338:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3329:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "3329:3:11"
																										},
																										"nativeSrc": "3329:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "3329:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3323:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3323:5:11"
																								},
																								"nativeSrc": "3323:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "3323:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3314:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3314:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3277:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "3277:6:11"
																				},
																				"nativeSrc": "3274:89:11",
																				"nodeType": "YulIf",
																				"src": "3274:89:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3383:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "3383:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3442:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "3442:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3449:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "3449:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3389:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "3389:52:11"
																							},
																							"nativeSrc": "3389:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "3389:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3376:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3376:6:11"
																					},
																					"nativeSrc": "3376:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3376:81:11"
																				},
																				"nativeSrc": "3376:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3376:81:11"
																			}
																		]
																	},
																	"nativeSrc": "3225:242:11",
																	"nodeType": "YulCase",
																	"src": "3225:242:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2547:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2547:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2555:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2555:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2544:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2544:2:11"
																},
																"nativeSrc": "2544:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2544:14:11"
															},
															"nativeSrc": "2537:930:11",
															"nodeType": "YulSwitch",
															"src": "2537:930:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2174:1299:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2255:4:11",
														"nodeType": "YulTypedName",
														"src": "2255:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2261:3:11",
														"nodeType": "YulTypedName",
														"src": "2261:3:11",
														"type": ""
													}
												],
												"src": "2174:1299:11"
											},
											{
												"body": {
													"nativeSrc": "3579:102:11",
													"nodeType": "YulBlock",
													"src": "3579:102:11",
													"statements": [
														{
															"nativeSrc": "3589:26:11",
															"nodeType": "YulAssignment",
															"src": "3589:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3601:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3601:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3612:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3612:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3597:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3597:3:11"
																},
																"nativeSrc": "3597:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3597:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3589:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3589:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3631:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3646:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3646:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3662:3:11",
																								"nodeType": "YulLiteral",
																								"src": "3662:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3667:1:11",
																								"nodeType": "YulLiteral",
																								"src": "3667:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3658:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3658:3:11"
																						},
																						"nativeSrc": "3658:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3658:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3671:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3671:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3654:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3654:3:11"
																				},
																				"nativeSrc": "3654:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3654:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3642:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:11"
																		},
																		"nativeSrc": "3642:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3642:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3624:6:11"
																},
																"nativeSrc": "3624:51:11",
																"nodeType": "YulFunctionCall",
																"src": "3624:51:11"
															},
															"nativeSrc": "3624:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "3624:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3478:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3548:9:11",
														"nodeType": "YulTypedName",
														"src": "3548:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3559:6:11",
														"nodeType": "YulTypedName",
														"src": "3559:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3570:4:11",
														"nodeType": "YulTypedName",
														"src": "3570:4:11",
														"type": ""
													}
												],
												"src": "3478:203:11"
											},
											{
												"body": {
													"nativeSrc": "3860:173:11",
													"nodeType": "YulBlock",
													"src": "3860:173:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3877:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3877:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3888:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3888:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3870:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3870:6:11"
																},
																"nativeSrc": "3870:21:11",
																"nodeType": "YulFunctionCall",
																"src": "3870:21:11"
															},
															"nativeSrc": "3870:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "3870:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3911:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3911:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3922:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3922:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3907:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:11"
																		},
																		"nativeSrc": "3907:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3907:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3927:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3927:2:11",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3900:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3900:6:11"
																},
																"nativeSrc": "3900:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3900:30:11"
															},
															"nativeSrc": "3900:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "3900:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3950:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3950:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3961:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3961:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3946:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3946:3:11"
																		},
																		"nativeSrc": "3946:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3946:18:11"
																	},
																	{
																		"hexValue": "496e76616c69642074726561737572792077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "3966:25:11",
																		"nodeType": "YulLiteral",
																		"src": "3966:25:11",
																		"type": "",
																		"value": "Invalid treasury wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3939:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3939:6:11"
																},
																"nativeSrc": "3939:53:11",
																"nodeType": "YulFunctionCall",
																"src": "3939:53:11"
															},
															"nativeSrc": "3939:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "3939:53:11"
														},
														{
															"nativeSrc": "4001:26:11",
															"nodeType": "YulAssignment",
															"src": "4001:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4013:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4013:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4024:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4024:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4009:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4009:3:11"
																},
																"nativeSrc": "4009:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4009:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4001:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4001:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3686:347:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3837:9:11",
														"nodeType": "YulTypedName",
														"src": "3837:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3851:4:11",
														"nodeType": "YulTypedName",
														"src": "3851:4:11",
														"type": ""
													}
												],
												"src": "3686:347:11"
											},
											{
												"body": {
													"nativeSrc": "4212:174:11",
													"nodeType": "YulBlock",
													"src": "4212:174:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4229:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4229:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4240:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4240:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4222:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4222:6:11"
																},
																"nativeSrc": "4222:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4222:21:11"
															},
															"nativeSrc": "4222:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4222:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4263:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4263:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4274:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4274:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4259:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4259:3:11"
																		},
																		"nativeSrc": "4259:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4259:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4279:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4279:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4252:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4252:6:11"
																},
																"nativeSrc": "4252:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4252:30:11"
															},
															"nativeSrc": "4252:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4252:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4302:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4302:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4313:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4313:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4298:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4298:3:11"
																		},
																		"nativeSrc": "4298:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4298:18:11"
																	},
																	{
																		"hexValue": "496e76616c69642065636f73797374656d2077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "4318:26:11",
																		"nodeType": "YulLiteral",
																		"src": "4318:26:11",
																		"type": "",
																		"value": "Invalid ecosystem wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4291:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:11"
																},
																"nativeSrc": "4291:54:11",
																"nodeType": "YulFunctionCall",
																"src": "4291:54:11"
															},
															"nativeSrc": "4291:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "4291:54:11"
														},
														{
															"nativeSrc": "4354:26:11",
															"nodeType": "YulAssignment",
															"src": "4354:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4366:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4366:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4377:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4377:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4362:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4362:3:11"
																},
																"nativeSrc": "4362:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4362:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4354:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4354:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_618e06b925dc1c261ab77636de637a065ab7ceef1a2509a21be38a727110d230__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4038:348:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4189:9:11",
														"nodeType": "YulTypedName",
														"src": "4189:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4203:4:11",
														"nodeType": "YulTypedName",
														"src": "4203:4:11",
														"type": ""
													}
												],
												"src": "4038:348:11"
											},
											{
												"body": {
													"nativeSrc": "4565:174:11",
													"nodeType": "YulBlock",
													"src": "4565:174:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4582:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4582:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4593:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4593:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4575:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4575:6:11"
																},
																"nativeSrc": "4575:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4575:21:11"
															},
															"nativeSrc": "4575:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4575:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4616:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4616:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4627:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4627:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4612:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4612:3:11"
																		},
																		"nativeSrc": "4612:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4612:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4632:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4632:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4605:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4605:6:11"
																},
																"nativeSrc": "4605:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4605:30:11"
															},
															"nativeSrc": "4605:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4605:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4655:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4655:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4666:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4666:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4651:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4651:3:11"
																		},
																		"nativeSrc": "4651:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4651:18:11"
																	},
																	{
																		"hexValue": "496e76616c696420636f6d6d756e6974792077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "4671:26:11",
																		"nodeType": "YulLiteral",
																		"src": "4671:26:11",
																		"type": "",
																		"value": "Invalid community wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4644:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4644:6:11"
																},
																"nativeSrc": "4644:54:11",
																"nodeType": "YulFunctionCall",
																"src": "4644:54:11"
															},
															"nativeSrc": "4644:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "4644:54:11"
														},
														{
															"nativeSrc": "4707:26:11",
															"nodeType": "YulAssignment",
															"src": "4707:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4719:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4719:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4730:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4730:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4715:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:11"
																},
																"nativeSrc": "4715:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4715:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4707:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4707:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e6aa9e82df9ed735f6dba8fe33ecac07fe34e5696eb7e317a220817b24d3a2b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4391:348:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4542:9:11",
														"nodeType": "YulTypedName",
														"src": "4542:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4556:4:11",
														"nodeType": "YulTypedName",
														"src": "4556:4:11",
														"type": ""
													}
												],
												"src": "4391:348:11"
											},
											{
												"body": {
													"nativeSrc": "4918:174:11",
													"nodeType": "YulBlock",
													"src": "4918:174:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4935:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4935:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4946:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4946:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4928:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4928:6:11"
																},
																"nativeSrc": "4928:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4928:21:11"
															},
															"nativeSrc": "4928:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "4928:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4969:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4969:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4980:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4980:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4965:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4965:3:11"
																		},
																		"nativeSrc": "4965:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4965:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4985:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4985:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4958:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4958:6:11"
																},
																"nativeSrc": "4958:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4958:30:11"
															},
															"nativeSrc": "4958:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "4958:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5008:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5008:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5019:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5019:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5004:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5004:3:11"
																		},
																		"nativeSrc": "5004:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5004:18:11"
																	},
																	{
																		"hexValue": "496e76616c6964206c69717569646974792077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "5024:26:11",
																		"nodeType": "YulLiteral",
																		"src": "5024:26:11",
																		"type": "",
																		"value": "Invalid liquidity wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4997:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4997:6:11"
																},
																"nativeSrc": "4997:54:11",
																"nodeType": "YulFunctionCall",
																"src": "4997:54:11"
															},
															"nativeSrc": "4997:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "4997:54:11"
														},
														{
															"nativeSrc": "5060:26:11",
															"nodeType": "YulAssignment",
															"src": "5060:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5072:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5072:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5083:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5083:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5068:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5068:3:11"
																},
																"nativeSrc": "5068:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5068:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5060:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5060:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f6bd4eeef749285304a1dee11bf473ac68a9249155d6123350512d261d5957a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4744:348:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4895:9:11",
														"nodeType": "YulTypedName",
														"src": "4895:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4909:4:11",
														"nodeType": "YulTypedName",
														"src": "4909:4:11",
														"type": ""
													}
												],
												"src": "4744:348:11"
											},
											{
												"body": {
													"nativeSrc": "5271:172:11",
													"nodeType": "YulBlock",
													"src": "5271:172:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5288:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5288:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5299:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5299:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5281:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5281:6:11"
																},
																"nativeSrc": "5281:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5281:21:11"
															},
															"nativeSrc": "5281:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5281:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5322:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5322:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5333:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5333:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5318:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5318:3:11"
																		},
																		"nativeSrc": "5318:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5318:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5338:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5338:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5311:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5311:6:11"
																},
																"nativeSrc": "5311:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5311:30:11"
															},
															"nativeSrc": "5311:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5311:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5361:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5361:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5372:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5372:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5357:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:11"
																		},
																		"nativeSrc": "5357:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:18:11"
																	},
																	{
																		"hexValue": "496e76616c696420726573657276652077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "5377:24:11",
																		"nodeType": "YulLiteral",
																		"src": "5377:24:11",
																		"type": "",
																		"value": "Invalid reserve wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5350:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5350:6:11"
																},
																"nativeSrc": "5350:52:11",
																"nodeType": "YulFunctionCall",
																"src": "5350:52:11"
															},
															"nativeSrc": "5350:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "5350:52:11"
														},
														{
															"nativeSrc": "5411:26:11",
															"nodeType": "YulAssignment",
															"src": "5411:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5423:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5423:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5434:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5434:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5419:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5419:3:11"
																},
																"nativeSrc": "5419:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5419:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5411:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5411:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_139c4f1312240fd33ddbb308a6e6b27481dd8a672750151fbe0ca28f85588b38__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5097:346:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5248:9:11",
														"nodeType": "YulTypedName",
														"src": "5248:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5262:4:11",
														"nodeType": "YulTypedName",
														"src": "5262:4:11",
														"type": ""
													}
												],
												"src": "5097:346:11"
											},
											{
												"body": {
													"nativeSrc": "5480:95:11",
													"nodeType": "YulBlock",
													"src": "5480:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5497:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5497:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5504:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5504:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5509:10:11",
																				"nodeType": "YulLiteral",
																				"src": "5509:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5500:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5500:3:11"
																		},
																		"nativeSrc": "5500:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5500:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5490:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5490:6:11"
																},
																"nativeSrc": "5490:31:11",
																"nodeType": "YulFunctionCall",
																"src": "5490:31:11"
															},
															"nativeSrc": "5490:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "5490:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5537:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5537:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5540:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5540:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5530:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5530:6:11"
																},
																"nativeSrc": "5530:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5530:15:11"
															},
															"nativeSrc": "5530:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5530:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5561:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5561:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5564:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5564:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5554:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:11"
																},
																"nativeSrc": "5554:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5554:15:11"
															},
															"nativeSrc": "5554:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "5554:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5448:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "5448:127:11"
											},
											{
												"body": {
													"nativeSrc": "5632:116:11",
													"nodeType": "YulBlock",
													"src": "5632:116:11",
													"statements": [
														{
															"nativeSrc": "5642:20:11",
															"nodeType": "YulAssignment",
															"src": "5642:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5657:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5657:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5660:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5660:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5653:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5653:3:11"
																},
																"nativeSrc": "5653:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5653:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5642:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5642:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5720:22:11",
																"nodeType": "YulBlock",
																"src": "5720:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5722:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5722:16:11"
																			},
																			"nativeSrc": "5722:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5722:18:11"
																		},
																		"nativeSrc": "5722:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5722:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5691:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "5691:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5684:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5684:6:11"
																				},
																				"nativeSrc": "5684:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5684:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5698:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "5698:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5705:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "5705:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5714:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "5714:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5701:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5701:3:11"
																						},
																						"nativeSrc": "5701:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5701:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5695:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "5695:2:11"
																				},
																				"nativeSrc": "5695:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5695:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5681:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5681:2:11"
																		},
																		"nativeSrc": "5681:37:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5681:37:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5674:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:11"
																},
																"nativeSrc": "5674:45:11",
																"nodeType": "YulFunctionCall",
																"src": "5674:45:11"
															},
															"nativeSrc": "5671:71:11",
															"nodeType": "YulIf",
															"src": "5671:71:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5580:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5611:1:11",
														"nodeType": "YulTypedName",
														"src": "5611:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5614:1:11",
														"nodeType": "YulTypedName",
														"src": "5614:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5620:7:11",
														"nodeType": "YulTypedName",
														"src": "5620:7:11",
														"type": ""
													}
												],
												"src": "5580:168:11"
											},
											{
												"body": {
													"nativeSrc": "5799:171:11",
													"nodeType": "YulBlock",
													"src": "5799:171:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5830:111:11",
																"nodeType": "YulBlock",
																"src": "5830:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5851:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5851:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5858:3:11",
																							"nodeType": "YulLiteral",
																							"src": "5858:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5863:10:11",
																							"nodeType": "YulLiteral",
																							"src": "5863:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5854:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "5854:3:11"
																					},
																					"nativeSrc": "5854:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5854:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5844:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5844:6:11"
																			},
																			"nativeSrc": "5844:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5844:31:11"
																		},
																		"nativeSrc": "5844:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5844:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5895:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5895:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5898:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5898:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5888:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5888:6:11"
																			},
																			"nativeSrc": "5888:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5888:15:11"
																		},
																		"nativeSrc": "5888:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5888:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5923:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5923:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5926:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5926:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5916:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5916:6:11"
																			},
																			"nativeSrc": "5916:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5916:15:11"
																		},
																		"nativeSrc": "5916:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5916:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5819:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5819:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5812:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5812:6:11"
																},
																"nativeSrc": "5812:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5812:9:11"
															},
															"nativeSrc": "5809:132:11",
															"nodeType": "YulIf",
															"src": "5809:132:11"
														},
														{
															"nativeSrc": "5950:14:11",
															"nodeType": "YulAssignment",
															"src": "5950:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5959:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5959:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5962:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5962:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5955:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5955:3:11"
																},
																"nativeSrc": "5955:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5955:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5950:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5950:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5753:217:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5784:1:11",
														"nodeType": "YulTypedName",
														"src": "5784:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5787:1:11",
														"nodeType": "YulTypedName",
														"src": "5787:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5793:1:11",
														"nodeType": "YulTypedName",
														"src": "5793:1:11",
														"type": ""
													}
												],
												"src": "5753:217:11"
											},
											{
												"body": {
													"nativeSrc": "6023:77:11",
													"nodeType": "YulBlock",
													"src": "6023:77:11",
													"statements": [
														{
															"nativeSrc": "6033:16:11",
															"nodeType": "YulAssignment",
															"src": "6033:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6044:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6044:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6047:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6047:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6040:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6040:3:11"
																},
																"nativeSrc": "6040:9:11",
																"nodeType": "YulFunctionCall",
																"src": "6040:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6033:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6072:22:11",
																"nodeType": "YulBlock",
																"src": "6072:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6074:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6074:16:11"
																			},
																			"nativeSrc": "6074:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6074:18:11"
																		},
																		"nativeSrc": "6074:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6074:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6064:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6064:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6067:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6067:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6061:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6061:2:11"
																},
																"nativeSrc": "6061:10:11",
																"nodeType": "YulFunctionCall",
																"src": "6061:10:11"
															},
															"nativeSrc": "6058:36:11",
															"nodeType": "YulIf",
															"src": "6058:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5975:125:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6006:1:11",
														"nodeType": "YulTypedName",
														"src": "6006:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6009:1:11",
														"nodeType": "YulTypedName",
														"src": "6009:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6015:3:11",
														"nodeType": "YulTypedName",
														"src": "6015:3:11",
														"type": ""
													}
												],
												"src": "5975:125:11"
											},
											{
												"body": {
													"nativeSrc": "6262:188:11",
													"nodeType": "YulBlock",
													"src": "6262:188:11",
													"statements": [
														{
															"nativeSrc": "6272:26:11",
															"nodeType": "YulAssignment",
															"src": "6272:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6284:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6284:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6295:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6295:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6280:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6280:3:11"
																},
																"nativeSrc": "6280:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6280:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6272:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6272:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6314:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6314:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6329:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6329:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6345:3:11",
																								"nodeType": "YulLiteral",
																								"src": "6345:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6350:1:11",
																								"nodeType": "YulLiteral",
																								"src": "6350:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6341:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "6341:3:11"
																						},
																						"nativeSrc": "6341:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "6341:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6354:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6354:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6337:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6337:3:11"
																				},
																				"nativeSrc": "6337:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6337:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6325:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:11"
																		},
																		"nativeSrc": "6325:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6307:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6307:6:11"
																},
																"nativeSrc": "6307:51:11",
																"nodeType": "YulFunctionCall",
																"src": "6307:51:11"
															},
															"nativeSrc": "6307:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "6307:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6378:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6378:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6389:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6389:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6374:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6374:3:11"
																		},
																		"nativeSrc": "6374:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6374:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6394:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6394:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6367:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6367:6:11"
																},
																"nativeSrc": "6367:34:11",
																"nodeType": "YulFunctionCall",
																"src": "6367:34:11"
															},
															"nativeSrc": "6367:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "6367:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6421:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6421:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6432:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6432:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6417:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6417:3:11"
																		},
																		"nativeSrc": "6417:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6417:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6437:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6410:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6410:6:11"
																},
																"nativeSrc": "6410:34:11",
																"nodeType": "YulFunctionCall",
																"src": "6410:34:11"
															},
															"nativeSrc": "6410:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "6410:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6105:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6215:9:11",
														"nodeType": "YulTypedName",
														"src": "6215:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6226:6:11",
														"nodeType": "YulTypedName",
														"src": "6226:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6234:6:11",
														"nodeType": "YulTypedName",
														"src": "6234:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6242:6:11",
														"nodeType": "YulTypedName",
														"src": "6242:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6253:4:11",
														"nodeType": "YulTypedName",
														"src": "6253:4:11",
														"type": ""
													}
												],
												"src": "6105:345:11"
											},
											{
												"body": {
													"nativeSrc": "6556:76:11",
													"nodeType": "YulBlock",
													"src": "6556:76:11",
													"statements": [
														{
															"nativeSrc": "6566:26:11",
															"nodeType": "YulAssignment",
															"src": "6566:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6578:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6578:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6589:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6589:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6574:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6574:3:11"
																},
																"nativeSrc": "6574:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6574:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6566:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6566:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6608:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6608:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6619:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6619:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6601:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:11"
																},
																"nativeSrc": "6601:25:11",
																"nodeType": "YulFunctionCall",
																"src": "6601:25:11"
															},
															"nativeSrc": "6601:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "6601:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6455:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6525:9:11",
														"nodeType": "YulTypedName",
														"src": "6525:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6536:6:11",
														"nodeType": "YulTypedName",
														"src": "6536:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6547:4:11",
														"nodeType": "YulTypedName",
														"src": "6547:4:11",
														"type": ""
													}
												],
												"src": "6455:177:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Invalid treasury wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_618e06b925dc1c261ab77636de637a065ab7ceef1a2509a21be38a727110d230__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid ecosystem wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0e6aa9e82df9ed735f6dba8fe33ecac07fe34e5696eb7e317a220817b24d3a2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid community wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f6bd4eeef749285304a1dee11bf473ac68a9249155d6123350512d261d5957a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid liquidity wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_139c4f1312240fd33ddbb308a6e6b27481dd8a672750151fbe0ca28f85588b38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid reserve wallet\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5060405161290738038061290783398101604081905261002f91610678565b806040518060400160405280600f81526020016e145d585b9d1d5b481550924d105313608a1b8152506040518060400160405280600381526020016251344160e81b8152508160039081610083919061078b565b506004610090828261078b565b5050506001600160a01b0381166100c257604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100cb816104a6565b5060016006556007805460ff191690556001600160a01b0386166101315760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642074726561737572792077616c6c657400000000000000000060448201526064016100b9565b6001600160a01b0385166101875760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642065636f73797374656d2077616c6c6574000000000000000060448201526064016100b9565b6001600160a01b0384166101dd5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6d6d756e6974792077616c6c6574000000000000000060448201526064016100b9565b6001600160a01b0383166102335760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206c69717569646974792077616c6c6574000000000000000060448201526064016100b9565b6001600160a01b0382166102895760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420726573657276652077616c6c65740000000000000000000060448201526064016100b9565b60078054610100600160a81b0319166101006001600160a01b038981169190910291909117909155600880546001600160a01b031990811688841617909155600980548216878416179055600a80548216868416179055600b805490911691841691909117905542608052604080518082019091528060646103186b033b2e3c9fd0803ce8000000603261085f565b610322919061087c565b81526000602091820181905260075461010090046001600160a01b03168152600e8252604090819020835181559290910151600190920191909155805180820190915280606461037f6b033b2e3c9fd0803ce8000000601461085f565b610389919061087c565b8152600060209182018190526008546001600160a01b03168152600e825260409020825181559101516001909101556104113060646103d56b033b2e3c9fd0803ce8000000601461085f565b6103df919061087c565b60646103f86b033b2e3c9fd0803ce8000000603261085f565b610402919061087c565b61040c919061089e565b6104f8565b600954610444906001600160a01b0316606461043a6b033b2e3c9fd0803ce8000000600f61085f565b61040c919061087c565b600a8054610472916001600160a01b039091169060649061043a906b033b2e3c9fd0803ce80000009061085f565b600b5461049b906001600160a01b0316606461043a6b033b2e3c9fd0803ce8000000600561085f565b5050505050506108b1565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166105225760405163ec442f0560e01b8152600060048201526024016100b9565b61052e60008383610532565b5050565b6001600160a01b03831661055d578060026000828254610552919061089e565b909155506105cf9050565b6001600160a01b038316600090815260208190526040902054818110156105b05760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100b9565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105eb5760028054829003905561060a565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161064f91815260200190565b60405180910390a3505050565b80516001600160a01b038116811461067357600080fd5b919050565b60008060008060008060c0878903121561069157600080fd5b61069a8761065c565b95506106a86020880161065c565b94506106b66040880161065c565b93506106c46060880161065c565b92506106d26080880161065c565b91506106e060a0880161065c565b90509295509295509295565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061071657607f821691505b60208210810361073657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561078657806000526020600020601f840160051c810160208510156107635750805b601f840160051c820191505b81811015610783576000815560010161076f565b50505b505050565b81516001600160401b038111156107a4576107a46106ec565b6107b8816107b28454610702565b8461073c565b6020601f8211600181146107ec57600083156107d45750848201515b600019600385901b1c1916600184901b178455610783565b600084815260208120601f198516915b8281101561081c57878501518255602094850194600190920191016107fc565b508482101561083a5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761087657610876610849565b92915050565b60008261089957634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561087657610876610849565b60805161202d6108da600039600081816102f70152818161064a01526114e5015261202d6000f3fe608060405234801561001057600080fd5b50600436106102695760003560e01c8063780b973711610151578063bf1ad7e0116100c3578063d72b11bd11610087578063d72b11bd14610529578063db7a46051461053c578063dd62ed3e14610589578063f2fde38b146105c2578063f9428f38146105d5578063fdb20ccb146105dd57600080fd5b8063bf1ad7e0146104d7578063c4e41b22146104df578063c7574839146104f0578063d469801614610503578063d486d1291461051657600080fd5b806390534f241161011557806390534f24146104865780639576a3741461048e57806395d89b41146104a1578063993eb1c5146104a9578063a9059cbb146104b1578063b7e26a2e146104c457600080fd5b8063780b9737146104405780637b5c7f03146104535780638456cb591461045b5780638da5cb5b14610463578063902d55a51461047457600080fd5b80633f4ba83a116101ea5780634a0ced96116101ae5780634a0ced96146103ce5780635c975abb146103d757806365ed6e23146103e257806370a0823114610412578063715018a614610425578063743003781461042d57600080fd5b80633f4ba83a1461035b57806340c10f191461036557806342966c6814610378578063435263ef1461038b5780634626402b146103b657600080fd5b806323b872dd1161023157806323b872dd146102df578063254800d4146102f25780632af4459214610319578063313ce5671461033957806333127b0d1461034857600080fd5b80630197d9721461026e5780630553be1e1461028c57806306fdde031461029f578063095ea7b3146102b457806318160ddd146102d7575b600080fd5b6102796301e1338081565b6040519081526020015b60405180910390f35b61027961029a366004611c0c565b610619565b6102a76106c0565b6040516102839190611c77565b6102c76102c2366004611c8a565b610752565b6040519015158152602001610283565b600254610279565b6102c76102ed366004611cb4565b61076c565b6102797f000000000000000000000000000000000000000000000000000000000000000081565b610279610327366004611c0c565b600c6020526000908152604090205481565b60405160128152602001610283565b6102c7610356366004611cf1565b610792565b6103636108fa565b005b610363610373366004611c8a565b61090c565b610363610386366004611d24565b610982565b60085461039e906001600160a01b031681565b6040516001600160a01b039091168152602001610283565b60075461039e9061010090046001600160a01b031681565b610279600d5481565b60075460ff166102c7565b6103ea6109ff565b604080519586526020860194909452928401919091526060830152608082015260a001610283565b610279610420366004611c0c565b610ac0565b610363610ade565b61036361043b366004611d24565b610af0565b61036361044e366004611d53565b610bf5565b610279611003565b610363611028565b6005546001600160a01b031661039e565b610279676765c793fa10079d601b1b81565b610279611038565b61036361049c366004611d24565b611050565b6102a7611145565b610279611154565b6102c76104bf366004611c8a565b61116c565b6103636104d2366004611e1d565b6111d1565b6102796113df565b676765c793fa10079d601b1b610279565b60095461039e906001600160a01b031681565b600a5461039e906001600160a01b031681565b610363610524366004611c0c565b6113f7565b600b5461039e906001600160a01b031681565b600754600854600954600a54600b54604080516101009096046001600160a01b0390811687529485166020870152928416928501929092528216606084015216608082015260a001610283565b610279610597366004611e1d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6103636105d0366004611c0c565b61160e565b610279611649565b6106046105eb366004611c0c565b600e602052600090815260409020805460019091015482565b60408051928352602083019190915201610283565b6001600160a01b0381166000908152600e60205260408120805482036106425750600092915050565b600061066e427f0000000000000000000000000000000000000000000000000000000000000000611661565b905060006106976301e1338061069184866000015461166d90919063ffffffff16565b90611679565b83549091508111156106a7575081545b60018301546106b7908290611661565b95945050505050565b6060600380546106cf90611e47565b80601f01602080910402602001604051908101604052809291908181526020018280546106fb90611e47565b80156107485780601f1061071d57610100808354040283529160200191610748565b820191906000526020600020905b81548152906001019060200180831161072b57829003601f168201915b5050505050905090565b600033610760818585611685565b60019150505b92915050565b60003361077a858285611697565b610785858585611716565b60019150505b9392505050565b600061079c611775565b6107a46117ce565b6001600160a01b0384166107d35760405162461bcd60e51b81526004016107ca90611e81565b60405180910390fd5b600083116107f35760405162461bcd60e51b81526004016107ca90611eac565b60648210156108445760405162461bcd60e51b815260206004820152601c60248201527f4c65766572616765206d757374206265206174206c656173742031780000000060448201526064016107ca565b8261084e33610ac0565b10156108935760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107ca565b600061089f8585611814565b905080156108ee5760408051858152602081018590526001600160a01b0387169133917fae5a72e837b1c61d8f56d35c16816d1e29cc1a1e858253419499dda337ea03e3910160405180910390a35b905061078b6001600655565b610902611822565b61090a61184f565b565b610914611822565b61091c611775565b6109246117ce565b6001600160a01b03821661094a5760405162461bcd60e51b81526004016107ca90611e81565b6000811161096a5760405162461bcd60e51b81526004016107ca90611eac565b61097482826118a1565b61097e6001600655565b5050565b61098a611775565b6109926117ce565b600081116109b25760405162461bcd60e51b81526004016107ca90611eac565b6109bc33826118d7565b60405181815233907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6906020015b60405180910390a26109fc6001600655565b50565b6000808080806064610a1d676765c793fa10079d601b1b6032611eea565b610a279190611f01565b6064610a3f676765c793fa10079d601b1b6014611eea565b610a499190611f01565b6064610a61676765c793fa10079d601b1b600f611eea565b610a6b9190611f01565b6064610a83676765c793fa10079d601b1b600a611eea565b610a8d9190611f01565b6064610aa5676765c793fa10079d601b1b6005611eea565b610aaf9190611f01565b945094509450945094509091929394565b6001600160a01b038116600090815260208190526040812054610766565b610ae6611822565b61090a600061190d565b610af8611775565b610b006117ce565b60008111610b205760405162461bcd60e51b81526004016107ca90611eac565b336000908152600c6020526040902054811115610b7f5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74206c6f636b65642062616c616e6365000000000060448201526064016107ca565b336000908152600c6020526040902054610b999082611661565b336000908152600c6020526040902055600d54610bb69082611661565b600d55610bc333826118a1565b60405181815233907f86e5f036736269c50194228317f229b5684d89d9db959c604a1ef646d6cd6ca9906020016109ea565b610bfd611822565b6001600160a01b038116610c4c5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642077616c6c6574206164647265737360501b60448201526064016107ca565b600082604051602001610c5f9190611f23565b604051602081830303815290604052805190602001209050604051602001610c959067747265617375727960c01b815260080190565b604051602081830303815290604052805190602001208103610d49576007546001600160a01b03610100909104811690831603610ce45760405162461bcd60e51b81526004016107ca90611f3f565b60078054610100908190046001600160a01b039081166000908152600e602052604080822087841680845282842082548155600192830154908301558654869004909416835290822082815501558254610100600160a81b0319169102179055610fc5565b6040516865636f73797374656d60b81b6020820152602901604051602081830303815290604052805190602001208103610e03576008546001600160a01b0390811690831603610dab5760405162461bcd60e51b81526004016107ca90611f3f565b600880546001600160a01b039081166000908152600e6020526040808220868416808452828420825481556001928301549083015585549094168352908220828155015581546001600160a01b031916179055610fc5565b60405168636f6d6d756e69747960b81b6020820152602901604051602081830303815290604052805190602001208103610e85576009546001600160a01b0390811690831603610e655760405162461bcd60e51b81526004016107ca90611f3f565b600980546001600160a01b0319166001600160a01b038416179055610fc5565b604051686c697175696469747960b81b6020820152602901604051602081830303815290604052805190602001208103610f0757600a546001600160a01b0390811690831603610ee75760405162461bcd60e51b81526004016107ca90611f3f565b600a80546001600160a01b0319166001600160a01b038416179055610fc5565b604051667265736572766560c81b6020820152602701604051602081830303815290604052805190602001208103610f8757600b546001600160a01b0390811690831603610f675760405162461bcd60e51b81526004016107ca90611f3f565b600b80546001600160a01b0319166001600160a01b038416179055610fc5565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642077616c6c6574207479706560681b60448201526064016107ca565b7f6ff3a4003b90be84595beb5f6acb9d54f88bd3e6dd4887ca67e53dc9645465ea8383604051610ff6929190611f6c565b60405180910390a1505050565b606461101b676765c793fa10079d601b1b6005611eea565b6110259190611f01565b81565b611030611822565b61090a61195f565b606461101b676765c793fa10079d601b1b6014611eea565b611058611775565b6110606117ce565b600081116110805760405162461bcd60e51b81526004016107ca90611eac565b8061108a33610ac0565b10156110cf5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107ca565b6110d933826118d7565b336000908152600c60205260409020546110f3908261199c565b336000908152600c6020526040902055600d54611110908261199c565b600d5560405181815233907f6b4f55697b6ddad583b377bb7ab9d921afc2eb9ffa0b12fbcea5ae24a7a34e6a906020016109ea565b6060600480546106cf90611e47565b606461101b676765c793fa10079d601b1b600f611eea565b60006111766117ce565b60006111828484611814565b9050801561078b576040518381526001600160a01b0385169033907f94e83ca767b0d965638d27b68a75ea07cd5c28c86299b5c7e02d2d5f1ee9aff29060200160405180910390a39392505050565b6111d9611822565b6111e1611775565b306001600160a01b038316036112395760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f74207265636f7665722051344120746f6b656e730000000000000060448201526064016107ca565b6001600160a01b03811661125f5760405162461bcd60e51b81526004016107ca90611e81565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ca9190611f96565b9050600081116113135760405162461bcd60e51b81526020600482015260146024820152732737903a37b5b2b739903a37903932b1b7bb32b960611b60448201526064016107ca565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015611362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113869190611faf565b50816001600160a01b0316836001600160a01b03167f1ac506e936e7f02f4036dbe44708f5e8d72af9ace8745a29fd391481a8fbcb87836040516113cc91815260200190565b60405180910390a35061097e6001600655565b606461101b676765c793fa10079d601b1b6032611eea565b6113ff611775565b6114076117ce565b6007546001600160a01b0382811661010090920416148061143557506008546001600160a01b038281169116145b61147a5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d995cdd1a5b99c81dd85b1b195d60521b60448201526064016107ca565b6001600160a01b0381166000908152600e6020526040902060018101548154116114dd5760405162461bcd60e51b81526020600482015260146024820152734e6f20746f6b656e7320746f2072656c6561736560601b60448201526064016107ca565b6000611509427f0000000000000000000000000000000000000000000000000000000000000000611661565b9050600061152c6301e1338061069184866000015461166d90919063ffffffff16565b835490915081111561153c575081545b600061155584600101548361166190919063ffffffff16565b90506000811161159e5760405162461bcd60e51b81526020600482015260146024820152734e6f20746f6b656e732072656c65617361626c6560601b60448201526064016107ca565b60018401546115ad908261199c565b60018501556115bd308683611716565b846001600160a01b03167f4ad7799f99297062cea73c5a21d23a1fcf49f6a1957f7409712e555a0dcd1e1d826040516115f891815260200190565b60405180910390a2505050506109fc6001600655565b611616611822565b6001600160a01b03811661164057604051631e4fbdf760e01b8152600060048201526024016107ca565b6109fc8161190d565b606461101b676765c793fa10079d601b1b600a611eea565b600061078b8284611fd1565b600061078b8284611eea565b600061078b8284611f01565b61169283838360016119a8565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015611710578181101561170157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107ca565b611710848484840360006119a8565b50505050565b6001600160a01b03831661174057604051634b637e8f60e11b8152600060048201526024016107ca565b6001600160a01b03821661176a5760405163ec442f0560e01b8152600060048201526024016107ca565b611692838383611a7d565b6002600654036117c75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107ca565b6002600655565b60075460ff161561090a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ca565b600033610760818585611716565b6005546001600160a01b0316331461090a5760405163118cdaa760e01b81523360048201526024016107ca565b611857611ba7565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166118cb5760405163ec442f0560e01b8152600060048201526024016107ca565b61097e60008383611a7d565b6001600160a01b03821661190157604051634b637e8f60e11b8152600060048201526024016107ca565b61097e82600083611a7d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6119676117ce565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118843390565b600061078b8284611fe4565b6001600160a01b0384166119d25760405163e602df0560e01b8152600060048201526024016107ca565b6001600160a01b0383166119fc57604051634a1406b160e11b8152600060048201526024016107ca565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561171057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611a6f91815260200190565b60405180910390a350505050565b6001600160a01b038316611aa8578060026000828254611a9d9190611fe4565b90915550611b1a9050565b6001600160a01b03831660009081526020819052604090205481811015611afb5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107ca565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216611b3657600280548290039055611b55565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b9a91815260200190565b60405180910390a3505050565b60075460ff1661090a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107ca565b80356001600160a01b0381168114611c0757600080fd5b919050565b600060208284031215611c1e57600080fd5b61078b82611bf0565b60005b83811015611c42578181015183820152602001611c2a565b50506000910152565b60008151808452611c63816020860160208601611c27565b601f01601f19169290920160200192915050565b60208152600061078b6020830184611c4b565b60008060408385031215611c9d57600080fd5b611ca683611bf0565b946020939093013593505050565b600080600060608486031215611cc957600080fd5b611cd284611bf0565b9250611ce060208501611bf0565b929592945050506040919091013590565b600080600060608486031215611d0657600080fd5b611d0f84611bf0565b95602085013595506040909401359392505050565b600060208284031215611d3657600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611d6657600080fd5b823567ffffffffffffffff811115611d7d57600080fd5b8301601f81018513611d8e57600080fd5b803567ffffffffffffffff811115611da857611da8611d3d565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611dd757611dd7611d3d565b604052818152828201602001871015611def57600080fd5b81602084016020830137600060208383010152809450505050611e1460208401611bf0565b90509250929050565b60008060408385031215611e3057600080fd5b611e3983611bf0565b9150611e1460208401611bf0565b600181811c90821680611e5b57607f821691505b602082108103611e7b57634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260119082015270125b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b6020808252600e908201526d125b9d985b1a5908185b5bdd5b9d60921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761076657610766611ed4565b600082611f1e57634e487b7160e01b600052601260045260246000fd5b500490565b60008251611f35818460208701611c27565b9190910192915050565b60208082526013908201527253616d652077616c6c6574206164647265737360681b604082015260600190565b604081526000611f7f6040830185611c4b565b905060018060a01b03831660208301529392505050565b600060208284031215611fa857600080fd5b5051919050565b600060208284031215611fc157600080fd5b8151801515811461078b57600080fd5b8181038181111561076657610766611ed4565b8082018082111561076657610766611ed456fea2646970667358221220f184e98d2f389374b4bad94c2d07accf52fb3a7d3f3bb13acd4d85349f93f33a64736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2907 CODESIZE SUB DUP1 PUSH2 0x2907 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x678 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x145D585B9D1D5B481550924D105313 PUSH1 0x8A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x513441 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x78B JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x90 DUP3 DUP3 PUSH2 0x78B JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB DUP2 PUSH2 0x4A6 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x131 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642074726561737572792077616C6C6574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642065636F73797374656D2077616C6C65740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6D6D756E6974792077616C6C65740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x233 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206C69717569646974792077616C6C65740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726573657276652077616C6C657400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND DUP9 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND DUP7 DUP5 AND OR SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE TIMESTAMP PUSH1 0x80 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x64 PUSH2 0x318 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x32 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x64 PUSH2 0x37F PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x14 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH2 0x411 ADDRESS PUSH1 0x64 PUSH2 0x3D5 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x14 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x64 PUSH2 0x3F8 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x32 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x444 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x64 PUSH2 0x43A PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0xF PUSH2 0x85F JUMP JUMPDEST PUSH2 0x40C SWAP2 SWAP1 PUSH2 0x87C JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH2 0x472 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x43A SWAP1 PUSH12 0x33B2E3C9FD0803CE8000000 SWAP1 PUSH2 0x85F JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x49B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x64 PUSH2 0x43A PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0x5 PUSH2 0x85F JUMP JUMPDEST POP POP POP POP POP POP PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x522 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH2 0x52E PUSH1 0x0 DUP4 DUP4 PUSH2 0x532 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55D JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x552 SWAP2 SWAP1 PUSH2 0x89E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x5CF SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EB JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x60A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x64F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69A DUP8 PUSH2 0x65C JUMP JUMPDEST SWAP6 POP PUSH2 0x6A8 PUSH1 0x20 DUP9 ADD PUSH2 0x65C JUMP JUMPDEST SWAP5 POP PUSH2 0x6B6 PUSH1 0x40 DUP9 ADD PUSH2 0x65C JUMP JUMPDEST SWAP4 POP PUSH2 0x6C4 PUSH1 0x60 DUP9 ADD PUSH2 0x65C JUMP JUMPDEST SWAP3 POP PUSH2 0x6D2 PUSH1 0x80 DUP9 ADD PUSH2 0x65C JUMP JUMPDEST SWAP2 POP PUSH2 0x6E0 PUSH1 0xA0 DUP9 ADD PUSH2 0x65C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x716 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x736 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x786 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x763 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x76F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x7A4 JUMPI PUSH2 0x7A4 PUSH2 0x6EC JUMP JUMPDEST PUSH2 0x7B8 DUP2 PUSH2 0x7B2 DUP5 SLOAD PUSH2 0x702 JUMP JUMPDEST DUP5 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7EC JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x7D4 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x783 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x81C JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x7FC JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x83A JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x876 JUMPI PUSH2 0x876 PUSH2 0x849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x899 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x876 JUMPI PUSH2 0x876 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x202D PUSH2 0x8DA PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2F7 ADD MSTORE DUP2 DUP2 PUSH2 0x64A ADD MSTORE PUSH2 0x14E5 ADD MSTORE PUSH2 0x202D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x269 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x780B9737 GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xBF1AD7E0 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD72B11BD GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD72B11BD EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xDB7A4605 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xF9428F38 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xFDB20CCB EQ PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF1AD7E0 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xC7574839 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xD486D129 EQ PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x90534F24 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x90534F24 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x9576A374 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x993EB1C5 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xB7E26A2E EQ PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x780B9737 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x7B5C7F03 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x4A0CED96 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x4A0CED96 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x65ED6E23 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x74300378 EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x435263EF EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x231 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x254800D4 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x2AF44592 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x33127B0D EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x197D972 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x553BE1E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x279 PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x279 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF1 JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x363 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH2 0x363 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x3EA PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x363 PUSH2 0xADE JUMP JUMPDEST PUSH2 0x363 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39E JUMP JUMPDEST PUSH2 0x279 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST PUSH2 0x363 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x13DF JUMP JUMPDEST PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH2 0x279 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x524 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 SWAP1 SWAP7 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 DUP5 AND SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x597 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x5D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x160E JUMP JUMPDEST PUSH2 0x279 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x604 PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SUB PUSH2 0x642 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E TIMESTAMP PUSH32 0x0 PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x697 PUSH4 0x1E13380 PUSH2 0x691 DUP5 DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x166D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1679 JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x6A7 JUMPI POP DUP2 SLOAD JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x6B7 SWAP1 DUP3 SWAP1 PUSH2 0x1661 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6CF SWAP1 PUSH2 0x1E47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FB SWAP1 PUSH2 0x1E47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x760 DUP2 DUP6 DUP6 PUSH2 0x1685 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79C PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x7A4 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C65766572616765206D757374206265206174206C6561737420317800000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST DUP3 PUSH2 0x84E CALLER PUSH2 0xAC0 JUMP JUMPDEST LT ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89F DUP6 DUP6 PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x8EE JUMPI PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0xAE5A72E837B1C61D8F56D35C16816D1E29CC1A1E858253419499DDA337EA03E3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST SWAP1 POP PUSH2 0x78B PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x902 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x90A PUSH2 0x184F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x914 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x91C PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x924 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x974 DUP3 DUP3 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x97E PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x98A PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x992 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x9BC CALLER DUP3 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9FC PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH1 0x64 PUSH2 0xA1D PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x32 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xA3F PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x14 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xA61 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0xF PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xA83 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0xA PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xAA5 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x5 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x766 JUMP JUMPDEST PUSH2 0xAE6 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x90A PUSH1 0x0 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0xB00 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C6F636B65642062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB99 SWAP1 DUP3 PUSH2 0x1661 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0xBB6 SWAP1 DUP3 PUSH2 0x1661 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH2 0xBC3 CALLER DUP3 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x86E5F036736269C50194228317F229B5684D89D9DB959C604A1EF646D6CD6CA9 SWAP1 PUSH1 0x20 ADD PUSH2 0x9EA JUMP JUMPDEST PUSH2 0xBFD PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642077616C6C65742061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC95 SWAP1 PUSH8 0x7472656173757279 PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0x8 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xD49 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP5 AND DUP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP3 SLOAD DUP2 SSTORE PUSH1 0x1 SWAP3 DUP4 ADD SLOAD SWAP1 DUP4 ADD SSTORE DUP7 SLOAD DUP7 SWAP1 DIV SWAP1 SWAP5 AND DUP4 MSTORE SWAP1 DUP3 KECCAK256 DUP3 DUP2 SSTORE ADD SSTORE DUP3 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP2 MUL OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH9 0x65636F73797374656D PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x29 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xE03 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP5 AND DUP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP3 SLOAD DUP2 SSTORE PUSH1 0x1 SWAP3 DUP4 ADD SLOAD SWAP1 DUP4 ADD SSTORE DUP6 SLOAD SWAP1 SWAP5 AND DUP4 MSTORE SWAP1 DUP3 KECCAK256 DUP3 DUP2 SSTORE ADD SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH9 0x636F6D6D756E697479 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x29 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xE85 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xE65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH9 0x6C6971756964697479 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x29 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xF07 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xEE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH7 0x72657365727665 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xF87 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xF67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642077616C6C65742074797065 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH32 0x6FF3A4003B90BE84595BEB5F6ACB9D54F88BD3E6DD4887CA67E53DC9645465EA DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF6 SWAP3 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x5 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x90A PUSH2 0x195F JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x14 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1058 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x1060 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST DUP1 PUSH2 0x108A CALLER PUSH2 0xAC0 JUMP JUMPDEST LT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x10D9 CALLER DUP3 PUSH2 0x18D7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10F3 SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0x1110 SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x6B4F55697B6DDAD583B377BB7AB9D921AFC2EB9FFA0B12FBCEA5AE24A7A34E6A SWAP1 PUSH1 0x20 ADD PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6CF SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0xF PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1176 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1182 DUP5 DUP5 PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0x94E83CA767B0D965638D27B68A75EA07CD5C28C86299B5C7E02D2D5F1EE9AFF2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11D9 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x11E1 PUSH2 0x1775 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207265636F7665722051344120746F6B656E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12CA SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737903A37B5B2B739903A37903932B1B7BB32B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1362 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1AC506E936E7F02F4036DBE44708F5E8D72AF9ACE8745A29FD391481A8FBCB87 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13CC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x97E PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x32 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x13FF PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x1407 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ DUP1 PUSH2 0x1435 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081D995CDD1A5B99C81DD85B1B195D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD GT PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F20746F6B656E7320746F2072656C65617365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1509 TIMESTAMP PUSH32 0x0 PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x152C PUSH4 0x1E13380 PUSH2 0x691 DUP5 DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x166D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x153C JUMPI POP DUP2 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x1555 DUP5 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x1661 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x159E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F20746F6B656E732072656C65617361626C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x15AD SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SSTORE PUSH2 0x15BD ADDRESS DUP7 DUP4 PUSH2 0x1716 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4AD7799F99297062CEA73C5A21D23A1FCF49F6A1957F7409712E555A0DCD1E1D DUP3 PUSH1 0x40 MLOAD PUSH2 0x15F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x9FC PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1616 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x9FC DUP2 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0xA PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP3 DUP5 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP3 DUP5 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP3 DUP5 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0x1692 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x1710 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x1710 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x19A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1740 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x176A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x1692 DUP4 DUP4 DUP4 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x17C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x760 DUP2 DUP6 DUP6 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x1857 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18CB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x97E PUSH1 0x0 DUP4 DUP4 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1901 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x97E DUP3 PUSH1 0x0 DUP4 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1967 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1884 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP3 DUP5 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x19D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x19FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1710 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A6F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1AA8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A9D SWAP2 SWAP1 PUSH2 0x1FE4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1B1A SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B36 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B9A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78B DUP3 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C42 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C2A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1C63 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x78B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA6 DUP4 PUSH2 0x1BF0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CD2 DUP5 PUSH2 0x1BF0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CE0 PUSH1 0x20 DUP6 ADD PUSH2 0x1BF0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D0F DUP5 PUSH2 0x1BF0 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA8 JUMPI PUSH2 0x1DA8 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1DD7 JUMPI PUSH2 0x1DD7 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x1DEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP PUSH2 0x1E14 PUSH1 0x20 DUP5 ADD PUSH2 0x1BF0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E39 DUP4 PUSH2 0x1BF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E14 PUSH1 0x20 DUP5 ADD PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1E5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x766 JUMPI PUSH2 0x766 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F1E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1F35 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1C27 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x53616D652077616C6C65742061646472657373 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1F7F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C4B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x766 JUMPI PUSH2 0x766 PUSH2 0x1ED4 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x766 JUMPI PUSH2 0x766 PUSH2 0x1ED4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL DUP5 0xE9 DUP14 0x2F CODESIZE SWAP4 PUSH21 0xB4BAD94C2D07ACCF52FB3A7D3F3BB13ACD4D85349F SWAP4 RETURN GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "562:13796:10:-:0;;;3469:1412;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3724:12;1582:113:4;;;;;;;;;;;;;-1:-1:-1;;;1582:113:4;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:4;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:4;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3624:51:11;3597:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1717:1:3;1822:7;:22;997:7:2;:15;;-1:-1:-1;;997:15:2;;;-1:-1:-1;;;;;3756:29:10;::::2;3748:65;;;::::0;-1:-1:-1;;;3748:65:10;;3888:2:11;3748:65:10::2;::::0;::::2;3870:21:11::0;3927:2;3907:18;;;3900:30;3966:25;3946:18;;;3939:53;4009:18;;3748:65:10::2;3686:347:11::0;3748:65:10::2;-1:-1:-1::0;;;;;3831:30:10;::::2;3823:67;;;::::0;-1:-1:-1;;;3823:67:10;;4240:2:11;3823:67:10::2;::::0;::::2;4222:21:11::0;4279:2;4259:18;;;4252:30;4318:26;4298:18;;;4291:54;4362:18;;3823:67:10::2;4038:348:11::0;3823:67:10::2;-1:-1:-1::0;;;;;3908:30:10;::::2;3900:67;;;::::0;-1:-1:-1;;;3900:67:10;;4593:2:11;3900:67:10::2;::::0;::::2;4575:21:11::0;4632:2;4612:18;;;4605:30;4671:26;4651:18;;;4644:54;4715:18;;3900:67:10::2;4391:348:11::0;3900:67:10::2;-1:-1:-1::0;;;;;3985:30:10;::::2;3977:67;;;::::0;-1:-1:-1;;;3977:67:10;;4946:2:11;3977:67:10::2;::::0;::::2;4928:21:11::0;4985:2;4965:18;;;4958:30;5024:26;5004:18;;;4997:54;5068:18;;3977:67:10::2;4744:348:11::0;3977:67:10::2;-1:-1:-1::0;;;;;4062:28:10;::::2;4054:63;;;::::0;-1:-1:-1;;;4054:63:10;;5299:2:11;4054:63:10::2;::::0;::::2;5281:21:11::0;5338:2;5318:18;;;5311:30;5377:24;5357:18;;;5350:52;5419:18;;4054:63:10::2;5097:346:11::0;4054:63:10::2;4128:14;:32:::0;;-1:-1:-1;;;;;;4128:32:10::2;;-1:-1:-1::0;;;;;4128:32:10;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;;4170:15:::2;:34:::0;;-1:-1:-1;;;;;;4170:34:10;;::::2;::::0;;::::2;;::::0;;;4214:15:::2;:34:::0;;;::::2;::::0;;::::2;;::::0;;4258:15:::2;:34:::0;;;::::2;::::0;;::::2;;::::0;;4302:13:::2;:30:::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;4358:15:::2;4343:30;::::0;4479:39:::2;::::0;;;;::::2;::::0;;;;944:3:::2;923:17;801:22;938:2;923:17;:::i;:::-;922:25;;;;:::i;:::-;4479:39:::0;;4516:1:::2;4479:39;::::0;;::::2;::::0;;;4461:14:::2;::::0;::::2;::::0;::::2;-1:-1:-1::0;;;;;4461:14:10::2;4444:32:::0;;:16:::2;:32:::0;;;;;;;:74;;;;;;;::::2;::::0;4461:14:::2;4444:74:::0;;::::2;::::0;;;;4564:40;;;;::::2;::::0;;;;1070:3:::2;1049:17;801:22;1064:2;1049:17;:::i;:::-;1048:25;;;;:::i;:::-;4564:40:::0;;4602:1:::2;4564:40;::::0;;::::2;::::0;;;4545:15:::2;::::0;-1:-1:-1;;;;;4545:15:10::2;4528:33:::0;;:16:::2;:33:::0;;;;;:76;;;;;::::2;::::0;4545:15;4528:76;;::::2;::::0;4652:64:::2;4666:4;1070:3;1049:17;801:22;1064:2;1049:17;:::i;:::-;1048:25;;;;:::i;:::-;944:3;923:17;801:22;938:2;923:17;:::i;:::-;922:25;;;;:::i;:::-;4673:42;;;;:::i;:::-;4652:5;:64::i;:::-;4732:15;::::0;4726:44:::2;::::0;-1:-1:-1;;;;;4732:15:10::2;1196:3;1175:17;801:22;1190:2;1175:17;:::i;:::-;1174:25;;;;:::i;4726:44::-;4786:15;::::0;;4780:44:::2;::::0;-1:-1:-1;;;;;4786:15:10;;::::2;::::0;1323:3:::2;::::0;1302:17:::2;::::0;801:22:::2;::::0;1302:17:::2;:::i;4780:44::-;4840:13;::::0;4834:40:::2;::::0;-1:-1:-1;;;;;4840:13:10::2;1443:3;1423:16;801:22;1438:1;1423:16;:::i;4834:40::-;3469:1412:::0;;;;;;562:13796;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7439:208:4:-;-1:-1:-1;;;;;7509:21:4;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:4;;7582:1;7553:32;;;3624:51:11;3597:18;;7553:32:4;3478:203:11;7505:91:4;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:4;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:4;;-1:-1:-1;6074:540:4;;-1:-1:-1;;;;;6288:15:4;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:4;;-1:-1:-1;;;;;6325:32:11;;6367:50:4;;;6307:51:11;6374:18;;;6367:34;;;6417:18;;;6410:34;;;6280:18;;6367:50:4;6105:345:11;6317:115:4;-1:-1:-1;;;;;6552:15:4;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:4;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:4;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:4;7073:4;-1:-1:-1;;;;;7064:25:4;;7083:5;7064:25;;;;6601::11;;6589:2;6574:18;;6455:177;7064:25:4;;;;;;;;5989:1107;;;:::o;14:177:11:-;93:13;;-1:-1:-1;;;;;135:31:11;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:636::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;639:49;684:2;673:9;669:18;639:49;:::i;:::-;629:59;;707:50;752:3;741:9;737:19;707:50;:::i;:::-;697:60;;776:50;821:3;810:9;806:19;776:50;:::i;:::-;766:60;;196:636;;;;;;;;:::o;837:127::-;898:10;893:3;889:20;886:1;879:31;929:4;926:1;919:15;953:4;950:1;943:15;969:380;1048:1;1044:12;;;;1091;;;1112:61;;1166:4;1158:6;1154:17;1144:27;;1112:61;1219:2;1211:6;1208:14;1188:18;1185:38;1182:161;;1265:10;1260:3;1256:20;1253:1;1246:31;1300:4;1297:1;1290:15;1328:4;1325:1;1318:15;1182:161;;969:380;;;:::o;1480:518::-;1582:2;1577:3;1574:11;1571:421;;;1618:5;1615:1;1608:16;1662:4;1659:1;1649:18;1732:2;1720:10;1716:19;1713:1;1709:27;1703:4;1699:38;1768:4;1756:10;1753:20;1750:47;;;-1:-1:-1;1791:4:11;1750:47;1846:2;1841:3;1837:12;1834:1;1830:20;1824:4;1820:31;1810:41;;1901:81;1919:2;1912:5;1909:13;1901:81;;;1978:1;1964:16;;1945:1;1934:13;1901:81;;;1905:3;;1571:421;1480:518;;;:::o;2174:1299::-;2294:10;;-1:-1:-1;;;;;2316:30:11;;2313:56;;;2349:18;;:::i;:::-;2378:97;2468:6;2428:38;2460:4;2454:11;2428:38;:::i;:::-;2422:4;2378:97;:::i;:::-;2524:4;2555:2;2544:14;;2572:1;2567:649;;;;3260:1;3277:6;3274:89;;;-1:-1:-1;3329:19:11;;;3323:26;3274:89;-1:-1:-1;;2131:1:11;2127:11;;;2123:24;2119:29;2109:40;2155:1;2151:11;;;2106:57;3376:81;;2537:930;;2567:649;1427:1;1420:14;;;1464:4;1451:18;;-1:-1:-1;;2603:20:11;;;2721:222;2735:7;2732:1;2729:14;2721:222;;;2817:19;;;2811:26;2796:42;;2924:4;2909:20;;;;2877:1;2865:14;;;;2751:12;2721:222;;;2725:3;2971:6;2962:7;2959:19;2956:201;;;3032:19;;;3026:26;-1:-1:-1;;3115:1:11;3111:14;;;3127:3;3107:24;3103:37;3099:42;3084:58;3069:74;;2956:201;-1:-1:-1;;;;3203:1:11;3187:14;;;3183:22;3170:36;;-1:-1:-1;2174:1299:11:o;5448:127::-;5509:10;5504:3;5500:20;5497:1;5490:31;5540:4;5537:1;5530:15;5564:4;5561:1;5554:15;5580:168;5653:9;;;5684;;5701:15;;;5695:22;;5681:37;5671:71;;5722:18;;:::i;:::-;5580:168;;;;:::o;5753:217::-;5793:1;5819;5809:132;;5863:10;5858:3;5854:20;5851:1;5844:31;5898:4;5895:1;5888:15;5926:4;5923:1;5916:15;5809:132;-1:-1:-1;5955:9:11;;5753:217::o;5975:125::-;6040:9;;;6061:10;;;6058:36;;;6074:18;;:::i;6455:177::-;562:13796:10;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@COMMUNITY_ALLOCATION_1576": {
									"entryPoint": 4436,
									"id": 1576,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ECOSYSTEM_ALLOCATION_1567": {
									"entryPoint": 4152,
									"id": 1567,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LIQUIDITY_ALLOCATION_1585": {
									"entryPoint": 5705,
									"id": 1585,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@RESERVE_ALLOCATION_1594": {
									"entryPoint": 4099,
									"id": 1594,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_1549": {
									"entryPoint": null,
									"id": 1549,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TREASURY_ALLOCATION_1558": {
									"entryPoint": 5087,
									"id": 1558,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@VESTING_PERIOD_1598": {
									"entryPoint": null,
									"id": 1598,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_863": {
									"entryPoint": 5765,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_923": {
									"entryPoint": 6568,
									"id": 923,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_845": {
									"entryPoint": 6359,
									"id": 845,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6178,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_812": {
									"entryPoint": 6305,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1088": {
									"entryPoint": null,
									"id": 1088,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_445": {
									"entryPoint": null,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_437": {
									"entryPoint": 6005,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_375": {
									"entryPoint": 6495,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_348": {
									"entryPoint": 6094,
									"id": 348,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_359": {
									"entryPoint": 7079,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_971": {
									"entryPoint": 5783,
									"id": 971,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6413,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_702": {
									"entryPoint": 5910,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_391": {
									"entryPoint": 6223,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 6781,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1282": {
									"entryPoint": 6556,
									"id": 1282,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_599": {
									"entryPoint": null,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_623": {
									"entryPoint": 1874,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_2589": {
									"entryPoint": 2752,
									"id": 2589,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_558": {
									"entryPoint": null,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1940": {
									"entryPoint": 2434,
									"id": 1940,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@communityWallet_1608": {
									"entryPoint": null,
									"id": 1608,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_536": {
									"entryPoint": null,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1327": {
									"entryPoint": 5753,
									"id": 1327,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ecosystemWallet_1606": {
									"entryPoint": null,
									"id": 1606,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyRecoverTokens_2007": {
									"entryPoint": 4561,
									"id": 2007,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getAllocations_1848": {
									"entryPoint": 2559,
									"id": 1848,
									"parameterSlots": 0,
									"returnSlots": 5
								},
								"@getReleasableVesting_2464": {
									"entryPoint": 1561,
									"id": 2464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalSupply_1825": {
									"entryPoint": null,
									"id": 1825,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getWallets_1871": {
									"entryPoint": null,
									"id": 1871,
									"parameterSlots": 0,
									"returnSlots": 5
								},
								"@liquidityWallet_1610": {
									"entryPoint": null,
									"id": 1610,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockForDAO_2238": {
									"entryPoint": 4176,
									"id": 2238,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@lockedForDAO_1617": {
									"entryPoint": null,
									"id": 1617,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1909": {
									"entryPoint": 2316,
									"id": 1909,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1312": {
									"entryPoint": 5741,
									"id": 1312,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_518": {
									"entryPoint": 1728,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2599": {
									"entryPoint": 4136,
									"id": 2599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@releaseVesting_2405": {
									"entryPoint": 5111,
									"id": 2405,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2782,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveWallet_1612": {
									"entryPoint": null,
									"id": 1612,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1297": {
									"entryPoint": 5729,
									"id": 1297,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_527": {
									"entryPoint": 4421,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalLockedForDAO_1620": {
									"entryPoint": null,
									"id": 1620,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_545": {
									"entryPoint": null,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_655": {
									"entryPoint": 1900,
									"id": 655,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5646,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferWithLeverage_2536": {
									"entryPoint": 1938,
									"id": 2536,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_2572": {
									"entryPoint": 4460,
									"id": 2572,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_582": {
									"entryPoint": 6164,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasuryWallet_1604": {
									"entryPoint": null,
									"id": 1604,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unlockFromDAO_2298": {
									"entryPoint": 2800,
									"id": 2298,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2609": {
									"entryPoint": 2298,
									"id": 2609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateWallet_2178": {
									"entryPoint": 3061,
									"id": 2178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@vestingSchedules_1632": {
									"entryPoint": null,
									"id": 1632,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vestingStart_1601": {
									"entryPoint": null,
									"id": 1601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 7409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address": {
									"entryPoint": 7507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 7243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_6697469966e6db36e8e7163442550033ec984b278e48453a9cf46343df642f53__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_9c28c0e7f24473b02f05ded2aef7a9890c81a46c38fb26b940624dbb4dd591dd__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_bb7d9f8cddc6f064ba72d0e3c1e53eb67867dd8506fa4f5d61c86189caca8ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_cbd818ad4dd6f1ff9338c2bb62480241424dd9a65f9f3284101a01cd099ad8ac__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_f712c2fa585715e22c7fcc833629ce4482ad96496ecd08f3a14847183c4ef4ee__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_437ccfba16f7a1c3635c6fa73b676800f4140c9683771211c159af154a2c5463__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5e5f891013d108cb382059cf5e60ad3034ca479aedc7a83dd619e3cb9166f546__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6e2c7effb3a6763254027cb85bfc985f467b0837e322283dece80d291243b39f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3821712960548e907ae123c73adb4ca463ffbf181b8c12df741f44cc835aa50__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7e7a53f0698cf3ba0c5878574d3a5c4a2b03765bd52531f11ace562963d8d19__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dff176fdc0c8e1f4d3d67d0b53a5f3f262b5f861a6564381d034c8b7732a3622__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7892,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15809:11",
										"nodeType": "YulBlock",
										"src": "0:15809:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:11",
													"nodeType": "YulBlock",
													"src": "115:76:11",
													"statements": [
														{
															"nativeSrc": "125:26:11",
															"nodeType": "YulAssignment",
															"src": "125:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:11",
																		"nodeType": "YulLiteral",
																		"src": "148:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:11"
																},
																"nativeSrc": "133:18:11",
																"nodeType": "YulFunctionCall",
																"src": "133:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:11"
																},
																"nativeSrc": "160:25:11",
																"nodeType": "YulFunctionCall",
																"src": "160:25:11"
															},
															"nativeSrc": "160:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:11",
														"nodeType": "YulTypedName",
														"src": "84:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:11",
														"nodeType": "YulTypedName",
														"src": "95:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:11",
														"nodeType": "YulTypedName",
														"src": "106:4:11",
														"type": ""
													}
												],
												"src": "14:177:11"
											},
											{
												"body": {
													"nativeSrc": "245:124:11",
													"nodeType": "YulBlock",
													"src": "245:124:11",
													"statements": [
														{
															"nativeSrc": "255:29:11",
															"nodeType": "YulAssignment",
															"src": "255:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "277:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "264:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:11"
																},
																"nativeSrc": "264:20:11",
																"nodeType": "YulFunctionCall",
																"src": "264:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "255:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "347:16:11",
																"nodeType": "YulBlock",
																"src": "347:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "356:1:11",
																					"nodeType": "YulLiteral",
																					"src": "356:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "359:1:11",
																					"nodeType": "YulLiteral",
																					"src": "359:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "349:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:11"
																			},
																			"nativeSrc": "349:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:11"
																		},
																		"nativeSrc": "349:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "306:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "317:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "332:3:11",
																										"nodeType": "YulLiteral",
																										"src": "332:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "337:1:11",
																										"nodeType": "YulLiteral",
																										"src": "337:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "328:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:11"
																								},
																								"nativeSrc": "328:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "341:1:11",
																								"nodeType": "YulLiteral",
																								"src": "341:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "324:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:11"
																						},
																						"nativeSrc": "324:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "313:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:11"
																				},
																				"nativeSrc": "313:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "303:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:11"
																		},
																		"nativeSrc": "303:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "296:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:11"
																},
																"nativeSrc": "296:50:11",
																"nodeType": "YulFunctionCall",
																"src": "296:50:11"
															},
															"nativeSrc": "293:70:11",
															"nodeType": "YulIf",
															"src": "293:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "196:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "224:6:11",
														"nodeType": "YulTypedName",
														"src": "224:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "235:5:11",
														"nodeType": "YulTypedName",
														"src": "235:5:11",
														"type": ""
													}
												],
												"src": "196:173:11"
											},
											{
												"body": {
													"nativeSrc": "444:116:11",
													"nodeType": "YulBlock",
													"src": "444:116:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "490:16:11",
																"nodeType": "YulBlock",
																"src": "490:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "499:1:11",
																					"nodeType": "YulLiteral",
																					"src": "499:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:11",
																					"nodeType": "YulLiteral",
																					"src": "502:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "492:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:11"
																			},
																			"nativeSrc": "492:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "492:12:11"
																		},
																		"nativeSrc": "492:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "492:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "465:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "465:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "474:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "474:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "461:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "461:3:11"
																		},
																		"nativeSrc": "461:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "461:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "486:2:11",
																		"nodeType": "YulLiteral",
																		"src": "486:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "457:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:11"
																},
																"nativeSrc": "457:32:11",
																"nodeType": "YulFunctionCall",
																"src": "457:32:11"
															},
															"nativeSrc": "454:52:11",
															"nodeType": "YulIf",
															"src": "454:52:11"
														},
														{
															"nativeSrc": "515:39:11",
															"nodeType": "YulAssignment",
															"src": "515:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "544:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "525:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "525:18:11"
																},
																"nativeSrc": "525:29:11",
																"nodeType": "YulFunctionCall",
																"src": "525:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "515:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "374:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "410:9:11",
														"nodeType": "YulTypedName",
														"src": "410:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "421:7:11",
														"nodeType": "YulTypedName",
														"src": "421:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "433:6:11",
														"nodeType": "YulTypedName",
														"src": "433:6:11",
														"type": ""
													}
												],
												"src": "374:186:11"
											},
											{
												"body": {
													"nativeSrc": "631:184:11",
													"nodeType": "YulBlock",
													"src": "631:184:11",
													"statements": [
														{
															"nativeSrc": "641:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "641:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "650:1:11",
																"nodeType": "YulLiteral",
																"src": "650:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "645:1:11",
																	"nodeType": "YulTypedName",
																	"src": "645:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "710:63:11",
																"nodeType": "YulBlock",
																"src": "710:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "735:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "735:3:11"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "740:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "740:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "731:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "731:3:11"
																					},
																					"nativeSrc": "731:11:11",
																					"nodeType": "YulFunctionCall",
																					"src": "731:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "754:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "754:3:11"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "759:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "759:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "750:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "750:3:11"
																							},
																							"nativeSrc": "750:11:11",
																							"nodeType": "YulFunctionCall",
																							"src": "750:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "744:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "744:5:11"
																					},
																					"nativeSrc": "744:18:11",
																					"nodeType": "YulFunctionCall",
																					"src": "744:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "724:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "724:6:11"
																			},
																			"nativeSrc": "724:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "724:39:11"
																		},
																		"nativeSrc": "724:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "724:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "671:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "671:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "674:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "674:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "668:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "668:2:11"
																},
																"nativeSrc": "668:13:11",
																"nodeType": "YulFunctionCall",
																"src": "668:13:11"
															},
															"nativeSrc": "660:113:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "682:19:11",
																"nodeType": "YulBlock",
																"src": "682:19:11",
																"statements": [
																	{
																		"nativeSrc": "684:15:11",
																		"nodeType": "YulAssignment",
																		"src": "684:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "693:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "693:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "696:2:11",
																					"nodeType": "YulLiteral",
																					"src": "696:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "689:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "689:3:11"
																			},
																			"nativeSrc": "689:10:11",
																			"nodeType": "YulFunctionCall",
																			"src": "689:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "684:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "684:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "664:3:11",
																"nodeType": "YulBlock",
																"src": "664:3:11",
																"statements": []
															},
															"src": "660:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "793:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "793:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "798:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "798:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:11"
																		},
																		"nativeSrc": "789:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "789:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "807:1:11",
																		"nodeType": "YulLiteral",
																		"src": "807:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:11"
																},
																"nativeSrc": "782:27:11",
																"nodeType": "YulFunctionCall",
																"src": "782:27:11"
															},
															"nativeSrc": "782:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "782:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "565:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "609:3:11",
														"nodeType": "YulTypedName",
														"src": "609:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "614:3:11",
														"nodeType": "YulTypedName",
														"src": "614:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "619:6:11",
														"nodeType": "YulTypedName",
														"src": "619:6:11",
														"type": ""
													}
												],
												"src": "565:250:11"
											},
											{
												"body": {
													"nativeSrc": "870:221:11",
													"nodeType": "YulBlock",
													"src": "870:221:11",
													"statements": [
														{
															"nativeSrc": "880:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "880:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "900:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "900:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "894:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "894:5:11"
																},
																"nativeSrc": "894:12:11",
																"nodeType": "YulFunctionCall",
																"src": "894:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "884:6:11",
																	"nodeType": "YulTypedName",
																	"src": "884:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "922:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "922:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "927:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "927:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "915:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:11"
																},
																"nativeSrc": "915:19:11",
																"nodeType": "YulFunctionCall",
																"src": "915:19:11"
															},
															"nativeSrc": "915:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "915:19:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "982:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "982:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:4:11",
																				"nodeType": "YulLiteral",
																				"src": "989:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "978:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:11"
																		},
																		"nativeSrc": "978:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "978:16:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1000:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1000:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1005:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1005:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "996:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "996:3:11"
																		},
																		"nativeSrc": "996:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "996:14:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1012:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "943:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "943:34:11"
																},
																"nativeSrc": "943:76:11",
																"nodeType": "YulFunctionCall",
																"src": "943:76:11"
															},
															"nativeSrc": "943:76:11",
															"nodeType": "YulExpressionStatement",
															"src": "943:76:11"
														},
														{
															"nativeSrc": "1028:57:11",
															"nodeType": "YulAssignment",
															"src": "1028:57:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1043:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1043:3:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1056:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "1056:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1064:2:11",
																								"nodeType": "YulLiteral",
																								"src": "1064:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1052:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1052:3:11"
																						},
																						"nativeSrc": "1052:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1052:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1073:2:11",
																								"nodeType": "YulLiteral",
																								"src": "1073:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1069:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1069:3:11"
																						},
																						"nativeSrc": "1069:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1069:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1048:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1048:3:11"
																				},
																				"nativeSrc": "1048:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1048:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1039:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:11"
																		},
																		"nativeSrc": "1039:39:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1039:39:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1080:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1080:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1035:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:11"
																},
																"nativeSrc": "1035:50:11",
																"nodeType": "YulFunctionCall",
																"src": "1035:50:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1028:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1028:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "820:271:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "847:5:11",
														"nodeType": "YulTypedName",
														"src": "847:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "854:3:11",
														"nodeType": "YulTypedName",
														"src": "854:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "862:3:11",
														"nodeType": "YulTypedName",
														"src": "862:3:11",
														"type": ""
													}
												],
												"src": "820:271:11"
											},
											{
												"body": {
													"nativeSrc": "1217:99:11",
													"nodeType": "YulBlock",
													"src": "1217:99:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1234:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1234:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1227:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:11"
																},
																"nativeSrc": "1227:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1227:21:11"
															},
															"nativeSrc": "1227:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "1227:21:11"
														},
														{
															"nativeSrc": "1257:53:11",
															"nodeType": "YulAssignment",
															"src": "1257:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1283:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1283:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1295:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1295:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1306:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1306:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1291:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1291:3:11"
																		},
																		"nativeSrc": "1291:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1291:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1265:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1265:17:11"
																},
																"nativeSrc": "1265:45:11",
																"nodeType": "YulFunctionCall",
																"src": "1265:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1096:220:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1186:9:11",
														"nodeType": "YulTypedName",
														"src": "1186:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1197:6:11",
														"nodeType": "YulTypedName",
														"src": "1197:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1208:4:11",
														"nodeType": "YulTypedName",
														"src": "1208:4:11",
														"type": ""
													}
												],
												"src": "1096:220:11"
											},
											{
												"body": {
													"nativeSrc": "1408:213:11",
													"nodeType": "YulBlock",
													"src": "1408:213:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1454:16:11",
																"nodeType": "YulBlock",
																"src": "1454:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1463:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1463:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1466:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1466:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1456:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1456:6:11"
																			},
																			"nativeSrc": "1456:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1456:12:11"
																		},
																		"nativeSrc": "1456:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1456:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1429:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1429:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1438:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1438:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1425:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1425:3:11"
																		},
																		"nativeSrc": "1425:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1425:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1450:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1450:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1421:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1421:3:11"
																},
																"nativeSrc": "1421:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1421:32:11"
															},
															"nativeSrc": "1418:52:11",
															"nodeType": "YulIf",
															"src": "1418:52:11"
														},
														{
															"nativeSrc": "1479:39:11",
															"nodeType": "YulAssignment",
															"src": "1479:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1508:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1508:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1489:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1489:18:11"
																},
																"nativeSrc": "1489:29:11",
																"nodeType": "YulFunctionCall",
																"src": "1489:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1479:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1479:6:11"
																}
															]
														},
														{
															"nativeSrc": "1527:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1527:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1540:1:11",
																"nodeType": "YulLiteral",
																"src": "1540:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1531:5:11",
																	"nodeType": "YulTypedName",
																	"src": "1531:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1550:41:11",
															"nodeType": "YulAssignment",
															"src": "1550:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1587:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:11"
																		},
																		"nativeSrc": "1572:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1559:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1559:12:11"
																},
																"nativeSrc": "1559:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1559:32:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1550:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1550:5:11"
																}
															]
														},
														{
															"nativeSrc": "1600:15:11",
															"nodeType": "YulAssignment",
															"src": "1600:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1610:5:11",
																"nodeType": "YulIdentifier",
																"src": "1610:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1600:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1321:300:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1377:7:11",
														"nodeType": "YulTypedName",
														"src": "1377:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1389:6:11",
														"nodeType": "YulTypedName",
														"src": "1389:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1397:6:11",
														"nodeType": "YulTypedName",
														"src": "1397:6:11",
														"type": ""
													}
												],
												"src": "1321:300:11"
											},
											{
												"body": {
													"nativeSrc": "1721:92:11",
													"nodeType": "YulBlock",
													"src": "1721:92:11",
													"statements": [
														{
															"nativeSrc": "1731:26:11",
															"nodeType": "YulAssignment",
															"src": "1731:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1743:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1743:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1754:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1754:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1739:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1739:3:11"
																},
																"nativeSrc": "1739:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1739:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1731:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1731:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1773:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1773:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1798:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1798:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1791:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "1791:6:11"
																				},
																				"nativeSrc": "1791:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1791:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1784:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1784:6:11"
																		},
																		"nativeSrc": "1784:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1766:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1766:6:11"
																},
																"nativeSrc": "1766:41:11",
																"nodeType": "YulFunctionCall",
																"src": "1766:41:11"
															},
															"nativeSrc": "1766:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "1766:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1626:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1690:9:11",
														"nodeType": "YulTypedName",
														"src": "1690:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1701:6:11",
														"nodeType": "YulTypedName",
														"src": "1701:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1712:4:11",
														"nodeType": "YulTypedName",
														"src": "1712:4:11",
														"type": ""
													}
												],
												"src": "1626:187:11"
											},
											{
												"body": {
													"nativeSrc": "1922:270:11",
													"nodeType": "YulBlock",
													"src": "1922:270:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1968:16:11",
																"nodeType": "YulBlock",
																"src": "1968:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1977:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1977:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1980:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1980:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1970:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1970:6:11"
																			},
																			"nativeSrc": "1970:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1970:12:11"
																		},
																		"nativeSrc": "1970:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1970:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1943:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1943:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1952:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1939:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1939:3:11"
																		},
																		"nativeSrc": "1939:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1939:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1964:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1964:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1935:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1935:3:11"
																},
																"nativeSrc": "1935:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1935:32:11"
															},
															"nativeSrc": "1932:52:11",
															"nodeType": "YulIf",
															"src": "1932:52:11"
														},
														{
															"nativeSrc": "1993:39:11",
															"nodeType": "YulAssignment",
															"src": "1993:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2022:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2022:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2003:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2003:18:11"
																},
																"nativeSrc": "2003:29:11",
																"nodeType": "YulFunctionCall",
																"src": "2003:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1993:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:6:11"
																}
															]
														},
														{
															"nativeSrc": "2041:48:11",
															"nodeType": "YulAssignment",
															"src": "2041:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2074:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2074:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2085:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2085:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2070:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2070:3:11"
																		},
																		"nativeSrc": "2070:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2070:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:11"
																},
																"nativeSrc": "2051:38:11",
																"nodeType": "YulFunctionCall",
																"src": "2051:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2041:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:11"
																}
															]
														},
														{
															"nativeSrc": "2098:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2098:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2111:1:11",
																"nodeType": "YulLiteral",
																"src": "2111:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2102:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2121:41:11",
															"nodeType": "YulAssignment",
															"src": "2121:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2147:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2158:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2143:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:11"
																		},
																		"nativeSrc": "2143:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2130:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:11"
																},
																"nativeSrc": "2130:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2130:32:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2121:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2121:5:11"
																}
															]
														},
														{
															"nativeSrc": "2171:15:11",
															"nodeType": "YulAssignment",
															"src": "2171:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2181:5:11",
																"nodeType": "YulIdentifier",
																"src": "2181:5:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2171:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2171:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1818:374:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1872:9:11",
														"nodeType": "YulTypedName",
														"src": "1872:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1883:7:11",
														"nodeType": "YulTypedName",
														"src": "1883:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1895:6:11",
														"nodeType": "YulTypedName",
														"src": "1895:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1903:6:11",
														"nodeType": "YulTypedName",
														"src": "1903:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1911:6:11",
														"nodeType": "YulTypedName",
														"src": "1911:6:11",
														"type": ""
													}
												],
												"src": "1818:374:11"
											},
											{
												"body": {
													"nativeSrc": "2294:87:11",
													"nodeType": "YulBlock",
													"src": "2294:87:11",
													"statements": [
														{
															"nativeSrc": "2304:26:11",
															"nodeType": "YulAssignment",
															"src": "2304:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2316:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2316:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2327:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2327:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2312:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2312:3:11"
																},
																"nativeSrc": "2312:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2312:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2304:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2304:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2346:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2346:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2361:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2361:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2369:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2369:4:11",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2357:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:11"
																		},
																		"nativeSrc": "2357:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:17:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2339:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2339:6:11"
																},
																"nativeSrc": "2339:36:11",
																"nodeType": "YulFunctionCall",
																"src": "2339:36:11"
															},
															"nativeSrc": "2339:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "2339:36:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2197:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2263:9:11",
														"nodeType": "YulTypedName",
														"src": "2263:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2274:6:11",
														"nodeType": "YulTypedName",
														"src": "2274:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2285:4:11",
														"nodeType": "YulTypedName",
														"src": "2285:4:11",
														"type": ""
													}
												],
												"src": "2197:184:11"
											},
											{
												"body": {
													"nativeSrc": "2490:316:11",
													"nodeType": "YulBlock",
													"src": "2490:316:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2536:16:11",
																"nodeType": "YulBlock",
																"src": "2536:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2545:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2545:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2548:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2548:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2538:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2538:6:11"
																			},
																			"nativeSrc": "2538:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2538:12:11"
																		},
																		"nativeSrc": "2538:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2538:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2511:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2511:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2520:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2520:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2507:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2507:3:11"
																		},
																		"nativeSrc": "2507:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2507:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2532:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2532:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2503:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2503:3:11"
																},
																"nativeSrc": "2503:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2503:32:11"
															},
															"nativeSrc": "2500:52:11",
															"nodeType": "YulIf",
															"src": "2500:52:11"
														},
														{
															"nativeSrc": "2561:39:11",
															"nodeType": "YulAssignment",
															"src": "2561:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2590:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2590:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2571:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2571:18:11"
																},
																"nativeSrc": "2571:29:11",
																"nodeType": "YulFunctionCall",
																"src": "2571:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2561:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:11"
																}
															]
														},
														{
															"nativeSrc": "2609:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2609:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2622:1:11",
																"nodeType": "YulLiteral",
																"src": "2622:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2613:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2613:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2632:41:11",
															"nodeType": "YulAssignment",
															"src": "2632:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2658:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2658:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2669:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2669:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2654:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2654:3:11"
																		},
																		"nativeSrc": "2654:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2654:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2641:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2641:12:11"
																},
																"nativeSrc": "2641:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2641:32:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2632:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2632:5:11"
																}
															]
														},
														{
															"nativeSrc": "2682:15:11",
															"nodeType": "YulAssignment",
															"src": "2682:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2692:5:11",
																"nodeType": "YulIdentifier",
																"src": "2692:5:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2682:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:11"
																}
															]
														},
														{
															"nativeSrc": "2706:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2706:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2721:1:11",
																"nodeType": "YulLiteral",
																"src": "2721:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2710:7:11",
																	"nodeType": "YulTypedName",
																	"src": "2710:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2731:43:11",
															"nodeType": "YulAssignment",
															"src": "2731:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2759:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2770:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2770:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2755:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2755:3:11"
																		},
																		"nativeSrc": "2755:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2755:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2742:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2742:12:11"
																},
																"nativeSrc": "2742:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2742:32:11"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2731:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2731:7:11"
																}
															]
														},
														{
															"nativeSrc": "2783:17:11",
															"nodeType": "YulAssignment",
															"src": "2783:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "2793:7:11",
																"nodeType": "YulIdentifier",
																"src": "2793:7:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2783:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "2386:420:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2440:9:11",
														"nodeType": "YulTypedName",
														"src": "2440:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2451:7:11",
														"nodeType": "YulTypedName",
														"src": "2451:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2463:6:11",
														"nodeType": "YulTypedName",
														"src": "2463:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2471:6:11",
														"nodeType": "YulTypedName",
														"src": "2471:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2479:6:11",
														"nodeType": "YulTypedName",
														"src": "2479:6:11",
														"type": ""
													}
												],
												"src": "2386:420:11"
											},
											{
												"body": {
													"nativeSrc": "2881:156:11",
													"nodeType": "YulBlock",
													"src": "2881:156:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2927:16:11",
																"nodeType": "YulBlock",
																"src": "2927:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2936:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2936:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2939:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2929:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2929:6:11"
																			},
																			"nativeSrc": "2929:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2929:12:11"
																		},
																		"nativeSrc": "2929:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2929:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2902:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2902:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2911:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2911:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2898:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2898:3:11"
																		},
																		"nativeSrc": "2898:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2898:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2923:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2923:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2894:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2894:3:11"
																},
																"nativeSrc": "2894:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2894:32:11"
															},
															"nativeSrc": "2891:52:11",
															"nodeType": "YulIf",
															"src": "2891:52:11"
														},
														{
															"nativeSrc": "2952:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2952:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2965:1:11",
																"nodeType": "YulLiteral",
																"src": "2965:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2956:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2956:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2975:32:11",
															"nodeType": "YulAssignment",
															"src": "2975:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2997:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2997:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2984:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2984:12:11"
																},
																"nativeSrc": "2984:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2984:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2975:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2975:5:11"
																}
															]
														},
														{
															"nativeSrc": "3016:15:11",
															"nodeType": "YulAssignment",
															"src": "3016:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "3026:5:11",
																"nodeType": "YulIdentifier",
																"src": "3026:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3016:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2811:226:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2847:9:11",
														"nodeType": "YulTypedName",
														"src": "2847:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2858:7:11",
														"nodeType": "YulTypedName",
														"src": "2858:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2870:6:11",
														"nodeType": "YulTypedName",
														"src": "2870:6:11",
														"type": ""
													}
												],
												"src": "2811:226:11"
											},
											{
												"body": {
													"nativeSrc": "3143:102:11",
													"nodeType": "YulBlock",
													"src": "3143:102:11",
													"statements": [
														{
															"nativeSrc": "3153:26:11",
															"nodeType": "YulAssignment",
															"src": "3153:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3165:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3165:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3176:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3176:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3161:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3161:3:11"
																},
																"nativeSrc": "3161:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3161:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3153:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3153:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3195:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3195:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3210:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3210:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3226:3:11",
																								"nodeType": "YulLiteral",
																								"src": "3226:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3231:1:11",
																								"nodeType": "YulLiteral",
																								"src": "3231:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3222:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "3222:3:11"
																						},
																						"nativeSrc": "3222:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "3222:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3235:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3235:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3218:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3218:3:11"
																				},
																				"nativeSrc": "3218:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3218:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3206:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:11"
																		},
																		"nativeSrc": "3206:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3206:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3188:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:11"
																},
																"nativeSrc": "3188:51:11",
																"nodeType": "YulFunctionCall",
																"src": "3188:51:11"
															},
															"nativeSrc": "3188:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "3188:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3042:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3112:9:11",
														"nodeType": "YulTypedName",
														"src": "3112:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3123:6:11",
														"nodeType": "YulTypedName",
														"src": "3123:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3134:4:11",
														"nodeType": "YulTypedName",
														"src": "3134:4:11",
														"type": ""
													}
												],
												"src": "3042:203:11"
											},
											{
												"body": {
													"nativeSrc": "3463:250:11",
													"nodeType": "YulBlock",
													"src": "3463:250:11",
													"statements": [
														{
															"nativeSrc": "3473:27:11",
															"nodeType": "YulAssignment",
															"src": "3473:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3485:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3485:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3496:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3496:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3481:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3481:3:11"
																},
																"nativeSrc": "3481:19:11",
																"nodeType": "YulFunctionCall",
																"src": "3481:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3473:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3473:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3516:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3516:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3527:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3527:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3509:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3509:6:11"
																},
																"nativeSrc": "3509:25:11",
																"nodeType": "YulFunctionCall",
																"src": "3509:25:11"
															},
															"nativeSrc": "3509:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "3509:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3554:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3554:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3565:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3565:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3550:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3550:3:11"
																		},
																		"nativeSrc": "3550:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3550:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3570:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3570:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3543:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3543:6:11"
																},
																"nativeSrc": "3543:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3543:34:11"
															},
															"nativeSrc": "3543:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3543:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3597:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3597:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3608:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3608:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3593:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3593:3:11"
																		},
																		"nativeSrc": "3593:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3593:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3613:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3613:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3586:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3586:6:11"
																},
																"nativeSrc": "3586:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3586:34:11"
															},
															"nativeSrc": "3586:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3586:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3640:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3640:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3651:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3651:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3636:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3636:3:11"
																		},
																		"nativeSrc": "3636:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3636:18:11"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3656:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3656:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3629:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3629:6:11"
																},
																"nativeSrc": "3629:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3629:34:11"
															},
															"nativeSrc": "3629:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3629:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3683:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3683:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3694:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3694:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3679:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3679:3:11"
																		},
																		"nativeSrc": "3679:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3679:19:11"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "3700:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3700:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3672:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3672:6:11"
																},
																"nativeSrc": "3672:35:11",
																"nodeType": "YulFunctionCall",
																"src": "3672:35:11"
															},
															"nativeSrc": "3672:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "3672:35:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3250:463:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3400:9:11",
														"nodeType": "YulTypedName",
														"src": "3400:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3411:6:11",
														"nodeType": "YulTypedName",
														"src": "3411:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3419:6:11",
														"nodeType": "YulTypedName",
														"src": "3419:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3427:6:11",
														"nodeType": "YulTypedName",
														"src": "3427:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3435:6:11",
														"nodeType": "YulTypedName",
														"src": "3435:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3443:6:11",
														"nodeType": "YulTypedName",
														"src": "3443:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3454:4:11",
														"nodeType": "YulTypedName",
														"src": "3454:4:11",
														"type": ""
													}
												],
												"src": "3250:463:11"
											},
											{
												"body": {
													"nativeSrc": "3750:95:11",
													"nodeType": "YulBlock",
													"src": "3750:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3767:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3767:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3774:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3774:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3779:10:11",
																				"nodeType": "YulLiteral",
																				"src": "3779:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3770:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:11"
																		},
																		"nativeSrc": "3770:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3770:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3760:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3760:6:11"
																},
																"nativeSrc": "3760:31:11",
																"nodeType": "YulFunctionCall",
																"src": "3760:31:11"
															},
															"nativeSrc": "3760:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "3760:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3807:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3810:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3800:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:11"
																},
																"nativeSrc": "3800:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3800:15:11"
															},
															"nativeSrc": "3800:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3831:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3831:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3834:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3834:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3824:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3824:6:11"
																},
																"nativeSrc": "3824:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3824:15:11"
															},
															"nativeSrc": "3824:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3824:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3718:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3718:127:11"
											},
											{
												"body": {
													"nativeSrc": "3947:932:11",
													"nodeType": "YulBlock",
													"src": "3947:932:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3993:16:11",
																"nodeType": "YulBlock",
																"src": "3993:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4002:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4002:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4005:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4005:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3995:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3995:6:11"
																			},
																			"nativeSrc": "3995:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3995:12:11"
																		},
																		"nativeSrc": "3995:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3995:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3968:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3968:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3977:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3977:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3964:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3964:3:11"
																		},
																		"nativeSrc": "3964:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3964:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3989:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3960:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3960:3:11"
																},
																"nativeSrc": "3960:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3960:32:11"
															},
															"nativeSrc": "3957:52:11",
															"nodeType": "YulIf",
															"src": "3957:52:11"
														},
														{
															"nativeSrc": "4018:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4018:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4045:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4045:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4032:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4032:12:11"
																},
																"nativeSrc": "4032:23:11",
																"nodeType": "YulFunctionCall",
																"src": "4032:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4022:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4022:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4098:16:11",
																"nodeType": "YulBlock",
																"src": "4098:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4107:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4107:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4110:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4110:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4100:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4100:6:11"
																			},
																			"nativeSrc": "4100:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4100:12:11"
																		},
																		"nativeSrc": "4100:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4100:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4070:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4070:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4078:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4078:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4067:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4067:2:11"
																},
																"nativeSrc": "4067:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4067:30:11"
															},
															"nativeSrc": "4064:50:11",
															"nodeType": "YulIf",
															"src": "4064:50:11"
														},
														{
															"nativeSrc": "4123:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4123:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4137:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4137:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4148:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4148:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4133:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4133:3:11"
																},
																"nativeSrc": "4133:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4133:22:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4127:2:11",
																	"nodeType": "YulTypedName",
																	"src": "4127:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4203:16:11",
																"nodeType": "YulBlock",
																"src": "4203:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4212:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4212:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4215:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4215:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4205:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4205:6:11"
																			},
																			"nativeSrc": "4205:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4205:12:11"
																		},
																		"nativeSrc": "4205:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4205:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4182:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4182:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4186:4:11",
																						"nodeType": "YulLiteral",
																						"src": "4186:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4178:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4178:3:11"
																				},
																				"nativeSrc": "4178:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4178:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4193:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4193:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4174:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4174:3:11"
																		},
																		"nativeSrc": "4174:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4174:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4167:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4167:6:11"
																},
																"nativeSrc": "4167:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4167:35:11"
															},
															"nativeSrc": "4164:55:11",
															"nodeType": "YulIf",
															"src": "4164:55:11"
														},
														{
															"nativeSrc": "4228:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4228:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4255:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "4255:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4242:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4242:12:11"
																},
																"nativeSrc": "4242:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4242:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4232:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4232:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4301:22:11",
																"nodeType": "YulBlock",
																"src": "4301:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4303:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4303:16:11"
																			},
																			"nativeSrc": "4303:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4303:18:11"
																		},
																		"nativeSrc": "4303:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4303:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4273:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4273:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4281:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4281:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4270:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4270:2:11"
																},
																"nativeSrc": "4270:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4270:30:11"
															},
															"nativeSrc": "4267:56:11",
															"nodeType": "YulIf",
															"src": "4267:56:11"
														},
														{
															"nativeSrc": "4332:23:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4332:23:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4352:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4352:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4346:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4346:5:11"
																},
																"nativeSrc": "4346:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4346:9:11"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4336:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4336:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4364:85:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4364:85:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4386:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4386:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "4410:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "4410:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4418:4:11",
																										"nodeType": "YulLiteral",
																										"src": "4418:4:11",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4406:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4406:3:11"
																								},
																								"nativeSrc": "4406:17:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4406:17:11"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "4429:2:11",
																										"nodeType": "YulLiteral",
																										"src": "4429:2:11",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "4425:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "4425:3:11"
																								},
																								"nativeSrc": "4425:7:11",
																								"nodeType": "YulFunctionCall",
																								"src": "4425:7:11"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4402:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4402:3:11"
																						},
																						"nativeSrc": "4402:31:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4402:31:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4435:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4435:2:11",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4398:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4398:3:11"
																				},
																				"nativeSrc": "4398:40:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4398:40:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4444:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4444:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4440:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4440:3:11"
																				},
																				"nativeSrc": "4440:7:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4440:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4394:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4394:3:11"
																		},
																		"nativeSrc": "4394:54:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4394:54:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4382:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4382:3:11"
																},
																"nativeSrc": "4382:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4382:67:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4368:10:11",
																	"nodeType": "YulTypedName",
																	"src": "4368:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4524:22:11",
																"nodeType": "YulBlock",
																"src": "4524:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4526:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4526:16:11"
																			},
																			"nativeSrc": "4526:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4526:18:11"
																		},
																		"nativeSrc": "4526:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4526:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4467:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4467:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4479:18:11",
																				"nodeType": "YulLiteral",
																				"src": "4479:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4464:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4464:2:11"
																		},
																		"nativeSrc": "4464:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4464:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4503:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "4503:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4515:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4515:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4500:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4500:2:11"
																		},
																		"nativeSrc": "4500:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4500:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4461:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4461:2:11"
																},
																"nativeSrc": "4461:62:11",
																"nodeType": "YulFunctionCall",
																"src": "4461:62:11"
															},
															"nativeSrc": "4458:88:11",
															"nodeType": "YulIf",
															"src": "4458:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4562:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4562:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4566:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "4566:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4555:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4555:6:11"
																},
																"nativeSrc": "4555:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4555:22:11"
															},
															"nativeSrc": "4555:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "4555:22:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4593:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4593:6:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4601:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4601:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:11"
																},
																"nativeSrc": "4586:22:11",
																"nodeType": "YulFunctionCall",
																"src": "4586:22:11"
															},
															"nativeSrc": "4586:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "4586:22:11"
														},
														{
															"body": {
																"nativeSrc": "4660:16:11",
																"nodeType": "YulBlock",
																"src": "4660:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4669:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4669:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4672:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4672:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4662:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4662:6:11"
																			},
																			"nativeSrc": "4662:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4662:12:11"
																		},
																		"nativeSrc": "4662:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4662:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4631:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "4631:2:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4635:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4635:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4627:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4627:3:11"
																				},
																				"nativeSrc": "4627:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4627:15:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4644:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4644:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4623:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4623:3:11"
																		},
																		"nativeSrc": "4623:26:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4623:26:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4651:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "4651:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4620:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4620:2:11"
																},
																"nativeSrc": "4620:39:11",
																"nodeType": "YulFunctionCall",
																"src": "4620:39:11"
															},
															"nativeSrc": "4617:59:11",
															"nodeType": "YulIf",
															"src": "4617:59:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4702:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4702:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4710:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4710:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4698:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4698:3:11"
																		},
																		"nativeSrc": "4698:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4698:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4721:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "4721:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4725:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4725:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4717:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4717:3:11"
																		},
																		"nativeSrc": "4717:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4717:13:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4732:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4732:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4685:12:11"
																},
																"nativeSrc": "4685:54:11",
																"nodeType": "YulFunctionCall",
																"src": "4685:54:11"
															},
															"nativeSrc": "4685:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "4685:54:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4763:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4763:6:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4771:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4771:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4759:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4759:3:11"
																				},
																				"nativeSrc": "4759:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4759:19:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4780:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4780:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4755:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4755:3:11"
																		},
																		"nativeSrc": "4755:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4755:30:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4787:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4787:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4748:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4748:6:11"
																},
																"nativeSrc": "4748:41:11",
																"nodeType": "YulFunctionCall",
																"src": "4748:41:11"
															},
															"nativeSrc": "4748:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "4748:41:11"
														},
														{
															"nativeSrc": "4798:16:11",
															"nodeType": "YulAssignment",
															"src": "4798:16:11",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4808:6:11",
																"nodeType": "YulIdentifier",
																"src": "4808:6:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4798:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:11"
																}
															]
														},
														{
															"nativeSrc": "4823:50:11",
															"nodeType": "YulAssignment",
															"src": "4823:50:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4856:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4867:4:11",
																				"nodeType": "YulLiteral",
																				"src": "4867:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4852:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:11"
																		},
																		"nativeSrc": "4852:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4852:20:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4833:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "4833:18:11"
																},
																"nativeSrc": "4833:40:11",
																"nodeType": "YulFunctionCall",
																"src": "4833:40:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4823:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4823:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address",
												"nativeSrc": "3850:1029:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3905:9:11",
														"nodeType": "YulTypedName",
														"src": "3905:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3916:7:11",
														"nodeType": "YulTypedName",
														"src": "3916:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3928:6:11",
														"nodeType": "YulTypedName",
														"src": "3928:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3936:6:11",
														"nodeType": "YulTypedName",
														"src": "3936:6:11",
														"type": ""
													}
												],
												"src": "3850:1029:11"
											},
											{
												"body": {
													"nativeSrc": "4971:173:11",
													"nodeType": "YulBlock",
													"src": "4971:173:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5017:16:11",
																"nodeType": "YulBlock",
																"src": "5017:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5026:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5026:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5029:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5029:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5019:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5019:6:11"
																			},
																			"nativeSrc": "5019:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5019:12:11"
																		},
																		"nativeSrc": "5019:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5019:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4992:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4992:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5001:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5001:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4988:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4988:3:11"
																		},
																		"nativeSrc": "4988:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4988:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5013:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4984:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:11"
																},
																"nativeSrc": "4984:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4984:32:11"
															},
															"nativeSrc": "4981:52:11",
															"nodeType": "YulIf",
															"src": "4981:52:11"
														},
														{
															"nativeSrc": "5042:39:11",
															"nodeType": "YulAssignment",
															"src": "5042:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5071:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5071:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5052:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5052:18:11"
																},
																"nativeSrc": "5052:29:11",
																"nodeType": "YulFunctionCall",
																"src": "5052:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5042:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5042:6:11"
																}
															]
														},
														{
															"nativeSrc": "5090:48:11",
															"nodeType": "YulAssignment",
															"src": "5090:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5123:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5134:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5134:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5119:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5119:3:11"
																		},
																		"nativeSrc": "5119:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5119:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5100:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5100:18:11"
																},
																"nativeSrc": "5100:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5100:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5090:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5090:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "4884:260:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4929:9:11",
														"nodeType": "YulTypedName",
														"src": "4929:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4940:7:11",
														"nodeType": "YulTypedName",
														"src": "4940:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4952:6:11",
														"nodeType": "YulTypedName",
														"src": "4952:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4960:6:11",
														"nodeType": "YulTypedName",
														"src": "4960:6:11",
														"type": ""
													}
												],
												"src": "4884:260:11"
											},
											{
												"body": {
													"nativeSrc": "5362:380:11",
													"nodeType": "YulBlock",
													"src": "5362:380:11",
													"statements": [
														{
															"nativeSrc": "5372:27:11",
															"nodeType": "YulAssignment",
															"src": "5372:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5384:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5384:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5395:3:11",
																		"nodeType": "YulLiteral",
																		"src": "5395:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5380:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5380:3:11"
																},
																"nativeSrc": "5380:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5380:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5372:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5372:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5415:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5415:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5430:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5430:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5446:3:11",
																								"nodeType": "YulLiteral",
																								"src": "5446:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5451:1:11",
																								"nodeType": "YulLiteral",
																								"src": "5451:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5442:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5442:3:11"
																						},
																						"nativeSrc": "5442:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5442:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5455:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5455:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5438:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5438:3:11"
																				},
																				"nativeSrc": "5438:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5438:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5426:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5426:3:11"
																		},
																		"nativeSrc": "5426:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5426:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5408:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5408:6:11"
																},
																"nativeSrc": "5408:51:11",
																"nodeType": "YulFunctionCall",
																"src": "5408:51:11"
															},
															"nativeSrc": "5408:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "5408:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5479:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5479:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5490:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5490:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5475:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5475:3:11"
																		},
																		"nativeSrc": "5475:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5475:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5499:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5499:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5515:3:11",
																								"nodeType": "YulLiteral",
																								"src": "5515:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5520:1:11",
																								"nodeType": "YulLiteral",
																								"src": "5520:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5511:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5511:3:11"
																						},
																						"nativeSrc": "5511:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5511:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5524:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5524:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5507:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5507:3:11"
																				},
																				"nativeSrc": "5507:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5507:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5495:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5495:3:11"
																		},
																		"nativeSrc": "5495:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5468:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5468:6:11"
																},
																"nativeSrc": "5468:60:11",
																"nodeType": "YulFunctionCall",
																"src": "5468:60:11"
															},
															"nativeSrc": "5468:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "5468:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5548:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5548:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5559:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5544:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:11"
																		},
																		"nativeSrc": "5544:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5544:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5568:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5568:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5584:3:11",
																								"nodeType": "YulLiteral",
																								"src": "5584:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5589:1:11",
																								"nodeType": "YulLiteral",
																								"src": "5589:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5580:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5580:3:11"
																						},
																						"nativeSrc": "5580:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5580:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5593:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5593:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5576:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5576:3:11"
																				},
																				"nativeSrc": "5576:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5576:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5564:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5564:3:11"
																		},
																		"nativeSrc": "5564:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5564:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5537:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:11"
																},
																"nativeSrc": "5537:60:11",
																"nodeType": "YulFunctionCall",
																"src": "5537:60:11"
															},
															"nativeSrc": "5537:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "5537:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5617:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5617:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5628:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5628:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5613:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5613:3:11"
																		},
																		"nativeSrc": "5613:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5613:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "5637:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5637:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5653:3:11",
																								"nodeType": "YulLiteral",
																								"src": "5653:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5658:1:11",
																								"nodeType": "YulLiteral",
																								"src": "5658:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5649:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5649:3:11"
																						},
																						"nativeSrc": "5649:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5649:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5662:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5662:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5645:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5645:3:11"
																				},
																				"nativeSrc": "5645:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5645:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5633:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5633:3:11"
																		},
																		"nativeSrc": "5633:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5633:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5606:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5606:6:11"
																},
																"nativeSrc": "5606:60:11",
																"nodeType": "YulFunctionCall",
																"src": "5606:60:11"
															},
															"nativeSrc": "5606:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "5606:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5686:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5686:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5697:3:11",
																				"nodeType": "YulLiteral",
																				"src": "5697:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5682:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5682:3:11"
																		},
																		"nativeSrc": "5682:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5682:19:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nativeSrc": "5707:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5707:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5723:3:11",
																								"nodeType": "YulLiteral",
																								"src": "5723:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5728:1:11",
																								"nodeType": "YulLiteral",
																								"src": "5728:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5719:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5719:3:11"
																						},
																						"nativeSrc": "5719:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5719:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5732:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5732:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5715:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5715:3:11"
																				},
																				"nativeSrc": "5715:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5715:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5703:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5703:3:11"
																		},
																		"nativeSrc": "5703:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5703:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5675:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5675:6:11"
																},
																"nativeSrc": "5675:61:11",
																"nodeType": "YulFunctionCall",
																"src": "5675:61:11"
															},
															"nativeSrc": "5675:61:11",
															"nodeType": "YulExpressionStatement",
															"src": "5675:61:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5149:593:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5299:9:11",
														"nodeType": "YulTypedName",
														"src": "5299:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5310:6:11",
														"nodeType": "YulTypedName",
														"src": "5310:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5318:6:11",
														"nodeType": "YulTypedName",
														"src": "5318:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5326:6:11",
														"nodeType": "YulTypedName",
														"src": "5326:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5334:6:11",
														"nodeType": "YulTypedName",
														"src": "5334:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5342:6:11",
														"nodeType": "YulTypedName",
														"src": "5342:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5353:4:11",
														"nodeType": "YulTypedName",
														"src": "5353:4:11",
														"type": ""
													}
												],
												"src": "5149:593:11"
											},
											{
												"body": {
													"nativeSrc": "5876:119:11",
													"nodeType": "YulBlock",
													"src": "5876:119:11",
													"statements": [
														{
															"nativeSrc": "5886:26:11",
															"nodeType": "YulAssignment",
															"src": "5886:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5898:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5898:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5909:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5909:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5894:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5894:3:11"
																},
																"nativeSrc": "5894:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5894:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5886:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5886:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5928:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5928:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5939:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5939:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5921:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:11"
																},
																"nativeSrc": "5921:25:11",
																"nodeType": "YulFunctionCall",
																"src": "5921:25:11"
															},
															"nativeSrc": "5921:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "5921:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5966:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5966:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5977:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5977:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5962:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5962:3:11"
																		},
																		"nativeSrc": "5962:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5962:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5982:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5982:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:11"
																},
																"nativeSrc": "5955:34:11",
																"nodeType": "YulFunctionCall",
																"src": "5955:34:11"
															},
															"nativeSrc": "5955:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "5955:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5747:248:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5837:9:11",
														"nodeType": "YulTypedName",
														"src": "5837:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5848:6:11",
														"nodeType": "YulTypedName",
														"src": "5848:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5856:6:11",
														"nodeType": "YulTypedName",
														"src": "5856:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5867:4:11",
														"nodeType": "YulTypedName",
														"src": "5867:4:11",
														"type": ""
													}
												],
												"src": "5747:248:11"
											},
											{
												"body": {
													"nativeSrc": "6055:325:11",
													"nodeType": "YulBlock",
													"src": "6055:325:11",
													"statements": [
														{
															"nativeSrc": "6065:22:11",
															"nodeType": "YulAssignment",
															"src": "6065:22:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:11",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6082:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6082:4:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6075:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6075:3:11"
																},
																"nativeSrc": "6075:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6075:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6065:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6065:6:11"
																}
															]
														},
														{
															"nativeSrc": "6096:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6096:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6126:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6126:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6132:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6132:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6122:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6122:3:11"
																},
																"nativeSrc": "6122:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6122:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6100:18:11",
																	"nodeType": "YulTypedName",
																	"src": "6100:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6173:31:11",
																"nodeType": "YulBlock",
																"src": "6173:31:11",
																"statements": [
																	{
																		"nativeSrc": "6175:27:11",
																		"nodeType": "YulAssignment",
																		"src": "6175:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6189:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "6189:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6197:4:11",
																					"nodeType": "YulLiteral",
																					"src": "6197:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6185:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6185:3:11"
																			},
																			"nativeSrc": "6185:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6185:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6175:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6175:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6153:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6153:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6146:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6146:6:11"
																},
																"nativeSrc": "6146:26:11",
																"nodeType": "YulFunctionCall",
																"src": "6146:26:11"
															},
															"nativeSrc": "6143:61:11",
															"nodeType": "YulIf",
															"src": "6143:61:11"
														},
														{
															"body": {
																"nativeSrc": "6263:111:11",
																"nodeType": "YulBlock",
																"src": "6263:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6284:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6284:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6291:3:11",
																							"nodeType": "YulLiteral",
																							"src": "6291:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6296:10:11",
																							"nodeType": "YulLiteral",
																							"src": "6296:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6287:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6287:3:11"
																					},
																					"nativeSrc": "6287:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6287:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6277:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6277:6:11"
																			},
																			"nativeSrc": "6277:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6277:31:11"
																		},
																		"nativeSrc": "6277:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6277:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6328:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6328:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6331:4:11",
																					"nodeType": "YulLiteral",
																					"src": "6331:4:11",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6321:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6321:6:11"
																			},
																			"nativeSrc": "6321:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6321:15:11"
																		},
																		"nativeSrc": "6321:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6321:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6356:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6359:4:11",
																					"nodeType": "YulLiteral",
																					"src": "6359:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6349:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6349:6:11"
																			},
																			"nativeSrc": "6349:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6349:15:11"
																		},
																		"nativeSrc": "6349:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6349:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6219:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "6219:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6242:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6242:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6250:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6250:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6239:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6239:2:11"
																		},
																		"nativeSrc": "6239:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6239:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6216:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6216:2:11"
																},
																"nativeSrc": "6216:38:11",
																"nodeType": "YulFunctionCall",
																"src": "6216:38:11"
															},
															"nativeSrc": "6213:161:11",
															"nodeType": "YulIf",
															"src": "6213:161:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6000:380:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6035:4:11",
														"nodeType": "YulTypedName",
														"src": "6035:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6044:6:11",
														"nodeType": "YulTypedName",
														"src": "6044:6:11",
														"type": ""
													}
												],
												"src": "6000:380:11"
											},
											{
												"body": {
													"nativeSrc": "6559:167:11",
													"nodeType": "YulBlock",
													"src": "6559:167:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6576:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6576:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6587:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6587:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6569:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6569:6:11"
																},
																"nativeSrc": "6569:21:11",
																"nodeType": "YulFunctionCall",
																"src": "6569:21:11"
															},
															"nativeSrc": "6569:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "6569:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6610:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6610:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6621:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6621:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6606:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6606:3:11"
																		},
																		"nativeSrc": "6606:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6606:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6626:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6626:2:11",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6599:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6599:6:11"
																},
																"nativeSrc": "6599:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6599:30:11"
															},
															"nativeSrc": "6599:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6599:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6649:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6649:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6660:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6660:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6645:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6645:3:11"
																		},
																		"nativeSrc": "6645:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6645:18:11"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e74",
																		"kind": "string",
																		"nativeSrc": "6665:19:11",
																		"nodeType": "YulLiteral",
																		"src": "6665:19:11",
																		"type": "",
																		"value": "Invalid recipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6638:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6638:6:11"
																},
																"nativeSrc": "6638:47:11",
																"nodeType": "YulFunctionCall",
																"src": "6638:47:11"
															},
															"nativeSrc": "6638:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "6638:47:11"
														},
														{
															"nativeSrc": "6694:26:11",
															"nodeType": "YulAssignment",
															"src": "6694:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6706:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6706:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6717:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6717:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6702:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6702:3:11"
																},
																"nativeSrc": "6702:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6702:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6694:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6694:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6385:341:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6536:9:11",
														"nodeType": "YulTypedName",
														"src": "6536:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6550:4:11",
														"nodeType": "YulTypedName",
														"src": "6550:4:11",
														"type": ""
													}
												],
												"src": "6385:341:11"
											},
											{
												"body": {
													"nativeSrc": "6905:164:11",
													"nodeType": "YulBlock",
													"src": "6905:164:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6915:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6915:6:11"
																},
																"nativeSrc": "6915:21:11",
																"nodeType": "YulFunctionCall",
																"src": "6915:21:11"
															},
															"nativeSrc": "6915:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "6915:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6956:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6956:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6967:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6967:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6952:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:11"
																		},
																		"nativeSrc": "6952:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6952:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6972:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6972:2:11",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6945:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6945:6:11"
																},
																"nativeSrc": "6945:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6945:30:11"
															},
															"nativeSrc": "6945:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "6945:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6995:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6995:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7006:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7006:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6991:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6991:3:11"
																		},
																		"nativeSrc": "6991:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6991:18:11"
																	},
																	{
																		"hexValue": "496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "7011:16:11",
																		"nodeType": "YulLiteral",
																		"src": "7011:16:11",
																		"type": "",
																		"value": "Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6984:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6984:6:11"
																},
																"nativeSrc": "6984:44:11",
																"nodeType": "YulFunctionCall",
																"src": "6984:44:11"
															},
															"nativeSrc": "6984:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "6984:44:11"
														},
														{
															"nativeSrc": "7037:26:11",
															"nodeType": "YulAssignment",
															"src": "7037:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7049:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7049:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7060:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7060:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7045:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7045:3:11"
																},
																"nativeSrc": "7045:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7045:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7037:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7037:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6731:338:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6882:9:11",
														"nodeType": "YulTypedName",
														"src": "6882:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6896:4:11",
														"nodeType": "YulTypedName",
														"src": "6896:4:11",
														"type": ""
													}
												],
												"src": "6731:338:11"
											},
											{
												"body": {
													"nativeSrc": "7248:178:11",
													"nodeType": "YulBlock",
													"src": "7248:178:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7265:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7265:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7276:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7276:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7258:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7258:6:11"
																},
																"nativeSrc": "7258:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7258:21:11"
															},
															"nativeSrc": "7258:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7258:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7299:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7299:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7310:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7310:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7295:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7295:3:11"
																		},
																		"nativeSrc": "7295:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7295:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7315:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7315:2:11",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7288:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7288:6:11"
																},
																"nativeSrc": "7288:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7288:30:11"
															},
															"nativeSrc": "7288:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7288:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7338:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7338:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7349:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7349:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7334:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7334:3:11"
																		},
																		"nativeSrc": "7334:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7334:18:11"
																	},
																	{
																		"hexValue": "4c65766572616765206d757374206265206174206c65617374203178",
																		"kind": "string",
																		"nativeSrc": "7354:30:11",
																		"nodeType": "YulLiteral",
																		"src": "7354:30:11",
																		"type": "",
																		"value": "Leverage must be at least 1x"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7327:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7327:6:11"
																},
																"nativeSrc": "7327:58:11",
																"nodeType": "YulFunctionCall",
																"src": "7327:58:11"
															},
															"nativeSrc": "7327:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "7327:58:11"
														},
														{
															"nativeSrc": "7394:26:11",
															"nodeType": "YulAssignment",
															"src": "7394:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7406:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7406:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7417:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7417:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7402:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7402:3:11"
																},
																"nativeSrc": "7402:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7402:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7394:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7394:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e2c7effb3a6763254027cb85bfc985f467b0837e322283dece80d291243b39f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7074:352:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7225:9:11",
														"nodeType": "YulTypedName",
														"src": "7225:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7239:4:11",
														"nodeType": "YulTypedName",
														"src": "7239:4:11",
														"type": ""
													}
												],
												"src": "7074:352:11"
											},
											{
												"body": {
													"nativeSrc": "7605:170:11",
													"nodeType": "YulBlock",
													"src": "7605:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7622:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7622:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7633:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7633:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7615:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:11"
																},
																"nativeSrc": "7615:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7615:21:11"
															},
															"nativeSrc": "7615:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7615:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7656:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7656:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7667:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7667:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7652:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7652:3:11"
																		},
																		"nativeSrc": "7652:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7652:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7672:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7672:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7645:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7645:6:11"
																},
																"nativeSrc": "7645:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7645:30:11"
															},
															"nativeSrc": "7645:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7645:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7695:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7695:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7706:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7706:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7691:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7691:3:11"
																		},
																		"nativeSrc": "7691:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7691:18:11"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7711:22:11",
																		"nodeType": "YulLiteral",
																		"src": "7711:22:11",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7684:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7684:6:11"
																},
																"nativeSrc": "7684:50:11",
																"nodeType": "YulFunctionCall",
																"src": "7684:50:11"
															},
															"nativeSrc": "7684:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "7684:50:11"
														},
														{
															"nativeSrc": "7743:26:11",
															"nodeType": "YulAssignment",
															"src": "7743:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7755:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7755:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7766:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7766:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7751:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7751:3:11"
																},
																"nativeSrc": "7751:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7751:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7743:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7743:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7431:344:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7582:9:11",
														"nodeType": "YulTypedName",
														"src": "7582:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7596:4:11",
														"nodeType": "YulTypedName",
														"src": "7596:4:11",
														"type": ""
													}
												],
												"src": "7431:344:11"
											},
											{
												"body": {
													"nativeSrc": "7812:95:11",
													"nodeType": "YulBlock",
													"src": "7812:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7829:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7829:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7836:3:11",
																				"nodeType": "YulLiteral",
																				"src": "7836:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7841:10:11",
																				"nodeType": "YulLiteral",
																				"src": "7841:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7832:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7832:3:11"
																		},
																		"nativeSrc": "7832:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7832:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7822:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7822:6:11"
																},
																"nativeSrc": "7822:31:11",
																"nodeType": "YulFunctionCall",
																"src": "7822:31:11"
															},
															"nativeSrc": "7822:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "7822:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7869:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7869:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7872:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7872:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7862:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7862:6:11"
																},
																"nativeSrc": "7862:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7862:15:11"
															},
															"nativeSrc": "7862:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7862:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7893:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7893:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7896:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7886:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7886:6:11"
																},
																"nativeSrc": "7886:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7886:15:11"
															},
															"nativeSrc": "7886:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7886:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7780:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7780:127:11"
											},
											{
												"body": {
													"nativeSrc": "7964:116:11",
													"nodeType": "YulBlock",
													"src": "7964:116:11",
													"statements": [
														{
															"nativeSrc": "7974:20:11",
															"nodeType": "YulAssignment",
															"src": "7974:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7989:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7992:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7992:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7985:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:11"
																},
																"nativeSrc": "7985:9:11",
																"nodeType": "YulFunctionCall",
																"src": "7985:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7974:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "7974:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8052:22:11",
																"nodeType": "YulBlock",
																"src": "8052:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8054:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8054:16:11"
																			},
																			"nativeSrc": "8054:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8054:18:11"
																		},
																		"nativeSrc": "8054:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8054:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8023:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "8023:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8016:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "8016:6:11"
																				},
																				"nativeSrc": "8016:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8016:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8030:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "8030:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8037:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "8037:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8046:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "8046:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8033:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "8033:3:11"
																						},
																						"nativeSrc": "8033:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "8033:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8027:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "8027:2:11"
																				},
																				"nativeSrc": "8027:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "8027:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8013:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8013:2:11"
																		},
																		"nativeSrc": "8013:37:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8013:37:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8006:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8006:6:11"
																},
																"nativeSrc": "8006:45:11",
																"nodeType": "YulFunctionCall",
																"src": "8006:45:11"
															},
															"nativeSrc": "8003:71:11",
															"nodeType": "YulIf",
															"src": "8003:71:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7912:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7943:1:11",
														"nodeType": "YulTypedName",
														"src": "7943:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7946:1:11",
														"nodeType": "YulTypedName",
														"src": "7946:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7952:7:11",
														"nodeType": "YulTypedName",
														"src": "7952:7:11",
														"type": ""
													}
												],
												"src": "7912:168:11"
											},
											{
												"body": {
													"nativeSrc": "8131:171:11",
													"nodeType": "YulBlock",
													"src": "8131:171:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "8162:111:11",
																"nodeType": "YulBlock",
																"src": "8162:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8183:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8183:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8190:3:11",
																							"nodeType": "YulLiteral",
																							"src": "8190:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8195:10:11",
																							"nodeType": "YulLiteral",
																							"src": "8195:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8186:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "8186:3:11"
																					},
																					"nativeSrc": "8186:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8186:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8176:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8176:6:11"
																			},
																			"nativeSrc": "8176:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8176:31:11"
																		},
																		"nativeSrc": "8176:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8176:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8227:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8227:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8230:4:11",
																					"nodeType": "YulLiteral",
																					"src": "8230:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8220:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8220:6:11"
																			},
																			"nativeSrc": "8220:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8220:15:11"
																		},
																		"nativeSrc": "8220:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8220:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8255:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8255:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8258:4:11",
																					"nodeType": "YulLiteral",
																					"src": "8258:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8248:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8248:6:11"
																			},
																			"nativeSrc": "8248:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8248:15:11"
																		},
																		"nativeSrc": "8248:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8248:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8151:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8151:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8144:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8144:6:11"
																},
																"nativeSrc": "8144:9:11",
																"nodeType": "YulFunctionCall",
																"src": "8144:9:11"
															},
															"nativeSrc": "8141:132:11",
															"nodeType": "YulIf",
															"src": "8141:132:11"
														},
														{
															"nativeSrc": "8282:14:11",
															"nodeType": "YulAssignment",
															"src": "8282:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8291:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8291:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8294:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8294:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8287:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8287:3:11"
																},
																"nativeSrc": "8287:9:11",
																"nodeType": "YulFunctionCall",
																"src": "8287:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8282:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8282:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8085:217:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8116:1:11",
														"nodeType": "YulTypedName",
														"src": "8116:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8119:1:11",
														"nodeType": "YulTypedName",
														"src": "8119:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8125:1:11",
														"nodeType": "YulTypedName",
														"src": "8125:1:11",
														"type": ""
													}
												],
												"src": "8085:217:11"
											},
											{
												"body": {
													"nativeSrc": "8481:177:11",
													"nodeType": "YulBlock",
													"src": "8481:177:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8498:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8498:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8509:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8509:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8491:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8491:6:11"
																},
																"nativeSrc": "8491:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8491:21:11"
															},
															"nativeSrc": "8491:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8491:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8532:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8532:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8543:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8543:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8528:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8528:3:11"
																		},
																		"nativeSrc": "8528:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8528:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8548:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8548:2:11",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8521:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8521:6:11"
																},
																"nativeSrc": "8521:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8521:30:11"
															},
															"nativeSrc": "8521:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8521:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8571:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8571:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8582:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8582:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8567:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8567:3:11"
																		},
																		"nativeSrc": "8567:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8567:18:11"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c6f636b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8587:29:11",
																		"nodeType": "YulLiteral",
																		"src": "8587:29:11",
																		"type": "",
																		"value": "Insufficient locked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8560:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8560:6:11"
																},
																"nativeSrc": "8560:57:11",
																"nodeType": "YulFunctionCall",
																"src": "8560:57:11"
															},
															"nativeSrc": "8560:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "8560:57:11"
														},
														{
															"nativeSrc": "8626:26:11",
															"nodeType": "YulAssignment",
															"src": "8626:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8638:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8638:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8649:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8649:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8634:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8634:3:11"
																},
																"nativeSrc": "8634:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8634:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8626:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8626:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8307:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8458:9:11",
														"nodeType": "YulTypedName",
														"src": "8458:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8472:4:11",
														"nodeType": "YulTypedName",
														"src": "8472:4:11",
														"type": ""
													}
												],
												"src": "8307:351:11"
											},
											{
												"body": {
													"nativeSrc": "8837:172:11",
													"nodeType": "YulBlock",
													"src": "8837:172:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8854:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8854:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8847:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8847:6:11"
																},
																"nativeSrc": "8847:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8847:21:11"
															},
															"nativeSrc": "8847:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8847:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8888:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8888:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8899:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8899:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8884:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8884:3:11"
																		},
																		"nativeSrc": "8884:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8884:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8904:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8904:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8877:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8877:6:11"
																},
																"nativeSrc": "8877:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8877:30:11"
															},
															"nativeSrc": "8877:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8877:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8927:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8927:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8938:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8938:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8923:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8923:3:11"
																		},
																		"nativeSrc": "8923:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8923:18:11"
																	},
																	{
																		"hexValue": "496e76616c69642077616c6c65742061646472657373",
																		"kind": "string",
																		"nativeSrc": "8943:24:11",
																		"nodeType": "YulLiteral",
																		"src": "8943:24:11",
																		"type": "",
																		"value": "Invalid wallet address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8916:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8916:6:11"
																},
																"nativeSrc": "8916:52:11",
																"nodeType": "YulFunctionCall",
																"src": "8916:52:11"
															},
															"nativeSrc": "8916:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "8916:52:11"
														},
														{
															"nativeSrc": "8977:26:11",
															"nodeType": "YulAssignment",
															"src": "8977:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8989:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8989:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9000:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9000:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8985:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8985:3:11"
																},
																"nativeSrc": "8985:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8985:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8977:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8977:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8663:346:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8814:9:11",
														"nodeType": "YulTypedName",
														"src": "8814:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8828:4:11",
														"nodeType": "YulTypedName",
														"src": "8828:4:11",
														"type": ""
													}
												],
												"src": "8663:346:11"
											},
											{
												"body": {
													"nativeSrc": "9153:150:11",
													"nodeType": "YulBlock",
													"src": "9153:150:11",
													"statements": [
														{
															"nativeSrc": "9163:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "9163:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9183:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9183:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9177:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9177:5:11"
																},
																"nativeSrc": "9177:13:11",
																"nodeType": "YulFunctionCall",
																"src": "9177:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9167:6:11",
																	"nodeType": "YulTypedName",
																	"src": "9167:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9238:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9238:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9246:4:11",
																				"nodeType": "YulLiteral",
																				"src": "9246:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9234:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9234:3:11"
																		},
																		"nativeSrc": "9234:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9234:17:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9253:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9253:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9258:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9258:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9199:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "9199:34:11"
																},
																"nativeSrc": "9199:66:11",
																"nodeType": "YulFunctionCall",
																"src": "9199:66:11"
															},
															"nativeSrc": "9199:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "9199:66:11"
														},
														{
															"nativeSrc": "9274:23:11",
															"nodeType": "YulAssignment",
															"src": "9274:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9285:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9285:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9290:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9290:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9281:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9281:3:11"
																},
																"nativeSrc": "9281:16:11",
																"nodeType": "YulFunctionCall",
																"src": "9281:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9274:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9274:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9014:289:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9129:3:11",
														"nodeType": "YulTypedName",
														"src": "9129:3:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9134:6:11",
														"nodeType": "YulTypedName",
														"src": "9134:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9145:3:11",
														"nodeType": "YulTypedName",
														"src": "9145:3:11",
														"type": ""
													}
												],
												"src": "9014:289:11"
											},
											{
												"body": {
													"nativeSrc": "9500:66:11",
													"nodeType": "YulBlock",
													"src": "9500:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9517:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9517:3:11"
																	},
																	{
																		"hexValue": "7472656173757279",
																		"kind": "string",
																		"nativeSrc": "9522:10:11",
																		"nodeType": "YulLiteral",
																		"src": "9522:10:11",
																		"type": "",
																		"value": "treasury"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9510:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9510:6:11"
																},
																"nativeSrc": "9510:23:11",
																"nodeType": "YulFunctionCall",
																"src": "9510:23:11"
															},
															"nativeSrc": "9510:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "9510:23:11"
														},
														{
															"nativeSrc": "9542:18:11",
															"nodeType": "YulAssignment",
															"src": "9542:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9553:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9553:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9558:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9558:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9549:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9549:3:11"
																},
																"nativeSrc": "9549:11:11",
																"nodeType": "YulFunctionCall",
																"src": "9549:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9542:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9542:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_cbd818ad4dd6f1ff9338c2bb62480241424dd9a65f9f3284101a01cd099ad8ac__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9308:258:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9484:3:11",
														"nodeType": "YulTypedName",
														"src": "9484:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9492:3:11",
														"nodeType": "YulTypedName",
														"src": "9492:3:11",
														"type": ""
													}
												],
												"src": "9308:258:11"
											},
											{
												"body": {
													"nativeSrc": "9745:169:11",
													"nodeType": "YulBlock",
													"src": "9745:169:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9762:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9762:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9773:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9773:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9755:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9755:6:11"
																},
																"nativeSrc": "9755:21:11",
																"nodeType": "YulFunctionCall",
																"src": "9755:21:11"
															},
															"nativeSrc": "9755:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "9755:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9796:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9796:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9807:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9807:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9792:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9792:3:11"
																		},
																		"nativeSrc": "9792:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9792:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9812:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9812:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9785:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9785:6:11"
																},
																"nativeSrc": "9785:30:11",
																"nodeType": "YulFunctionCall",
																"src": "9785:30:11"
															},
															"nativeSrc": "9785:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "9785:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9835:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9835:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9846:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9846:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9831:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9831:3:11"
																		},
																		"nativeSrc": "9831:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9831:18:11"
																	},
																	{
																		"hexValue": "53616d652077616c6c65742061646472657373",
																		"kind": "string",
																		"nativeSrc": "9851:21:11",
																		"nodeType": "YulLiteral",
																		"src": "9851:21:11",
																		"type": "",
																		"value": "Same wallet address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9824:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9824:6:11"
																},
																"nativeSrc": "9824:49:11",
																"nodeType": "YulFunctionCall",
																"src": "9824:49:11"
															},
															"nativeSrc": "9824:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "9824:49:11"
														},
														{
															"nativeSrc": "9882:26:11",
															"nodeType": "YulAssignment",
															"src": "9882:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9894:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9894:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9905:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9905:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9890:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9890:3:11"
																},
																"nativeSrc": "9890:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9890:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9882:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9882:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9571:343:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9722:9:11",
														"nodeType": "YulTypedName",
														"src": "9722:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9736:4:11",
														"nodeType": "YulTypedName",
														"src": "9736:4:11",
														"type": ""
													}
												],
												"src": "9571:343:11"
											},
											{
												"body": {
													"nativeSrc": "10111:67:11",
													"nodeType": "YulBlock",
													"src": "10111:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10128:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10128:3:11"
																	},
																	{
																		"hexValue": "65636f73797374656d",
																		"kind": "string",
																		"nativeSrc": "10133:11:11",
																		"nodeType": "YulLiteral",
																		"src": "10133:11:11",
																		"type": "",
																		"value": "ecosystem"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10121:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10121:6:11"
																},
																"nativeSrc": "10121:24:11",
																"nodeType": "YulFunctionCall",
																"src": "10121:24:11"
															},
															"nativeSrc": "10121:24:11",
															"nodeType": "YulExpressionStatement",
															"src": "10121:24:11"
														},
														{
															"nativeSrc": "10154:18:11",
															"nodeType": "YulAssignment",
															"src": "10154:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10165:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10165:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10170:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10170:1:11",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10161:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10161:3:11"
																},
																"nativeSrc": "10161:11:11",
																"nodeType": "YulFunctionCall",
																"src": "10161:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10154:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10154:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_9c28c0e7f24473b02f05ded2aef7a9890c81a46c38fb26b940624dbb4dd591dd__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9919:259:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10095:3:11",
														"nodeType": "YulTypedName",
														"src": "10095:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10103:3:11",
														"nodeType": "YulTypedName",
														"src": "10103:3:11",
														"type": ""
													}
												],
												"src": "9919:259:11"
											},
											{
												"body": {
													"nativeSrc": "10375:67:11",
													"nodeType": "YulBlock",
													"src": "10375:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10392:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10392:3:11"
																	},
																	{
																		"hexValue": "636f6d6d756e697479",
																		"kind": "string",
																		"nativeSrc": "10397:11:11",
																		"nodeType": "YulLiteral",
																		"src": "10397:11:11",
																		"type": "",
																		"value": "community"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10385:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10385:6:11"
																},
																"nativeSrc": "10385:24:11",
																"nodeType": "YulFunctionCall",
																"src": "10385:24:11"
															},
															"nativeSrc": "10385:24:11",
															"nodeType": "YulExpressionStatement",
															"src": "10385:24:11"
														},
														{
															"nativeSrc": "10418:18:11",
															"nodeType": "YulAssignment",
															"src": "10418:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10429:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10429:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10434:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10434:1:11",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10425:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10425:3:11"
																},
																"nativeSrc": "10425:11:11",
																"nodeType": "YulFunctionCall",
																"src": "10425:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10418:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10418:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_6697469966e6db36e8e7163442550033ec984b278e48453a9cf46343df642f53__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10183:259:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10359:3:11",
														"nodeType": "YulTypedName",
														"src": "10359:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10367:3:11",
														"nodeType": "YulTypedName",
														"src": "10367:3:11",
														"type": ""
													}
												],
												"src": "10183:259:11"
											},
											{
												"body": {
													"nativeSrc": "10639:67:11",
													"nodeType": "YulBlock",
													"src": "10639:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10656:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10656:3:11"
																	},
																	{
																		"hexValue": "6c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "10661:11:11",
																		"nodeType": "YulLiteral",
																		"src": "10661:11:11",
																		"type": "",
																		"value": "liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10649:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:11"
																},
																"nativeSrc": "10649:24:11",
																"nodeType": "YulFunctionCall",
																"src": "10649:24:11"
															},
															"nativeSrc": "10649:24:11",
															"nodeType": "YulExpressionStatement",
															"src": "10649:24:11"
														},
														{
															"nativeSrc": "10682:18:11",
															"nodeType": "YulAssignment",
															"src": "10682:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10693:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10693:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10698:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10698:1:11",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10689:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10689:3:11"
																},
																"nativeSrc": "10689:11:11",
																"nodeType": "YulFunctionCall",
																"src": "10689:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10682:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10682:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_bb7d9f8cddc6f064ba72d0e3c1e53eb67867dd8506fa4f5d61c86189caca8ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10447:259:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10623:3:11",
														"nodeType": "YulTypedName",
														"src": "10623:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10631:3:11",
														"nodeType": "YulTypedName",
														"src": "10631:3:11",
														"type": ""
													}
												],
												"src": "10447:259:11"
											},
											{
												"body": {
													"nativeSrc": "10903:65:11",
													"nodeType": "YulBlock",
													"src": "10903:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10920:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10920:3:11"
																	},
																	{
																		"hexValue": "72657365727665",
																		"kind": "string",
																		"nativeSrc": "10925:9:11",
																		"nodeType": "YulLiteral",
																		"src": "10925:9:11",
																		"type": "",
																		"value": "reserve"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10913:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10913:6:11"
																},
																"nativeSrc": "10913:22:11",
																"nodeType": "YulFunctionCall",
																"src": "10913:22:11"
															},
															"nativeSrc": "10913:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "10913:22:11"
														},
														{
															"nativeSrc": "10944:18:11",
															"nodeType": "YulAssignment",
															"src": "10944:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10955:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10955:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10960:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10960:1:11",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10951:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10951:3:11"
																},
																"nativeSrc": "10951:11:11",
																"nodeType": "YulFunctionCall",
																"src": "10951:11:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10944:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10944:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_f712c2fa585715e22c7fcc833629ce4482ad96496ecd08f3a14847183c4ef4ee__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10711:257:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10887:3:11",
														"nodeType": "YulTypedName",
														"src": "10887:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10895:3:11",
														"nodeType": "YulTypedName",
														"src": "10895:3:11",
														"type": ""
													}
												],
												"src": "10711:257:11"
											},
											{
												"body": {
													"nativeSrc": "11147:169:11",
													"nodeType": "YulBlock",
													"src": "11147:169:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11164:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11164:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11175:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11175:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11157:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:11"
																},
																"nativeSrc": "11157:21:11",
																"nodeType": "YulFunctionCall",
																"src": "11157:21:11"
															},
															"nativeSrc": "11157:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "11157:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11198:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11198:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11209:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11209:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11194:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11194:3:11"
																		},
																		"nativeSrc": "11194:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11194:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11214:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11187:6:11"
																},
																"nativeSrc": "11187:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11187:30:11"
															},
															"nativeSrc": "11187:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "11187:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11237:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11237:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11248:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11248:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11233:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11233:3:11"
																		},
																		"nativeSrc": "11233:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11233:18:11"
																	},
																	{
																		"hexValue": "496e76616c69642077616c6c65742074797065",
																		"kind": "string",
																		"nativeSrc": "11253:21:11",
																		"nodeType": "YulLiteral",
																		"src": "11253:21:11",
																		"type": "",
																		"value": "Invalid wallet type"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11226:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11226:6:11"
																},
																"nativeSrc": "11226:49:11",
																"nodeType": "YulFunctionCall",
																"src": "11226:49:11"
															},
															"nativeSrc": "11226:49:11",
															"nodeType": "YulExpressionStatement",
															"src": "11226:49:11"
														},
														{
															"nativeSrc": "11284:26:11",
															"nodeType": "YulAssignment",
															"src": "11284:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11296:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11296:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11307:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11307:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11292:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11292:3:11"
																},
																"nativeSrc": "11292:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11292:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11284:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11284:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dff176fdc0c8e1f4d3d67d0b53a5f3f262b5f861a6564381d034c8b7732a3622__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10973:343:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11124:9:11",
														"nodeType": "YulTypedName",
														"src": "11124:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11138:4:11",
														"nodeType": "YulTypedName",
														"src": "11138:4:11",
														"type": ""
													}
												],
												"src": "10973:343:11"
											},
											{
												"body": {
													"nativeSrc": "11470:168:11",
													"nodeType": "YulBlock",
													"src": "11470:168:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11487:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11487:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11498:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11498:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11480:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11480:6:11"
																},
																"nativeSrc": "11480:21:11",
																"nodeType": "YulFunctionCall",
																"src": "11480:21:11"
															},
															"nativeSrc": "11480:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "11480:21:11"
														},
														{
															"nativeSrc": "11510:53:11",
															"nodeType": "YulAssignment",
															"src": "11510:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11536:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11536:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11548:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11548:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11559:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11559:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11544:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11544:3:11"
																		},
																		"nativeSrc": "11544:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11544:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "11518:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11518:17:11"
																},
																"nativeSrc": "11518:45:11",
																"nodeType": "YulFunctionCall",
																"src": "11518:45:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11510:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11510:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11583:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11583:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11594:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11594:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11579:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11579:3:11"
																		},
																		"nativeSrc": "11579:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11579:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11603:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11603:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11619:3:11",
																								"nodeType": "YulLiteral",
																								"src": "11619:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11624:1:11",
																								"nodeType": "YulLiteral",
																								"src": "11624:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11615:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11615:3:11"
																						},
																						"nativeSrc": "11615:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11615:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11628:1:11",
																						"nodeType": "YulLiteral",
																						"src": "11628:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11611:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11611:3:11"
																				},
																				"nativeSrc": "11611:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11611:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11599:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11599:3:11"
																		},
																		"nativeSrc": "11599:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11599:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11572:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11572:6:11"
																},
																"nativeSrc": "11572:60:11",
																"nodeType": "YulFunctionCall",
																"src": "11572:60:11"
															},
															"nativeSrc": "11572:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "11572:60:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "11321:317:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11431:9:11",
														"nodeType": "YulTypedName",
														"src": "11431:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11442:6:11",
														"nodeType": "YulTypedName",
														"src": "11442:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11450:6:11",
														"nodeType": "YulTypedName",
														"src": "11450:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11461:4:11",
														"nodeType": "YulTypedName",
														"src": "11461:4:11",
														"type": ""
													}
												],
												"src": "11321:317:11"
											},
											{
												"body": {
													"nativeSrc": "11817:175:11",
													"nodeType": "YulBlock",
													"src": "11817:175:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11834:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11834:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11845:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11845:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11827:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11827:6:11"
																},
																"nativeSrc": "11827:21:11",
																"nodeType": "YulFunctionCall",
																"src": "11827:21:11"
															},
															"nativeSrc": "11827:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "11827:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11868:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11868:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11879:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11879:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11864:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11864:3:11"
																		},
																		"nativeSrc": "11864:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11864:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11884:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11884:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11857:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11857:6:11"
																},
																"nativeSrc": "11857:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11857:30:11"
															},
															"nativeSrc": "11857:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "11857:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11907:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11907:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11918:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11918:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11903:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11903:3:11"
																		},
																		"nativeSrc": "11903:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11903:18:11"
																	},
																	{
																		"hexValue": "43616e6e6f74207265636f7665722051344120746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "11923:27:11",
																		"nodeType": "YulLiteral",
																		"src": "11923:27:11",
																		"type": "",
																		"value": "Cannot recover Q4A tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11896:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11896:6:11"
																},
																"nativeSrc": "11896:55:11",
																"nodeType": "YulFunctionCall",
																"src": "11896:55:11"
															},
															"nativeSrc": "11896:55:11",
															"nodeType": "YulExpressionStatement",
															"src": "11896:55:11"
														},
														{
															"nativeSrc": "11960:26:11",
															"nodeType": "YulAssignment",
															"src": "11960:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11972:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11972:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11983:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11983:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11968:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11968:3:11"
																},
																"nativeSrc": "11968:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11968:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11960:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11960:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3821712960548e907ae123c73adb4ca463ffbf181b8c12df741f44cc835aa50__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11643:349:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11794:9:11",
														"nodeType": "YulTypedName",
														"src": "11794:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11808:4:11",
														"nodeType": "YulTypedName",
														"src": "11808:4:11",
														"type": ""
													}
												],
												"src": "11643:349:11"
											},
											{
												"body": {
													"nativeSrc": "12078:103:11",
													"nodeType": "YulBlock",
													"src": "12078:103:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12124:16:11",
																"nodeType": "YulBlock",
																"src": "12124:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12133:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12133:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12136:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12136:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12126:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12126:6:11"
																			},
																			"nativeSrc": "12126:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12126:12:11"
																		},
																		"nativeSrc": "12126:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12126:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12099:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12099:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12108:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12108:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12095:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12095:3:11"
																		},
																		"nativeSrc": "12095:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12095:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12120:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12120:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12091:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12091:3:11"
																},
																"nativeSrc": "12091:32:11",
																"nodeType": "YulFunctionCall",
																"src": "12091:32:11"
															},
															"nativeSrc": "12088:52:11",
															"nodeType": "YulIf",
															"src": "12088:52:11"
														},
														{
															"nativeSrc": "12149:26:11",
															"nodeType": "YulAssignment",
															"src": "12149:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12165:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12165:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12159:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12159:5:11"
																},
																"nativeSrc": "12159:16:11",
																"nodeType": "YulFunctionCall",
																"src": "12159:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12149:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12149:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11997:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12044:9:11",
														"nodeType": "YulTypedName",
														"src": "12044:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12055:7:11",
														"nodeType": "YulTypedName",
														"src": "12055:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12067:6:11",
														"nodeType": "YulTypedName",
														"src": "12067:6:11",
														"type": ""
													}
												],
												"src": "11997:184:11"
											},
											{
												"body": {
													"nativeSrc": "12360:170:11",
													"nodeType": "YulBlock",
													"src": "12360:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12377:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12377:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12388:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12388:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12370:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12370:6:11"
																},
																"nativeSrc": "12370:21:11",
																"nodeType": "YulFunctionCall",
																"src": "12370:21:11"
															},
															"nativeSrc": "12370:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "12370:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12411:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12411:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12422:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12422:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12407:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12407:3:11"
																		},
																		"nativeSrc": "12407:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12407:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12427:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12400:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12400:6:11"
																},
																"nativeSrc": "12400:30:11",
																"nodeType": "YulFunctionCall",
																"src": "12400:30:11"
															},
															"nativeSrc": "12400:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "12400:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12450:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12450:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12461:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12461:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12446:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12446:3:11"
																		},
																		"nativeSrc": "12446:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12446:18:11"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207265636f766572",
																		"kind": "string",
																		"nativeSrc": "12466:22:11",
																		"nodeType": "YulLiteral",
																		"src": "12466:22:11",
																		"type": "",
																		"value": "No tokens to recover"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12439:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12439:6:11"
																},
																"nativeSrc": "12439:50:11",
																"nodeType": "YulFunctionCall",
																"src": "12439:50:11"
															},
															"nativeSrc": "12439:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "12439:50:11"
														},
														{
															"nativeSrc": "12498:26:11",
															"nodeType": "YulAssignment",
															"src": "12498:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12510:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12510:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12521:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12521:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12506:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12506:3:11"
																},
																"nativeSrc": "12506:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12506:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12498:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12498:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7e7a53f0698cf3ba0c5878574d3a5c4a2b03765bd52531f11ace562963d8d19__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12186:344:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12337:9:11",
														"nodeType": "YulTypedName",
														"src": "12337:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12351:4:11",
														"nodeType": "YulTypedName",
														"src": "12351:4:11",
														"type": ""
													}
												],
												"src": "12186:344:11"
											},
											{
												"body": {
													"nativeSrc": "12664:145:11",
													"nodeType": "YulBlock",
													"src": "12664:145:11",
													"statements": [
														{
															"nativeSrc": "12674:26:11",
															"nodeType": "YulAssignment",
															"src": "12674:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12686:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12686:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12697:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12697:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12682:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12682:3:11"
																},
																"nativeSrc": "12682:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12682:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12674:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12674:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12716:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12716:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12731:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12731:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12747:3:11",
																								"nodeType": "YulLiteral",
																								"src": "12747:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12752:1:11",
																								"nodeType": "YulLiteral",
																								"src": "12752:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12743:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "12743:3:11"
																						},
																						"nativeSrc": "12743:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "12743:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12756:1:11",
																						"nodeType": "YulLiteral",
																						"src": "12756:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12739:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "12739:3:11"
																				},
																				"nativeSrc": "12739:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12739:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12727:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12727:3:11"
																		},
																		"nativeSrc": "12727:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12727:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12709:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12709:6:11"
																},
																"nativeSrc": "12709:51:11",
																"nodeType": "YulFunctionCall",
																"src": "12709:51:11"
															},
															"nativeSrc": "12709:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "12709:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12780:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12780:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12791:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12791:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12776:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12776:3:11"
																		},
																		"nativeSrc": "12776:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12776:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12796:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12796:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12769:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12769:6:11"
																},
																"nativeSrc": "12769:34:11",
																"nodeType": "YulFunctionCall",
																"src": "12769:34:11"
															},
															"nativeSrc": "12769:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "12769:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12535:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12625:9:11",
														"nodeType": "YulTypedName",
														"src": "12625:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12636:6:11",
														"nodeType": "YulTypedName",
														"src": "12636:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12644:6:11",
														"nodeType": "YulTypedName",
														"src": "12644:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12655:4:11",
														"nodeType": "YulTypedName",
														"src": "12655:4:11",
														"type": ""
													}
												],
												"src": "12535:274:11"
											},
											{
												"body": {
													"nativeSrc": "12892:199:11",
													"nodeType": "YulBlock",
													"src": "12892:199:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12938:16:11",
																"nodeType": "YulBlock",
																"src": "12938:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12947:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12947:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12950:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12950:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12940:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12940:6:11"
																			},
																			"nativeSrc": "12940:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12940:12:11"
																		},
																		"nativeSrc": "12940:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12940:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12913:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "12913:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12922:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12922:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12909:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12909:3:11"
																		},
																		"nativeSrc": "12909:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12909:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12934:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12934:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12905:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12905:3:11"
																},
																"nativeSrc": "12905:32:11",
																"nodeType": "YulFunctionCall",
																"src": "12905:32:11"
															},
															"nativeSrc": "12902:52:11",
															"nodeType": "YulIf",
															"src": "12902:52:11"
														},
														{
															"nativeSrc": "12963:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12963:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12982:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12982:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12976:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "12976:5:11"
																},
																"nativeSrc": "12976:16:11",
																"nodeType": "YulFunctionCall",
																"src": "12976:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12967:5:11",
																	"nodeType": "YulTypedName",
																	"src": "12967:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13045:16:11",
																"nodeType": "YulBlock",
																"src": "13045:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13054:1:11",
																					"nodeType": "YulLiteral",
																					"src": "13054:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13057:1:11",
																					"nodeType": "YulLiteral",
																					"src": "13057:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13047:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13047:6:11"
																			},
																			"nativeSrc": "13047:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13047:12:11"
																		},
																		"nativeSrc": "13047:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13047:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13014:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "13014:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "13035:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "13035:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "13028:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "13028:6:11"
																						},
																						"nativeSrc": "13028:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "13028:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13021:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "13021:6:11"
																				},
																				"nativeSrc": "13021:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13021:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13011:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "13011:2:11"
																		},
																		"nativeSrc": "13011:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13011:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13004:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13004:6:11"
																},
																"nativeSrc": "13004:40:11",
																"nodeType": "YulFunctionCall",
																"src": "13004:40:11"
															},
															"nativeSrc": "13001:60:11",
															"nodeType": "YulIf",
															"src": "13001:60:11"
														},
														{
															"nativeSrc": "13070:15:11",
															"nodeType": "YulAssignment",
															"src": "13070:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "13080:5:11",
																"nodeType": "YulIdentifier",
																"src": "13080:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "13070:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13070:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12814:277:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12858:9:11",
														"nodeType": "YulTypedName",
														"src": "12858:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12869:7:11",
														"nodeType": "YulTypedName",
														"src": "12869:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12881:6:11",
														"nodeType": "YulTypedName",
														"src": "12881:6:11",
														"type": ""
													}
												],
												"src": "12814:277:11"
											},
											{
												"body": {
													"nativeSrc": "13270:172:11",
													"nodeType": "YulBlock",
													"src": "13270:172:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13287:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13287:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13298:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13298:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13280:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13280:6:11"
																},
																"nativeSrc": "13280:21:11",
																"nodeType": "YulFunctionCall",
																"src": "13280:21:11"
															},
															"nativeSrc": "13280:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "13280:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13321:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13321:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13332:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13332:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13317:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13317:3:11"
																		},
																		"nativeSrc": "13317:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13317:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13337:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13337:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13310:6:11"
																},
																"nativeSrc": "13310:30:11",
																"nodeType": "YulFunctionCall",
																"src": "13310:30:11"
															},
															"nativeSrc": "13310:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "13310:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13360:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13360:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13371:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13371:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13356:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13356:3:11"
																		},
																		"nativeSrc": "13356:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13356:18:11"
																	},
																	{
																		"hexValue": "496e76616c69642076657374696e672077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "13376:24:11",
																		"nodeType": "YulLiteral",
																		"src": "13376:24:11",
																		"type": "",
																		"value": "Invalid vesting wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13349:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13349:6:11"
																},
																"nativeSrc": "13349:52:11",
																"nodeType": "YulFunctionCall",
																"src": "13349:52:11"
															},
															"nativeSrc": "13349:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "13349:52:11"
														},
														{
															"nativeSrc": "13410:26:11",
															"nodeType": "YulAssignment",
															"src": "13410:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13422:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13422:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13433:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13433:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13418:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13418:3:11"
																},
																"nativeSrc": "13418:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13418:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13410:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13410:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5e5f891013d108cb382059cf5e60ad3034ca479aedc7a83dd619e3cb9166f546__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13096:346:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13247:9:11",
														"nodeType": "YulTypedName",
														"src": "13247:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13261:4:11",
														"nodeType": "YulTypedName",
														"src": "13261:4:11",
														"type": ""
													}
												],
												"src": "13096:346:11"
											},
											{
												"body": {
													"nativeSrc": "13621:170:11",
													"nodeType": "YulBlock",
													"src": "13621:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13638:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13638:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13649:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13649:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13631:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13631:6:11"
																},
																"nativeSrc": "13631:21:11",
																"nodeType": "YulFunctionCall",
																"src": "13631:21:11"
															},
															"nativeSrc": "13631:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "13631:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13672:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13672:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13683:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13683:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13668:3:11"
																		},
																		"nativeSrc": "13668:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13668:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13688:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13688:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13661:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13661:6:11"
																},
																"nativeSrc": "13661:30:11",
																"nodeType": "YulFunctionCall",
																"src": "13661:30:11"
															},
															"nativeSrc": "13661:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "13661:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13711:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13711:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13722:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13722:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13707:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13707:3:11"
																		},
																		"nativeSrc": "13707:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13707:18:11"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
																		"kind": "string",
																		"nativeSrc": "13727:22:11",
																		"nodeType": "YulLiteral",
																		"src": "13727:22:11",
																		"type": "",
																		"value": "No tokens to release"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13700:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13700:6:11"
																},
																"nativeSrc": "13700:50:11",
																"nodeType": "YulFunctionCall",
																"src": "13700:50:11"
															},
															"nativeSrc": "13700:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "13700:50:11"
														},
														{
															"nativeSrc": "13759:26:11",
															"nodeType": "YulAssignment",
															"src": "13759:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13771:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13771:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13782:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13782:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13767:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13767:3:11"
																},
																"nativeSrc": "13767:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13767:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13759:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13759:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13447:344:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13598:9:11",
														"nodeType": "YulTypedName",
														"src": "13598:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13612:4:11",
														"nodeType": "YulTypedName",
														"src": "13612:4:11",
														"type": ""
													}
												],
												"src": "13447:344:11"
											},
											{
												"body": {
													"nativeSrc": "13970:170:11",
													"nodeType": "YulBlock",
													"src": "13970:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13987:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13987:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13998:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13998:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13980:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13980:6:11"
																},
																"nativeSrc": "13980:21:11",
																"nodeType": "YulFunctionCall",
																"src": "13980:21:11"
															},
															"nativeSrc": "13980:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "13980:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14021:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14021:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14032:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14032:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14017:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14017:3:11"
																		},
																		"nativeSrc": "14017:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14017:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14037:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14037:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14010:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14010:6:11"
																},
																"nativeSrc": "14010:30:11",
																"nodeType": "YulFunctionCall",
																"src": "14010:30:11"
															},
															"nativeSrc": "14010:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "14010:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14060:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14060:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14071:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14071:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14056:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14056:3:11"
																		},
																		"nativeSrc": "14056:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14056:18:11"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e732072656c65617361626c65",
																		"kind": "string",
																		"nativeSrc": "14076:22:11",
																		"nodeType": "YulLiteral",
																		"src": "14076:22:11",
																		"type": "",
																		"value": "No tokens releasable"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14049:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14049:6:11"
																},
																"nativeSrc": "14049:50:11",
																"nodeType": "YulFunctionCall",
																"src": "14049:50:11"
															},
															"nativeSrc": "14049:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "14049:50:11"
														},
														{
															"nativeSrc": "14108:26:11",
															"nodeType": "YulAssignment",
															"src": "14108:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14120:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14120:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14131:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14131:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14116:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14116:3:11"
																},
																"nativeSrc": "14116:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14116:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14108:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14108:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_437ccfba16f7a1c3635c6fa73b676800f4140c9683771211c159af154a2c5463__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13796:344:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13947:9:11",
														"nodeType": "YulTypedName",
														"src": "13947:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13961:4:11",
														"nodeType": "YulTypedName",
														"src": "13961:4:11",
														"type": ""
													}
												],
												"src": "13796:344:11"
											},
											{
												"body": {
													"nativeSrc": "14194:79:11",
													"nodeType": "YulBlock",
													"src": "14194:79:11",
													"statements": [
														{
															"nativeSrc": "14204:17:11",
															"nodeType": "YulAssignment",
															"src": "14204:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14216:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14216:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14219:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14219:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14212:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14212:3:11"
																},
																"nativeSrc": "14212:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14212:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14204:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14204:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14245:22:11",
																"nodeType": "YulBlock",
																"src": "14245:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14247:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "14247:16:11"
																			},
																			"nativeSrc": "14247:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14247:18:11"
																		},
																		"nativeSrc": "14247:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14247:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14236:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14236:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14242:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14242:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14233:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "14233:2:11"
																},
																"nativeSrc": "14233:11:11",
																"nodeType": "YulFunctionCall",
																"src": "14233:11:11"
															},
															"nativeSrc": "14230:37:11",
															"nodeType": "YulIf",
															"src": "14230:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14145:128:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14176:1:11",
														"nodeType": "YulTypedName",
														"src": "14176:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14179:1:11",
														"nodeType": "YulTypedName",
														"src": "14179:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14185:4:11",
														"nodeType": "YulTypedName",
														"src": "14185:4:11",
														"type": ""
													}
												],
												"src": "14145:128:11"
											},
											{
												"body": {
													"nativeSrc": "14435:188:11",
													"nodeType": "YulBlock",
													"src": "14435:188:11",
													"statements": [
														{
															"nativeSrc": "14445:26:11",
															"nodeType": "YulAssignment",
															"src": "14445:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14457:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14457:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14468:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14468:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14453:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14453:3:11"
																},
																"nativeSrc": "14453:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14453:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14445:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14445:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14487:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14487:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14502:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14502:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14518:3:11",
																								"nodeType": "YulLiteral",
																								"src": "14518:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14523:1:11",
																								"nodeType": "YulLiteral",
																								"src": "14523:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14514:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "14514:3:11"
																						},
																						"nativeSrc": "14514:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "14514:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14527:1:11",
																						"nodeType": "YulLiteral",
																						"src": "14527:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14510:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "14510:3:11"
																				},
																				"nativeSrc": "14510:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14510:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14498:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14498:3:11"
																		},
																		"nativeSrc": "14498:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14498:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14480:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14480:6:11"
																},
																"nativeSrc": "14480:51:11",
																"nodeType": "YulFunctionCall",
																"src": "14480:51:11"
															},
															"nativeSrc": "14480:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "14480:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14551:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14551:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14562:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14562:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14547:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14547:3:11"
																		},
																		"nativeSrc": "14547:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14547:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "14567:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14567:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14540:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14540:6:11"
																},
																"nativeSrc": "14540:34:11",
																"nodeType": "YulFunctionCall",
																"src": "14540:34:11"
															},
															"nativeSrc": "14540:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "14540:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14594:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14594:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14605:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14605:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14590:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14590:3:11"
																		},
																		"nativeSrc": "14590:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14590:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "14610:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14610:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14583:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14583:6:11"
																},
																"nativeSrc": "14583:34:11",
																"nodeType": "YulFunctionCall",
																"src": "14583:34:11"
															},
															"nativeSrc": "14583:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "14583:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14278:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14388:9:11",
														"nodeType": "YulTypedName",
														"src": "14388:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14399:6:11",
														"nodeType": "YulTypedName",
														"src": "14399:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14407:6:11",
														"nodeType": "YulTypedName",
														"src": "14407:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14415:6:11",
														"nodeType": "YulTypedName",
														"src": "14415:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14426:4:11",
														"nodeType": "YulTypedName",
														"src": "14426:4:11",
														"type": ""
													}
												],
												"src": "14278:345:11"
											},
											{
												"body": {
													"nativeSrc": "14802:181:11",
													"nodeType": "YulBlock",
													"src": "14802:181:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14819:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14819:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14830:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14830:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14812:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14812:6:11"
																},
																"nativeSrc": "14812:21:11",
																"nodeType": "YulFunctionCall",
																"src": "14812:21:11"
															},
															"nativeSrc": "14812:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "14812:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14853:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14864:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14864:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14849:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14849:3:11"
																		},
																		"nativeSrc": "14849:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14849:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14869:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14869:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14842:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14842:6:11"
																},
																"nativeSrc": "14842:30:11",
																"nodeType": "YulFunctionCall",
																"src": "14842:30:11"
															},
															"nativeSrc": "14842:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "14842:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14892:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14892:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14903:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14903:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14888:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14888:3:11"
																		},
																		"nativeSrc": "14888:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14888:18:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "14908:33:11",
																		"nodeType": "YulLiteral",
																		"src": "14908:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14881:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14881:6:11"
																},
																"nativeSrc": "14881:61:11",
																"nodeType": "YulFunctionCall",
																"src": "14881:61:11"
															},
															"nativeSrc": "14881:61:11",
															"nodeType": "YulExpressionStatement",
															"src": "14881:61:11"
														},
														{
															"nativeSrc": "14951:26:11",
															"nodeType": "YulAssignment",
															"src": "14951:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14963:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14963:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14974:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14974:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14959:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14959:3:11"
																},
																"nativeSrc": "14959:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14959:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14951:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14951:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14628:355:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14779:9:11",
														"nodeType": "YulTypedName",
														"src": "14779:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14793:4:11",
														"nodeType": "YulTypedName",
														"src": "14793:4:11",
														"type": ""
													}
												],
												"src": "14628:355:11"
											},
											{
												"body": {
													"nativeSrc": "15162:166:11",
													"nodeType": "YulBlock",
													"src": "15162:166:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15179:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15179:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15190:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15190:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15172:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15172:6:11"
																},
																"nativeSrc": "15172:21:11",
																"nodeType": "YulFunctionCall",
																"src": "15172:21:11"
															},
															"nativeSrc": "15172:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "15172:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15213:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15213:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15224:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15224:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15209:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15209:3:11"
																		},
																		"nativeSrc": "15209:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15209:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15229:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15229:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15202:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15202:6:11"
																},
																"nativeSrc": "15202:30:11",
																"nodeType": "YulFunctionCall",
																"src": "15202:30:11"
															},
															"nativeSrc": "15202:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "15202:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15252:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15252:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15263:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15263:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15248:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15248:3:11"
																		},
																		"nativeSrc": "15248:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15248:18:11"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "15268:18:11",
																		"nodeType": "YulLiteral",
																		"src": "15268:18:11",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15241:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15241:6:11"
																},
																"nativeSrc": "15241:46:11",
																"nodeType": "YulFunctionCall",
																"src": "15241:46:11"
															},
															"nativeSrc": "15241:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "15241:46:11"
														},
														{
															"nativeSrc": "15296:26:11",
															"nodeType": "YulAssignment",
															"src": "15296:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15308:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15308:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15319:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15319:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15304:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15304:3:11"
																},
																"nativeSrc": "15304:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15304:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15296:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15296:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14988:340:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15139:9:11",
														"nodeType": "YulTypedName",
														"src": "15139:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15153:4:11",
														"nodeType": "YulTypedName",
														"src": "15153:4:11",
														"type": ""
													}
												],
												"src": "14988:340:11"
											},
											{
												"body": {
													"nativeSrc": "15381:77:11",
													"nodeType": "YulBlock",
													"src": "15381:77:11",
													"statements": [
														{
															"nativeSrc": "15391:16:11",
															"nodeType": "YulAssignment",
															"src": "15391:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15402:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15402:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15405:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15405:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15398:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15398:3:11"
																},
																"nativeSrc": "15398:9:11",
																"nodeType": "YulFunctionCall",
																"src": "15398:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15391:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15391:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15430:22:11",
																"nodeType": "YulBlock",
																"src": "15430:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15432:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "15432:16:11"
																			},
																			"nativeSrc": "15432:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "15432:18:11"
																		},
																		"nativeSrc": "15432:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "15432:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15422:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "15422:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15425:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15425:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15419:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "15419:2:11"
																},
																"nativeSrc": "15419:10:11",
																"nodeType": "YulFunctionCall",
																"src": "15419:10:11"
															},
															"nativeSrc": "15416:36:11",
															"nodeType": "YulIf",
															"src": "15416:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15333:125:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15364:1:11",
														"nodeType": "YulTypedName",
														"src": "15364:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15367:1:11",
														"nodeType": "YulTypedName",
														"src": "15367:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15373:3:11",
														"nodeType": "YulTypedName",
														"src": "15373:3:11",
														"type": ""
													}
												],
												"src": "15333:125:11"
											},
											{
												"body": {
													"nativeSrc": "15637:170:11",
													"nodeType": "YulBlock",
													"src": "15637:170:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15654:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15654:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15665:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15665:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15647:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15647:6:11"
																},
																"nativeSrc": "15647:21:11",
																"nodeType": "YulFunctionCall",
																"src": "15647:21:11"
															},
															"nativeSrc": "15647:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "15647:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15688:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15688:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15699:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15699:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15684:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15684:3:11"
																		},
																		"nativeSrc": "15684:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15684:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15704:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15704:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15677:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15677:6:11"
																},
																"nativeSrc": "15677:30:11",
																"nodeType": "YulFunctionCall",
																"src": "15677:30:11"
															},
															"nativeSrc": "15677:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "15677:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15727:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15727:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15738:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15738:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15723:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15723:3:11"
																		},
																		"nativeSrc": "15723:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15723:18:11"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "15743:22:11",
																		"nodeType": "YulLiteral",
																		"src": "15743:22:11",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15716:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15716:6:11"
																},
																"nativeSrc": "15716:50:11",
																"nodeType": "YulFunctionCall",
																"src": "15716:50:11"
															},
															"nativeSrc": "15716:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "15716:50:11"
														},
														{
															"nativeSrc": "15775:26:11",
															"nodeType": "YulAssignment",
															"src": "15775:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15787:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15787:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15798:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15798:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15783:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15783:3:11"
																},
																"nativeSrc": "15783:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15783:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15775:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15775:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15463:344:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15614:9:11",
														"nodeType": "YulTypedName",
														"src": "15614:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15628:4:11",
														"nodeType": "YulTypedName",
														"src": "15628:4:11",
														"type": ""
													}
												],
												"src": "15463:344:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 0x20), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(_1, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        value0 := memPtr\n        value1 := abi_decode_address(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid recipient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6e2c7effb3a6763254027cb85bfc985f467b0837e322283dece80d291243b39f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Leverage must be at least 1x\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Insufficient locked balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid wallet address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_cbd818ad4dd6f1ff9338c2bb62480241424dd9a65f9f3284101a01cd099ad8ac__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"treasury\")\n        end := add(pos, 8)\n    }\n    function abi_encode_tuple_t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Same wallet address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_9c28c0e7f24473b02f05ded2aef7a9890c81a46c38fb26b940624dbb4dd591dd__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ecosystem\")\n        end := add(pos, 9)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_6697469966e6db36e8e7163442550033ec984b278e48453a9cf46343df642f53__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"community\")\n        end := add(pos, 9)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bb7d9f8cddc6f064ba72d0e3c1e53eb67867dd8506fa4f5d61c86189caca8ee5__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"liquidity\")\n        end := add(pos, 9)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_f712c2fa585715e22c7fcc833629ce4482ad96496ecd08f3a14847183c4ef4ee__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"reserve\")\n        end := add(pos, 7)\n    }\n    function abi_encode_tuple_t_stringliteral_dff176fdc0c8e1f4d3d67d0b53a5f3f262b5f861a6564381d034c8b7732a3622__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid wallet type\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_a3821712960548e907ae123c73adb4ca463ffbf181b8c12df741f44cc835aa50__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Cannot recover Q4A tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_c7e7a53f0698cf3ba0c5878574d3a5c4a2b03765bd52531f11ace562963d8d19__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"No tokens to recover\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5e5f891013d108cb382059cf5e60ad3034ca479aedc7a83dd619e3cb9166f546__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid vesting wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"No tokens to release\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_437ccfba16f7a1c3635c6fa73b676800f4140c9683771211c159af154a2c5463__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"No tokens releasable\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1601": [
									{
										"length": 32,
										"start": 759
									},
									{
										"length": 32,
										"start": 1610
									},
									{
										"length": 32,
										"start": 5349
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102695760003560e01c8063780b973711610151578063bf1ad7e0116100c3578063d72b11bd11610087578063d72b11bd14610529578063db7a46051461053c578063dd62ed3e14610589578063f2fde38b146105c2578063f9428f38146105d5578063fdb20ccb146105dd57600080fd5b8063bf1ad7e0146104d7578063c4e41b22146104df578063c7574839146104f0578063d469801614610503578063d486d1291461051657600080fd5b806390534f241161011557806390534f24146104865780639576a3741461048e57806395d89b41146104a1578063993eb1c5146104a9578063a9059cbb146104b1578063b7e26a2e146104c457600080fd5b8063780b9737146104405780637b5c7f03146104535780638456cb591461045b5780638da5cb5b14610463578063902d55a51461047457600080fd5b80633f4ba83a116101ea5780634a0ced96116101ae5780634a0ced96146103ce5780635c975abb146103d757806365ed6e23146103e257806370a0823114610412578063715018a614610425578063743003781461042d57600080fd5b80633f4ba83a1461035b57806340c10f191461036557806342966c6814610378578063435263ef1461038b5780634626402b146103b657600080fd5b806323b872dd1161023157806323b872dd146102df578063254800d4146102f25780632af4459214610319578063313ce5671461033957806333127b0d1461034857600080fd5b80630197d9721461026e5780630553be1e1461028c57806306fdde031461029f578063095ea7b3146102b457806318160ddd146102d7575b600080fd5b6102796301e1338081565b6040519081526020015b60405180910390f35b61027961029a366004611c0c565b610619565b6102a76106c0565b6040516102839190611c77565b6102c76102c2366004611c8a565b610752565b6040519015158152602001610283565b600254610279565b6102c76102ed366004611cb4565b61076c565b6102797f000000000000000000000000000000000000000000000000000000000000000081565b610279610327366004611c0c565b600c6020526000908152604090205481565b60405160128152602001610283565b6102c7610356366004611cf1565b610792565b6103636108fa565b005b610363610373366004611c8a565b61090c565b610363610386366004611d24565b610982565b60085461039e906001600160a01b031681565b6040516001600160a01b039091168152602001610283565b60075461039e9061010090046001600160a01b031681565b610279600d5481565b60075460ff166102c7565b6103ea6109ff565b604080519586526020860194909452928401919091526060830152608082015260a001610283565b610279610420366004611c0c565b610ac0565b610363610ade565b61036361043b366004611d24565b610af0565b61036361044e366004611d53565b610bf5565b610279611003565b610363611028565b6005546001600160a01b031661039e565b610279676765c793fa10079d601b1b81565b610279611038565b61036361049c366004611d24565b611050565b6102a7611145565b610279611154565b6102c76104bf366004611c8a565b61116c565b6103636104d2366004611e1d565b6111d1565b6102796113df565b676765c793fa10079d601b1b610279565b60095461039e906001600160a01b031681565b600a5461039e906001600160a01b031681565b610363610524366004611c0c565b6113f7565b600b5461039e906001600160a01b031681565b600754600854600954600a54600b54604080516101009096046001600160a01b0390811687529485166020870152928416928501929092528216606084015216608082015260a001610283565b610279610597366004611e1d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6103636105d0366004611c0c565b61160e565b610279611649565b6106046105eb366004611c0c565b600e602052600090815260409020805460019091015482565b60408051928352602083019190915201610283565b6001600160a01b0381166000908152600e60205260408120805482036106425750600092915050565b600061066e427f0000000000000000000000000000000000000000000000000000000000000000611661565b905060006106976301e1338061069184866000015461166d90919063ffffffff16565b90611679565b83549091508111156106a7575081545b60018301546106b7908290611661565b95945050505050565b6060600380546106cf90611e47565b80601f01602080910402602001604051908101604052809291908181526020018280546106fb90611e47565b80156107485780601f1061071d57610100808354040283529160200191610748565b820191906000526020600020905b81548152906001019060200180831161072b57829003601f168201915b5050505050905090565b600033610760818585611685565b60019150505b92915050565b60003361077a858285611697565b610785858585611716565b60019150505b9392505050565b600061079c611775565b6107a46117ce565b6001600160a01b0384166107d35760405162461bcd60e51b81526004016107ca90611e81565b60405180910390fd5b600083116107f35760405162461bcd60e51b81526004016107ca90611eac565b60648210156108445760405162461bcd60e51b815260206004820152601c60248201527f4c65766572616765206d757374206265206174206c656173742031780000000060448201526064016107ca565b8261084e33610ac0565b10156108935760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107ca565b600061089f8585611814565b905080156108ee5760408051858152602081018590526001600160a01b0387169133917fae5a72e837b1c61d8f56d35c16816d1e29cc1a1e858253419499dda337ea03e3910160405180910390a35b905061078b6001600655565b610902611822565b61090a61184f565b565b610914611822565b61091c611775565b6109246117ce565b6001600160a01b03821661094a5760405162461bcd60e51b81526004016107ca90611e81565b6000811161096a5760405162461bcd60e51b81526004016107ca90611eac565b61097482826118a1565b61097e6001600655565b5050565b61098a611775565b6109926117ce565b600081116109b25760405162461bcd60e51b81526004016107ca90611eac565b6109bc33826118d7565b60405181815233907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6906020015b60405180910390a26109fc6001600655565b50565b6000808080806064610a1d676765c793fa10079d601b1b6032611eea565b610a279190611f01565b6064610a3f676765c793fa10079d601b1b6014611eea565b610a499190611f01565b6064610a61676765c793fa10079d601b1b600f611eea565b610a6b9190611f01565b6064610a83676765c793fa10079d601b1b600a611eea565b610a8d9190611f01565b6064610aa5676765c793fa10079d601b1b6005611eea565b610aaf9190611f01565b945094509450945094509091929394565b6001600160a01b038116600090815260208190526040812054610766565b610ae6611822565b61090a600061190d565b610af8611775565b610b006117ce565b60008111610b205760405162461bcd60e51b81526004016107ca90611eac565b336000908152600c6020526040902054811115610b7f5760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74206c6f636b65642062616c616e6365000000000060448201526064016107ca565b336000908152600c6020526040902054610b999082611661565b336000908152600c6020526040902055600d54610bb69082611661565b600d55610bc333826118a1565b60405181815233907f86e5f036736269c50194228317f229b5684d89d9db959c604a1ef646d6cd6ca9906020016109ea565b610bfd611822565b6001600160a01b038116610c4c5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642077616c6c6574206164647265737360501b60448201526064016107ca565b600082604051602001610c5f9190611f23565b604051602081830303815290604052805190602001209050604051602001610c959067747265617375727960c01b815260080190565b604051602081830303815290604052805190602001208103610d49576007546001600160a01b03610100909104811690831603610ce45760405162461bcd60e51b81526004016107ca90611f3f565b60078054610100908190046001600160a01b039081166000908152600e602052604080822087841680845282842082548155600192830154908301558654869004909416835290822082815501558254610100600160a81b0319169102179055610fc5565b6040516865636f73797374656d60b81b6020820152602901604051602081830303815290604052805190602001208103610e03576008546001600160a01b0390811690831603610dab5760405162461bcd60e51b81526004016107ca90611f3f565b600880546001600160a01b039081166000908152600e6020526040808220868416808452828420825481556001928301549083015585549094168352908220828155015581546001600160a01b031916179055610fc5565b60405168636f6d6d756e69747960b81b6020820152602901604051602081830303815290604052805190602001208103610e85576009546001600160a01b0390811690831603610e655760405162461bcd60e51b81526004016107ca90611f3f565b600980546001600160a01b0319166001600160a01b038416179055610fc5565b604051686c697175696469747960b81b6020820152602901604051602081830303815290604052805190602001208103610f0757600a546001600160a01b0390811690831603610ee75760405162461bcd60e51b81526004016107ca90611f3f565b600a80546001600160a01b0319166001600160a01b038416179055610fc5565b604051667265736572766560c81b6020820152602701604051602081830303815290604052805190602001208103610f8757600b546001600160a01b0390811690831603610f675760405162461bcd60e51b81526004016107ca90611f3f565b600b80546001600160a01b0319166001600160a01b038416179055610fc5565b60405162461bcd60e51b8152602060048201526013602482015272496e76616c69642077616c6c6574207479706560681b60448201526064016107ca565b7f6ff3a4003b90be84595beb5f6acb9d54f88bd3e6dd4887ca67e53dc9645465ea8383604051610ff6929190611f6c565b60405180910390a1505050565b606461101b676765c793fa10079d601b1b6005611eea565b6110259190611f01565b81565b611030611822565b61090a61195f565b606461101b676765c793fa10079d601b1b6014611eea565b611058611775565b6110606117ce565b600081116110805760405162461bcd60e51b81526004016107ca90611eac565b8061108a33610ac0565b10156110cf5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107ca565b6110d933826118d7565b336000908152600c60205260409020546110f3908261199c565b336000908152600c6020526040902055600d54611110908261199c565b600d5560405181815233907f6b4f55697b6ddad583b377bb7ab9d921afc2eb9ffa0b12fbcea5ae24a7a34e6a906020016109ea565b6060600480546106cf90611e47565b606461101b676765c793fa10079d601b1b600f611eea565b60006111766117ce565b60006111828484611814565b9050801561078b576040518381526001600160a01b0385169033907f94e83ca767b0d965638d27b68a75ea07cd5c28c86299b5c7e02d2d5f1ee9aff29060200160405180910390a39392505050565b6111d9611822565b6111e1611775565b306001600160a01b038316036112395760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f74207265636f7665722051344120746f6b656e730000000000000060448201526064016107ca565b6001600160a01b03811661125f5760405162461bcd60e51b81526004016107ca90611e81565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ca9190611f96565b9050600081116113135760405162461bcd60e51b81526020600482015260146024820152732737903a37b5b2b739903a37903932b1b7bb32b960611b60448201526064016107ca565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015611362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113869190611faf565b50816001600160a01b0316836001600160a01b03167f1ac506e936e7f02f4036dbe44708f5e8d72af9ace8745a29fd391481a8fbcb87836040516113cc91815260200190565b60405180910390a35061097e6001600655565b606461101b676765c793fa10079d601b1b6032611eea565b6113ff611775565b6114076117ce565b6007546001600160a01b0382811661010090920416148061143557506008546001600160a01b038281169116145b61147a5760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081d995cdd1a5b99c81dd85b1b195d60521b60448201526064016107ca565b6001600160a01b0381166000908152600e6020526040902060018101548154116114dd5760405162461bcd60e51b81526020600482015260146024820152734e6f20746f6b656e7320746f2072656c6561736560601b60448201526064016107ca565b6000611509427f0000000000000000000000000000000000000000000000000000000000000000611661565b9050600061152c6301e1338061069184866000015461166d90919063ffffffff16565b835490915081111561153c575081545b600061155584600101548361166190919063ffffffff16565b90506000811161159e5760405162461bcd60e51b81526020600482015260146024820152734e6f20746f6b656e732072656c65617361626c6560601b60448201526064016107ca565b60018401546115ad908261199c565b60018501556115bd308683611716565b846001600160a01b03167f4ad7799f99297062cea73c5a21d23a1fcf49f6a1957f7409712e555a0dcd1e1d826040516115f891815260200190565b60405180910390a2505050506109fc6001600655565b611616611822565b6001600160a01b03811661164057604051631e4fbdf760e01b8152600060048201526024016107ca565b6109fc8161190d565b606461101b676765c793fa10079d601b1b600a611eea565b600061078b8284611fd1565b600061078b8284611eea565b600061078b8284611f01565b61169283838360016119a8565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015611710578181101561170157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107ca565b611710848484840360006119a8565b50505050565b6001600160a01b03831661174057604051634b637e8f60e11b8152600060048201526024016107ca565b6001600160a01b03821661176a5760405163ec442f0560e01b8152600060048201526024016107ca565b611692838383611a7d565b6002600654036117c75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107ca565b6002600655565b60075460ff161561090a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016107ca565b600033610760818585611716565b6005546001600160a01b0316331461090a5760405163118cdaa760e01b81523360048201526024016107ca565b611857611ba7565b6007805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166118cb5760405163ec442f0560e01b8152600060048201526024016107ca565b61097e60008383611a7d565b6001600160a01b03821661190157604051634b637e8f60e11b8152600060048201526024016107ca565b61097e82600083611a7d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6119676117ce565b6007805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118843390565b600061078b8284611fe4565b6001600160a01b0384166119d25760405163e602df0560e01b8152600060048201526024016107ca565b6001600160a01b0383166119fc57604051634a1406b160e11b8152600060048201526024016107ca565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561171057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611a6f91815260200190565b60405180910390a350505050565b6001600160a01b038316611aa8578060026000828254611a9d9190611fe4565b90915550611b1a9050565b6001600160a01b03831660009081526020819052604090205481811015611afb5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107ca565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216611b3657600280548290039055611b55565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b9a91815260200190565b60405180910390a3505050565b60075460ff1661090a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016107ca565b80356001600160a01b0381168114611c0757600080fd5b919050565b600060208284031215611c1e57600080fd5b61078b82611bf0565b60005b83811015611c42578181015183820152602001611c2a565b50506000910152565b60008151808452611c63816020860160208601611c27565b601f01601f19169290920160200192915050565b60208152600061078b6020830184611c4b565b60008060408385031215611c9d57600080fd5b611ca683611bf0565b946020939093013593505050565b600080600060608486031215611cc957600080fd5b611cd284611bf0565b9250611ce060208501611bf0565b929592945050506040919091013590565b600080600060608486031215611d0657600080fd5b611d0f84611bf0565b95602085013595506040909401359392505050565b600060208284031215611d3657600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611d6657600080fd5b823567ffffffffffffffff811115611d7d57600080fd5b8301601f81018513611d8e57600080fd5b803567ffffffffffffffff811115611da857611da8611d3d565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611dd757611dd7611d3d565b604052818152828201602001871015611def57600080fd5b81602084016020830137600060208383010152809450505050611e1460208401611bf0565b90509250929050565b60008060408385031215611e3057600080fd5b611e3983611bf0565b9150611e1460208401611bf0565b600181811c90821680611e5b57607f821691505b602082108103611e7b57634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260119082015270125b9d985b1a59081c9958da5c1a595b9d607a1b604082015260600190565b6020808252600e908201526d125b9d985b1a5908185b5bdd5b9d60921b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761076657610766611ed4565b600082611f1e57634e487b7160e01b600052601260045260246000fd5b500490565b60008251611f35818460208701611c27565b9190910192915050565b60208082526013908201527253616d652077616c6c6574206164647265737360681b604082015260600190565b604081526000611f7f6040830185611c4b565b905060018060a01b03831660208301529392505050565b600060208284031215611fa857600080fd5b5051919050565b600060208284031215611fc157600080fd5b8151801515811461078b57600080fd5b8181038181111561076657610766611ed4565b8082018082111561076657610766611ed456fea2646970667358221220f184e98d2f389374b4bad94c2d07accf52fb3a7d3f3bb13acd4d85349f93f33a64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x269 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x780B9737 GT PUSH2 0x151 JUMPI DUP1 PUSH4 0xBF1AD7E0 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD72B11BD GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD72B11BD EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xDB7A4605 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x589 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xF9428F38 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xFDB20CCB EQ PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF1AD7E0 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xC7574839 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xD4698016 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0xD486D129 EQ PUSH2 0x516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x90534F24 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x90534F24 EQ PUSH2 0x486 JUMPI DUP1 PUSH4 0x9576A374 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x993EB1C5 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xB7E26A2E EQ PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x780B9737 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0x7B5C7F03 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x463 JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x474 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1EA JUMPI DUP1 PUSH4 0x4A0CED96 GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0x4A0CED96 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3D7 JUMPI DUP1 PUSH4 0x65ED6E23 EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x74300378 EQ PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0x435263EF EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x231 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0x254800D4 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x2AF44592 EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x33127B0D EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x197D972 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x553BE1E EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2D7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x279 PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x2ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x279 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CF1 JUMP JUMPDEST PUSH2 0x792 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x8FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x363 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH2 0x363 PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x982 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x39E SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x3EA PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x420 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x363 PUSH2 0xADE JUMP JUMPDEST PUSH2 0x363 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x44E CALLDATASIZE PUSH1 0x4 PUSH2 0x1D53 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x39E JUMP JUMPDEST PUSH2 0x279 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x1038 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x1D24 JUMP JUMPDEST PUSH2 0x1050 JUMP JUMPDEST PUSH2 0x2A7 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x2C7 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x1C8A JUMP JUMPDEST PUSH2 0x116C JUMP JUMPDEST PUSH2 0x363 PUSH2 0x4D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1D JUMP JUMPDEST PUSH2 0x11D1 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x13DF JUMP JUMPDEST PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH2 0x279 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x524 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x13F7 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x39E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 SWAP1 SWAP7 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP8 MSTORE SWAP5 DUP6 AND PUSH1 0x20 DUP8 ADD MSTORE SWAP3 DUP5 AND SWAP3 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x283 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x597 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x363 PUSH2 0x5D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x160E JUMP JUMPDEST PUSH2 0x279 PUSH2 0x1649 JUMP JUMPDEST PUSH2 0x604 PUSH2 0x5EB CALLDATASIZE PUSH1 0x4 PUSH2 0x1C0C JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x283 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SUB PUSH2 0x642 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E TIMESTAMP PUSH32 0x0 PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x697 PUSH4 0x1E13380 PUSH2 0x691 DUP5 DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x166D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1679 JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x6A7 JUMPI POP DUP2 SLOAD JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x6B7 SWAP1 DUP3 SWAP1 PUSH2 0x1661 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x6CF SWAP1 PUSH2 0x1E47 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FB SWAP1 PUSH2 0x1E47 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x760 DUP2 DUP6 DUP6 PUSH2 0x1685 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x77A DUP6 DUP3 DUP6 PUSH2 0x1697 JUMP JUMPDEST PUSH2 0x785 DUP6 DUP6 DUP6 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x79C PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x7A4 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x7F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C65766572616765206D757374206265206174206C6561737420317800000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST DUP3 PUSH2 0x84E CALLER PUSH2 0xAC0 JUMP JUMPDEST LT ISZERO PUSH2 0x893 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89F DUP6 DUP6 PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x8EE JUMPI PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0xAE5A72E837B1C61D8F56D35C16816D1E29CC1A1E858253419499DDA337EA03E3 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST SWAP1 POP PUSH2 0x78B PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x902 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x90A PUSH2 0x184F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x914 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x91C PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x924 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x94A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x974 DUP3 DUP3 PUSH2 0x18A1 JUMP JUMPDEST PUSH2 0x97E PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x98A PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x992 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST PUSH2 0x9BC CALLER DUP3 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9FC PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH1 0x64 PUSH2 0xA1D PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x32 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xA27 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xA3F PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x14 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xA49 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xA61 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0xF PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xA83 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0xA PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xAA5 PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x5 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x766 JUMP JUMPDEST PUSH2 0xAE6 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x90A PUSH1 0x0 PUSH2 0x190D JUMP JUMPDEST PUSH2 0xAF8 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0xB00 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C6F636B65642062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB99 SWAP1 DUP3 PUSH2 0x1661 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0xBB6 SWAP1 DUP3 PUSH2 0x1661 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH2 0xBC3 CALLER DUP3 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x86E5F036736269C50194228317F229B5684D89D9DB959C604A1EF646D6CD6CA9 SWAP1 PUSH1 0x20 ADD PUSH2 0x9EA JUMP JUMPDEST PUSH2 0xBFD PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C69642077616C6C65742061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC5F SWAP2 SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC95 SWAP1 PUSH8 0x7472656173757279 PUSH1 0xC0 SHL DUP2 MSTORE PUSH1 0x8 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xD49 JUMPI PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP5 AND DUP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP3 SLOAD DUP2 SSTORE PUSH1 0x1 SWAP3 DUP4 ADD SLOAD SWAP1 DUP4 ADD SSTORE DUP7 SLOAD DUP7 SWAP1 DIV SWAP1 SWAP5 AND DUP4 MSTORE SWAP1 DUP3 KECCAK256 DUP3 DUP2 SSTORE ADD SSTORE DUP3 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP2 MUL OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH9 0x65636F73797374656D PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x29 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xE03 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP5 AND DUP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP3 SLOAD DUP2 SSTORE PUSH1 0x1 SWAP3 DUP4 ADD SLOAD SWAP1 DUP4 ADD SSTORE DUP6 SLOAD SWAP1 SWAP5 AND DUP4 MSTORE SWAP1 DUP3 KECCAK256 DUP3 DUP2 SSTORE ADD SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH9 0x636F6D6D756E697479 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x29 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xE85 JUMPI PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xE65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH9 0x6C6971756964697479 PUSH1 0xB8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x29 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xF07 JUMPI PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xEE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH7 0x72657365727665 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x27 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 SUB PUSH2 0xF87 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0xF67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH2 0xFC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C69642077616C6C65742074797065 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH32 0x6FF3A4003B90BE84595BEB5F6ACB9D54F88BD3E6DD4887CA67E53DC9645465EA DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF6 SWAP3 SWAP2 SWAP1 PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x5 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x1F01 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x1030 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x90A PUSH2 0x195F JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x14 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1058 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x1060 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1EAC JUMP JUMPDEST DUP1 PUSH2 0x108A CALLER PUSH2 0xAC0 JUMP JUMPDEST LT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x10D9 CALLER DUP3 PUSH2 0x18D7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10F3 SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xD SLOAD PUSH2 0x1110 SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x6B4F55697B6DDAD583B377BB7AB9D921AFC2EB9FFA0B12FBCEA5AE24A7A34E6A SWAP1 PUSH1 0x20 ADD PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6CF SWAP1 PUSH2 0x1E47 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0xF PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1176 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1182 DUP5 DUP5 PUSH2 0x1814 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x78B JUMPI PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 CALLER SWAP1 PUSH32 0x94E83CA767B0D965638D27B68A75EA07CD5C28C86299B5C7E02D2D5F1EE9AFF2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x11D9 PUSH2 0x1822 JUMP JUMPDEST PUSH2 0x11E1 PUSH2 0x1775 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207265636F7665722051344120746F6B656E7300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CA SWAP1 PUSH2 0x1E81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12CA SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1313 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737903A37B5B2B739903A37903932B1B7BB32B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1362 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1386 SWAP2 SWAP1 PUSH2 0x1FAF JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x1AC506E936E7F02F4036DBE44708F5E8D72AF9ACE8745A29FD391481A8FBCB87 DUP4 PUSH1 0x40 MLOAD PUSH2 0x13CC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x97E PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0x32 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x13FF PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x1407 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH2 0x100 SWAP1 SWAP3 DIV AND EQ DUP1 PUSH2 0x1435 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ JUMPDEST PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x125B9D985B1A59081D995CDD1A5B99C81DD85B1B195D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP2 SLOAD GT PUSH2 0x14DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F20746F6B656E7320746F2072656C65617365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1509 TIMESTAMP PUSH32 0x0 PUSH2 0x1661 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x152C PUSH4 0x1E13380 PUSH2 0x691 DUP5 DUP7 PUSH1 0x0 ADD SLOAD PUSH2 0x166D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x153C JUMPI POP DUP2 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x1555 DUP5 PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x1661 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x159E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F20746F6B656E732072656C65617361626C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x15AD SWAP1 DUP3 PUSH2 0x199C JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SSTORE PUSH2 0x15BD ADDRESS DUP7 DUP4 PUSH2 0x1716 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4AD7799F99297062CEA73C5A21D23A1FCF49F6A1957F7409712E555A0DCD1E1D DUP3 PUSH1 0x40 MLOAD PUSH2 0x15F8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP PUSH2 0x9FC PUSH1 0x1 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x1616 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x9FC DUP2 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x64 PUSH2 0x101B PUSH8 0x6765C793FA10079D PUSH1 0x1B SHL PUSH1 0xA PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP3 DUP5 PUSH2 0x1FD1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP3 DUP5 PUSH2 0x1EEA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP3 DUP5 PUSH2 0x1F01 JUMP JUMPDEST PUSH2 0x1692 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19A8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x1710 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1701 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x1710 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x19A8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1740 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x176A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x1692 DUP4 DUP4 DUP4 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x17C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x760 DUP2 DUP6 DUP6 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x1857 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x18CB JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x97E PUSH1 0x0 DUP4 DUP4 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1901 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x97E DUP3 PUSH1 0x0 DUP4 PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1967 PUSH2 0x17CE JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1884 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78B DUP3 DUP5 PUSH2 0x1FE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x19D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x19FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1710 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1A6F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1AA8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A9D SWAP2 SWAP1 PUSH2 0x1FE4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1B1A SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1B36 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B9A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7CA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78B DUP3 PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C42 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C2A JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1C63 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x78B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C4B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA6 DUP4 PUSH2 0x1BF0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CD2 DUP5 PUSH2 0x1BF0 JUMP JUMPDEST SWAP3 POP PUSH2 0x1CE0 PUSH1 0x20 DUP6 ADD PUSH2 0x1BF0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1D06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D0F DUP5 PUSH2 0x1BF0 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1D8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA8 JUMPI PUSH2 0x1DA8 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1DD7 JUMPI PUSH2 0x1DD7 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x1DEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP PUSH2 0x1E14 PUSH1 0x20 DUP5 ADD PUSH2 0x1BF0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E39 DUP4 PUSH2 0x1BF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E14 PUSH1 0x20 DUP5 ADD PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1E5B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E7B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x766 JUMPI PUSH2 0x766 PUSH2 0x1ED4 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1F1E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1F35 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1C27 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x53616D652077616C6C65742061646472657373 PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1F7F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C4B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x766 JUMPI PUSH2 0x766 PUSH2 0x1ED4 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x766 JUMPI PUSH2 0x766 PUSH2 0x1ED4 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL DUP5 0xE9 DUP14 0x2F CODESIZE SWAP4 PUSH21 0xB4BAD94C2D07ACCF52FB3A7D3F3BB13ACD4D85349F SWAP4 RETURN GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "562:13796:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:49;;1535:8;1494:49;;;;;160:25:11;;;148:2;133:18;1494:49:10;;;;;;;;11779:528;;;;;;:::i;:::-;;:::i;1760:89:4:-;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1791:14:11;;1784:22;1766:41;;1754:2;1739:18;3979:186:4;1626:187:11;2830:97:4;2908:12;;2830:97;;4757:244;;;;;;:::i;:::-;;:::i;1594:37:10:-;;;;;1908:47;;;;;;:::i;:::-;;;;;;;;;;;;;;2688:82:4;;;2761:2;2339:36:11;;2327:2;2312:18;2688:82:4;2197:184:11;12610:719:10;;;;;;:::i;:::-;;:::i;14291:65::-;;;:::i;:::-;;6598:234;;;;;;:::i;:::-;;:::i;6934:211::-;;;;;;:::i;:::-;;:::i;1712:30::-;;;;;-1:-1:-1;;;;;1712:30:10;;;;;;-1:-1:-1;;;;;3206:32:11;;;3188:51;;3176:2;3161:18;1712:30:10;3042:203:11;1677:29:10;;;;;;;;-1:-1:-1;;;;;1677:29:10;;;2011:32;;;;;;1616:84:2;1686:7;;;;1616:84;;5380:397:10;;;:::i;:::-;;;;3509:25:11;;;3565:2;3550:18;;3543:34;;;;3593:18;;;3586:34;;;;3651:2;3636:18;;3629:34;3694:3;3679:19;;3672:35;3496:3;3481:19;5380:397:10;3250:463:11;13975:147:10;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;10144:435:10:-;;;;;;:::i;:::-;;:::i;7969:1556::-;;;;;;:::i;:::-;;:::i;1377:69::-;;;:::i;14172:61::-;;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;762:61:10;;-1:-1:-1;;;762:61:10;;1001:72;;;:::i;9624:420::-;;;;;;:::i;:::-;;:::i;1962:93:4:-;;;:::i;1127:72:10:-;;;:::i;13553:288::-;;;;;;:::i;:::-;;:::i;7311:446::-;;;;;;:::i;:::-;;:::i;876:71::-;;;:::i;4986:103::-;-1:-1:-1;;;4986:103:10;;1748:30;;;;;-1:-1:-1;;;;;1748:30:10;;;1784;;;;;-1:-1:-1;;;;;1784:30:10;;;10697:915;;;;;;:::i;:::-;;:::i;1820:28::-;;;;;-1:-1:-1;;;;;1820:28:10;;;6093:368;6316:14;;6344:15;;6373;;6402;;6431:13;;6093:368;;;6316:14;;;;-1:-1:-1;;;;;6316:14:10;;;5408:51:11;;6344:15:10;;;5490:2:11;5475:18;;5468:60;6373:15:10;;;5544:18:11;;;5537:60;;;;6402:15:10;;5628:2:11;5613:18;;5606:60;6431:13:10;5697:3:11;5682:19;;5675:61;5395:3;5380:19;6093:368:10;5149:593:11;3532:140:4;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:4;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2543:215:0;;;;;;:::i;:::-;;:::i;1254:72:10:-;;;:::i;2287:59::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5921:25:11;;;5977:2;5962:18;;5955:34;;;;5894:18;2287:59:10;5747:248:11;11779:528:10;-1:-1:-1;;;;;11902:24:10;;11848:7;11902:24;;;:16;:24;;;;;11940:20;;:25;;11936:39;;-1:-1:-1;11974:1:10;;11779:528;-1:-1:-1;;11779:528:10:o;11936:39::-;11986:19;12008:33;:15;12028:12;12008:19;:33::i;:::-;11986:55;;12051:20;12074:57;1535:8;12074:37;12099:11;12074:8;:20;;;:24;;:37;;;;:::i;:::-;:41;;:57::i;:::-;12160:20;;12051:80;;-1:-1:-1;12145:35:10;;12141:101;;;-1:-1:-1;12211:20:10;;12141:101;12276:23;;;;12259:41;;:12;;:16;:41::i;:::-;12252:48;11779:528;-1:-1:-1;;;;;11779:528:10:o;1760:89:4:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:7;4106:31:4;735:10:7;4122:7:4;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:7;4900:37:4;4916:4;735:10:7;4931:5:4;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;;:::o;12610:719:10:-;12731:4;2262:21:3;:19;:21::i;:::-;1240:19:2::1;:17;:19::i;:::-;-1:-1:-1::0;;;;;12755:16:10;::::2;12747:46;;;;-1:-1:-1::0;;;12747:46:10::2;;;;;;;:::i;:::-;;;;;;;;;12820:1;12811:6;:10;12803:37;;;;-1:-1:-1::0;;;12803:37:10::2;;;;;;;:::i;:::-;12870:3;12858:8;:15;;12850:56;;;::::0;-1:-1:-1;;;12850:56:10;;7276:2:11;12850:56:10::2;::::0;::::2;7258:21:11::0;7315:2;7295:18;;;7288:30;7354;7334:18;;;7327:58;7402:18;;12850:56:10::2;7074:352:11::0;12850:56:10::2;12949:6;12924:21;12934:10;12924:9;:21::i;:::-;:31;;12916:64;;;::::0;-1:-1:-1;;;12916:64:10;;7633:2:11;12916:64:10::2;::::0;::::2;7615:21:11::0;7672:2;7652:18;;;7645:30;-1:-1:-1;;;7691:18:11;;;7684:50;7751:18;;12916:64:10::2;7431:344:11::0;12916:64:10::2;13154:12;13169:26;13184:2;13188:6;13169:14;:26::i;:::-;13154:41;;13209:7;13205:94;;;13237:51;::::0;;5921:25:11;;;5977:2;5962:18;;5955:34;;;-1:-1:-1;;;;;13237:51:10;::::2;::::0;13255:10:::2;::::0;13237:51:::2;::::0;5894:18:11;13237:51:10::2;;;;;;;13205:94;13315:7:::0;-1:-1:-1;2304:20:3;1717:1;2810:7;:22;2630:209;14291:65:10;1531:13:0;:11;:13::i;:::-;14339:10:10::1;:8;:10::i;:::-;14291:65::o:0;6598:234::-;1531:13:0;:11;:13::i;:::-;2262:21:3::1;:19;:21::i;:::-;1240:19:2::2;:17;:19::i;:::-;-1:-1:-1::0;;;;;6713:16:10;::::3;6705:46;;;;-1:-1:-1::0;;;6705:46:10::3;;;;;;;:::i;:::-;6778:1;6769:6;:10;6761:37;;;;-1:-1:-1::0;;;6761:37:10::3;;;;;;;:::i;:::-;6808:17;6814:2;6818:6;6808:5;:17::i;:::-;2304:20:3::1;1717:1:::0;2810:7;:22;2630:209;2304:20:::1;6598:234:10::0;;:::o;6934:211::-;2262:21:3;:19;:21::i;:::-;1240:19:2::1;:17;:19::i;:::-;7036:1:10::2;7027:6;:10;7019:37;;;;-1:-1:-1::0;;;7019:37:10::2;;;;;;;:::i;:::-;7066:25;7072:10;7084:6;7066:5;:25::i;:::-;7106:32;::::0;160:25:11;;;7119:10:10::2;::::0;7106:32:::2;::::0;148:2:11;133:18;7106:32:10::2;;;;;;;;2304:20:3::0;1717:1;2810:7;:22;2630:209;2304:20;6934:211:10;:::o;5380:397::-;5447:16;;;;;944:3;923:17;-1:-1:-1;;;938:2:10;923:17;:::i;:::-;922:25;;;;:::i;:::-;1070:3;1049:17;-1:-1:-1;;;1064:2:10;1049:17;:::i;:::-;1048:25;;;;:::i;:::-;1196:3;1175:17;-1:-1:-1;;;1190:2:10;1175:17;:::i;:::-;1174:25;;;;:::i;:::-;1323:3;1302:17;-1:-1:-1;;;1317:2:10;1302:17;:::i;:::-;1301:25;;;;:::i;:::-;1443:3;1423:16;-1:-1:-1;;;1438:1:10;1423:16;:::i;:::-;1422:24;;;;:::i;:::-;5586:184;;;;;;;;;;5380:397;;;;;:::o;13975:147::-;-1:-1:-1;;;;;3076:18:4;;14065:7:10;3076:18:4;;;;;;;;;;;14091:24:10;2985:116:4;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;10144:435:10:-:0;2262:21:3;:19;:21::i;:::-;1240:19:2::1;:17;:19::i;:::-;10246:1:10::2;10237:6;:10;10229:37;;;;-1:-1:-1::0;;;10229:37:10::2;;;;;;;:::i;:::-;10297:10;10284:24;::::0;;;:12:::2;:24;::::0;;;;;:34;-1:-1:-1;10284:34:10::2;10276:74;;;::::0;-1:-1:-1;;;10276:74:10;;8509:2:11;10276:74:10::2;::::0;::::2;8491:21:11::0;8548:2;8528:18;;;8521:30;8587:29;8567:18;;;8560:57;8634:18;;10276:74:10::2;8307:351:11::0;10276:74:10::2;10400:10;10387:24;::::0;;;:12:::2;:24;::::0;;;;;:36:::2;::::0;10416:6;10387:28:::2;:36::i;:::-;10373:10;10360:24;::::0;;;:12:::2;:24;::::0;;;;:63;10453:17:::2;::::0;:29:::2;::::0;10475:6;10453:21:::2;:29::i;:::-;10433:17;:49:::0;10492:25:::2;10498:10;10510:6:::0;10492:5:::2;:25::i;:::-;10532:40;::::0;160:25:11;;;10553:10:10::2;::::0;10532:40:::2;::::0;148:2:11;133:18;10532:40:10::2;14:177:11::0;7969:1556:10;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;8073:23:10;::::1;8065:58;;;::::0;-1:-1:-1;;;8065:58:10;;8865:2:11;8065:58:10::1;::::0;::::1;8847:21:11::0;8904:2;8884:18;;;8877:30;-1:-1:-1;;;8923:18:11;;;8916:52;8985:18;;8065:58:10::1;8663:346:11::0;8065:58:10::1;8133:18;8181:10;8164:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;8154:39;;;;;;8133:60;;8231:28;;;;;;-1:-1:-1::0;;;9510:23:11;;9558:1;9549:11;;9308:258;8231:28:10::1;;;;;;;;;;;;;8221:39;;;;;;8207:10;:53:::0;8203:1265:::1;;8297:14;::::0;-1:-1:-1;;;;;8297:14:10::1;::::0;;::::1;::::0;::::1;8284:27:::0;;::::1;::::0;8276:59:::1;;;;-1:-1:-1::0;;;8276:59:10::1;;;;;;;:::i;:::-;8396:14;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;;8396:14:10;;::::1;8379:32;::::0;;;:16:::1;:32;::::0;;;;;8349:27;;::::1;::::0;;;;;;:62;;;;8396:14:::1;8349:62:::0;;::::1;::::0;;;::::1;::::0;8449:14;;;;::::1;::::0;;::::1;8432:32:::0;;;;;8425:39;;;::::1;::::0;8478:26;;-1:-1:-1;;;;;;8478:26:10::1;::::0;::::1;;::::0;;8203:1265:::1;;;8549:29;::::0;-1:-1:-1;;;8549:29:10::1;::::0;::::1;10121:24:11::0;10161:11;;8549:29:10::1;;;;;;;;;;;;8539:40;;;;;;8525:10;:54:::0;8521:947:::1;;8616:15;::::0;-1:-1:-1;;;;;8616:15:10;;::::1;8603:28:::0;;::::1;::::0;8595:60:::1;;;;-1:-1:-1::0;;;8595:60:10::1;;;;;;;:::i;:::-;8716:15;::::0;;-1:-1:-1;;;;;8716:15:10;;::::1;8699:33;::::0;;;:16:::1;:33;::::0;;;;;8669:27;;::::1;::::0;;;;;;:63;;;;8716:15;8669:63;;::::1;::::0;;;::::1;::::0;8770:15;;;;::::1;8753:33:::0;;;;;8746:40;;;::::1;::::0;8800:27;;-1:-1:-1;;;;;;8800:27:10::1;;::::0;;8521:947:::1;;;8872:29;::::0;-1:-1:-1;;;8872:29:10::1;::::0;::::1;10385:24:11::0;10425:11;;8872:29:10::1;;;;;;;;;;;;8862:40;;;;;;8848:10;:54:::0;8844:624:::1;;8939:15;::::0;-1:-1:-1;;;;;8939:15:10;;::::1;8926:28:::0;;::::1;::::0;8918:60:::1;;;;-1:-1:-1::0;;;8918:60:10::1;;;;;;;:::i;:::-;8992:15;:27:::0;;-1:-1:-1;;;;;;8992:27:10::1;-1:-1:-1::0;;;;;8992:27:10;::::1;;::::0;;8844:624:::1;;;9064:29;::::0;-1:-1:-1;;;9064:29:10::1;::::0;::::1;10649:24:11::0;10689:11;;9064:29:10::1;;;;;;;;;;;;9054:40;;;;;;9040:10;:54:::0;9036:432:::1;;9131:15;::::0;-1:-1:-1;;;;;9131:15:10;;::::1;9118:28:::0;;::::1;::::0;9110:60:::1;;;;-1:-1:-1::0;;;9110:60:10::1;;;;;;;:::i;:::-;9184:15;:27:::0;;-1:-1:-1;;;;;;9184:27:10::1;-1:-1:-1::0;;;;;9184:27:10;::::1;;::::0;;9036:432:::1;;;9256:27;::::0;-1:-1:-1;;;9256:27:10::1;::::0;::::1;10913:22:11::0;10951:11;;9256:27:10::1;;;;;;;;;;;;9246:38;;;;;;9232:10;:52:::0;9228:240:::1;;9321:13;::::0;-1:-1:-1;;;;;9321:13:10;;::::1;9308:26:::0;;::::1;::::0;9300:58:::1;;;;-1:-1:-1::0;;;9300:58:10::1;;;;;;;:::i;:::-;9372:13;:25:::0;;-1:-1:-1;;;;;;9372:25:10::1;-1:-1:-1::0;;;;;9372:25:10;::::1;;::::0;;9228:240:::1;;;9428:29;::::0;-1:-1:-1;;;9428:29:10;;11175:2:11;9428:29:10::1;::::0;::::1;11157:21:11::0;11214:2;11194:18;;;11187:30;-1:-1:-1;;;11233:18:11;;;11226:49;11292:18;;9428:29:10::1;10973:343:11::0;9228:240:10::1;9482:36;9496:10;9508:9;9482:36;;;;;;;:::i;:::-;;;;;;;;8055:1470;7969:1556:::0;;:::o;1377:69::-;1443:3;1423:16;-1:-1:-1;;;1438:1:10;1423:16;:::i;:::-;1422:24;;;;:::i;:::-;1377:69;:::o;14172:61::-;1531:13:0;:11;:13::i;:::-;14218:8:10::1;:6;:8::i;1001:72::-:0;1070:3;1049:17;-1:-1:-1;;;1064:2:10;1049:17;:::i;9624:420::-;2262:21:3;:19;:21::i;:::-;1240:19:2::1;:17;:19::i;:::-;9723:1:10::2;9714:6;:10;9706:37;;;;-1:-1:-1::0;;;9706:37:10::2;;;;;;;:::i;:::-;9786:6;9761:21;9771:10;9761:9;:21::i;:::-;:31;;9753:64;;;::::0;-1:-1:-1;;;9753:64:10;;7633:2:11;9753:64:10::2;::::0;::::2;7615:21:11::0;7672:2;7652:18;;;7645:30;-1:-1:-1;;;7691:18:11;;;7684:50;7751:18;;9753:64:10::2;7431:344:11::0;9753:64:10::2;9827:25;9833:10;9845:6;9827:5;:25::i;:::-;9902:10;9889:24;::::0;;;:12:::2;:24;::::0;;;;;:36:::2;::::0;9918:6;9889:28:::2;:36::i;:::-;9875:10;9862:24;::::0;;;:12:::2;:24;::::0;;;;:63;9955:17:::2;::::0;:29:::2;::::0;9977:6;9955:21:::2;:29::i;:::-;9935:17;:49:::0;9999:38:::2;::::0;160:25:11;;;10018:10:10::2;::::0;9999:38:::2;::::0;148:2:11;133:18;9999:38:10::2;14:177:11::0;1962:93:4;2009:13;2041:7;2034:14;;;;;:::i;1127:72:10:-;1196:3;1175:17;-1:-1:-1;;;1190:2:10;1175:17;:::i;13553:288::-;13662:4;1240:19:2;:17;:19::i;:::-;13678:12:10::1;13693:26;13708:2;13712:6;13693:14;:26::i;:::-;13678:41;;13733:7;13729:82;;;13761:39;::::0;160:25:11;;;-1:-1:-1;;;;;13761:39:10;::::1;::::0;13777:10:::1;::::0;13761:39:::1;::::0;148:2:11;133:18;13761:39:10::1;;;;;;;13827:7:::0;13553:288;-1:-1:-1;;;13553:288:10:o;7311:446::-;1531:13:0;:11;:13::i;:::-;2262:21:3::1;:19;:21::i;:::-;7446:4:10::2;-1:-1:-1::0;;;;;7429:22:10;::::2;::::0;7421:60:::2;;;::::0;-1:-1:-1;;;7421:60:10;;11845:2:11;7421:60:10::2;::::0;::::2;11827:21:11::0;11884:2;11864:18;;;11857:30;11923:27;11903:18;;;11896:55;11968:18;;7421:60:10::2;11643:349:11::0;7421:60:10::2;-1:-1:-1::0;;;;;7499:16:10;::::2;7491:46;;;;-1:-1:-1::0;;;7491:46:10::2;;;;;;;:::i;:::-;7564:38;::::0;-1:-1:-1;;;7564:38:10;;7596:4:::2;7564:38;::::0;::::2;3188:51:11::0;7547:14:10::2;::::0;-1:-1:-1;;;;;7564:23:10;::::2;::::0;::::2;::::0;3161:18:11;;7564:38:10::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7547:55;;7629:1;7620:6;:10;7612:43;;;::::0;-1:-1:-1;;;7612:43:10;;12388:2:11;7612:43:10::2;::::0;::::2;12370:21:11::0;12427:2;12407:18;;;12400:30;-1:-1:-1;;;12446:18:11;;;12439:50;12506:18;;7612:43:10::2;12186:344:11::0;7612:43:10::2;7665:34;::::0;-1:-1:-1;;;7665:34:10;;-1:-1:-1;;;;;12727:32:11;;;7665:34:10::2;::::0;::::2;12709:51:11::0;12776:18;;;12769:34;;;7665:22:10;::::2;::::0;::::2;::::0;12682:18:11;;7665:34:10::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7739:2;-1:-1:-1::0;;;;;7714:36:10::2;7732:5;-1:-1:-1::0;;;;;7714:36:10::2;;7743:6;7714:36;;;;160:25:11::0;;148:2;133:18;;14:177;7714:36:10::2;;;;;;;;7411:346;2304:20:3::1;1717:1:::0;2810:7;:22;2630:209;876:71:10;944:3;923:17;-1:-1:-1;;;938:2:10;923:17;:::i;10697:915::-;2262:21:3;:19;:21::i;:::-;1240:19:2::1;:17;:19::i;:::-;10801:14:10::2;::::0;-1:-1:-1;;;;;10791:24:10;;::::2;10801:14;::::0;;::::2;;10791:24;::::0;:53:::2;;-1:-1:-1::0;10829:15:10::2;::::0;-1:-1:-1;;;;;10819:25:10;;::::2;10829:15:::0;::::2;10819:25;10791:53;10783:88;;;::::0;-1:-1:-1;;;10783:88:10;;13298:2:11;10783:88:10::2;::::0;::::2;13280:21:11::0;13337:2;13317:18;;;13310:30;-1:-1:-1;;;13356:18:11;;;13349:52;13418:18;;10783:88:10::2;13096:346:11::0;10783:88:10::2;-1:-1:-1::0;;;;;10916:24:10;::::2;10881:32;10916:24:::0;;;:16:::2;:24;::::0;;;;10981:23:::2;::::0;::::2;::::0;10958:20;;:46:::2;10950:79;;;::::0;-1:-1:-1;;;10950:79:10;;13649:2:11;10950:79:10::2;::::0;::::2;13631:21:11::0;13688:2;13668:18;;;13661:30;-1:-1:-1;;;13707:18:11;;;13700:50;13767:18;;10950:79:10::2;13447:344:11::0;10950:79:10::2;11040:19;11062:33;:15;11082:12;11062:19;:33::i;:::-;11040:55;;11105:20;11128:57;1535:8;11128:37;11153:11;11128:8;:20;;;:24;;:37;;;;:::i;:57::-;11214:20:::0;;11105:80;;-1:-1:-1;11199:35:10;::::2;11195:101;;;-1:-1:-1::0;11265:20:10;;11195:101:::2;11306:18;11327:41;11344:8;:23;;;11327:12;:16;;:41;;;;:::i;:::-;11306:62;;11399:1;11386:10;:14;11378:47;;;::::0;-1:-1:-1;;;11378:47:10;;13998:2:11;11378:47:10::2;::::0;::::2;13980:21:11::0;14037:2;14017:18;;;14010:30;-1:-1:-1;;;14056:18:11;;;14049:50;14116:18;;11378:47:10::2;13796:344:11::0;11378:47:10::2;11462:23;::::0;::::2;::::0;:39:::2;::::0;11490:10;11462:27:::2;:39::i;:::-;11436:23;::::0;::::2;:65:::0;11511:44:::2;11529:4;11536:6:::0;11544:10;11511:9:::2;:44::i;:::-;11586:6;-1:-1:-1::0;;;;;11570:35:10::2;;11594:10;11570:35;;;;160:25:11::0;;148:2;133:18;;14:177;11570:35:10::2;;;;;;;;10773:839;;;;2304:20:3::0;1717:1;2810:7;:22;2630:209;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3188:51:11::0;3161:18;;2672:31:0::1;3042:203:11::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1254:72:10:-:0;1323:3;1302:17;-1:-1:-1;;;1317:2:10;1302:17;:::i;3123:96:8:-;3181:7;3207:5;3211:1;3207;:5;:::i;3466:96::-;3524:7;3550:5;3554:1;3550;:5;:::i;3851:96::-;3909:7;3935:5;3939:1;3935;:5;:::i;8707:128:4:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:4;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:4;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:4;;-1:-1:-1;;;;;14498:32:11;;10668:60:4;;;14480:51:11;14547:18;;;14540:34;;;14590:18;;;14583:34;;;14453:18;;10668:60:4;14278:345:11;10613:130:4;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:4;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:4;;5525:1;5498:30;;;3188:51:11;3161:18;;5498:30:4;3042:203:11;5453:86:4;-1:-1:-1;;;;;5552:16:4;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:4;;5620:1;5591:32;;;3188:51:11;3161:18;;5591:32:4;3042:203:11;5548:86:4;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;2337:287:3:-;1760:1;2469:7;;:19;2461:63;;;;-1:-1:-1;;;2461:63:3;;14830:2:11;2461:63:3;;;14812:21:11;14869:2;14849:18;;;14842:30;14908:33;14888:18;;;14881:61;14959:18;;2461:63:3;14628:355:11;2461:63:3;1760:1;2599:7;:18;2337:287::o;1768:106:2:-;1686:7;;;;1837:9;1829:38;;;;-1:-1:-1;;;1829:38:2;;15190:2:11;1829:38:2;;;15172:21:11;15229:2;15209:18;;;15202:30;-1:-1:-1;;;15248:18:11;;;15241:46;15304:18;;1829:38:2;14988:340:11;3296:178:4;3365:4;735:10:7;3419:27:4;735:10:7;3436:2:4;3440:5;3419:9;:27::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:7;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:7;1901:40:0;;;3188:51:11;3161:18;;1901:40:0;3042:203:11;2434:117:2;1487:16;:14;:16::i;:::-;2492:7:::1;:15:::0;;-1:-1:-1;;2492:15:2::1;::::0;;2522:22:::1;735:10:7::0;2531:12:2::1;2522:22;::::0;-1:-1:-1;;;;;3206:32:11;;;3188:51;;3176:2;3161:18;2522:22:2::1;;;;;;;2434:117::o:0;7439:208:4:-;-1:-1:-1;;;;;7509:21:4;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:4;;7582:1;7553:32;;;3188:51:11;3161:18;;7553:32:4;3042:203:11;7505:91:4;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:4;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:4;;8106:1;8079:30;;;3188:51:11;3161:18;;8079:30:4;3042:203:11;8031:89:4;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2187:115:2:-;1240:19;:17;:19::i;:::-;2246:7:::1;:14:::0;;-1:-1:-1;;2246:14:2::1;2256:4;2246:14;::::0;;2275:20:::1;2282:12;735:10:7::0;;656:96;2756::8;2814:7;2840:5;2844:1;2840;:5;:::i;9682:432:4:-;-1:-1:-1;;;;;9794:19:4;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:4;;9865:1;9836:32;;;3188:51:11;3161:18;;9836:32:4;3042:203:11;9790:89:4;-1:-1:-1;;;;;9892:21:4;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:4;;9964:1;9936:31;;;3188:51:11;3161:18;;9936:31:4;3042:203:11;9888:90:4;-1:-1:-1;;;;;9987:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:4;10075:5;-1:-1:-1;;;;;10066:31:4;;10091:5;10066:31;;;;160:25:11;;148:2;133:18;;14:177;10066:31:4;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:4;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:4;;-1:-1:-1;6074:540:4;;-1:-1:-1;;;;;6288:15:4;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:4;;-1:-1:-1;;;;;14498:32:11;;6367:50:4;;;14480:51:11;14547:18;;;14540:34;;;14590:18;;;14583:34;;;14453:18;;6367:50:4;14278:345:11;6317:115:4;-1:-1:-1;;;;;6552:15:4;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:4;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:4;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:4;7073:4;-1:-1:-1;;;;;7064:25:4;;7083:5;7064:25;;;;160::11;;148:2;133:18;;14:177;7064:25:4;;;;;;;;5989:1107;;;:::o;1946:106:2:-;1686:7;;;;2004:41;;;;-1:-1:-1;;;2004:41:2;;15665:2:11;2004:41:2;;;15647:21:11;15704:2;15684:18;;;15677:30;-1:-1:-1;;;15723:18:11;;;15716:50;15783:18;;2004:41:2;15463:344:11;196:173;264:20;;-1:-1:-1;;;;;313:31:11;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;565:250::-;650:1;660:113;674:6;671:1;668:13;660:113;;;750:11;;;744:18;731:11;;;724:39;696:2;689:10;660:113;;;-1:-1:-1;;807:1:11;789:16;;782:27;565:250::o;820:271::-;862:3;900:5;894:12;927:6;922:3;915:19;943:76;1012:6;1005:4;1000:3;996:14;989:4;982:5;978:16;943:76;:::i;:::-;1073:2;1052:15;-1:-1:-1;;1048:29:11;1039:39;;;;1080:4;1035:50;;820:271;-1:-1:-1;;820:271:11:o;1096:220::-;1245:2;1234:9;1227:21;1208:4;1265:45;1306:2;1295:9;1291:18;1283:6;1265:45;:::i;1321:300::-;1389:6;1397;1450:2;1438:9;1429:7;1425:23;1421:32;1418:52;;;1466:1;1463;1456:12;1418:52;1489:29;1508:9;1489:29;:::i;:::-;1479:39;1587:2;1572:18;;;;1559:32;;-1:-1:-1;;;1321:300:11:o;1818:374::-;1895:6;1903;1911;1964:2;1952:9;1943:7;1939:23;1935:32;1932:52;;;1980:1;1977;1970:12;1932:52;2003:29;2022:9;2003:29;:::i;:::-;1993:39;;2051:38;2085:2;2074:9;2070:18;2051:38;:::i;:::-;1818:374;;2041:48;;-1:-1:-1;;;2158:2:11;2143:18;;;;2130:32;;1818:374::o;2386:420::-;2463:6;2471;2479;2532:2;2520:9;2511:7;2507:23;2503:32;2500:52;;;2548:1;2545;2538:12;2500:52;2571:29;2590:9;2571:29;:::i;:::-;2561:39;2669:2;2654:18;;2641:32;;-1:-1:-1;2770:2:11;2755:18;;;2742:32;;2386:420;-1:-1:-1;;;2386:420:11:o;2811:226::-;2870:6;2923:2;2911:9;2902:7;2898:23;2894:32;2891:52;;;2939:1;2936;2929:12;2891:52;-1:-1:-1;2984:23:11;;2811:226;-1:-1:-1;2811:226:11:o;3718:127::-;3779:10;3774:3;3770:20;3767:1;3760:31;3810:4;3807:1;3800:15;3834:4;3831:1;3824:15;3850:1029;3928:6;3936;3989:2;3977:9;3968:7;3964:23;3960:32;3957:52;;;4005:1;4002;3995:12;3957:52;4045:9;4032:23;4078:18;4070:6;4067:30;4064:50;;;4110:1;4107;4100:12;4064:50;4133:22;;4186:4;4178:13;;4174:27;-1:-1:-1;4164:55:11;;4215:1;4212;4205:12;4164:55;4255:2;4242:16;4281:18;4273:6;4270:30;4267:56;;;4303:18;;:::i;:::-;4352:2;4346:9;4444:2;4406:17;;-1:-1:-1;;4402:31:11;;;4435:2;4398:40;4394:54;4382:67;;4479:18;4464:34;;4500:22;;;4461:62;4458:88;;;4526:18;;:::i;:::-;4562:2;4555:22;4586;;;4627:15;;;4644:4;4623:26;4620:39;-1:-1:-1;4617:59:11;;;4672:1;4669;4662:12;4617:59;4732:6;4725:4;4721:2;4717:13;4710:4;4702:6;4698:17;4685:54;4787:1;4780:4;4771:6;4763;4759:19;4755:30;4748:41;4808:6;4798:16;;;;;4833:40;4867:4;4856:9;4852:20;4833:40;:::i;:::-;4823:50;;3850:1029;;;;;:::o;4884:260::-;4952:6;4960;5013:2;5001:9;4992:7;4988:23;4984:32;4981:52;;;5029:1;5026;5019:12;4981:52;5052:29;5071:9;5052:29;:::i;:::-;5042:39;;5100:38;5134:2;5123:9;5119:18;5100:38;:::i;6000:380::-;6079:1;6075:12;;;;6122;;;6143:61;;6197:4;6189:6;6185:17;6175:27;;6143:61;6250:2;6242:6;6239:14;6219:18;6216:38;6213:161;;6296:10;6291:3;6287:20;6284:1;6277:31;6331:4;6328:1;6321:15;6359:4;6356:1;6349:15;6213:161;;6000:380;;;:::o;6385:341::-;6587:2;6569:21;;;6626:2;6606:18;;;6599:30;-1:-1:-1;;;6660:2:11;6645:18;;6638:47;6717:2;6702:18;;6385:341::o;6731:338::-;6933:2;6915:21;;;6972:2;6952:18;;;6945:30;-1:-1:-1;;;7006:2:11;6991:18;;6984:44;7060:2;7045:18;;6731:338::o;7780:127::-;7841:10;7836:3;7832:20;7829:1;7822:31;7872:4;7869:1;7862:15;7896:4;7893:1;7886:15;7912:168;7985:9;;;8016;;8033:15;;;8027:22;;8013:37;8003:71;;8054:18;;:::i;8085:217::-;8125:1;8151;8141:132;;8195:10;8190:3;8186:20;8183:1;8176:31;8230:4;8227:1;8220:15;8258:4;8255:1;8248:15;8141:132;-1:-1:-1;8287:9:11;;8085:217::o;9014:289::-;9145:3;9183:6;9177:13;9199:66;9258:6;9253:3;9246:4;9238:6;9234:17;9199:66;:::i;:::-;9281:16;;;;;9014:289;-1:-1:-1;;9014:289:11:o;9571:343::-;9773:2;9755:21;;;9812:2;9792:18;;;9785:30;-1:-1:-1;;;9846:2:11;9831:18;;9824:49;9905:2;9890:18;;9571:343::o;11321:317::-;11498:2;11487:9;11480:21;11461:4;11518:45;11559:2;11548:9;11544:18;11536:6;11518:45;:::i;:::-;11510:53;;11628:1;11624;11619:3;11615:11;11611:19;11603:6;11599:32;11594:2;11583:9;11579:18;11572:60;11321:317;;;;;:::o;11997:184::-;12067:6;12120:2;12108:9;12099:7;12095:23;12091:32;12088:52;;;12136:1;12133;12126:12;12088:52;-1:-1:-1;12159:16:11;;11997:184;-1:-1:-1;11997:184:11:o;12814:277::-;12881:6;12934:2;12922:9;12913:7;12909:23;12905:32;12902:52;;;12950:1;12947;12940:12;12902:52;12982:9;12976:16;13035:5;13028:13;13021:21;13014:5;13011:32;13001:60;;13057:1;13054;13047:12;14145:128;14212:9;;;14233:11;;;14230:37;;;14247:18;;:::i;15333:125::-;15398:9;;;15419:10;;;15416:36;;;15432:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1647400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"COMMUNITY_ALLOCATION()": "464",
								"ECOSYSTEM_ALLOCATION()": "398",
								"LIQUIDITY_ALLOCATION()": "485",
								"RESERVE_ALLOCATION()": "421",
								"TOTAL_SUPPLY()": "324",
								"TREASURY_ALLOCATION()": "398",
								"VESTING_PERIOD()": "231",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24829",
								"balanceOf(address)": "2674",
								"burn(uint256)": "100987",
								"communityWallet()": "2426",
								"decimals()": "289",
								"ecosystemWallet()": "2449",
								"emergencyRecoverTokens(address,address)": "infinite",
								"getAllocations()": "infinite",
								"getReleasableVesting(address)": "infinite",
								"getTotalSupply()": "254",
								"getWallets()": "10892",
								"liquidityWallet()": "2448",
								"lockForDAO(uint256)": "infinite",
								"lockedForDAO(address)": "2598",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2443",
								"pause()": "infinite",
								"paused()": "2371",
								"releaseVesting(address)": "infinite",
								"renounceOwnership()": "infinite",
								"reserveWallet()": "2381",
								"symbol()": "infinite",
								"totalLockedForDAO()": "2329",
								"totalSupply()": "2416",
								"transfer(address,uint256)": "55407",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446",
								"transferWithLeverage(address,uint256,uint256)": "infinite",
								"treasuryWallet()": "2482",
								"unlockFromDAO(uint256)": "infinite",
								"unpause()": "infinite",
								"updateWallet(string,address)": "infinite",
								"vestingSchedules(address)": "4812",
								"vestingStart()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3469,
									"end": 4881,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3724,
									"end": 3736,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "F"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "145D585B9D1D5B481550924D105313"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "8A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "513441"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3624,
									"end": 3675,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3597,
									"end": 3615,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3597,
									"end": 3615,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1717,
									"end": 1718,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1822,
									"end": 1829,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1822,
									"end": 1844,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 997,
									"end": 1004,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 997,
									"end": 1012,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3756,
									"end": 3785,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3756,
									"end": 3785,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3748,
									"end": 3813,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3748,
									"end": 3813,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3748,
									"end": 3813,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3748,
									"end": 3813,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3748,
									"end": 3813,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3748,
									"end": 3813,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3888,
									"end": 3890,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3748,
									"end": 3813,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3748,
									"end": 3813,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3748,
									"end": 3813,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3870,
									"end": 3891,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3927,
									"end": 3929,
									"name": "PUSH",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3907,
									"end": 3925,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3907,
									"end": 3925,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3907,
									"end": 3925,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3900,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3966,
									"end": 3991,
									"name": "PUSH",
									"source": 11,
									"value": "496E76616C69642074726561737572792077616C6C6574000000000000000000"
								},
								{
									"begin": 3946,
									"end": 3964,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 3946,
									"end": 3964,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3946,
									"end": 3964,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3939,
									"end": 3992,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4009,
									"end": 4027,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 4009,
									"end": 4027,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3748,
									"end": 3813,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 3686,
									"end": 4033,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3748,
									"end": 3813,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3748,
									"end": 3813,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3831,
									"end": 3861,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3831,
									"end": 3861,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3823,
									"end": 3890,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3823,
									"end": 3890,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3823,
									"end": 3890,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3823,
									"end": 3890,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3823,
									"end": 3890,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3823,
									"end": 3890,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4240,
									"end": 4242,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3823,
									"end": 3890,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3823,
									"end": 3890,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3823,
									"end": 3890,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4222,
									"end": 4243,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4279,
									"end": 4281,
									"name": "PUSH",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 4259,
									"end": 4277,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4259,
									"end": 4277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4259,
									"end": 4277,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4252,
									"end": 4282,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4318,
									"end": 4344,
									"name": "PUSH",
									"source": 11,
									"value": "496E76616C69642065636F73797374656D2077616C6C65740000000000000000"
								},
								{
									"begin": 4298,
									"end": 4316,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4298,
									"end": 4316,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4298,
									"end": 4316,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4291,
									"end": 4345,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4362,
									"end": 4380,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 4362,
									"end": 4380,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3823,
									"end": 3890,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 4038,
									"end": 4386,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3823,
									"end": 3890,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 3823,
									"end": 3890,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3908,
									"end": 3938,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3908,
									"end": 3938,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3900,
									"end": 3967,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3900,
									"end": 3967,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3900,
									"end": 3967,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3900,
									"end": 3967,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3900,
									"end": 3967,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3900,
									"end": 3967,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4593,
									"end": 4595,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3900,
									"end": 3967,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3900,
									"end": 3967,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3900,
									"end": 3967,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4575,
									"end": 4596,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4632,
									"end": 4634,
									"name": "PUSH",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 4612,
									"end": 4630,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4612,
									"end": 4630,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4612,
									"end": 4630,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4605,
									"end": 4635,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4671,
									"end": 4697,
									"name": "PUSH",
									"source": 11,
									"value": "496E76616C696420636F6D6D756E6974792077616C6C65740000000000000000"
								},
								{
									"begin": 4651,
									"end": 4669,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 4651,
									"end": 4669,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4651,
									"end": 4669,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4644,
									"end": 4698,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4715,
									"end": 4733,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 4715,
									"end": 4733,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3900,
									"end": 3967,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 4391,
									"end": 4739,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3900,
									"end": 3967,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 3900,
									"end": 3967,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3985,
									"end": 4015,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3985,
									"end": 4015,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4044,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 3977,
									"end": 4044,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4044,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3977,
									"end": 4044,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3977,
									"end": 4044,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4044,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4946,
									"end": 4948,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3977,
									"end": 4044,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 3977,
									"end": 4044,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4044,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4928,
									"end": 4949,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4985,
									"end": 4987,
									"name": "PUSH",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 4965,
									"end": 4983,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4965,
									"end": 4983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4965,
									"end": 4983,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4958,
									"end": 4988,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5024,
									"end": 5050,
									"name": "PUSH",
									"source": 11,
									"value": "496E76616C6964206C69717569646974792077616C6C65740000000000000000"
								},
								{
									"begin": 5004,
									"end": 5022,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 5004,
									"end": 5022,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5004,
									"end": 5022,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4997,
									"end": 5051,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5068,
									"end": 5086,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 5068,
									"end": 5086,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3977,
									"end": 4044,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 4744,
									"end": 5092,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3977,
									"end": 4044,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 3977,
									"end": 4044,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4062,
									"end": 4090,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4062,
									"end": 4090,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4054,
									"end": 4117,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 4054,
									"end": 4117,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4054,
									"end": 4117,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4054,
									"end": 4117,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4054,
									"end": 4117,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4054,
									"end": 4117,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5299,
									"end": 5301,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4054,
									"end": 4117,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4054,
									"end": 4117,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4054,
									"end": 4117,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5281,
									"end": 5302,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5338,
									"end": 5340,
									"name": "PUSH",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 5318,
									"end": 5336,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 5318,
									"end": 5336,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5318,
									"end": 5336,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5311,
									"end": 5341,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5377,
									"end": 5401,
									"name": "PUSH",
									"source": 11,
									"value": "496E76616C696420726573657276652077616C6C657400000000000000000000"
								},
								{
									"begin": 5357,
									"end": 5375,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 5357,
									"end": 5375,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5357,
									"end": 5375,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5350,
									"end": 5402,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5419,
									"end": 5437,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 5419,
									"end": 5437,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4054,
									"end": 4117,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 5097,
									"end": 5443,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4054,
									"end": 4117,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 4054,
									"end": 4117,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4142,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4128,
									"end": 4160,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"modifierDepth": 2,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4160,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4185,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4170,
									"end": 4204,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4170,
									"end": 4204,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"modifierDepth": 2,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4170,
									"end": 4204,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4229,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 4214,
									"end": 4248,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4248,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4248,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4248,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4248,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4248,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4248,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4248,
									"modifierDepth": 2,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4248,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4214,
									"end": 4248,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4273,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 4258,
									"end": 4292,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4292,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4292,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4292,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4292,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4292,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4292,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4292,
									"modifierDepth": 2,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4292,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4258,
									"end": 4292,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4315,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"modifierDepth": 2,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4302,
									"end": 4332,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4358,
									"end": 4373,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 10
								},
								{
									"begin": 4343,
									"end": 4373,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 4343,
									"end": 4373,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 944,
									"end": 947,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 923,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 801,
									"end": 823,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 938,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 923,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 923,
									"end": 940,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 923,
									"end": 940,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 923,
									"end": 940,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 922,
									"end": 947,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4516,
									"end": 4517,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4479,
									"end": 4518,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4479,
									"end": 4518,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4461,
									"end": 4475,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 4461,
									"end": 4475,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4461,
									"end": 4475,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 4461,
									"end": 4475,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4461,
									"end": 4475,
									"modifierDepth": 2,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4461,
									"end": 4475,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4476,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4476,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4460,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "E"
								},
								{
									"begin": 4444,
									"end": 4476,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4476,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4476,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4444,
									"end": 4476,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4476,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4476,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4476,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4461,
									"end": 4475,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4444,
									"end": 4518,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1070,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1049,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 801,
									"end": 823,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1064,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1049,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1049,
									"end": 1066,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1049,
									"end": 1066,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1049,
									"end": 1066,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1073,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4602,
									"end": 4603,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4564,
									"end": 4604,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4564,
									"end": 4604,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4545,
									"end": 4560,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4545,
									"end": 4560,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4545,
									"end": 4560,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4561,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4561,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4544,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "E"
								},
								{
									"begin": 4528,
									"end": 4561,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4561,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4561,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4528,
									"end": 4561,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4561,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4545,
									"end": 4560,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4528,
									"end": 4604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4528,
									"end": 4604,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4652,
									"end": 4716,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4666,
									"end": 4670,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1070,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1049,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 801,
									"end": 823,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1064,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1049,
									"end": 1066,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1049,
									"end": 1066,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1049,
									"end": 1066,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 1049,
									"end": 1066,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1048,
									"end": 1073,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1048,
									"end": 1073,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 944,
									"end": 947,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 923,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 801,
									"end": 823,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 938,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 923,
									"end": 940,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 923,
									"end": 940,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 923,
									"end": 940,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 923,
									"end": 940,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 922,
									"end": 947,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 922,
									"end": 947,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4673,
									"end": 4715,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4673,
									"end": 4715,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4673,
									"end": 4715,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4673,
									"end": 4715,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4673,
									"end": 4715,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4673,
									"end": 4715,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 4673,
									"end": 4715,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4652,
									"end": 4657,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 4652,
									"end": 4716,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4652,
									"end": 4716,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4652,
									"end": 4716,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4732,
									"end": 4747,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 4732,
									"end": 4747,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4726,
									"end": 4770,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 4726,
									"end": 4770,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4732,
									"end": 4747,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1196,
									"end": 1199,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1175,
									"end": 1192,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 801,
									"end": 823,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1190,
									"end": 1192,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "F"
								},
								{
									"begin": 1175,
									"end": 1192,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1175,
									"end": 1192,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1175,
									"end": 1192,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1175,
									"end": 1192,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1199,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1174,
									"end": 1199,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1199,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1174,
									"end": 1199,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1174,
									"end": 1199,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4726,
									"end": 4770,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 4726,
									"end": 4770,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4786,
									"end": 4801,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "A"
								},
								{
									"begin": 4786,
									"end": 4801,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4786,
									"end": 4801,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4780,
									"end": 4824,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 4780,
									"end": 4824,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4786,
									"end": 4801,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4786,
									"end": 4801,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4786,
									"end": 4801,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4786,
									"end": 4801,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1323,
									"end": 1326,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1323,
									"end": 1326,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1302,
									"end": 1319,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 1302,
									"end": 1319,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 801,
									"end": 823,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 801,
									"end": 823,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1302,
									"end": 1319,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1302,
									"end": 1319,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4780,
									"end": 4824,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 4780,
									"end": 4824,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4840,
									"end": 4853,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 4840,
									"end": 4853,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4834,
									"end": 4874,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 4834,
									"end": 4874,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4840,
									"end": 4853,
									"modifierDepth": 2,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1443,
									"end": 1446,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 1423,
									"end": 1439,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 801,
									"end": 823,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 1438,
									"end": 1439,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 1423,
									"end": 1439,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1423,
									"end": 1439,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4834,
									"end": 4874,
									"modifierDepth": 2,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 4834,
									"end": 4874,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 4881,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3624,
									"end": 3675,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3597,
									"end": 3615,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3597,
									"end": 3615,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 3478,
									"end": 3681,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6325,
									"end": 6357,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6325,
									"end": 6357,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6358,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6374,
									"end": 6392,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 6374,
									"end": 6392,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6374,
									"end": 6392,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6367,
									"end": 6401,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6367,
									"end": 6401,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6367,
									"end": 6401,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "PUSH",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6410,
									"end": 6444,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6410,
									"end": 6444,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6410,
									"end": 6444,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6280,
									"end": 6298,
									"name": "PUSH",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 6280,
									"end": 6298,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 6105,
									"end": 6450,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6601,
									"end": 6626,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6601,
									"end": 6626,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 6589,
									"end": 6591,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6574,
									"end": 6592,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6574,
									"end": 6592,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6455,
									"end": 6632,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 832,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 311,
									"end": 317,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 325,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 327,
									"end": 333,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 343,
									"end": 349,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 357,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 404,
									"end": 407,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 392,
									"end": 401,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 383,
									"end": 390,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 379,
									"end": 402,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 375,
									"end": 408,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 372,
									"end": 425,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 372,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 372,
									"end": 425,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 421,
									"end": 422,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 419,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 411,
									"end": 423,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 372,
									"end": 425,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 372,
									"end": 425,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 444,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 474,
									"end": 483,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 444,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 444,
									"end": 484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 444,
									"end": 484,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 444,
									"end": 484,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 434,
									"end": 484,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 434,
									"end": 484,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 503,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 548,
									"end": 550,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 546,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 533,
									"end": 551,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 503,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 503,
									"end": 552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 503,
									"end": 552,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 503,
									"end": 552,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 493,
									"end": 552,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 493,
									"end": 552,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 571,
									"end": 620,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 616,
									"end": 618,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 605,
									"end": 614,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 601,
									"end": 619,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 571,
									"end": 620,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 571,
									"end": 620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 571,
									"end": 620,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 571,
									"end": 620,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 561,
									"end": 620,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 561,
									"end": 620,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 639,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 684,
									"end": 686,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 673,
									"end": 682,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 669,
									"end": 687,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 639,
									"end": 688,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 639,
									"end": 688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 639,
									"end": 688,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 639,
									"end": 688,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 629,
									"end": 688,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 629,
									"end": 688,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 707,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 752,
									"end": 755,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 741,
									"end": 750,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 737,
									"end": 756,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 707,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 707,
									"end": 757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 707,
									"end": 757,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 707,
									"end": 757,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 697,
									"end": 757,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 697,
									"end": 757,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 776,
									"end": 826,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 821,
									"end": 824,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 810,
									"end": 819,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 806,
									"end": 825,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 776,
									"end": 826,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 776,
									"end": 826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 776,
									"end": 826,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 776,
									"end": 826,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 766,
									"end": 826,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 766,
									"end": 826,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 196,
									"end": 832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 837,
									"end": 964,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 837,
									"end": 964,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 898,
									"end": 908,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 893,
									"end": 896,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 889,
									"end": 909,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 886,
									"end": 887,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 879,
									"end": 910,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 929,
									"end": 933,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 926,
									"end": 927,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 919,
									"end": 934,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 953,
									"end": 957,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 950,
									"end": 951,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 943,
									"end": 958,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 969,
									"end": 1349,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 969,
									"end": 1349,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1048,
									"end": 1049,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1044,
									"end": 1056,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1044,
									"end": 1056,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1044,
									"end": 1056,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1044,
									"end": 1056,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1091,
									"end": 1103,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1091,
									"end": 1103,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1091,
									"end": 1103,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1112,
									"end": 1173,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 1112,
									"end": 1173,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1166,
									"end": 1170,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 1158,
									"end": 1164,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1154,
									"end": 1171,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1144,
									"end": 1171,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1144,
									"end": 1171,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1112,
									"end": 1173,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 1112,
									"end": 1173,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1219,
									"end": 1221,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1211,
									"end": 1217,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1208,
									"end": 1222,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1188,
									"end": 1206,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1185,
									"end": 1223,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1182,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 1182,
									"end": 1343,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1265,
									"end": 1275,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 1260,
									"end": 1263,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 1256,
									"end": 1276,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1253,
									"end": 1254,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 1277,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1300,
									"end": 1304,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1290,
									"end": 1305,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1328,
									"end": 1332,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1325,
									"end": 1326,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1333,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1182,
									"end": 1343,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 1182,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1182,
									"end": 1343,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 969,
									"end": 1349,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 969,
									"end": 1349,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 969,
									"end": 1349,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 969,
									"end": 1349,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1480,
									"end": 1998,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 1480,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1584,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1577,
									"end": 1580,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1585,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1992,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1992,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 1571,
									"end": 1992,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1618,
									"end": 1623,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1615,
									"end": 1616,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1608,
									"end": 1624,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1649,
									"end": 1667,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 1732,
									"end": 1734,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1720,
									"end": 1730,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1716,
									"end": 1735,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 1709,
									"end": 1736,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1699,
									"end": 1737,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1768,
									"end": 1772,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1756,
									"end": 1766,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1750,
									"end": 1797,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1750,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 1750,
									"end": 1797,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1791,
									"end": 1795,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1750,
									"end": 1797,
									"name": "tag",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 1750,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1846,
									"end": 1848,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 1841,
									"end": 1844,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1834,
									"end": 1835,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 1830,
									"end": 1850,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1824,
									"end": 1828,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1851,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1810,
									"end": 1851,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1810,
									"end": 1851,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1901,
									"end": 1982,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 1901,
									"end": 1982,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1919,
									"end": 1921,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1912,
									"end": 1917,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1909,
									"end": 1922,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1901,
									"end": 1982,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1901,
									"end": 1982,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 1901,
									"end": 1982,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1978,
									"end": 1979,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1964,
									"end": 1980,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1964,
									"end": 1980,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1934,
									"end": 1947,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1901,
									"end": 1982,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 1901,
									"end": 1982,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1901,
									"end": 1982,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 1901,
									"end": 1982,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1905,
									"end": 1908,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1905,
									"end": 1908,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1571,
									"end": 1992,
									"name": "tag",
									"source": 11,
									"value": "102"
								},
								{
									"begin": 1571,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1480,
									"end": 1998,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1480,
									"end": 1998,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1480,
									"end": 1998,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1480,
									"end": 1998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2174,
									"end": 3473,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2174,
									"end": 3473,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2294,
									"end": 2304,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2294,
									"end": 2304,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2316,
									"end": 2346,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2346,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2313,
									"end": 2369,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2313,
									"end": 2369,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 2313,
									"end": 2369,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 2349,
									"end": 2367,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 2349,
									"end": 2367,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2378,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 2460,
									"end": 2464,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2454,
									"end": 2465,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 2428,
									"end": 2466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2422,
									"end": 2426,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2378,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 2378,
									"end": 2475,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2378,
									"end": 2475,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 2378,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2524,
									"end": 2528,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2555,
									"end": 2557,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2544,
									"end": 2558,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2544,
									"end": 2558,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2572,
									"end": 2573,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2567,
									"end": 3216,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2567,
									"end": 3216,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2567,
									"end": 3216,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 2567,
									"end": 3216,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3260,
									"end": 3261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3277,
									"end": 3283,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3274,
									"end": 3363,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3274,
									"end": 3363,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 3274,
									"end": 3363,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3329,
									"end": 3348,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3329,
									"end": 3348,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3329,
									"end": 3348,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3323,
									"end": 3349,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3274,
									"end": 3363,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 3274,
									"end": 3363,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2127,
									"end": 2138,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2127,
									"end": 2138,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2127,
									"end": 2138,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 2119,
									"end": 2148,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2109,
									"end": 2149,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2155,
									"end": 2156,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2151,
									"end": 2162,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2162,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2151,
									"end": 2162,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 2106,
									"end": 2163,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3376,
									"end": 3457,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3376,
									"end": 3457,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2537,
									"end": 3467,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 2537,
									"end": 3467,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2567,
									"end": 3216,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 2567,
									"end": 3216,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1427,
									"end": 1428,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 1434,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1420,
									"end": 1434,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1420,
									"end": 1434,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1464,
									"end": 1468,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1451,
									"end": 1469,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1451,
									"end": 1469,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2603,
									"end": 2623,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2603,
									"end": 2623,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2603,
									"end": 2623,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2943,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 2721,
									"end": 2943,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2735,
									"end": 2742,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2732,
									"end": 2733,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2729,
									"end": 2743,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2943,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2943,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 2721,
									"end": 2943,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2817,
									"end": 2836,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 2817,
									"end": 2836,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2817,
									"end": 2836,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2811,
									"end": 2837,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2796,
									"end": 2838,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2796,
									"end": 2838,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2924,
									"end": 2928,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2909,
									"end": 2929,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 2909,
									"end": 2929,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2909,
									"end": 2929,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2909,
									"end": 2929,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 2877,
									"end": 2878,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2865,
									"end": 2879,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2865,
									"end": 2879,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2865,
									"end": 2879,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2865,
									"end": 2879,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2751,
									"end": 2763,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2943,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 2721,
									"end": 2943,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2721,
									"end": 2943,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 2721,
									"end": 2943,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2725,
									"end": 2728,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2971,
									"end": 2977,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2962,
									"end": 2969,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2959,
									"end": 2978,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 2956,
									"end": 3157,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2956,
									"end": 3157,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 2956,
									"end": 3157,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3051,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3051,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3051,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3026,
									"end": 3052,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3115,
									"end": 3116,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3111,
									"end": 3125,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3111,
									"end": 3125,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3111,
									"end": 3125,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3127,
									"end": 3130,
									"name": "PUSH",
									"source": 11,
									"value": "F8"
								},
								{
									"begin": 3107,
									"end": 3131,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3103,
									"end": 3140,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 3099,
									"end": 3141,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3084,
									"end": 3142,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3069,
									"end": 3143,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3069,
									"end": 3143,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2956,
									"end": 3157,
									"name": "tag",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 2956,
									"end": 3157,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3203,
									"end": 3204,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3187,
									"end": 3201,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3187,
									"end": 3201,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3187,
									"end": 3201,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 3183,
									"end": 3205,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3170,
									"end": 3206,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3170,
									"end": 3206,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2174,
									"end": 3473,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5448,
									"end": 5575,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 5448,
									"end": 5575,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5509,
									"end": 5519,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 5504,
									"end": 5507,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 5500,
									"end": 5520,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5497,
									"end": 5498,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5490,
									"end": 5521,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5540,
									"end": 5544,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 5537,
									"end": 5538,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 5530,
									"end": 5545,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5564,
									"end": 5568,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 5561,
									"end": 5562,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5554,
									"end": 5569,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 5580,
									"end": 5748,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 5580,
									"end": 5748,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5653,
									"end": 5662,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5653,
									"end": 5662,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5653,
									"end": 5662,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5684,
									"end": 5693,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5684,
									"end": 5693,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5701,
									"end": 5716,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5701,
									"end": 5716,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5701,
									"end": 5716,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 5695,
									"end": 5717,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5695,
									"end": 5717,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 5681,
									"end": 5718,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5671,
									"end": 5742,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 5671,
									"end": 5742,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5722,
									"end": 5740,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 5722,
									"end": 5740,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 5722,
									"end": 5740,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5722,
									"end": 5740,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 5722,
									"end": 5740,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5580,
									"end": 5748,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5580,
									"end": 5748,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5580,
									"end": 5748,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5580,
									"end": 5748,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5580,
									"end": 5748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5753,
									"end": 5970,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 5753,
									"end": 5970,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5793,
									"end": 5794,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5819,
									"end": 5820,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5809,
									"end": 5941,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 5809,
									"end": 5941,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5863,
									"end": 5873,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B71"
								},
								{
									"begin": 5858,
									"end": 5861,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 5854,
									"end": 5874,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5851,
									"end": 5852,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5844,
									"end": 5875,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 5902,
									"name": "PUSH",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 5895,
									"end": 5896,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 5888,
									"end": 5903,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5926,
									"end": 5930,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 5923,
									"end": 5924,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5916,
									"end": 5931,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 5809,
									"end": 5941,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 5809,
									"end": 5941,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5955,
									"end": 5964,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 5955,
									"end": 5964,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5753,
									"end": 5970,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5975,
									"end": 6100,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 5975,
									"end": 6100,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6040,
									"end": 6049,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6040,
									"end": 6049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6040,
									"end": 6049,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6061,
									"end": 6071,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6061,
									"end": 6071,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6061,
									"end": 6071,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6058,
									"end": 6094,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6058,
									"end": 6094,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 6058,
									"end": 6094,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6074,
									"end": 6092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 6074,
									"end": 6092,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 6074,
									"end": 6092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6455,
									"end": 6632,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 6455,
									"end": 6632,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "1601"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 562,
									"end": 14358,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f184e98d2f389374b4bad94c2d07accf52fb3a7d3f3bb13acd4d85349f93f33a64736f6c634300081c0033",
									".code": [
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "780B9737"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "BF1AD7E0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "D72B11BD"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "D72B11BD"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "DB7A4605"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "F9428F38"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "FDB20CCB"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "BF1AD7E0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "C4E41B22"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "C7574839"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "D4698016"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "D486D129"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "90534F24"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "90534F24"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "9576A374"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "993EB1C5"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "B7E26A2E"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "780B9737"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "7B5C7F03"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "902D55A5"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "4A0CED96"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "4A0CED96"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "65ED6E23"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "74300378"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "42966C68"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "435263EF"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "4626402B"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "254800D4"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "2AF44592"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "33127B0D"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "197D972"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "553BE1E"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 14358,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1535,
											"end": 1543,
											"name": "PUSH",
											"source": 10,
											"value": "1E13380"
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1543,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 11779,
											"end": 12307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11779,
											"end": 12307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1784,
											"end": 1806,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1766,
											"end": 1807,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1766,
											"end": 1807,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1754,
											"end": 1756,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1757,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1626,
											"end": 1813,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1631,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1594,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1594,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1594,
											"end": 1631,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1601"
										},
										{
											"begin": 1594,
											"end": 1631,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1594,
											"end": 1631,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 1908,
											"end": 1955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1955,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2339,
											"end": 2375,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2339,
											"end": 2375,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2327,
											"end": 2329,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2197,
											"end": 2381,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 12610,
											"end": 13329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 12610,
											"end": 13329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14356,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 14291,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 14291,
											"end": 14356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 14291,
											"end": 14356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14356,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 14291,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14356,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 6598,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6598,
											"end": 6832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 6934,
											"end": 7145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 6934,
											"end": 7145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1712,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3042,
											"end": 3245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1706,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2011,
											"end": 2043,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1616,
											"end": 1700,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 5380,
											"end": 5777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3534,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3509,
											"end": 3534,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3509,
											"end": 3534,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3577,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3577,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3577,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3593,
											"end": 3611,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3593,
											"end": 3611,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3593,
											"end": 3611,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3586,
											"end": 3620,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3653,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3654,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3629,
											"end": 3663,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3694,
											"end": 3697,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3679,
											"end": 3698,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3698,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3672,
											"end": 3707,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3499,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3250,
											"end": 3713,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 13975,
											"end": 14122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "tag",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 13975,
											"end": 14122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 10144,
											"end": 10579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10144,
											"end": 10579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 7969,
											"end": 9525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 7969,
											"end": 9525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1446,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1377,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1377,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1377,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14172,
											"end": 14233,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 14172,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14172,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 14172,
											"end": 14233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 14172,
											"end": 14233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 762,
											"end": 823,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 762,
											"end": 823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 762,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 762,
											"end": 823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 823,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1073,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1001,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1001,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1001,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 9624,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 9624,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1127,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1127,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1127,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1127,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1127,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 13553,
											"end": 13841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 13553,
											"end": 13841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 7311,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 7311,
											"end": 7757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 876,
											"end": 947,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 876,
											"end": 947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 876,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 876,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4986,
											"end": 5089,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 4986,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4986,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 4986,
											"end": 5089,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1784,
											"end": 1814,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 10697,
											"end": 11612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 10697,
											"end": 11612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1848,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6093,
											"end": 6461,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 6093,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6330,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 6316,
											"end": 6330,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6359,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 6344,
											"end": 6359,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6417,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 6402,
											"end": 6417,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6431,
											"end": 6444,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 6431,
											"end": 6444,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6093,
											"end": 6461,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6461,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6093,
											"end": 6461,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6330,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6316,
											"end": 6330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6330,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6330,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6316,
											"end": 6330,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6330,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6316,
											"end": 6330,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5459,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5459,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6344,
											"end": 6359,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6359,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6359,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5490,
											"end": 5492,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5475,
											"end": 5493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5468,
											"end": 5528,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6373,
											"end": 6388,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5544,
											"end": 5562,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5537,
											"end": 5597,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5537,
											"end": 5597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5537,
											"end": 5597,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5537,
											"end": 5597,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6402,
											"end": 6417,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6417,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5628,
											"end": 5630,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5613,
											"end": 5631,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5606,
											"end": 5666,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6431,
											"end": 6444,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 5682,
											"end": 5701,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5682,
											"end": 5701,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5675,
											"end": 5736,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5395,
											"end": 5398,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 5380,
											"end": 5399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6093,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 5149,
											"end": 5742,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1326,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1254,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1254,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1254,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1254,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2287,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5946,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5946,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5946,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5977,
											"end": 5979,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 5989,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 5989,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 5989,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 5989,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 5747,
											"end": 5995,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11848,
											"end": 11855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11902,
											"end": 11918,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11902,
											"end": 11926,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11960,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11960,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11965,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 11936,
											"end": 11975,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11974,
											"end": 11975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11974,
											"end": 11975,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11779,
											"end": 12307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11936,
											"end": 11975,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 11936,
											"end": 11975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12005,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 12008,
											"end": 12023,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12040,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1601"
										},
										{
											"begin": 12008,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 12008,
											"end": 12041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12008,
											"end": 12041,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 12008,
											"end": 12041,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12041,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11986,
											"end": 12041,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12074,
											"end": 12131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1535,
											"end": 1543,
											"name": "PUSH",
											"source": 10,
											"value": "1E13380"
										},
										{
											"begin": 12074,
											"end": 12111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 12099,
											"end": 12110,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12082,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12094,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12074,
											"end": 12094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12094,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 12074,
											"end": 12098,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12111,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12111,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12111,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12074,
											"end": 12111,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12111,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 12074,
											"end": 12111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 12074,
											"end": 12131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12074,
											"end": 12131,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 12074,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12180,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12180,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12051,
											"end": 12131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12145,
											"end": 12180,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12145,
											"end": 12180,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12242,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12242,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 12141,
											"end": 12242,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12211,
											"end": 12231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12211,
											"end": 12231,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12242,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 12141,
											"end": 12242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12276,
											"end": 12299,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12276,
											"end": 12299,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12276,
											"end": 12299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12276,
											"end": 12299,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 12259,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 12259,
											"end": 12300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12259,
											"end": 12271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12259,
											"end": 12271,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12259,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 12259,
											"end": 12300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12259,
											"end": 12300,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 12259,
											"end": 12300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12252,
											"end": 12300,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11779,
											"end": 12307,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11779,
											"end": 12307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 12610,
											"end": 13329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12731,
											"end": 12735,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2262,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1240,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12755,
											"end": 12771,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12755,
											"end": 12771,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 12747,
											"end": 12793,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 12747,
											"end": 12793,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12820,
											"end": 12821,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12811,
											"end": 12817,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12811,
											"end": 12821,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 12803,
											"end": 12840,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 12803,
											"end": 12840,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12870,
											"end": 12873,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 12858,
											"end": 12866,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12858,
											"end": 12873,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12858,
											"end": 12873,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12850,
											"end": 12906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 12850,
											"end": 12906,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12850,
											"end": 12906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12850,
											"end": 12906,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12850,
											"end": 12906,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12850,
											"end": 12906,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7278,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12850,
											"end": 12906,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12850,
											"end": 12906,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12850,
											"end": 12906,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7258,
											"end": 7279,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7315,
											"end": 7317,
											"name": "PUSH",
											"source": 11,
											"value": "1C"
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7295,
											"end": 7313,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7354,
											"end": 7384,
											"name": "PUSH",
											"source": 11,
											"value": "4C65766572616765206D757374206265206174206C6561737420317800000000"
										},
										{
											"begin": 7334,
											"end": 7352,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7334,
											"end": 7352,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7334,
											"end": 7352,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7327,
											"end": 7385,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7402,
											"end": 7420,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7402,
											"end": 7420,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12850,
											"end": 12906,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7074,
											"end": 7426,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12850,
											"end": 12906,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 12850,
											"end": 12906,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12949,
											"end": 12955,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12945,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 12934,
											"end": 12944,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12933,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 12924,
											"end": 12945,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12945,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 12924,
											"end": 12945,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12955,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12924,
											"end": 12955,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12916,
											"end": 12980,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 12916,
											"end": 12980,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12916,
											"end": 12980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12916,
											"end": 12980,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12916,
											"end": 12980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12916,
											"end": 12980,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12916,
											"end": 12980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12916,
											"end": 12980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12916,
											"end": 12980,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7636,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7672,
											"end": 7674,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7675,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7734,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7751,
											"end": 7769,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7751,
											"end": 7769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12916,
											"end": 12980,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7431,
											"end": 7775,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12916,
											"end": 12980,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 12916,
											"end": 12980,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13154,
											"end": 13166,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13169,
											"end": 13195,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 13184,
											"end": 13186,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13188,
											"end": 13194,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13169,
											"end": 13183,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 13169,
											"end": 13195,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13169,
											"end": 13195,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 13169,
											"end": 13195,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13154,
											"end": 13195,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13154,
											"end": 13195,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13209,
											"end": 13216,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13205,
											"end": 13299,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13205,
											"end": 13299,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 13205,
											"end": 13299,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13237,
											"end": 13288,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5921,
											"end": 5946,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5946,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5921,
											"end": 5946,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5977,
											"end": 5979,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 5989,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 5989,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5955,
											"end": 5989,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13237,
											"end": 13288,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13265,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 13255,
											"end": 13265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "AE5A72E837B1C61D8F56D35C16816D1E29CC1A1E858253419499DDA337EA03E3"
										},
										{
											"begin": 13237,
											"end": 13288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13237,
											"end": 13288,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 13205,
											"end": 13299,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 13205,
											"end": 13299,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13315,
											"end": 13322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2839,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14291,
											"end": 14356,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 14291,
											"end": 14356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14339,
											"end": 14349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 14339,
											"end": 14347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 14339,
											"end": 14349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14339,
											"end": 14349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 14339,
											"end": 14349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14291,
											"end": 14356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2262,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1240,
											"end": 1257,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6713,
											"end": 6729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6713,
											"end": 6729,
											"modifierDepth": 3,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 6705,
											"end": 6751,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 6705,
											"end": 6751,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6778,
											"end": 6779,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6769,
											"end": 6775,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6769,
											"end": 6779,
											"modifierDepth": 3,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 6761,
											"end": 6798,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 6761,
											"end": 6798,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6825,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6814,
											"end": 6816,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6818,
											"end": 6824,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6813,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 6808,
											"end": 6825,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6808,
											"end": 6825,
											"modifierDepth": 3,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 6808,
											"end": 6825,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2839,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6832,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2262,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1240,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7036,
											"end": 7037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7033,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7037,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 7019,
											"end": 7056,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 7019,
											"end": 7056,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7066,
											"end": 7091,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7072,
											"end": 7082,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7084,
											"end": 7090,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7066,
											"end": 7071,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 7066,
											"end": 7091,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7066,
											"end": 7091,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 7066,
											"end": 7091,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7106,
											"end": 7138,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7119,
											"end": 7129,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 7119,
											"end": 7129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6"
										},
										{
											"begin": 7106,
											"end": 7138,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7138,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2839,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6934,
											"end": 7145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5447,
											"end": 5463,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 944,
											"end": 947,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 923,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 923,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 923,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 940,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 923,
											"end": 940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 922,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 922,
											"end": 947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 922,
											"end": 947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 922,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 922,
											"end": 947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 922,
											"end": 947,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 922,
											"end": 947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1049,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1049,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1049,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1049,
											"end": 1066,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 1049,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1048,
											"end": 1073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 1048,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1175,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1174,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1174,
											"end": 1199,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1174,
											"end": 1199,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1174,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1174,
											"end": 1199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1174,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 1174,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1326,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1302,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1317,
											"end": 1319,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1302,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1302,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1319,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 1302,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1301,
											"end": 1326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 1301,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1446,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1423,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1422,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5380,
											"end": 5777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 13975,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14065,
											"end": 14072,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 14091,
											"end": 14115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 10144,
											"end": 10579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 2262,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 1240,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10246,
											"end": 10247,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10237,
											"end": 10243,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10247,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 10229,
											"end": 10266,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 10229,
											"end": 10266,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10297,
											"end": 10307,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10296,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 10284,
											"end": 10308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10308,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10318,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 10284,
											"end": 10318,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10350,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 10276,
											"end": 10350,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10276,
											"end": 10350,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10276,
											"end": 10350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10350,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8509,
											"end": 8511,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10276,
											"end": 10350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10276,
											"end": 10350,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10276,
											"end": 10350,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8491,
											"end": 8512,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8528,
											"end": 8546,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8521,
											"end": 8551,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "PUSH",
											"source": 11,
											"value": "496E73756666696369656E74206C6F636B65642062616C616E63650000000000"
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8567,
											"end": 8585,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8560,
											"end": 8617,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8634,
											"end": 8652,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8634,
											"end": 8652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10276,
											"end": 10350,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8307,
											"end": 8658,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10276,
											"end": 10350,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 10276,
											"end": 10350,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10400,
											"end": 10410,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10399,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 10387,
											"end": 10411,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10387,
											"end": 10411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10411,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10387,
											"end": 10411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10411,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10411,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10423,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10387,
											"end": 10423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10416,
											"end": 10422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10415,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 10387,
											"end": 10423,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10387,
											"end": 10423,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10387,
											"end": 10423,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10373,
											"end": 10383,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10384,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10372,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 10360,
											"end": 10384,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10423,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10453,
											"end": 10470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 10453,
											"end": 10470,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10453,
											"end": 10482,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 10453,
											"end": 10482,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10475,
											"end": 10481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10453,
											"end": 10474,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 10453,
											"end": 10482,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10453,
											"end": 10482,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 10453,
											"end": 10482,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10433,
											"end": 10450,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 10433,
											"end": 10482,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10517,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 10498,
											"end": 10508,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10510,
											"end": 10516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10497,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 10492,
											"end": 10517,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10517,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 10492,
											"end": 10517,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10532,
											"end": 10572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10532,
											"end": 10572,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10553,
											"end": 10563,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10553,
											"end": 10563,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10532,
											"end": 10572,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "86E5F036736269C50194228317F229B5684D89D9DB959C604A1EF646D6CD6CA9"
										},
										{
											"begin": 10532,
											"end": 10572,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10532,
											"end": 10572,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8073,
											"end": 8096,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 8065,
											"end": 8123,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8065,
											"end": 8123,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8065,
											"end": 8123,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8865,
											"end": 8867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8065,
											"end": 8123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8065,
											"end": 8123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8123,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8847,
											"end": 8868,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8904,
											"end": 8906,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 8884,
											"end": 8902,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8884,
											"end": 8902,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8884,
											"end": 8902,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8877,
											"end": 8907,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642077616C6C65742061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8923,
											"end": 8941,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8923,
											"end": 8941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8923,
											"end": 8941,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8916,
											"end": 8968,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8985,
											"end": 9003,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8985,
											"end": 9003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8065,
											"end": 8123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8663,
											"end": 9009,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8065,
											"end": 8123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 8065,
											"end": 8123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8133,
											"end": 8151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8191,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 8164,
											"end": 8192,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8164,
											"end": 8192,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8193,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8193,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8193,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8193,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8193,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8133,
											"end": 8193,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8133,
											"end": 8193,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7472656173757279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9510,
											"end": 9533,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9510,
											"end": 9533,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9558,
											"end": 9559,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 9549,
											"end": 9560,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9549,
											"end": 9560,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9566,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8231,
											"end": 8259,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8260,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8221,
											"end": 8260,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8207,
											"end": 8260,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8203,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 8203,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8297,
											"end": 8311,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8297,
											"end": 8311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8297,
											"end": 8311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8311,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8311,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8311,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8297,
											"end": 8311,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8284,
											"end": 8311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8284,
											"end": 8311,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8284,
											"end": 8311,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8284,
											"end": 8311,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8276,
											"end": 8335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 8276,
											"end": 8335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 8396,
											"end": 8410,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 8396,
											"end": 8410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8396,
											"end": 8410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8379,
											"end": 8411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 8379,
											"end": 8411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8379,
											"end": 8411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8411,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8379,
											"end": 8411,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8379,
											"end": 8411,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8376,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8376,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8376,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8376,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8376,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8376,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8376,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8349,
											"end": 8411,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8463,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8463,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8463,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8463,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8463,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8463,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8449,
											"end": 8463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8464,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8464,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8464,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8464,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8464,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8504,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8504,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8478,
											"end": 8504,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8504,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8504,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8504,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8478,
											"end": 8504,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8203,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 8203,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8203,
											"end": 9468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 8203,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8549,
											"end": 8578,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65636F73797374656D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8549,
											"end": 8578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10121,
											"end": 10145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10161,
											"end": 10172,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 10161,
											"end": 10172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8549,
											"end": 8578,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8539,
											"end": 8579,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8539,
											"end": 8579,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8539,
											"end": 8579,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8539,
											"end": 8579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8539,
											"end": 8579,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8539,
											"end": 8579,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8525,
											"end": 8579,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 8521,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 8616,
											"end": 8631,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8616,
											"end": 8631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8631,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8616,
											"end": 8631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8603,
											"end": 8631,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8603,
											"end": 8631,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8603,
											"end": 8631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8603,
											"end": 8631,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8595,
											"end": 8655,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 8595,
											"end": 8655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8716,
											"end": 8731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 8716,
											"end": 8731,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8716,
											"end": 8731,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8716,
											"end": 8731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8716,
											"end": 8731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8716,
											"end": 8731,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 8699,
											"end": 8732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8732,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8696,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8696,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8696,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8696,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8696,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8696,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8696,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8696,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8716,
											"end": 8731,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8669,
											"end": 8732,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8785,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8785,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8785,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8786,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8786,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8786,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8786,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8746,
											"end": 8786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8746,
											"end": 8786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8746,
											"end": 8786,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8746,
											"end": 8786,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8746,
											"end": 8786,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8827,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8800,
											"end": 8827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8827,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8827,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 8521,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8521,
											"end": 9468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 8521,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8872,
											"end": 8901,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636F6D6D756E697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8872,
											"end": 8901,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10385,
											"end": 10409,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10425,
											"end": 10436,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 10425,
											"end": 10436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8872,
											"end": 8901,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8862,
											"end": 8902,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8862,
											"end": 8902,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8862,
											"end": 8902,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8862,
											"end": 8902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8862,
											"end": 8902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8862,
											"end": 8902,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 8848,
											"end": 8858,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8848,
											"end": 8902,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8844,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 8844,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8939,
											"end": 8954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 8939,
											"end": 8954,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8939,
											"end": 8954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8939,
											"end": 8954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8939,
											"end": 8954,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8926,
											"end": 8954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8926,
											"end": 8954,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8926,
											"end": 8954,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8926,
											"end": 8954,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8918,
											"end": 8978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 8918,
											"end": 8978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8992,
											"end": 9007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 8992,
											"end": 9019,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8992,
											"end": 9019,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8992,
											"end": 9019,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8992,
											"end": 9019,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8992,
											"end": 9019,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8992,
											"end": 9019,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 8992,
											"end": 9019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8992,
											"end": 9019,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 8844,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 8844,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8844,
											"end": 9468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 8844,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9064,
											"end": 9093,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9064,
											"end": 9093,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10649,
											"end": 10673,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10689,
											"end": 10700,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 10689,
											"end": 10700,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9064,
											"end": 9093,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9094,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9094,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9094,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9054,
											"end": 9094,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9054,
											"end": 9094,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9040,
											"end": 9050,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9040,
											"end": 9094,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 9036,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9131,
											"end": 9146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 9131,
											"end": 9146,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9131,
											"end": 9146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9131,
											"end": 9146,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9131,
											"end": 9146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9118,
											"end": 9146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9118,
											"end": 9146,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9118,
											"end": 9146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9118,
											"end": 9146,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 9110,
											"end": 9170,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 9110,
											"end": 9170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 9184,
											"end": 9211,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9211,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9211,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9184,
											"end": 9211,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9211,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9211,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9211,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9211,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 9036,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9036,
											"end": 9468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 9036,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9256,
											"end": 9283,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657365727665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9256,
											"end": 9283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10913,
											"end": 10935,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10951,
											"end": 10962,
											"name": "PUSH",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 10951,
											"end": 10962,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9256,
											"end": 9283,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9284,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9246,
											"end": 9284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9246,
											"end": 9284,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9232,
											"end": 9242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9232,
											"end": 9284,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 9228,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9321,
											"end": 9334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 9321,
											"end": 9334,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9321,
											"end": 9334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9321,
											"end": 9334,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9321,
											"end": 9334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9334,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9308,
											"end": 9334,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 9300,
											"end": 9358,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 9300,
											"end": 9358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9372,
											"end": 9385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 9372,
											"end": 9397,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9372,
											"end": 9397,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9372,
											"end": 9397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9372,
											"end": 9397,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9372,
											"end": 9397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9372,
											"end": 9397,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9372,
											"end": 9397,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9372,
											"end": 9397,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9468,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 9228,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 9228,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9428,
											"end": 9457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11175,
											"end": 11177,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9428,
											"end": 9457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9428,
											"end": 9457,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9428,
											"end": 9457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11178,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11214,
											"end": 11216,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 11194,
											"end": 11212,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11194,
											"end": 11212,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11194,
											"end": 11212,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11187,
											"end": 11217,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642077616C6C65742074797065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11226,
											"end": 11275,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9428,
											"end": 9457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 10973,
											"end": 11316,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9228,
											"end": 9468,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 9228,
											"end": 9468,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6FF3A4003B90BE84595BEB5F6ACB9D54F88BD3E6DD4887CA67E53DC9645465EA"
										},
										{
											"begin": 9496,
											"end": 9506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 9517,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 9482,
											"end": 9518,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9482,
											"end": 9518,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 8055,
											"end": 9525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 9525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7969,
											"end": 9525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1446,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1377,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1443,
											"end": 1446,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1423,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 1422,
											"end": 1446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1377,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14172,
											"end": 14233,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 14172,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14218,
											"end": 14226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 14218,
											"end": 14224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 14218,
											"end": 14226,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1001,
											"end": 1073,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1001,
											"end": 1073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1049,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1049,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1049,
											"end": 1066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 9624,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 2262,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 1240,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9723,
											"end": 9724,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9714,
											"end": 9720,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9714,
											"end": 9724,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 9706,
											"end": 9743,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "385"
										},
										{
											"begin": 9706,
											"end": 9743,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9786,
											"end": 9792,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 9782,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 9771,
											"end": 9781,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 9770,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 9761,
											"end": 9782,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 9782,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 9761,
											"end": 9782,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 9792,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 9761,
											"end": 9792,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9753,
											"end": 9817,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9753,
											"end": 9817,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 9817,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7633,
											"end": 7635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9753,
											"end": 9817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7636,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7672,
											"end": 7674,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7675,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7709,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 7734,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7751,
											"end": 7769,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 7751,
											"end": 7769,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7431,
											"end": 7775,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 9753,
											"end": 9817,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9827,
											"end": 9852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 9833,
											"end": 9843,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9845,
											"end": 9851,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9827,
											"end": 9832,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 9827,
											"end": 9852,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9827,
											"end": 9852,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 9827,
											"end": 9852,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9902,
											"end": 9912,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9889,
											"end": 9913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9913,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9901,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 9889,
											"end": 9913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9889,
											"end": 9913,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9913,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9889,
											"end": 9913,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9913,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9913,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 9889,
											"end": 9925,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9918,
											"end": 9924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9917,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 9889,
											"end": 9925,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9889,
											"end": 9925,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 9889,
											"end": 9925,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9885,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9886,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9874,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 9862,
											"end": 9886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9886,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9862,
											"end": 9886,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9886,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9925,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9955,
											"end": 9972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 9955,
											"end": 9972,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 9955,
											"end": 9984,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9955,
											"end": 9984,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 9983,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9955,
											"end": 9976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 9955,
											"end": 9984,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9955,
											"end": 9984,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 9955,
											"end": 9984,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9935,
											"end": 9952,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 9935,
											"end": 9984,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 9999,
											"end": 10037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10037,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10018,
											"end": 10028,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 10018,
											"end": 10028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9999,
											"end": 10037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "6B4F55697B6DDAD583B377BB7AB9D921AFC2EB9FFA0B12FBCEA5AE24A7A34E6A"
										},
										{
											"begin": 9999,
											"end": 10037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9999,
											"end": 10037,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1127,
											"end": 1199,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 1127,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1175,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13662,
											"end": 13666,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13678,
											"end": 13690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13693,
											"end": 13719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 13708,
											"end": 13710,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13712,
											"end": 13718,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 13693,
											"end": 13707,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 13693,
											"end": 13719,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13693,
											"end": 13719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 13693,
											"end": 13719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13678,
											"end": 13719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13678,
											"end": 13719,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13733,
											"end": 13740,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13729,
											"end": 13811,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 13729,
											"end": 13811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 13729,
											"end": 13811,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13761,
											"end": 13800,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13761,
											"end": 13800,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13787,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "94E83CA767B0D965638D27B68A75EA07CD5C28C86299B5C7E02D2D5F1EE9AFF2"
										},
										{
											"begin": 13761,
											"end": 13800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13761,
											"end": 13800,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 13827,
											"end": 13834,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13841,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13553,
											"end": 13841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 7311,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 2262,
											"end": 2281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "413"
										},
										{
											"begin": 2262,
											"end": 2283,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7446,
											"end": 7450,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7429,
											"end": 7451,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7451,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7429,
											"end": 7451,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7421,
											"end": 7481,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 7421,
											"end": 7481,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7421,
											"end": 7481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7421,
											"end": 7481,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7421,
											"end": 7481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7421,
											"end": 7481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11845,
											"end": 11847,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7421,
											"end": 7481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7421,
											"end": 7481,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7421,
											"end": 7481,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11827,
											"end": 11848,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11884,
											"end": 11886,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 11864,
											"end": 11882,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11864,
											"end": 11882,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11864,
											"end": 11882,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11857,
											"end": 11887,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11923,
											"end": 11950,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F74207265636F7665722051344120746F6B656E7300000000000000"
										},
										{
											"begin": 11903,
											"end": 11921,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11903,
											"end": 11921,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11903,
											"end": 11921,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11896,
											"end": 11951,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11968,
											"end": 11986,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11968,
											"end": 11986,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7421,
											"end": 7481,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 11643,
											"end": 11992,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7421,
											"end": 7481,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 7421,
											"end": 7481,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7499,
											"end": 7515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7499,
											"end": 7515,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 7491,
											"end": 7537,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 7491,
											"end": 7537,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7602,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7564,
											"end": 7602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7596,
											"end": 7600,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7564,
											"end": 7602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7547,
											"end": 7561,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7547,
											"end": 7561,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7564,
											"end": 7587,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7587,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7587,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 7564,
											"end": 7587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7602,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 7564,
											"end": 7602,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 7564,
											"end": 7602,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7547,
											"end": 7602,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7547,
											"end": 7602,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7629,
											"end": 7630,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7626,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7620,
											"end": 7630,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7612,
											"end": 7655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 7612,
											"end": 7655,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7612,
											"end": 7655,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7612,
											"end": 7655,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7612,
											"end": 7655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7612,
											"end": 7655,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12388,
											"end": 12390,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7612,
											"end": 7655,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7612,
											"end": 7655,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7612,
											"end": 7655,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12370,
											"end": 12391,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12427,
											"end": 12429,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 12407,
											"end": 12425,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12407,
											"end": 12425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12407,
											"end": 12425,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12400,
											"end": 12430,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737903A37B5B2B739903A37903932B1B7BB32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12439,
											"end": 12489,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12506,
											"end": 12524,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 12506,
											"end": 12524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7612,
											"end": 7655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 12186,
											"end": 12530,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7612,
											"end": 7655,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 7612,
											"end": 7655,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7665,
											"end": 7699,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7665,
											"end": 7699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12727,
											"end": 12759,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12727,
											"end": 12759,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12727,
											"end": 12759,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7665,
											"end": 7699,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12709,
											"end": 12760,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12776,
											"end": 12794,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12776,
											"end": 12794,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12776,
											"end": 12794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12769,
											"end": 12803,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12769,
											"end": 12803,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12769,
											"end": 12803,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7687,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7687,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 7665,
											"end": 7687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12682,
											"end": 12700,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 12682,
											"end": 12700,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 7665,
											"end": 7699,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7665,
											"end": 7699,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7739,
											"end": 7741,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7732,
											"end": 7737,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1AC506E936E7F02F4036DBE44708F5E8D72AF9ACE8745A29FD391481A8FBCB87"
										},
										{
											"begin": 7743,
											"end": 7749,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7714,
											"end": 7750,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 7411,
											"end": 7757,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2839,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 876,
											"end": 947,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 876,
											"end": 947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 944,
											"end": 947,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 923,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 923,
											"end": 940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 923,
											"end": 940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 10697,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 2262,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2262,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "tag",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 2262,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 1240,
											"end": 1257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 1240,
											"end": 1259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10801,
											"end": 10815,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 10801,
											"end": 10815,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10791,
											"end": 10815,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10815,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10815,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10801,
											"end": 10815,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 10801,
											"end": 10815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10801,
											"end": 10815,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10801,
											"end": 10815,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10801,
											"end": 10815,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10815,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10815,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10844,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 10791,
											"end": 10844,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10829,
											"end": 10844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 10829,
											"end": 10844,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10819,
											"end": 10844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10844,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10829,
											"end": 10844,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10829,
											"end": 10844,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10819,
											"end": 10844,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10791,
											"end": 10844,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 10791,
											"end": 10844,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10783,
											"end": 10871,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 10783,
											"end": 10871,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10783,
											"end": 10871,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10783,
											"end": 10871,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10783,
											"end": 10871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10783,
											"end": 10871,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13298,
											"end": 13300,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10783,
											"end": 10871,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10783,
											"end": 10871,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10783,
											"end": 10871,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13280,
											"end": 13301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13337,
											"end": 13339,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 13317,
											"end": 13335,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13317,
											"end": 13335,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13317,
											"end": 13335,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13310,
											"end": 13340,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081D995CDD1A5B99C81DD85B1B195D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13356,
											"end": 13374,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 13356,
											"end": 13374,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13356,
											"end": 13374,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13349,
											"end": 13401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13418,
											"end": 13436,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 13418,
											"end": 13436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10783,
											"end": 10871,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 13096,
											"end": 13442,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10783,
											"end": 10871,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 10783,
											"end": 10871,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10916,
											"end": 10940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10916,
											"end": 10940,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10881,
											"end": 10913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10916,
											"end": 10940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10916,
											"end": 10940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10916,
											"end": 10940,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10916,
											"end": 10932,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 10916,
											"end": 10940,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10940,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10916,
											"end": 10940,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10916,
											"end": 10940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10916,
											"end": 10940,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11004,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10981,
											"end": 11004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11004,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11004,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10958,
											"end": 10978,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10958,
											"end": 10978,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 10958,
											"end": 11004,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10950,
											"end": 11029,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 10950,
											"end": 11029,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10950,
											"end": 11029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10950,
											"end": 11029,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10950,
											"end": 11029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10950,
											"end": 11029,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13649,
											"end": 13651,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10950,
											"end": 11029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10950,
											"end": 11029,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10950,
											"end": 11029,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13631,
											"end": 13652,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13688,
											"end": 13690,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 13668,
											"end": 13686,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13668,
											"end": 13686,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13668,
											"end": 13686,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13661,
											"end": 13691,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F20746F6B656E7320746F2072656C65617365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13707,
											"end": 13725,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 13707,
											"end": 13725,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13707,
											"end": 13725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13700,
											"end": 13750,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13767,
											"end": 13785,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 13767,
											"end": 13785,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10950,
											"end": 11029,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 13447,
											"end": 13791,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10950,
											"end": 11029,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 10950,
											"end": 11029,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11040,
											"end": 11059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11062,
											"end": 11095,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 11062,
											"end": 11077,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 11082,
											"end": 11094,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1601"
										},
										{
											"begin": 11062,
											"end": 11081,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 11062,
											"end": 11095,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11062,
											"end": 11095,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 11062,
											"end": 11095,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11040,
											"end": 11095,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11040,
											"end": 11095,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11105,
											"end": 11125,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11185,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 1535,
											"end": 1543,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1E13380"
										},
										{
											"begin": 11128,
											"end": 11165,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 11153,
											"end": 11164,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11136,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11148,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11128,
											"end": 11148,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11148,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11152,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 11128,
											"end": 11152,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11165,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11165,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11165,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11128,
											"end": 11165,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11165,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11128,
											"end": 11185,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 11128,
											"end": 11185,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11214,
											"end": 11234,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11214,
											"end": 11234,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11105,
											"end": 11185,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11105,
											"end": 11185,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11199,
											"end": 11234,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11199,
											"end": 11234,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11296,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11296,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 11195,
											"end": 11296,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11265,
											"end": 11285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11265,
											"end": 11285,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11296,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 11195,
											"end": 11296,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11324,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11327,
											"end": 11368,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 11344,
											"end": 11352,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11367,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11344,
											"end": 11367,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11344,
											"end": 11367,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11327,
											"end": 11339,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11327,
											"end": 11343,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 11327,
											"end": 11343,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11327,
											"end": 11368,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11327,
											"end": 11368,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11327,
											"end": 11368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11327,
											"end": 11368,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11327,
											"end": 11368,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11327,
											"end": 11368,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 11327,
											"end": 11368,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11368,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11306,
											"end": 11368,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11399,
											"end": 11400,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11386,
											"end": 11396,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11386,
											"end": 11400,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 11378,
											"end": 11425,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11378,
											"end": 11425,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11378,
											"end": 11425,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11425,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13998,
											"end": 14000,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11378,
											"end": 11425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11378,
											"end": 11425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11378,
											"end": 11425,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13980,
											"end": 14001,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14037,
											"end": 14039,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 14017,
											"end": 14035,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14017,
											"end": 14035,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14017,
											"end": 14035,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14010,
											"end": 14040,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F20746F6B656E732072656C65617361626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14056,
											"end": 14074,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14056,
											"end": 14074,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14056,
											"end": 14074,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14049,
											"end": 14099,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14116,
											"end": 14134,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 14116,
											"end": 14134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11378,
											"end": 11425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 13796,
											"end": 14140,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11378,
											"end": 11425,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 11378,
											"end": 11425,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11485,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11462,
											"end": 11485,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11485,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11485,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11501,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 11462,
											"end": 11501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11490,
											"end": 11500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11489,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 11462,
											"end": 11501,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11501,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 11462,
											"end": 11501,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11459,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11436,
											"end": 11459,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11459,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11501,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 11529,
											"end": 11533,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 11536,
											"end": 11542,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11544,
											"end": 11554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11520,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 11511,
											"end": 11555,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11511,
											"end": 11555,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 11511,
											"end": 11555,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11586,
											"end": 11592,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4AD7799F99297062CEA73C5A21D23A1FCF49F6A1957F7409712E555A0DCD1E1D"
										},
										{
											"begin": 11594,
											"end": 11604,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11570,
											"end": 11605,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 11612,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 11612,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 11612,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10773,
											"end": 11612,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2304,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2810,
											"end": 2832,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2630,
											"end": 2839,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3042,
											"end": 3245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1326,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 1254,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1326,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1302,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6765C793FA10079D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1317,
											"end": 1319,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1302,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 1302,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3219,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 3123,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3188,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3211,
											"end": 3212,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3207,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 3207,
											"end": 3212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3562,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3466,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3551,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 3550,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3851,
											"end": 3947,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 3851,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3909,
											"end": 3916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3935,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 3935,
											"end": 3940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14498,
											"end": 14530,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14498,
											"end": 14530,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14480,
											"end": 14531,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14583,
											"end": 14617,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14583,
											"end": 14617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14583,
											"end": 14617,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14453,
											"end": 14471,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 14453,
											"end": 14471,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 14278,
											"end": 14623,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3042,
											"end": 3245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3042,
											"end": 3245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 4,
											"value": "494"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "482"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2624,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2337,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2469,
											"end": 2488,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14830,
											"end": 14832,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14812,
											"end": 14833,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14869,
											"end": 14871,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14849,
											"end": 14867,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14849,
											"end": 14867,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14849,
											"end": 14867,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14842,
											"end": 14872,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14908,
											"end": 14941,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14888,
											"end": 14906,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14888,
											"end": 14906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14888,
											"end": 14906,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14881,
											"end": 14942,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14959,
											"end": 14977,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 14959,
											"end": 14977,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 14628,
											"end": 14983,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "tag",
											"source": 3,
											"value": "499"
										},
										{
											"begin": 2461,
											"end": 2524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2599,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2337,
											"end": 2624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1768,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1768,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1846,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15190,
											"end": 15192,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15172,
											"end": 15193,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15231,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 15209,
											"end": 15227,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 15209,
											"end": 15227,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15209,
											"end": 15227,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15202,
											"end": 15232,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15248,
											"end": 15266,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 15248,
											"end": 15266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15248,
											"end": 15266,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15241,
											"end": 15287,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 15304,
											"end": 15322,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 14988,
											"end": 15328,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 3042,
											"end": 3245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2551,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 2434,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "518"
										},
										{
											"begin": 1487,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "519"
										},
										{
											"begin": 1487,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "tag",
											"source": 2,
											"value": "518"
										},
										{
											"begin": 1487,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2507,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "521"
										},
										{
											"begin": 2531,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2544,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3206,
											"end": 3238,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2544,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "524"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3042,
											"end": 3245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 4,
											"value": "524"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3042,
											"end": 3245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 4,
											"value": "528"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 2187,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 1240,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "tag",
											"source": 2,
											"value": "534"
										},
										{
											"begin": 1240,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2246,
											"end": 2260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2256,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2246,
											"end": 2260,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2260,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2282,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "521"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2756,
											"end": 2852,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 2756,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2814,
											"end": 2821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2840,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 2840,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "542"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3042,
											"end": 3245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 4,
											"value": "542"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "544"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3239,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3161,
											"end": 3179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3042,
											"end": 3245,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 4,
											"value": "544"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "490"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "547"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 4,
											"value": "547"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 4,
											"value": "497"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "549"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "540"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 4,
											"value": "550"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "551"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 4,
											"value": "549"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14498,
											"end": 14530,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14498,
											"end": 14530,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14480,
											"end": 14531,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14547,
											"end": 14565,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14540,
											"end": 14574,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14590,
											"end": 14608,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14583,
											"end": 14617,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14583,
											"end": 14617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14583,
											"end": 14617,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14453,
											"end": 14471,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 14453,
											"end": 14471,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 14278,
											"end": 14623,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 4,
											"value": "552"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 4,
											"value": "551"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "554"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "555"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 4,
											"value": "554"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 4,
											"value": "555"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "556"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 4,
											"value": "556"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 2052,
											"name": "tag",
											"source": 2,
											"value": "519"
										},
										{
											"begin": 1946,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1686,
											"end": 1693,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15665,
											"end": 15667,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15647,
											"end": 15668,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15704,
											"end": 15706,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 15684,
											"end": 15702,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 15684,
											"end": 15702,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15684,
											"end": 15702,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15677,
											"end": 15707,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15723,
											"end": 15741,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 15723,
											"end": 15741,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15723,
											"end": 15741,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15716,
											"end": 15766,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15783,
											"end": 15801,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 15783,
											"end": 15801,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2004,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 15463,
											"end": 15807,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 11,
											"value": "570"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 196,
											"end": 369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 374,
											"end": 560,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 374,
											"end": 560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 433,
											"end": 439,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 483,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 465,
											"end": 472,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 461,
											"end": 484,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 457,
											"end": 489,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 454,
											"end": 506,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 454,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 492,
											"end": 504,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 454,
											"end": 506,
											"name": "tag",
											"source": 11,
											"value": "572"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 525,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 565,
											"end": 815,
											"name": "tag",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 565,
											"end": 815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 650,
											"end": 651,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 674,
											"end": 680,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 671,
											"end": 672,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 668,
											"end": 681,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 660,
											"end": 773,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 660,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 750,
											"end": 761,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 750,
											"end": 761,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 750,
											"end": 761,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 744,
											"end": 762,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 731,
											"end": 742,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 731,
											"end": 742,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 731,
											"end": 742,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 724,
											"end": 763,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 696,
											"end": 698,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 689,
											"end": 699,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 660,
											"end": 773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 660,
											"end": 773,
											"name": "tag",
											"source": 11,
											"value": "577"
										},
										{
											"begin": 660,
											"end": 773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 805,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 789,
											"end": 805,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 782,
											"end": 809,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 565,
											"end": 815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 820,
											"end": 1091,
											"name": "tag",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 820,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 862,
											"end": 865,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 900,
											"end": 905,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 894,
											"end": 906,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 922,
											"end": 925,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 915,
											"end": 934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 943,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1005,
											"end": 1009,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1003,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1010,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 989,
											"end": 993,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 982,
											"end": 987,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 978,
											"end": 994,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 943,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 943,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 943,
											"end": 1019,
											"name": "tag",
											"source": 11,
											"value": "579"
										},
										{
											"begin": 943,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1073,
											"end": 1075,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1052,
											"end": 1067,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1048,
											"end": 1077,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1039,
											"end": 1078,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1039,
											"end": 1078,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1039,
											"end": 1078,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1039,
											"end": 1078,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1080,
											"end": 1084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1085,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1035,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 820,
											"end": 1091,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 820,
											"end": 1091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1096,
											"end": 1316,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 1096,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1234,
											"end": 1243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1248,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1208,
											"end": 1212,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1295,
											"end": 1304,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1291,
											"end": 1309,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1265,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 1265,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1321,
											"end": 1621,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1321,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1403,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1450,
											"end": 1452,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1425,
											"end": 1448,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1421,
											"end": 1453,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1470,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 1418,
											"end": 1470,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1466,
											"end": 1467,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1464,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1456,
											"end": 1468,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1470,
											"name": "tag",
											"source": 11,
											"value": "583"
										},
										{
											"begin": 1418,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 1508,
											"end": 1517,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 1489,
											"end": 1518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "tag",
											"source": 11,
											"value": "584"
										},
										{
											"begin": 1489,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1479,
											"end": 1518,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1587,
											"end": 1589,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1572,
											"end": 1590,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1590,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1590,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1572,
											"end": 1590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1591,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1559,
											"end": 1591,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1321,
											"end": 1621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2192,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1818,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1895,
											"end": 1901,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1911,
											"end": 1917,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1966,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 1950,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1962,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1935,
											"end": 1967,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1970,
											"end": 1982,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "tag",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 1932,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2003,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 2022,
											"end": 2031,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2003,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 2003,
											"end": 2032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2003,
											"end": 2032,
											"name": "tag",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 2003,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2032,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2032,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 2085,
											"end": 2087,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2070,
											"end": 2088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 2051,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2089,
											"name": "tag",
											"source": 11,
											"value": "589"
										},
										{
											"begin": 2051,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2192,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2192,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2041,
											"end": 2089,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2041,
											"end": 2089,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1818,
											"end": 2192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2806,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 2386,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2463,
											"end": 2469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2479,
											"end": 2485,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2534,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2518,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2507,
											"end": 2530,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2503,
											"end": 2535,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2552,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 2500,
											"end": 2552,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2548,
											"end": 2549,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2538,
											"end": 2550,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2552,
											"name": "tag",
											"source": 11,
											"value": "592"
										},
										{
											"begin": 2500,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 2590,
											"end": 2599,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 2571,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2600,
											"name": "tag",
											"source": 11,
											"value": "593"
										},
										{
											"begin": 2571,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2600,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2673,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2673,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2770,
											"end": 2772,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2773,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2806,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2386,
											"end": 2806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2811,
											"end": 3037,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 2811,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2876,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2925,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2902,
											"end": 2909,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2898,
											"end": 2921,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2894,
											"end": 2926,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "tag",
											"source": 11,
											"value": "595"
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2984,
											"end": 3007,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2984,
											"end": 3007,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2811,
											"end": 3037,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3845,
											"name": "tag",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 3718,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3779,
											"end": 3789,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3770,
											"end": 3790,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3791,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3810,
											"end": 3814,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3807,
											"end": 3808,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3800,
											"end": 3815,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 3838,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3831,
											"end": 3832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3839,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 4879,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3850,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3968,
											"end": 3975,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 3987,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3960,
											"end": 3992,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3957,
											"end": 4009,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3957,
											"end": 4009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 3957,
											"end": 4009,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3995,
											"end": 4007,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3957,
											"end": 4009,
											"name": "tag",
											"source": 11,
											"value": "600"
										},
										{
											"begin": 3957,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4032,
											"end": 4055,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4070,
											"end": 4076,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4067,
											"end": 4097,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4064,
											"end": 4114,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4064,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 4064,
											"end": 4114,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4110,
											"end": 4111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4100,
											"end": 4112,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4064,
											"end": 4114,
											"name": "tag",
											"source": 11,
											"value": "601"
										},
										{
											"begin": 4064,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4186,
											"end": 4190,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4178,
											"end": 4191,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4191,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4174,
											"end": 4201,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4164,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 4164,
											"end": 4219,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4215,
											"end": 4216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4212,
											"end": 4213,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4205,
											"end": 4217,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4164,
											"end": 4219,
											"name": "tag",
											"source": 11,
											"value": "602"
										},
										{
											"begin": 4164,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4255,
											"end": 4257,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4242,
											"end": 4258,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4299,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4273,
											"end": 4279,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4267,
											"end": 4323,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4267,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 4267,
											"end": 4323,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 4303,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "tag",
											"source": 11,
											"value": "604"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4352,
											"end": 4354,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4444,
											"end": 4446,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4406,
											"end": 4423,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4406,
											"end": 4423,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4402,
											"end": 4433,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4402,
											"end": 4433,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4402,
											"end": 4433,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4435,
											"end": 4437,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 4398,
											"end": 4438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4394,
											"end": 4448,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4479,
											"end": 4497,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4464,
											"end": 4498,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4464,
											"end": 4498,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4500,
											"end": 4522,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4500,
											"end": 4522,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4500,
											"end": 4522,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4461,
											"end": 4523,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4546,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 4458,
											"end": 4546,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "565"
										},
										{
											"begin": 4526,
											"end": 4544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "tag",
											"source": 11,
											"value": "606"
										},
										{
											"begin": 4526,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4562,
											"end": 4564,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4555,
											"end": 4577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4608,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4586,
											"end": 4608,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4642,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4642,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4642,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4644,
											"end": 4648,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4620,
											"end": 4659,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4617,
											"end": 4676,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 4617,
											"end": 4676,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4672,
											"end": 4673,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4669,
											"end": 4670,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4662,
											"end": 4674,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4617,
											"end": 4676,
											"name": "tag",
											"source": 11,
											"value": "607"
										},
										{
											"begin": 4617,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4732,
											"end": 4738,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4725,
											"end": 4729,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4721,
											"end": 4723,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4717,
											"end": 4730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4710,
											"end": 4714,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4698,
											"end": 4715,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4685,
											"end": 4739,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 4787,
											"end": 4788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4784,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4777,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4763,
											"end": 4769,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4778,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4755,
											"end": 4785,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4748,
											"end": 4789,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4814,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4814,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4798,
											"end": 4814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 4867,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4856,
											"end": 4865,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4852,
											"end": 4872,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 4833,
											"end": 4873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4833,
											"end": 4873,
											"name": "tag",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 4833,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4873,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4823,
											"end": 4873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 4879,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 4879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 4879,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 4879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 4879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3850,
											"end": 4879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4884,
											"end": 5144,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 4884,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4952,
											"end": 4958,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5013,
											"end": 5015,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 4999,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4988,
											"end": 5011,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4984,
											"end": 5016,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4981,
											"end": 5033,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4981,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 4981,
											"end": 5033,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5029,
											"end": 5030,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5027,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5019,
											"end": 5031,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4981,
											"end": 5033,
											"name": "tag",
											"source": 11,
											"value": "610"
										},
										{
											"begin": 4981,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5052,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5052,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 5052,
											"end": 5081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5052,
											"end": 5081,
											"name": "tag",
											"source": 11,
											"value": "611"
										},
										{
											"begin": 5052,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5042,
											"end": 5081,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5042,
											"end": 5081,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "608"
										},
										{
											"begin": 5134,
											"end": 5136,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5123,
											"end": 5132,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5119,
											"end": 5137,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5100,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "562"
										},
										{
											"begin": 5100,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6000,
											"end": 6380,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 6000,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6075,
											"end": 6087,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6075,
											"end": 6087,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6075,
											"end": 6087,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 6075,
											"end": 6087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6122,
											"end": 6134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 6143,
											"end": 6204,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6197,
											"end": 6201,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 6189,
											"end": 6195,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6185,
											"end": 6202,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6175,
											"end": 6202,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6175,
											"end": 6202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6143,
											"end": 6204,
											"name": "tag",
											"source": 11,
											"value": "616"
										},
										{
											"begin": 6143,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6242,
											"end": 6248,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6239,
											"end": 6253,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6219,
											"end": 6237,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6216,
											"end": 6254,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 6213,
											"end": 6374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6296,
											"end": 6306,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 6291,
											"end": 6294,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 6287,
											"end": 6307,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6284,
											"end": 6285,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6308,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6331,
											"end": 6335,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 6328,
											"end": 6329,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6321,
											"end": 6336,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6364,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6374,
											"name": "tag",
											"source": 11,
											"value": "617"
										},
										{
											"begin": 6213,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6374,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6000,
											"end": 6380,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6000,
											"end": 6380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6000,
											"end": 6380,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6000,
											"end": 6380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6385,
											"end": 6726,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 6385,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6587,
											"end": 6589,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6569,
											"end": 6590,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6569,
											"end": 6590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6569,
											"end": 6590,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6626,
											"end": 6628,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 6606,
											"end": 6624,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6606,
											"end": 6624,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6606,
											"end": 6624,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6599,
											"end": 6629,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C9958DA5C1A595B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6660,
											"end": 6662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6638,
											"end": 6685,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6702,
											"end": 6720,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6720,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6385,
											"end": 6726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 7069,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 6731,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6915,
											"end": 6936,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6936,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6936,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6972,
											"end": 6974,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6945,
											"end": 6975,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A5908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7006,
											"end": 7008,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6984,
											"end": 7028,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6731,
											"end": 7069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7780,
											"end": 7907,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 7780,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7841,
											"end": 7851,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 7836,
											"end": 7839,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 7832,
											"end": 7852,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 7829,
											"end": 7830,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7853,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7872,
											"end": 7876,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7869,
											"end": 7870,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7862,
											"end": 7877,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7896,
											"end": 7900,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7893,
											"end": 7894,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7901,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7912,
											"end": 8080,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 7912,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7985,
											"end": 7994,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7985,
											"end": 7994,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7985,
											"end": 7994,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8016,
											"end": 8025,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8016,
											"end": 8025,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8033,
											"end": 8048,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8033,
											"end": 8048,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8033,
											"end": 8048,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8049,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8049,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 8013,
											"end": 8050,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8003,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 8003,
											"end": 8074,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8054,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 8054,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 8054,
											"end": 8072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8085,
											"end": 8302,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 8085,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8152,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8141,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "627"
										},
										{
											"begin": 8141,
											"end": 8273,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8195,
											"end": 8205,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 8190,
											"end": 8193,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 8186,
											"end": 8206,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 8183,
											"end": 8184,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8207,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8230,
											"end": 8234,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 8227,
											"end": 8228,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8220,
											"end": 8235,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8262,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8255,
											"end": 8256,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8263,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8141,
											"end": 8273,
											"name": "tag",
											"source": 11,
											"value": "627"
										},
										{
											"begin": 8141,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8287,
											"end": 8296,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8287,
											"end": 8296,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8085,
											"end": 8302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9014,
											"end": 9303,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 9014,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9145,
											"end": 9148,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9183,
											"end": 9189,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9177,
											"end": 9190,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9199,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 9258,
											"end": 9264,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9246,
											"end": 9250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9238,
											"end": 9244,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9199,
											"end": 9265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "563"
										},
										{
											"begin": 9199,
											"end": 9265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9199,
											"end": 9265,
											"name": "tag",
											"source": 11,
											"value": "631"
										},
										{
											"begin": 9199,
											"end": 9265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9014,
											"end": 9303,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9014,
											"end": 9303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9914,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 9571,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9773,
											"end": 9775,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9755,
											"end": 9776,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9755,
											"end": 9776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9755,
											"end": 9776,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9812,
											"end": 9814,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9785,
											"end": 9815,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53616D652077616C6C65742061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9824,
											"end": 9873,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9905,
											"end": 9907,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9890,
											"end": 9908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9890,
											"end": 9908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11321,
											"end": 11638,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 11321,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11498,
											"end": 11500,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11487,
											"end": 11496,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11480,
											"end": 11501,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11461,
											"end": 11465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11518,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 11559,
											"end": 11561,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11548,
											"end": 11557,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11544,
											"end": 11562,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11536,
											"end": 11542,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11518,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "564"
										},
										{
											"begin": 11518,
											"end": 11563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11518,
											"end": 11563,
											"name": "tag",
											"source": 11,
											"value": "640"
										},
										{
											"begin": 11518,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11510,
											"end": 11563,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11510,
											"end": 11563,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11628,
											"end": 11629,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11624,
											"end": 11625,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11619,
											"end": 11622,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 11615,
											"end": 11626,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 11611,
											"end": 11630,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11603,
											"end": 11609,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11599,
											"end": 11631,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11594,
											"end": 11596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11583,
											"end": 11592,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11579,
											"end": 11597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11572,
											"end": 11632,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11321,
											"end": 11638,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11321,
											"end": 11638,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11321,
											"end": 11638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11321,
											"end": 11638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11321,
											"end": 11638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11321,
											"end": 11638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11997,
											"end": 12181,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 11997,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12067,
											"end": 12073,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12120,
											"end": 12122,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12108,
											"end": 12117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12099,
											"end": 12106,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12095,
											"end": 12118,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12091,
											"end": 12123,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 12088,
											"end": 12140,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12088,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 12088,
											"end": 12140,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12136,
											"end": 12137,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12134,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12126,
											"end": 12138,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12088,
											"end": 12140,
											"name": "tag",
											"source": 11,
											"value": "643"
										},
										{
											"begin": 12088,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12159,
											"end": 12175,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11997,
											"end": 12181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11997,
											"end": 12181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12814,
											"end": 13091,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 12814,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12881,
											"end": 12887,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 12936,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12922,
											"end": 12931,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 12920,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12909,
											"end": 12932,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12905,
											"end": 12937,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 12902,
											"end": 12954,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12902,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 12902,
											"end": 12954,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12950,
											"end": 12951,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12947,
											"end": 12948,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12940,
											"end": 12952,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12902,
											"end": 12954,
											"name": "tag",
											"source": 11,
											"value": "647"
										},
										{
											"begin": 12902,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12982,
											"end": 12991,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12976,
											"end": 12992,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13035,
											"end": 13040,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13028,
											"end": 13041,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13021,
											"end": 13042,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13014,
											"end": 13019,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13011,
											"end": 13043,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 13001,
											"end": 13061,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 13001,
											"end": 13061,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13054,
											"end": 13055,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13047,
											"end": 13059,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14145,
											"end": 14273,
											"name": "tag",
											"source": 11,
											"value": "475"
										},
										{
											"begin": 14145,
											"end": 14273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14212,
											"end": 14221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14212,
											"end": 14221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14212,
											"end": 14221,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14233,
											"end": 14244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14233,
											"end": 14244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14233,
											"end": 14244,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14230,
											"end": 14267,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14230,
											"end": 14267,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 14230,
											"end": 14267,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14247,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 14247,
											"end": 14265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 14247,
											"end": 14265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15333,
											"end": 15458,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 15333,
											"end": 15458,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15398,
											"end": 15407,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15398,
											"end": 15407,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15398,
											"end": 15407,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15419,
											"end": 15429,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15419,
											"end": 15429,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15419,
											"end": 15429,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15416,
											"end": 15452,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15416,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 15416,
											"end": 15452,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15432,
											"end": 15450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 15432,
											"end": 15450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 15432,
											"end": 15450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"interfaces/IUBI4ALLQuantum.sol",
								"quantum/UBI4ALLQuantum.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"COMMUNITY_ALLOCATION()": "993eb1c5",
							"ECOSYSTEM_ALLOCATION()": "90534f24",
							"LIQUIDITY_ALLOCATION()": "f9428f38",
							"RESERVE_ALLOCATION()": "7b5c7f03",
							"TOTAL_SUPPLY()": "902d55a5",
							"TREASURY_ALLOCATION()": "bf1ad7e0",
							"VESTING_PERIOD()": "0197d972",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"communityWallet()": "c7574839",
							"decimals()": "313ce567",
							"ecosystemWallet()": "435263ef",
							"emergencyRecoverTokens(address,address)": "b7e26a2e",
							"getAllocations()": "65ed6e23",
							"getReleasableVesting(address)": "0553be1e",
							"getTotalSupply()": "c4e41b22",
							"getWallets()": "db7a4605",
							"liquidityWallet()": "d4698016",
							"lockForDAO(uint256)": "9576a374",
							"lockedForDAO(address)": "2af44592",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"releaseVesting(address)": "d486d129",
							"renounceOwnership()": "715018a6",
							"reserveWallet()": "d72b11bd",
							"symbol()": "95d89b41",
							"totalLockedForDAO()": "4a0ced96",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"transferWithLeverage(address,uint256,uint256)": "33127b0d",
							"treasuryWallet()": "4626402b",
							"unlockFromDAO(uint256)": "74300378",
							"unpause()": "3f4ba83a",
							"updateWallet(string,address)": "780b9737",
							"vestingSchedules(address)": "fdb20ccb",
							"vestingStart()": "254800d4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ecosystemWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_communityWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidityWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserveWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyRecovery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"}],\"name\":\"LeveragedTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"QuantumTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensLockedForDAO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnlockedForDAO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"VestingReleased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"walletType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"WalletUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMMUNITY_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ECOSYSTEM_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDITY_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_ALLOCATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VESTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecosystemWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"emergencyRecoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"treasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ecosystem\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"community\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"getReleasableVesting\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ecosystem\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"community\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidity\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockForDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedForDAO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"releaseVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLockedForDAO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leverage\",\"type\":\"uint256\"}],\"name\":\"transferWithLeverage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unlockFromDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletType\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"updateWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingSchedules\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releasedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"params\":{\"account\":\"Indirizzo dell'account\"},\"returns\":{\"_0\":\"Saldo dell'account\"}},\"burn(uint256)\":{\"params\":{\"amount\":\"Quantit\\u00e0 di token da bruciare\"}},\"constructor\":{\"params\":{\"_communityWallet\":\"Indirizzo del wallet comunit\\u00e0\",\"_ecosystemWallet\":\"Indirizzo del wallet ecosistema\",\"_liquidityWallet\":\"Indirizzo del wallet liquidit\\u00e0\",\"_reserveWallet\":\"Indirizzo del wallet riserva\",\"_treasuryWallet\":\"Indirizzo del wallet treasury\",\"initialOwner\":\"Indirizzo del proprietario iniziale\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"emergencyRecoverTokens(address,address)\":{\"params\":{\"to\":\"Indirizzo del destinatario\",\"token\":\"Indirizzo del token da recuperare\"}},\"getAllocations()\":{\"returns\":{\"community\":\"Allocazione comunit\\u00e0\",\"ecosystem\":\"Allocazione ecosistema\",\"liquidity\":\"Allocazione liquidit\\u00e0\",\"reserve\":\"Allocazione riserva\",\"treasury\":\"Allocazione treasury\"}},\"getReleasableVesting(address)\":{\"params\":{\"wallet\":\"Indirizzo del wallet\"},\"returns\":{\"_0\":\"Importo rilasciabile\"}},\"getTotalSupply()\":{\"returns\":{\"_0\":\"Total supply (1 miliardo di Q4A)\"}},\"getWallets()\":{\"returns\":{\"community\":\"Indirizzo wallet comunit\\u00e0\",\"ecosystem\":\"Indirizzo wallet ecosistema\",\"liquidity\":\"Indirizzo wallet liquidit\\u00e0\",\"reserve\":\"Indirizzo wallet riserva\",\"treasury\":\"Indirizzo wallet treasury\"}},\"lockForDAO(uint256)\":{\"params\":{\"amount\":\"Quantit\\u00e0 di token da bloccare\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"Quantit\\u00e0 di token da mintare\",\"to\":\"Indirizzo del destinatario\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"releaseVesting(address)\":{\"params\":{\"wallet\":\"Indirizzo del wallet in vesting\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"Quantit\\u00e0 di token da trasferire\",\"to\":\"Indirizzo del destinatario\"},\"returns\":{\"_0\":\"True se il trasferimento ha successo\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferWithLeverage(address,uint256,uint256)\":{\"params\":{\"amount\":\"Quantit\\u00e0 di token da trasferire\",\"leverage\":\"Fattore di leva (es. 100 = 1x, 200 = 2x)\",\"to\":\"Indirizzo del destinatario\"},\"returns\":{\"_0\":\"True se il trasferimento ha successo\"}},\"unlockFromDAO(uint256)\":{\"params\":{\"amount\":\"Quantit\\u00e0 di token da sbloccare\"}},\"updateWallet(string,address)\":{\"params\":{\"newWallet\":\"Nuovo indirizzo del wallet\",\"walletType\":\"Tipo di wallet (\\\"treasury\\\", \\\"ecosystem\\\", \\\"community\\\", \\\"liquidity\\\", \\\"reserve\\\")\"}}},\"stateVariables\":{\"COMMUNITY_ALLOCATION\":{\"details\":\"Allocazione per la comunit\\u00e0 (15%)\"},\"ECOSYSTEM_ALLOCATION\":{\"details\":\"Allocazione per l'ecosistema (20%)\"},\"LIQUIDITY_ALLOCATION\":{\"details\":\"Allocazione per la liquidit\\u00e0 (10%)\"},\"RESERVE_ALLOCATION\":{\"details\":\"Allocazione per la riserva (5%)\"},\"TOTAL_SUPPLY\":{\"details\":\"Total supply del token Q4A (1 miliardo di token, 18 decimali)\"},\"TREASURY_ALLOCATION\":{\"details\":\"Allocazione per il treasury (50%)\"},\"VESTING_PERIOD\":{\"details\":\"Periodo di vesting (1 anno)\"},\"lockedForDAO\":{\"details\":\"Mappatura dei token bloccati per la DAO\"},\"totalLockedForDAO\":{\"details\":\"Totale dei token bloccati per la DAO\"},\"treasuryWallet\":{\"details\":\"Wallet per le allocazioni\"},\"vestingSchedules\":{\"details\":\"Mappatura dei vesting per wallet\"},\"vestingStart\":{\"details\":\"Timestamp di inizio del vesting\"}},\"title\":\"UBI4ALLQuantum - Token Q4A per trading con leva avanzata\",\"version\":1},\"userdoc\":{\"events\":{\"LeveragedTransfer(address,address,uint256,uint256)\":{\"notice\":\"Evento emesso per trasferimenti con leva\"},\"QuantumTransfer(address,address,uint256)\":{\"notice\":\"Evento emesso per trasferimenti di token\"},\"TokensLockedForDAO(address,uint256)\":{\"notice\":\"Evento emesso per token bloccati per la DAO\"},\"TokensUnlockedForDAO(address,uint256)\":{\"notice\":\"Evento emesso per token sbloccati dalla DAO\"},\"VestingReleased(address,uint256)\":{\"notice\":\"Evento emesso per rilascio di token in vesting\"}},\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Ottiene il saldo di un account\"},\"burn(uint256)\":{\"notice\":\"Brucia token dal chiamante\"},\"constructor\":{\"notice\":\"Costruttore del contratto\"},\"emergencyRecoverTokens(address,address)\":{\"notice\":\"Recupera token ERC20 bloccati nel contratto\"},\"getAllocations()\":{\"notice\":\"Ottiene le allocazioni dei token\"},\"getReleasableVesting(address)\":{\"notice\":\"Ottiene l'importo di token in vesting rilasciabile per un wallet\"},\"getTotalSupply()\":{\"notice\":\"Ottiene il total supply del token\"},\"getWallets()\":{\"notice\":\"Ottiene gli indirizzi dei wallet\"},\"lockForDAO(uint256)\":{\"notice\":\"Blocca token per la DAO\"},\"mint(address,uint256)\":{\"notice\":\"Minta nuovi token\"},\"pause()\":{\"notice\":\"Mette in pausa il contratto\"},\"releaseVesting(address)\":{\"notice\":\"Rilascia i token in vesting per un wallet\"},\"transfer(address,uint256)\":{\"notice\":\"Trasferisce token (con supporto per leva futura)\"},\"transferWithLeverage(address,uint256,uint256)\":{\"notice\":\"Trasferisce token con supporto per leva (per trading avanzato)\"},\"unlockFromDAO(uint256)\":{\"notice\":\"Sblocca token dalla DAO\"},\"unpause()\":{\"notice\":\"Ripristina il contratto dalla pausa\"},\"updateWallet(string,address)\":{\"notice\":\"Aggiorna l'indirizzo di un wallet\"}},\"notice\":\"Gestisce il token Q4A con allocazioni, lock per DAO, vesting e supporto per trading con leva\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"quantum/UBI4ALLQuantum.sol\":\"UBI4ALLQuantum\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x4c06e6ed107ae827750b2377ba749978c310c0d662367e3ede3342398d6d7564\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3432dcd7e0f266834ffe229e582c95cec3bff892eef832706002b50b60ea53a4\",\"dweb:/ipfs/QmcTF9GX8APQ69FWT9mTHTsGFt9vixxUCyUDE1XoRRJgoR\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x15490c1ac7fb488198fce8a04211f15277ee816915367bc906110cbb57863bbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c3273e1e51c1bfe12b50778dd98d3d322ca315cd8e1185593694a0ac828b820\",\"dweb:/ipfs/QmTyAWneXaURy9Ls4dovFWLV9yxzMkELmLsgLTWeubz8ZA\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xf4d28329285c89e85daf450fbe612ec5ceb19842ae0be976ab1569897940be90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a021f64d3d58a64fd3045afc6b192c82bca29d95cd594a3c0ed93d1c69ecc98\",\"dweb:/ipfs/QmegaH5RM4Sboa22unJm3FdMVTd3K9UUf8ogbvBwx1K8XJ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x7bb71eec1addf6bf49477b47a74c4740b39b651edf4801d41868c4b05a8bd8be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0cd51096f6455b62497d2780b5b7b32b5630dd80b0a0a8d59c3a16a19e0e81\",\"dweb:/ipfs/QmToRJzEZ4w5EnEuTXFDP1NTNVAWEpEatPXDud4T3bBjEj\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf7b3f74cec9f285c369ee9494c96ca24a6ec23a8985f4ba2eafba78279e48ad1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e02b01bf539c330f41ff408ba5980eeb4a578e790afdc73b62b4f33c04988bc0\",\"dweb:/ipfs/QmSbr7rZqLnws371ENjg9wj1CMtFFJVQFGS4TojKJ3CWzb\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x364eb4d3170b2a469643b2eeccbe6e54159f9c566e154cb5d139c20672f9691b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64e0b563df8633769c034623b1c62e3df02897edd64f223301531ef5e96fe1fa\",\"dweb:/ipfs/QmXxxHbfNYnRXLdF88usW3s1MbJ8EZE7FE94eWk9T2354p\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x9db94a991829328dd0812b3cd0f677abb9357aa239fec829ae917c22b033e311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00f4330ea774b0fb45b4a9397ddf9385e12a1c6d568f2143af7f4f3176b37c33\",\"dweb:/ipfs/QmXKbfbAohaWzyFZZ8btYJqHx8fPfTJDRk5Q1R4WK51j4E\"]},\"interfaces/IUBI4ALLQuantum.sol\":{\"keccak256\":\"0xf4be867d12674967d2ec84c63dbc5333f20778f3eb364335b8464bda84ff6ddd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cec4248f5a044322229e8006ebd6d695d37e7cf06d063ccee0f0f091fd70406\",\"dweb:/ipfs/Qmaad7V52pm9wQmuZ3Wf7FbnMtNEh51pmUsXB2BBcVHeN3\"]},\"quantum/UBI4ALLQuantum.sol\":{\"keccak256\":\"0x170b707bb42995ec48106fc9138a857b07e89c48debbd8cbc0cdadabd3a3cb74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec84de9e4370724f2235b546625743186dadd55aaa0c9401c957b9552a3507ac\",\"dweb:/ipfs/Qmb8PKpGHk7mYXBK5saBQKuNCUELgHAiTvTwSBAoaTZzML\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 403,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 302,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 1604,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "treasuryWallet",
								"offset": 1,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1606,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "ecosystemWallet",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 1608,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "communityWallet",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1610,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "liquidityWallet",
								"offset": 0,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 1612,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "reserveWallet",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1617,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "lockedForDAO",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1620,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "totalLockedForDAO",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1632,
								"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
								"label": "vestingSchedules",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_struct(VestingSchedule)1626_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(VestingSchedule)1626_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct UBI4ALLQuantum.VestingSchedule)",
								"numberOfBytes": "32",
								"value": "t_struct(VestingSchedule)1626_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(VestingSchedule)1626_storage": {
								"encoding": "inplace",
								"label": "struct UBI4ALLQuantum.VestingSchedule",
								"members": [
									{
										"astId": 1623,
										"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
										"label": "totalAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1625,
										"contract": "quantum/UBI4ALLQuantum.sol:UBI4ALLQuantum",
										"label": "releasedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"LeveragedTransfer(address,address,uint256,uint256)": {
								"notice": "Evento emesso per trasferimenti con leva"
							},
							"QuantumTransfer(address,address,uint256)": {
								"notice": "Evento emesso per trasferimenti di token"
							},
							"TokensLockedForDAO(address,uint256)": {
								"notice": "Evento emesso per token bloccati per la DAO"
							},
							"TokensUnlockedForDAO(address,uint256)": {
								"notice": "Evento emesso per token sbloccati dalla DAO"
							},
							"VestingReleased(address,uint256)": {
								"notice": "Evento emesso per rilascio di token in vesting"
							}
						},
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Ottiene il saldo di un account"
							},
							"burn(uint256)": {
								"notice": "Brucia token dal chiamante"
							},
							"constructor": {
								"notice": "Costruttore del contratto"
							},
							"emergencyRecoverTokens(address,address)": {
								"notice": "Recupera token ERC20 bloccati nel contratto"
							},
							"getAllocations()": {
								"notice": "Ottiene le allocazioni dei token"
							},
							"getReleasableVesting(address)": {
								"notice": "Ottiene l'importo di token in vesting rilasciabile per un wallet"
							},
							"getTotalSupply()": {
								"notice": "Ottiene il total supply del token"
							},
							"getWallets()": {
								"notice": "Ottiene gli indirizzi dei wallet"
							},
							"lockForDAO(uint256)": {
								"notice": "Blocca token per la DAO"
							},
							"mint(address,uint256)": {
								"notice": "Minta nuovi token"
							},
							"pause()": {
								"notice": "Mette in pausa il contratto"
							},
							"releaseVesting(address)": {
								"notice": "Rilascia i token in vesting per un wallet"
							},
							"transfer(address,uint256)": {
								"notice": "Trasferisce token (con supporto per leva futura)"
							},
							"transferWithLeverage(address,uint256,uint256)": {
								"notice": "Trasferisce token con supporto per leva (per trading avanzato)"
							},
							"unlockFromDAO(uint256)": {
								"notice": "Sblocca token dalla DAO"
							},
							"unpause()": {
								"notice": "Ripristina il contratto dalla pausa"
							},
							"updateWallet(string,address)": {
								"notice": "Aggiorna l'indirizzo di un wallet"
							}
						},
						"notice": "Gestisce il token Q4A con allocazioni, lock per DAO, vesting e supporto per trading con leva",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1107,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1106
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1107,
							"src": "131:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"633:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "633:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "633:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "163:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1106
							],
							"name": "Pausable",
							"nameLocation": "621:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "647:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "731:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "738:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:2"
									},
									"src": "725:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "761:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "842:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "859:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "851:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:17:2"
									},
									"src": "836:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "887:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "874:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "874:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "987:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "997:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "997:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "997:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "901:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "984:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:0:2"
									},
									"scope": 392,
									"src": "973:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1230:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1240:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1240:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1269:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1025:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1214:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:2"
									},
									"src": "1205:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1477:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1487:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1487:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1487:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1513:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1283:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1464:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:2"
									},
									"src": "1455:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1669:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1679:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1527:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1625:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:2"
									},
									"scope": 392,
									"src": "1616:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1819:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1837:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1838:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1838:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1848:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1829:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1829:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1706:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1777:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:2"
									},
									"scope": 392,
									"src": "1768:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1994:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2012:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2012:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2022:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2004:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2004:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2004:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1880:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1955:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1969:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:0:2"
									},
									"scope": 392,
									"src": "1946:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2236:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2246:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2256:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2246:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2246:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2282:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2282:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2275:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2275:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2270:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2058:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2222:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2222:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2222:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2196:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2202:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2236:0:2"
									},
									"scope": 392,
									"src": "2187:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2482:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2492:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2502:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2492:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2492:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2531:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2531:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2522:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2522:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2517:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2308:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2471:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2471:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2471:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2443:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2451:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2482:0:2"
									},
									"scope": 392,
									"src": "2434:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "603:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2449:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "138:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "ReentrancyGuard",
							"nameLocation": "907:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1702:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1677:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1677:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1717:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1749:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1724:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1724:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1760:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1784:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1768:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1812:39:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1822:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1832:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1822:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1822:22:3"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1812:0:3"
									},
									"scope": 457,
									"src": "1798:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2252:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2262:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2262:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2262:21:3"
											},
											{
												"id": 417,
												"nodeType": "PlaceholderStatement",
												"src": "2293:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2304:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2304:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2304:20:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1857:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 422,
									"name": "nonReentrant",
									"nameLocation": "2237:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:2:3"
									},
									"src": "2228:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2376:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2469:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 427,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2480:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2469:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2490:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2461:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2461:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2461:63:3"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2599:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2609:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2599:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2599:18:3"
											}
										]
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2346:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2365:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2376:0:3"
									},
									"scope": 457,
									"src": "2337:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2668:171:3",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2810:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 441,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2820:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2810:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2810:22:3"
											}
										]
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2639:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2657:2:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:3"
									},
									"scope": 457,
									"src": "2630:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3082:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3099:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 452,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3110:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3099:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3092:26:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2845:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3027:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3076:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3076:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:6:3"
									},
									"scope": 457,
									"src": "3018:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 458,
							"src": "889:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3016:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1051,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 460,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1077,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 462,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1076,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1107,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1106,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 285,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 469,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1106,
										"src": "1133:7:4"
									},
									"id": 470,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 471,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1142:6:4"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 473,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1076,
										"src": "1150:14:4"
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 475,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:4"
									},
									"id": 476,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 468,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 479,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 477,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 478,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 485,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 481,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 482,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 483,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 488,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 487,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 490,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 492,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 491,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1638:57:4",
										"statements": [
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "1648:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1656:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:4"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "1671:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 505,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1681:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 509,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1594:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1615:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:4"
									},
									"scope": 972,
									"src": "1582:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1063
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "1820:29:4",
										"statements": [
											{
												"expression": {
													"id": 515,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "1837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 514,
												"id": 516,
												"nodeType": "Return",
												"src": "1830:12:4"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1805:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:4"
									},
									"scope": 972,
									"src": "1760:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1069
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2024:31:4",
										"statements": [
											{
												"expression": {
													"id": 524,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "2041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "2034:14:4"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2009:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:4"
									},
									"scope": 972,
									"src": "1962:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2744:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "2754:9:4"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2737:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:4"
									},
									"scope": 972,
									"src": "2688:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2891:36:4",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "2908:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "2901:19:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:4"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2882:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:4"
									},
									"scope": 972,
									"src": "2830:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "3059:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 553,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3076:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 555,
													"indexExpression": {
														"id": 554,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "3086:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 552,
												"id": 556,
												"nodeType": "Return",
												"src": "3069:25:4"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3004:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3050:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:4"
									},
									"scope": 972,
									"src": "2985:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1017
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "3371:103:4",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "3381:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 570,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "3397:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "3429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "3436:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3419:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 580,
												"nodeType": "Return",
												"src": "3456:11:4"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3314:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3326:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3365:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:4"
									},
									"scope": 972,
									"src": "3296:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1027
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3621:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 592,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3638:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3650:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 596,
													"indexExpression": {
														"id": 595,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3657:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 597,
												"nodeType": "Return",
												"src": "3631:34:4"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3551:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3566:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:4"
									},
									"scope": 972,
									"src": "3532:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1037
									],
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4058:107:4",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "4068:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 609,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 611,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4084:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4115:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4122:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4131:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 863,
														"src": "4106:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 621,
												"nodeType": "Return",
												"src": "4147:11:4"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "3996:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4013:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4052:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:4"
									},
									"scope": 972,
									"src": "3979:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "4850:151:4",
										"statements": [
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "4860:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 637,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1088,
														"src": "4878:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4916:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4931:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4900:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4957:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4963:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4967:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4947:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 634,
												"id": 653,
												"nodeType": "Return",
												"src": "4983:11:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4779:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4793:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4805:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:4"
									},
									"scope": 972,
									"src": "4757:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5443:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "5457:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 666,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "5453:86:4",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "5477:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 672,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 671,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 677,
															"nodeType": "RevertStatement",
															"src": "5491:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "5552:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 681,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "5548:86:4",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "5570:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 686,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 692,
															"nodeType": "RevertStatement",
															"src": "5584:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5651:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5657:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5661:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5643:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:4"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5393:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5407:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5419:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:4"
									},
									"scope": 972,
									"src": "5374:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "6064:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "6078:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "6252:362:4",
													"statements": [
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 749,
																	"src": "6266:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 728,
															"initialValue": {
																"baseExpression": {
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6288:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6298:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 729,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "6321:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 730,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6335:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 739,
															"nodeType": "IfStatement",
															"src": "6317:115:4",
															"trueBody": {
																"id": 738,
																"nodeType": "Block",
																"src": "6342:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 733,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 705,
																					"src": "6392:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 734,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "6398:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 735,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "6411:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 732,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 737,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:4"
																	}
																]
															}
														},
														{
															"id": 748,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 740,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "6552:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 742,
																			"indexExpression": {
																				"id": 741,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 705,
																				"src": "6562:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 743,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "6570:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 744,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "6584:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 747,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:4"
																}
															]
														}
													]
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "6074:540:4",
												"trueBody": {
													"id": 722,
													"nodeType": "Block",
													"src": "6098:148:4",
													"statements": [
														{
															"expression": {
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 718,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6214:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6230:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 721,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "6628:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 752,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "6843:206:4",
													"statements": [
														{
															"id": 769,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 763,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "7002:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 765,
																			"indexExpression": {
																				"id": 764,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "7012:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 766,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "7019:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 768,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:4"
																}
															]
														}
													]
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "6624:425:4",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6646:191:4",
													"statements": [
														{
															"id": 761,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 757,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "6791:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "6807:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 760,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 773,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "7073:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7079:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "7083:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7064:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "EmitStatement",
												"src": "7059:30:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6006:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6020:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:4"
									},
									"scope": 972,
									"src": "5989:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "7495:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "7509:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 788,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "7505:91:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7532:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 793,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "7546:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 803,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7625:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7634:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "7605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:4"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7454:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7471:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:4"
									},
									"scope": 972,
									"src": "7439:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "8021:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8035:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "8031:89:4",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "8058:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 827,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 826,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "8072:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "8137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8158:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 835,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "8129:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:4"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "7980:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "7997:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:4"
									},
									"scope": 972,
									"src": "7965:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "8781:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8800:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "8807:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "8816:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 855,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 923,
														"src": "8791:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:4"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8725:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8740:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8757:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:4"
									},
									"scope": 972,
									"src": "8707:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "9780:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "9794:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "9790:89:4",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "9815:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "9829:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "9892:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "9888:90:4",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "9915:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "9929:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 905,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "9987:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 908,
															"indexExpression": {
																"id": 906,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "9999:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 909,
														"indexExpression": {
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "10006:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10017:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:4"
											},
											{
												"condition": {
													"id": 913,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "10036:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "10032:76:4",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "10047:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 915,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "10075:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 916,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "10082:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "10091:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 914,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "10066:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "EmitStatement",
															"src": "10061:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9700:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9715:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9732:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9747:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:4"
									},
									"scope": 972,
									"src": "9682:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "10485:387:4",
										"statements": [
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "10495:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [
														{
															"id": 936,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10532:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 935,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "10522:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10561:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 941,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "10557:309:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "10599:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "10617:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 948,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "10636:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 957,
															"nodeType": "IfStatement",
															"src": "10613:130:4",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "10643:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 951,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "10695:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 952,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10704:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 953,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10722:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 950,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 955,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:4"
																	}
																]
															}
														},
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 959,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "10793:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 960,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "10800:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 961,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10809:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 962,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10828:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 958,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				863,
																				923
																			],
																			"referencedDeclaration": 923,
																			"src": "10784:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:4",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10421:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10436:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10453:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:4"
									},
									"scope": 972,
									"src": "10396:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 973,
							"src": "1106:9768:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "105:10770:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 975,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 984,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 993,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1050,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1050,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1050,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1050,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1050,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1050,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1051,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						],
						"IERC20Metadata": [
							1076
						]
					},
					"id": 1077,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1077,
							"sourceUnit": 1051,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1056,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "306:6:6"
									},
									"id": 1057,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1076,
							"linearizedBaseContracts": [
								1076,
								1050
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1060,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1076,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1069,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1076,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1072,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1076,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1077,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1078,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1079,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1084,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1086,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1106,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1093,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1095,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1106,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1101,
												"id": 1103,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1106,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1418
						]
					},
					"id": 1419,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1109,
								"nodeType": "StructuredDocumentation",
								"src": "286:196:8",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1418,
							"linearizedBaseContracts": [
								1418
							],
							"name": "SafeMath",
							"nameLocation": "491:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "718:140:8",
										"statements": [
											{
												"id": 1139,
												"nodeType": "UncheckedBlock",
												"src": "728:124:8",
												"statements": [
													{
														"assignments": [
															1122
														],
														"declarations": [
															{
																"constant": false,
																"id": 1122,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "760:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1139,
																"src": "752:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1121,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "752:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1126,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1123,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "764:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "768:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "764:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "752:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1127,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "787:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1128,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "791:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "787:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1134,
														"nodeType": "IfStatement",
														"src": "783:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "802:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "809:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1132,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "801:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1120,
															"id": 1133,
															"nodeType": "Return",
															"src": "794:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "833:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1136,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "839:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1137,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "832:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1120,
														"id": 1138,
														"nodeType": "Return",
														"src": "825:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "506:131:8",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "651:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "666:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "658:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "677:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "669:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:22:8"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "703:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "703:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:15:8"
									},
									"scope": 1418,
									"src": "642:216:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "1079:113:8",
										"statements": [
											{
												"id": 1167,
												"nodeType": "UncheckedBlock",
												"src": "1089:97:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1153,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "1117:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1154,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "1121:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1117:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1160,
														"nodeType": "IfStatement",
														"src": "1113:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1132:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1139:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1158,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1131:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1152,
															"id": 1159,
															"nodeType": "Return",
															"src": "1124:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1163:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1162,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1144,
																		"src": "1169:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1163,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "1173:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1169:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1162:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1152,
														"id": 1166,
														"nodeType": "Return",
														"src": "1155:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "864:134:8",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1012:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1027:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1019:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1038:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1030:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:22:8"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1064:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1064:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1070:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:15:8"
									},
									"scope": 1418,
									"src": "1003:189:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "1416:417:8",
										"statements": [
											{
												"id": 1209,
												"nodeType": "UncheckedBlock",
												"src": "1426:401:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "1684:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1689:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1684:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1188,
														"nodeType": "IfStatement",
														"src": "1680:28:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1706:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1699:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1180,
															"id": 1187,
															"nodeType": "Return",
															"src": "1692:16:8"
														}
													},
													{
														"assignments": [
															1190
														],
														"declarations": [
															{
																"constant": false,
																"id": 1190,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1730:1:8",
																"nodeType": "VariableDeclaration",
																"scope": 1209,
																"src": "1722:9:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1189,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1722:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1194,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "1734:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "1738:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1734:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1722:17:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1195,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "1757:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1196,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "1761:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1757:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1198,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "1766:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1757:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1204,
														"nodeType": "IfStatement",
														"src": "1753:33:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1777:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1784:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1202,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1776:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1180,
															"id": 1203,
															"nodeType": "Return",
															"src": "1769:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1808:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1206,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "1814:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1207,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1807:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1180,
														"id": 1208,
														"nodeType": "Return",
														"src": "1800:16:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "1198:137:8",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1349:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1364:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1356:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1356:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1375:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1367:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1355:22:8"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1401:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1401:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1407:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1400:15:8"
									},
									"scope": 1418,
									"src": "1340:493:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "2058:114:8",
										"statements": [
											{
												"id": 1237,
												"nodeType": "UncheckedBlock",
												"src": "2068:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1223,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "2096:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2101:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2096:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1230,
														"nodeType": "IfStatement",
														"src": "2092:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2112:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1228,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2111:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1222,
															"id": 1229,
															"nodeType": "Return",
															"src": "2104:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2143:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1232,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1214,
																		"src": "2149:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "2153:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2149:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1235,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2142:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1222,
														"id": 1236,
														"nodeType": "Return",
														"src": "2135:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "1839:138:8",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1991:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2006:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1998:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2017:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2009:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:22:8"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2043:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2043:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2049:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2049:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2042:15:8"
									},
									"scope": 1418,
									"src": "1982:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "2407:114:8",
										"statements": [
											{
												"id": 1265,
												"nodeType": "UncheckedBlock",
												"src": "2417:98:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "2445:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2450:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2445:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1258,
														"nodeType": "IfStatement",
														"src": "2441:29:8",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2461:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2468:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2460:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1250,
															"id": 1257,
															"nodeType": "Return",
															"src": "2453:17:8"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1260,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "2498:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1261,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "2502:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2498:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1263,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2491:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1250,
														"id": 1264,
														"nodeType": "Return",
														"src": "2484:20:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "2178:148:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2340:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2355:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2347:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2366:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2358:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:22:8"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2392:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2392:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2398:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:15:8"
									},
									"scope": 1418,
									"src": "2331:190:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1281,
										"nodeType": "Block",
										"src": "2823:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1277,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1270,
														"src": "2840:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "2844:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2840:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1276,
												"id": 1280,
												"nodeType": "Return",
												"src": "2833:12:8"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "2527:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2765:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2777:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2769:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2769:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2788:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2780:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:22:8"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2814:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2814:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2813:9:8"
									},
									"scope": 1418,
									"src": "2756:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "3190:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "3207:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "3211:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3207:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1295,
												"nodeType": "Return",
												"src": "3200:12:8"
											}
										]
									},
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "2858:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3132:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3144:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "3136:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3155:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "3147:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3147:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3135:22:8"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "3181:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3180:9:8"
									},
									"scope": 1418,
									"src": "3123:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "3533:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1307,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "3550:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1308,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "3554:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3550:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1306,
												"id": 1310,
												"nodeType": "Return",
												"src": "3543:12:8"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "3225:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3475:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3487:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3479:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3479:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3498:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3490:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3478:22:8"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1312,
												"src": "3524:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3524:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3523:9:8"
									},
									"scope": 1418,
									"src": "3466:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "3918:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1322,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "3935:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1323,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "3939:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3935:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1321,
												"id": 1325,
												"nodeType": "Return",
												"src": "3928:12:8"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "3568:278:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3860:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3872:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3864:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3883:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3875:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:22:8"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "3909:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:9:8"
									},
									"scope": 1418,
									"src": "3851:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "4467:29:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1337,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "4484:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1338,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "4488:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4484:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1340,
												"nodeType": "Return",
												"src": "4477:12:8"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "3953:442:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4409:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4421:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "4413:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4432:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "4424:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4424:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:22:8"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "4458:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4458:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4457:9:8"
									},
									"scope": 1418,
									"src": "4400:96:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "5055:106:8",
										"statements": [
											{
												"id": 1365,
												"nodeType": "UncheckedBlock",
												"src": "5065:90:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1355,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "5097:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1356,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "5102:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5097:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1358,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "5105:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1354,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5089:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5089:29:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1360,
														"nodeType": "ExpressionStatement",
														"src": "5089:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1361,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "5139:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1362,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "5143:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5139:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1353,
														"id": 1364,
														"nodeType": "Return",
														"src": "5132:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "4502:453:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4969:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4981:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4973:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4992:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4984:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4984:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5009:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "4995:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4995:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4972:50:8"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "5046:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5046:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5045:9:8"
									},
									"scope": 1418,
									"src": "4960:201:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "5740:105:8",
										"statements": [
											{
												"id": 1390,
												"nodeType": "UncheckedBlock",
												"src": "5750:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1380,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1372,
																		"src": "5782:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5786:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5782:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1383,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "5789:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1379,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5774:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5774:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1385,
														"nodeType": "ExpressionStatement",
														"src": "5774:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1386,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1370,
																"src": "5823:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1387,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "5827:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1378,
														"id": 1389,
														"nodeType": "Return",
														"src": "5816:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "5167:473:8",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5654:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5666:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5658:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5658:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5677:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5669:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5694:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5680:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5680:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5657:50:8"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "5731:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5731:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5730:9:8"
									},
									"scope": 1418,
									"src": "5645:200:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "6586:105:8",
										"statements": [
											{
												"id": 1415,
												"nodeType": "UncheckedBlock",
												"src": "6596:89:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1405,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1397,
																		"src": "6628:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6632:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6628:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1408,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "6635:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1404,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6620:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6620:28:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1410,
														"nodeType": "ExpressionStatement",
														"src": "6620:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1411,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1395,
																"src": "6669:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1412,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1397,
																"src": "6673:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6669:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1403,
														"id": 1414,
														"nodeType": "Return",
														"src": "6662:12:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "5851:635:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6500:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6512:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "6504:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6504:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6523:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "6515:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6540:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "6526:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1398,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6526:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6503:50:8"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "6577:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6576:9:8"
									},
									"scope": 1418,
									"src": "6491:200:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1419,
							"src": "483:6210:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6587:8"
				},
				"id": 8
			},
			"interfaces/IUBI4ALLQuantum.sol": {
				"ast": {
					"absolutePath": "interfaces/IUBI4ALLQuantum.sol",
					"exportedSymbols": {
						"IUBI4ALLQuantum": [
							1519
						]
					},
					"id": 1520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1420,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUBI4ALLQuantum",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1519,
							"linearizedBaseContracts": [
								1519
							],
							"name": "IUBI4ALLQuantum",
							"nameLocation": "68:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "99:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "117:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "109:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:17:9"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "149:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "148:9:9"
									},
									"scope": 1519,
									"src": "90:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1436,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "172:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "189:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "181:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "201:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "193:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:28:9"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "227:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "227:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "226:6:9"
									},
									"scope": 1519,
									"src": "163:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c4e41b22",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "247:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "261:2:9"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "287:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:9:9"
									},
									"scope": 1519,
									"src": "238:58:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "65ed6e23",
									"id": 1454,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllocations",
									"nameLocation": "310:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "324:2:9"
									},
									"returnParameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "367:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "359:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "ecosystem",
												"nameLocation": "393:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "385:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "385:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "community",
												"nameLocation": "420:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "412:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "447:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "439:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "474:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "466:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "349:138:9"
									},
									"scope": 1519,
									"src": "301:187:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "db7a4605",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getWallets",
									"nameLocation": "502:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:2:9"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "555:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "547:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "ecosystem",
												"nameLocation": "581:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "573:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "community",
												"nameLocation": "608:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "600:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "635:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "627:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "662:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "654:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:138:9"
									},
									"scope": 1519,
									"src": "493:183:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "690:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "703:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "695:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "715:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "707:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "707:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:28:9"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "731:0:9"
									},
									"scope": 1519,
									"src": "681:51:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "746:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "759:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "751:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:16:9"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:0:9"
									},
									"scope": 1519,
									"src": "737:39:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b7e26a2e",
									"id": 1486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyRecoverTokens",
									"nameLocation": "790:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "821:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "813:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "836:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "828:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:27:9"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "848:0:9"
									},
									"scope": 1519,
									"src": "781:68:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2af44592",
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lockedForDAO",
									"nameLocation": "863:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "884:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "876:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:17:9"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "916:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:9:9"
									},
									"scope": 1519,
									"src": "854:71:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a0ced96",
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalLockedForDAO",
									"nameLocation": "939:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "956:2:9"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "982:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:9"
									},
									"scope": 1519,
									"src": "930:61:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "fd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6",
									"id": 1504,
									"name": "TokensBurned",
									"nameLocation": "1002:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1031:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1015:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1048:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1040:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:41:9"
									},
									"src": "996:60:9"
								},
								{
									"anonymous": false,
									"eventSelector": "1ac506e936e7f02f4036dbe44708f5e8d72af9ace8745a29fd391481a8fbcb87",
									"id": 1512,
									"name": "EmergencyRecovery",
									"nameLocation": "1067:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1101:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1085:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1124:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1108:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1136:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1128:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:59:9"
									},
									"src": "1061:83:9"
								},
								{
									"anonymous": false,
									"eventSelector": "6ff3a4003b90be84595beb5f6acb9d54f88bd3e6dd4887ca67e53dc9645465ea",
									"id": 1518,
									"name": "WalletUpdated",
									"nameLocation": "1155:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"indexed": false,
												"mutability": "mutable",
												"name": "walletType",
												"nameLocation": "1176:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "1169:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1513,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1169:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"indexed": false,
												"mutability": "mutable",
												"name": "newWallet",
												"nameLocation": "1196:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "1188:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:38:9"
									},
									"src": "1149:58:9"
								}
							],
							"scope": 1520,
							"src": "58:1151:9",
							"usedErrors": [],
							"usedEvents": [
								1504,
								1512,
								1518
							]
						}
					],
					"src": "32:1177:9"
				},
				"id": 9
			},
			"quantum/UBI4ALLQuantum.sol": {
				"ast": {
					"absolutePath": "quantum/UBI4ALLQuantum.sol",
					"exportedSymbols": {
						"Context": [
							1106
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1076
						],
						"IUBI4ALLQuantum": [
							1519
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"ReentrancyGuard": [
							457
						],
						"SafeMath": [
							1418
						],
						"UBI4ALLQuantum": [
							2610
						]
					},
					"id": 2611,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2611,
							"sourceUnit": 973,
							"src": "58:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2611,
							"sourceUnit": 148,
							"src": "114:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1524,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2611,
							"sourceUnit": 458,
							"src": "167:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2611,
							"sourceUnit": 393,
							"src": "230:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1526,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2611,
							"sourceUnit": 1419,
							"src": "286:57:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IUBI4ALLQuantum.sol",
							"file": "../interfaces/IUBI4ALLQuantum.sol",
							"id": 1527,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2611,
							"sourceUnit": 1520,
							"src": "344:43:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1529,
										"name": "ERC20",
										"nameLocations": [
											"589:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "589:5:10"
									},
									"id": 1530,
									"nodeType": "InheritanceSpecifier",
									"src": "589:5:10"
								},
								{
									"baseName": {
										"id": 1531,
										"name": "Ownable",
										"nameLocations": [
											"596:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "596:7:10"
									},
									"id": 1532,
									"nodeType": "InheritanceSpecifier",
									"src": "596:7:10"
								},
								{
									"baseName": {
										"id": 1533,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"605:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "605:15:10"
									},
									"id": 1534,
									"nodeType": "InheritanceSpecifier",
									"src": "605:15:10"
								},
								{
									"baseName": {
										"id": 1535,
										"name": "Pausable",
										"nameLocations": [
											"622:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 392,
										"src": "622:8:10"
									},
									"id": 1536,
									"nodeType": "InheritanceSpecifier",
									"src": "622:8:10"
								},
								{
									"baseName": {
										"id": 1537,
										"name": "IUBI4ALLQuantum",
										"nameLocations": [
											"632:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1519,
										"src": "632:15:10"
									},
									"id": 1538,
									"nodeType": "InheritanceSpecifier",
									"src": "632:15:10"
								}
							],
							"canonicalName": "UBI4ALLQuantum",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1528,
								"nodeType": "StructuredDocumentation",
								"src": "389:173:10",
								"text": "@title UBI4ALLQuantum - Token Q4A per trading con leva avanzata\n @notice Gestisce il token Q4A con allocazioni, lock per DAO, vesting e supporto per trading con leva"
							},
							"fullyImplemented": true,
							"id": 2610,
							"linearizedBaseContracts": [
								2610,
								1519,
								392,
								457,
								147,
								972,
								189,
								1076,
								1050,
								1106
							],
							"name": "UBI4ALLQuantum",
							"nameLocation": "571:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1541,
									"libraryName": {
										"id": 1539,
										"name": "SafeMath",
										"nameLocations": [
											"660:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1418,
										"src": "660:8:10"
									},
									"nodeType": "UsingForDirective",
									"src": "654:27:10",
									"typeName": {
										"id": 1540,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "673:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "687:70:10",
										"text": "@dev Total supply del token Q4A (1 miliardo di token, 18 decimali)"
									},
									"functionSelector": "902d55a5",
									"id": 1549,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "786:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "762:61:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1543,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "762:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 1548,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f3030305f303030",
											"id": 1544,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "801:13:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1_000_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1547,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1545,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "817:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1546,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "821:2:10",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "817:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "801:22:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "829:42:10",
										"text": "@dev Allocazione per il treasury (50%)"
									},
									"functionSelector": "bf1ad7e0",
									"id": 1558,
									"mutability": "constant",
									"name": "TREASURY_ALLOCATION",
									"nameLocation": "900:19:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "876:71:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1551,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "876:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1557,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1552,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "923:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "3530",
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "938:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"src": "923:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1555,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "922:19:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1556,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "944:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "922:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "953:43:10",
										"text": "@dev Allocazione per l'ecosistema (20%)"
									},
									"functionSelector": "90534f24",
									"id": 1567,
									"mutability": "constant",
									"name": "ECOSYSTEM_ALLOCATION",
									"nameLocation": "1025:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1001:72:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1560,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1001:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1566,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1561,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "1049:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "3230",
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1064:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "1049:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1564,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1048:19:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1565,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1070:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "1048:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "1079:43:10",
										"text": "@dev Allocazione per la comunità (15%)"
									},
									"functionSelector": "993eb1c5",
									"id": 1576,
									"mutability": "constant",
									"name": "COMMUNITY_ALLOCATION",
									"nameLocation": "1151:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1127:72:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1569,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1127:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1570,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "1175:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1190:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1175:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1573,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1174:19:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1574,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1196:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "1174:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "1205:44:10",
										"text": "@dev Allocazione per la liquidità (10%)"
									},
									"functionSelector": "f9428f38",
									"id": 1585,
									"mutability": "constant",
									"name": "LIQUIDITY_ALLOCATION",
									"nameLocation": "1278:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1254:72:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1578,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1254:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1584,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1579,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "1302:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "3130",
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1317:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "1302:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1582,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1301:19:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1583,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1323:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "1301:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "1332:40:10",
										"text": "@dev Allocazione per la riserva (5%)"
									},
									"functionSelector": "7b5c7f03",
									"id": 1594,
									"mutability": "constant",
									"name": "RESERVE_ALLOCATION",
									"nameLocation": "1401:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1377:69:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1587,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1377:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1593,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1588,
														"name": "TOTAL_SUPPLY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "1423:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "35",
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1438:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "1423:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1591,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1422:18:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "313030",
											"id": 1592,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1443:3:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"src": "1422:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "1453:36:10",
										"text": "@dev Periodo di vesting (1 anno)"
									},
									"functionSelector": "0197d972",
									"id": 1598,
									"mutability": "constant",
									"name": "VESTING_PERIOD",
									"nameLocation": "1518:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1494:49:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1596,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1494:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1597,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1535:8:10",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "1549:40:10",
										"text": "@dev Timestamp di inizio del vesting"
									},
									"functionSelector": "254800d4",
									"id": 1601,
									"mutability": "immutable",
									"name": "vestingStart",
									"nameLocation": "1619:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1594:37:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1594:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "1638:34:10",
										"text": "@dev Wallet per le allocazioni"
									},
									"functionSelector": "4626402b",
									"id": 1604,
									"mutability": "mutable",
									"name": "treasuryWallet",
									"nameLocation": "1692:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1677:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1603,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1677:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "435263ef",
									"id": 1606,
									"mutability": "mutable",
									"name": "ecosystemWallet",
									"nameLocation": "1727:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1712:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1605,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1712:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c7574839",
									"id": 1608,
									"mutability": "mutable",
									"name": "communityWallet",
									"nameLocation": "1763:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1748:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1607,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1748:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4698016",
									"id": 1610,
									"mutability": "mutable",
									"name": "liquidityWallet",
									"nameLocation": "1799:15:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1784:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1609,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1784:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d72b11bd",
									"id": 1612,
									"mutability": "mutable",
									"name": "reserveWallet",
									"nameLocation": "1835:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1820:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1611,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1820:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1493
									],
									"constant": false,
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "1855:48:10",
										"text": "@dev Mappatura dei token bloccati per la DAO"
									},
									"functionSelector": "2af44592",
									"id": 1617,
									"mutability": "mutable",
									"name": "lockedForDAO",
									"nameLocation": "1943:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "1908:47:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1616,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1614,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1916:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1908:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1615,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1927:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1498
									],
									"constant": false,
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "1961:45:10",
										"text": "@dev Totale dei token bloccati per la DAO"
									},
									"functionSelector": "4a0ced96",
									"id": 1620,
									"mutability": "mutable",
									"name": "totalLockedForDAO",
									"nameLocation": "2026:17:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "2011:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1619,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2011:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "UBI4ALLQuantum.VestingSchedule",
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "2050:33:10",
										"text": "@dev Struttura per il vesting"
									},
									"id": 1626,
									"members": [
										{
											"constant": false,
											"id": 1623,
											"mutability": "mutable",
											"name": "totalAmount",
											"nameLocation": "2129:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1626,
											"src": "2121:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1622,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2121:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1625,
											"mutability": "mutable",
											"name": "releasedAmount",
											"nameLocation": "2187:14:10",
											"nodeType": "VariableDeclaration",
											"scope": 1626,
											"src": "2179:22:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1624,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2179:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VestingSchedule",
									"nameLocation": "2095:15:10",
									"nodeType": "StructDefinition",
									"scope": 2610,
									"src": "2088:147:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1627,
										"nodeType": "StructuredDocumentation",
										"src": "2241:41:10",
										"text": "@dev Mappatura dei vesting per wallet"
									},
									"functionSelector": "fdb20ccb",
									"id": 1632,
									"mutability": "mutable",
									"name": "vestingSchedules",
									"nameLocation": "2330:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 2610,
									"src": "2287:59:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
										"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule)"
									},
									"typeName": {
										"id": 1631,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1628,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2295:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2287:35:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
											"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1630,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1629,
												"name": "VestingSchedule",
												"nameLocations": [
													"2306:15:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1626,
												"src": "2306:15:10"
											},
											"referencedDeclaration": 1626,
											"src": "2306:15:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
												"typeString": "struct UBI4ALLQuantum.VestingSchedule"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "2353:52:10",
										"text": "@notice Evento emesso per trasferimenti di token"
									},
									"eventSelector": "94e83ca767b0d965638d27b68a75ea07cd5c28c86299b5c7e02d2d5f1ee9aff2",
									"id": 1641,
									"name": "QuantumTransfer",
									"nameLocation": "2416:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2448:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "2432:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2470:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "2454:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2482:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "2474:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2474:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2431:58:10"
									},
									"src": "2410:80:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "2495:55:10",
										"text": "@notice Evento emesso per token bloccati per la DAO"
									},
									"eventSelector": "6b4f55697b6ddad583b377bb7ab9d921afc2eb9ffa0b12fbcea5ae24a7a34e6a",
									"id": 1648,
									"name": "TokensLockedForDAO",
									"nameLocation": "2561:18:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2596:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "2580:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1646,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2613:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "2605:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2579:41:10"
									},
									"src": "2555:66:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "2626:55:10",
										"text": "@notice Evento emesso per token sbloccati dalla DAO"
									},
									"eventSelector": "86e5f036736269c50194228317f229b5684d89d9db959c604a1ef646d6cd6ca9",
									"id": 1655,
									"name": "TokensUnlockedForDAO",
									"nameLocation": "2692:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2729:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "2713:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2746:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "2738:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:10"
									},
									"src": "2686:68:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1656,
										"nodeType": "StructuredDocumentation",
										"src": "2759:58:10",
										"text": "@notice Evento emesso per rilascio di token in vesting"
									},
									"eventSelector": "4ad7799f99297062cea73c5a21d23a1fcf49f6a1957f7409712e555a0dcd1e1d",
									"id": 1662,
									"name": "VestingReleased",
									"nameLocation": "2828:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"indexed": true,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "2860:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "2844:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2844:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1660,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2876:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "2868:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2868:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:40:10"
									},
									"src": "2822:62:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "2889:52:10",
										"text": "@notice Evento emesso per trasferimenti con leva"
									},
									"eventSelector": "ae5a72e837b1c61d8f56d35c16816d1e29cc1a1e858253419499dda337ea03e3",
									"id": 1673,
									"name": "LeveragedTransfer",
									"nameLocation": "2952:17:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2986:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "2970:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2970:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3008:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "2992:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3020:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3012:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1671,
												"indexed": false,
												"mutability": "mutable",
												"name": "leverage",
												"nameLocation": "3036:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "3028:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2969:76:10"
									},
									"src": "2946:100:10"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "3738:1143:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1697,
																"name": "_treasuryWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "3756:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3783:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3775:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1698,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3775:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3775:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3756:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642074726561737572792077616c6c6574",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3787:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
																"typeString": "literal_string \"Invalid treasury wallet\""
															},
															"value": "Invalid treasury wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6826ad92308decb0e137a0b7ccb1fc0dcb44ae5da601ab5c67f0338eea026a1",
																"typeString": "literal_string \"Invalid treasury wallet\""
															}
														],
														"id": 1696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3748:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3748:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "3748:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1707,
																"name": "_ecosystemWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "3831:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3859:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3851:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1708,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3851:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3851:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3831:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642065636f73797374656d2077616c6c6574",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3863:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_618e06b925dc1c261ab77636de637a065ab7ceef1a2509a21be38a727110d230",
																"typeString": "literal_string \"Invalid ecosystem wallet\""
															},
															"value": "Invalid ecosystem wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_618e06b925dc1c261ab77636de637a065ab7ceef1a2509a21be38a727110d230",
																"typeString": "literal_string \"Invalid ecosystem wallet\""
															}
														],
														"id": 1706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3823:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "3823:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1717,
																"name": "_communityWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1680,
																"src": "3908:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3936:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3928:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1718,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3928:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3928:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3908:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636f6d6d756e6974792077616c6c6574",
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3940:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e6aa9e82df9ed735f6dba8fe33ecac07fe34e5696eb7e317a220817b24d3a2b",
																"typeString": "literal_string \"Invalid community wallet\""
															},
															"value": "Invalid community wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e6aa9e82df9ed735f6dba8fe33ecac07fe34e5696eb7e317a220817b24d3a2b",
																"typeString": "literal_string \"Invalid community wallet\""
															}
														],
														"id": 1716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3900:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3900:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "3900:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1727,
																"name": "_liquidityWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "3985:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4013:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4005:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1728,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4005:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4005:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3985:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206c69717569646974792077616c6c6574",
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4017:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f6bd4eeef749285304a1dee11bf473ac68a9249155d6123350512d261d5957a",
																"typeString": "literal_string \"Invalid liquidity wallet\""
															},
															"value": "Invalid liquidity wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f6bd4eeef749285304a1dee11bf473ac68a9249155d6123350512d261d5957a",
																"typeString": "literal_string \"Invalid liquidity wallet\""
															}
														],
														"id": 1726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3977:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3977:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "3977:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1737,
																"name": "_reserveWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "4062:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4088:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4080:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1738,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4080:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4080:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4062:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726573657276652077616c6c6574",
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4092:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_139c4f1312240fd33ddbb308a6e6b27481dd8a672750151fbe0ca28f85588b38",
																"typeString": "literal_string \"Invalid reserve wallet\""
															},
															"value": "Invalid reserve wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_139c4f1312240fd33ddbb308a6e6b27481dd8a672750151fbe0ca28f85588b38",
																"typeString": "literal_string \"Invalid reserve wallet\""
															}
														],
														"id": 1736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4054:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4054:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "4054:63:10"
											},
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1746,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "4128:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1747,
														"name": "_treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "4145:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4128:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "4128:32:10"
											},
											{
												"expression": {
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1750,
														"name": "ecosystemWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "4170:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1751,
														"name": "_ecosystemWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "4188:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4170:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1753,
												"nodeType": "ExpressionStatement",
												"src": "4170:34:10"
											},
											{
												"expression": {
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1754,
														"name": "communityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "4214:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1755,
														"name": "_communityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "4232:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4214:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "4214:34:10"
											},
											{
												"expression": {
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1758,
														"name": "liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "4258:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1759,
														"name": "_liquidityWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "4276:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4258:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1761,
												"nodeType": "ExpressionStatement",
												"src": "4258:34:10"
											},
											{
												"expression": {
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1762,
														"name": "reserveWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "4302:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1763,
														"name": "_reserveWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "4318:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4302:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1765,
												"nodeType": "ExpressionStatement",
												"src": "4302:30:10"
											},
											{
												"expression": {
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1766,
														"name": "vestingStart",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "4343:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1767,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4358:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4364:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4358:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4343:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1770,
												"nodeType": "ExpressionStatement",
												"src": "4343:30:10"
											},
											{
												"expression": {
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1771,
															"name": "vestingSchedules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "4444:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
																"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
															}
														},
														"id": 1773,
														"indexExpression": {
															"id": 1772,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "4461:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4444:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
															"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1775,
																"name": "TREASURY_ALLOCATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1558,
																"src": "4495:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4516:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1774,
															"name": "VestingSchedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "4479:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_VestingSchedule_$1626_storage_ptr_$",
																"typeString": "type(struct UBI4ALLQuantum.VestingSchedule storage pointer)"
															}
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4479:39:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1626_memory_ptr",
															"typeString": "struct UBI4ALLQuantum.VestingSchedule memory"
														}
													},
													"src": "4444:74:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
														"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
													}
												},
												"id": 1779,
												"nodeType": "ExpressionStatement",
												"src": "4444:74:10"
											},
											{
												"expression": {
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1780,
															"name": "vestingSchedules",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "4528:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
																"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
															}
														},
														"id": 1782,
														"indexExpression": {
															"id": 1781,
															"name": "ecosystemWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "4545:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4528:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
															"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1784,
																"name": "ECOSYSTEM_ALLOCATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "4580:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4602:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1783,
															"name": "VestingSchedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "4564:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_VestingSchedule_$1626_storage_ptr_$",
																"typeString": "type(struct UBI4ALLQuantum.VestingSchedule storage pointer)"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4564:40:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1626_memory_ptr",
															"typeString": "struct UBI4ALLQuantum.VestingSchedule memory"
														}
													},
													"src": "4528:76:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
														"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "4528:76:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1792,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4666:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UBI4ALLQuantum_$2610",
																		"typeString": "contract UBI4ALLQuantum"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UBI4ALLQuantum_$2610",
																		"typeString": "contract UBI4ALLQuantum"
																	}
																],
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4658:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1790,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4658:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4658:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1794,
																"name": "TREASURY_ALLOCATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1558,
																"src": "4673:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1795,
																"name": "ECOSYSTEM_ALLOCATION",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1567,
																"src": "4695:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4673:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1789,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4652:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4652:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "4652:64:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1800,
															"name": "communityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "4732:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1801,
															"name": "COMMUNITY_ALLOCATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "4749:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1799,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4726:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4726:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "4726:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1805,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "4786:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1806,
															"name": "LIQUIDITY_ALLOCATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "4803:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1804,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4780:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4780:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "4780:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1810,
															"name": "reserveWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "4840:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1811,
															"name": "RESERVE_ALLOCATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "4855:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1809,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "4834:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "ExpressionStatement",
												"src": "4834:40:10"
											}
										]
									},
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "3052:412:10",
										"text": "@notice Costruttore del contratto\n @param _treasuryWallet Indirizzo del wallet treasury\n @param _ecosystemWallet Indirizzo del wallet ecosistema\n @param _communityWallet Indirizzo del wallet comunità\n @param _liquidityWallet Indirizzo del wallet liquidità\n @param _reserveWallet Indirizzo del wallet riserva\n @param initialOwner Indirizzo del proprietario iniziale"
									},
									"id": 1815,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5175616e74756d2055424934414c4c",
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3690:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5e1c52b3108e8e0f0e07819656f82573b47e574fc71dbdb34de67208b8d5ee9e",
														"typeString": "literal_string \"Quantum UBI4ALL\""
													},
													"value": "Quantum UBI4ALL"
												},
												{
													"hexValue": "513441",
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3709:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d3ee782574f4cc0a984a1d37c6cbb4ffcd110799f20b447b09f5ec14a93a6435",
														"typeString": "literal_string \"Q4A\""
													},
													"value": "Q4A"
												}
											],
											"id": 1691,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1688,
												"name": "ERC20",
												"nameLocations": [
													"3684:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "3684:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3684:31:10"
										},
										{
											"arguments": [
												{
													"id": 1693,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1686,
													"src": "3724:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1694,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1692,
												"name": "Ownable",
												"nameLocations": [
													"3716:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3716:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3716:21:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "_treasuryWallet",
												"nameLocation": "3498:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3490:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3490:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "_ecosystemWallet",
												"nameLocation": "3531:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3523:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "_communityWallet",
												"nameLocation": "3565:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3557:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3557:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "_liquidityWallet",
												"nameLocation": "3599:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3591:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3591:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "_reserveWallet",
												"nameLocation": "3633:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3625:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3625:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "3665:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3657:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3657:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3480:203:10"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3738:0:10"
									},
									"scope": 2610,
									"src": "3469:1412:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 1824,
										"nodeType": "Block",
										"src": "5053:36:10",
										"statements": [
											{
												"expression": {
													"id": 1822,
													"name": "TOTAL_SUPPLY",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1549,
													"src": "5070:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1821,
												"id": 1823,
												"nodeType": "Return",
												"src": "5063:19:10"
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "4887:94:10",
										"text": "@notice Ottiene il total supply del token\n @return Total supply (1 miliardo di Q4A)"
									},
									"functionSelector": "c4e41b22",
									"id": 1825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "4995:14:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1818,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5026:8:10"
									},
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5009:2:10"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "5044:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5044:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5043:9:10"
									},
									"scope": 2610,
									"src": "4986:103:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1454
									],
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "5576:201:10",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1840,
															"name": "TREASURY_ALLOCATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "5607:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1841,
															"name": "ECOSYSTEM_ALLOCATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "5640:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1842,
															"name": "COMMUNITY_ALLOCATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "5674:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1843,
															"name": "LIQUIDITY_ALLOCATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "5708:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1844,
															"name": "RESERVE_ALLOCATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "5742:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1845,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5593:177:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1839,
												"id": 1846,
												"nodeType": "Return",
												"src": "5586:184:10"
											}
										]
									},
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "5095:280:10",
										"text": "@notice Ottiene le allocazioni dei token\n @return treasury Allocazione treasury\n @return ecosystem Allocazione ecosistema\n @return community Allocazione comunità\n @return liquidity Allocazione liquidità\n @return reserve Allocazione riserva"
									},
									"functionSelector": "65ed6e23",
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllocations",
									"nameLocation": "5389:14:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1828,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5420:8:10"
									},
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5403:2:10"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "5455:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "5447:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5447:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "ecosystem",
												"nameLocation": "5481:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "5473:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5473:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "community",
												"nameLocation": "5508:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "5500:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5500:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5535:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "5527:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5527:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "5562:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "5554:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5554:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5437:138:10"
									},
									"scope": 2610,
									"src": "5380:397:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1467
									],
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "6285:176:10",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1863,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "6316:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1864,
															"name": "ecosystemWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "6344:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1865,
															"name": "communityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "6373:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1866,
															"name": "liquidityWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1610,
															"src": "6402:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1867,
															"name": "reserveWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "6431:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 1868,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6302:152:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$",
														"typeString": "tuple(address,address,address,address,address)"
													}
												},
												"functionReturnParameters": 1862,
												"id": 1869,
												"nodeType": "Return",
												"src": "6295:159:10"
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "5783:305:10",
										"text": "@notice Ottiene gli indirizzi dei wallet\n @return treasury Indirizzo wallet treasury\n @return ecosystem Indirizzo wallet ecosistema\n @return community Indirizzo wallet comunità\n @return liquidity Indirizzo wallet liquidità\n @return reserve Indirizzo wallet riserva"
									},
									"functionSelector": "db7a4605",
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWallets",
									"nameLocation": "6102:10:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1851,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6129:8:10"
									},
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6112:2:10"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "treasury",
												"nameLocation": "6164:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "6156:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6156:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "ecosystem",
												"nameLocation": "6190:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "6182:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6182:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "community",
												"nameLocation": "6217:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "6209:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6244:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "6236:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6236:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "reserve",
												"nameLocation": "6271:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "6263:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6263:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:138:10"
									},
									"scope": 2610,
									"src": "6093:368:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1474
									],
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "6695:137:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1887,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "6713:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6727:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6719:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1888,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6719:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6719:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6713:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6731:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 1886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6705:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6705:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "6705:46:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1897,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "6769:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6778:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6769:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6781:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1896,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6761:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6761:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1902,
												"nodeType": "ExpressionStatement",
												"src": "6761:37:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1904,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "6814:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1905,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "6818:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1903,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "6808:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6808:17:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1907,
												"nodeType": "ExpressionStatement",
												"src": "6808:17:10"
											}
										]
									},
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "6467:126:10",
										"text": "@notice Minta nuovi token\n @param to Indirizzo del destinatario\n @param amount Quantità di token da mintare"
									},
									"functionSelector": "40c10f19",
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1880,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1879,
												"name": "onlyOwner",
												"nameLocations": [
													"6658:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6658:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6658:9:10"
										},
										{
											"id": 1882,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1881,
												"name": "nonReentrant",
												"nameLocations": [
													"6668:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "6668:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6668:12:10"
										},
										{
											"id": 1884,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1883,
												"name": "whenNotPaused",
												"nameLocations": [
													"6681:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "6681:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6681:13:10"
										}
									],
									"name": "mint",
									"nameLocation": "6607:4:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1878,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6649:8:10"
									},
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6620:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "6612:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6612:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6632:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "6624:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6611:28:10"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6695:0:10"
									},
									"scope": 2610,
									"src": "6598:234:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1479
									],
									"body": {
										"id": 1939,
										"nodeType": "Block",
										"src": "7009:136:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1921,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1912,
																"src": "7027:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7036:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7027:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7039:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7019:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7019:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "7019:37:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1928,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7072:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7076:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7072:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1930,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "7084:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1927,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "7066:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7066:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "7066:25:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1934,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7119:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7123:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7119:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1936,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "7131:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1933,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "7106:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7106:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1938,
												"nodeType": "EmitStatement",
												"src": "7101:37:10"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "6838:91:10",
										"text": "@notice Brucia token dal chiamante\n @param amount Quantità di token da bruciare"
									},
									"functionSelector": "42966c68",
									"id": 1940,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1916,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1915,
												"name": "nonReentrant",
												"nameLocations": [
													"6982:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "6982:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6982:12:10"
										},
										{
											"id": 1918,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1917,
												"name": "whenNotPaused",
												"nameLocations": [
													"6995:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "6995:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6995:13:10"
										}
									],
									"name": "burn",
									"nameLocation": "6943:4:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1914,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6973:8:10"
									},
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6956:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "6948:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6948:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6947:16:10"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7009:0:10"
									},
									"scope": 2610,
									"src": "6934:211:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1486
									],
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "7411:346:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1954,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1943,
																"src": "7429:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1957,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7446:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UBI4ALLQuantum_$2610",
																			"typeString": "contract UBI4ALLQuantum"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UBI4ALLQuantum_$2610",
																			"typeString": "contract UBI4ALLQuantum"
																		}
																	],
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7438:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1955,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7438:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7438:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7429:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207265636f7665722051344120746f6b656e73",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7453:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3821712960548e907ae123c73adb4ca463ffbf181b8c12df741f44cc835aa50",
																"typeString": "literal_string \"Cannot recover Q4A tokens\""
															},
															"value": "Cannot recover Q4A tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3821712960548e907ae123c73adb4ca463ffbf181b8c12df741f44cc835aa50",
																"typeString": "literal_string \"Cannot recover Q4A tokens\""
															}
														],
														"id": 1953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7421:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7421:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "7421:60:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1964,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1945,
																"src": "7499:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7513:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7505:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1965,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7505:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7505:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7499:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7517:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 1963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7491:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7491:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "7491:46:10"
											},
											{
												"assignments": [
													1974
												],
												"declarations": [
													{
														"constant": false,
														"id": 1974,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7555:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 2006,
														"src": "7547:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1973,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7547:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1984,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1981,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7596:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UBI4ALLQuantum_$2610",
																		"typeString": "contract UBI4ALLQuantum"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UBI4ALLQuantum_$2610",
																		"typeString": "contract UBI4ALLQuantum"
																	}
																],
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7588:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1979,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7588:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7588:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1976,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "7571:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1975,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "7564:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1050_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7564:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1050",
																"typeString": "contract IERC20"
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7578:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1007,
														"src": "7564:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7564:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7547:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1986,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "7620:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7629:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7620:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207265636f766572",
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7632:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7e7a53f0698cf3ba0c5878574d3a5c4a2b03765bd52531f11ace562963d8d19",
																"typeString": "literal_string \"No tokens to recover\""
															},
															"value": "No tokens to recover"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7e7a53f0698cf3ba0c5878574d3a5c4a2b03765bd52531f11ace562963d8d19",
																"typeString": "literal_string \"No tokens to recover\""
															}
														],
														"id": 1985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7612:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7612:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1991,
												"nodeType": "ExpressionStatement",
												"src": "7612:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1996,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "7688:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "7692:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1993,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "7672:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1992,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "7665:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1050_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7665:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1050",
																"typeString": "contract IERC20"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7679:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1017,
														"src": "7665:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7665:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "7665:34:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2001,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "7732:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "7739:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2003,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "7743:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2000,
														"name": "EmergencyRecovery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "7714:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7714:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2005,
												"nodeType": "EmitStatement",
												"src": "7709:41:10"
											}
										]
									},
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "7151:155:10",
										"text": "@notice Recupera token ERC20 bloccati nel contratto\n @param token Indirizzo del token da recuperare\n @param to Indirizzo del destinatario"
									},
									"functionSelector": "b7e26a2e",
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1949,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1948,
												"name": "onlyOwner",
												"nameLocations": [
													"7388:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7388:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7388:9:10"
										},
										{
											"id": 1951,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1950,
												"name": "nonReentrant",
												"nameLocations": [
													"7398:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "7398:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "7398:12:10"
										}
									],
									"name": "emergencyRecoverTokens",
									"nameLocation": "7320:22:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1947,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7379:8:10"
									},
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7351:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "7343:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7343:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7366:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "7358:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7358:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7342:27:10"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7411:0:10"
									},
									"scope": 2610,
									"src": "7311:446:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "8055:1470:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2018,
																"name": "newWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "8073:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8094:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8086:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2019,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8086:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8086:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8073:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642077616c6c65742061646472657373",
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8098:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf",
																"typeString": "literal_string \"Invalid wallet address\""
															},
															"value": "Invalid wallet address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd128e933d077647bedee942f8fad0896dbcf403dd101362daa9f1ef97dd6adf",
																"typeString": "literal_string \"Invalid wallet address\""
															}
														],
														"id": 2017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8065:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8065:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2026,
												"nodeType": "ExpressionStatement",
												"src": "8065:58:10"
											},
											{
												"assignments": [
													2028
												],
												"declarations": [
													{
														"constant": false,
														"id": 2028,
														"mutability": "mutable",
														"name": "walletHash",
														"nameLocation": "8141:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2177,
														"src": "8133:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2027,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "8133:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2035,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2032,
																	"name": "walletType",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2010,
																	"src": "8181:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 2030,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8164:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8168:12:10",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8164:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8164:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2029,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8154:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8154:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8133:60:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2036,
														"name": "walletHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2028,
														"src": "8207:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "7472656173757279",
																		"id": 2040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8248:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cbd818ad4dd6f1ff9338c2bb62480241424dd9a65f9f3284101a01cd099ad8ac",
																			"typeString": "literal_string \"treasury\""
																		},
																		"value": "treasury"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_cbd818ad4dd6f1ff9338c2bb62480241424dd9a65f9f3284101a01cd099ad8ac",
																			"typeString": "literal_string \"treasury\""
																		}
																	],
																	"expression": {
																		"id": 2038,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "8231:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8235:12:10",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "8231:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8231:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2037,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "8221:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8221:39:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "8207:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2069,
															"name": "walletHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "8525:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "65636f73797374656d",
																			"id": 2073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8566:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_9c28c0e7f24473b02f05ded2aef7a9890c81a46c38fb26b940624dbb4dd591dd",
																				"typeString": "literal_string \"ecosystem\""
																			},
																			"value": "ecosystem"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_9c28c0e7f24473b02f05ded2aef7a9890c81a46c38fb26b940624dbb4dd591dd",
																				"typeString": "literal_string \"ecosystem\""
																			}
																		],
																		"expression": {
																			"id": 2071,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "8549:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8553:12:10",
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "8549:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 2074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8549:29:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2070,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "8539:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8539:40:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "8525:54:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2102,
																"name": "walletHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2028,
																"src": "8848:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "636f6d6d756e697479",
																				"id": 2106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8889:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_6697469966e6db36e8e7163442550033ec984b278e48453a9cf46343df642f53",
																					"typeString": "literal_string \"community\""
																				},
																				"value": "community"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_6697469966e6db36e8e7163442550033ec984b278e48453a9cf46343df642f53",
																					"typeString": "literal_string \"community\""
																				}
																			],
																			"expression": {
																				"id": 2104,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "8872:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "8876:12:10",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "8872:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 2107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8872:29:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2103,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "8862:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8862:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "8848:54:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2122,
																	"name": "walletHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "9040:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "6c6971756964697479",
																					"id": 2126,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9081:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_bb7d9f8cddc6f064ba72d0e3c1e53eb67867dd8506fa4f5d61c86189caca8ee5",
																						"typeString": "literal_string \"liquidity\""
																					},
																					"value": "liquidity"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_bb7d9f8cddc6f064ba72d0e3c1e53eb67867dd8506fa4f5d61c86189caca8ee5",
																						"typeString": "literal_string \"liquidity\""
																					}
																				],
																				"expression": {
																					"id": 2124,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "9064:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 2125,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "9068:12:10",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "9064:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9064:29:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 2123,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "9054:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9054:40:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "9040:54:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 2149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2142,
																		"name": "walletHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2028,
																		"src": "9232:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "72657365727665",
																						"id": 2146,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9273:9:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f712c2fa585715e22c7fcc833629ce4482ad96496ecd08f3a14847183c4ef4ee",
																							"typeString": "literal_string \"reserve\""
																						},
																						"value": "reserve"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_f712c2fa585715e22c7fcc833629ce4482ad96496ecd08f3a14847183c4ef4ee",
																							"typeString": "literal_string \"reserve\""
																						}
																					],
																					"expression": {
																						"id": 2144,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "9256:3:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 2145,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9260:12:10",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "9256:16:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 2147,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9256:27:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2143,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "9246:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9246:38:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "9232:52:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 2166,
																	"nodeType": "Block",
																	"src": "9414:54:10",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"hexValue": "496e76616c69642077616c6c65742074797065",
																						"id": 2163,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9435:21:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_dff176fdc0c8e1f4d3d67d0b53a5f3f262b5f861a6564381d034c8b7732a3622",
																							"typeString": "literal_string \"Invalid wallet type\""
																						},
																						"value": "Invalid wallet type"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_dff176fdc0c8e1f4d3d67d0b53a5f3f262b5f861a6564381d034c8b7732a3622",
																							"typeString": "literal_string \"Invalid wallet type\""
																						}
																					],
																					"id": 2162,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "9428:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (string memory) pure"
																					}
																				},
																				"id": 2164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9428:29:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2165,
																			"nodeType": "ExpressionStatement",
																			"src": "9428:29:10"
																		}
																	]
																},
																"id": 2167,
																"nodeType": "IfStatement",
																"src": "9228:240:10",
																"trueBody": {
																	"id": 2161,
																	"nodeType": "Block",
																	"src": "9286:122:10",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 2153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2151,
																							"name": "newWallet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2012,
																							"src": "9308:9:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "!=",
																						"rightExpression": {
																							"id": 2152,
																							"name": "reserveWallet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1612,
																							"src": "9321:13:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "9308:26:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"hexValue": "53616d652077616c6c65742061646472657373",
																						"id": 2154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9336:21:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																							"typeString": "literal_string \"Same wallet address\""
																						},
																						"value": "Same wallet address"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																							"typeString": "literal_string \"Same wallet address\""
																						}
																					],
																					"id": 2150,
																					"name": "require",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967278,
																						4294967278,
																						4294967278
																					],
																					"referencedDeclaration": 4294967278,
																					"src": "9300:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																						"typeString": "function (bool,string memory) pure"
																					}
																				},
																				"id": 2155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9300:58:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2156,
																			"nodeType": "ExpressionStatement",
																			"src": "9300:58:10"
																		},
																		{
																			"expression": {
																				"id": 2159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2157,
																					"name": "reserveWallet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1612,
																					"src": "9372:13:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 2158,
																					"name": "newWallet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2012,
																					"src": "9388:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "9372:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2160,
																			"nodeType": "ExpressionStatement",
																			"src": "9372:25:10"
																		}
																	]
																}
															},
															"id": 2168,
															"nodeType": "IfStatement",
															"src": "9036:432:10",
															"trueBody": {
																"id": 2141,
																"nodeType": "Block",
																"src": "9096:126:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 2133,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2131,
																						"name": "newWallet",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2012,
																						"src": "9118:9:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 2132,
																						"name": "liquidityWallet",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1610,
																						"src": "9131:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "9118:28:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "53616d652077616c6c65742061646472657373",
																					"id": 2134,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9148:21:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																						"typeString": "literal_string \"Same wallet address\""
																					},
																					"value": "Same wallet address"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																						"typeString": "literal_string \"Same wallet address\""
																					}
																				],
																				"id": 2130,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "9110:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9110:60:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2136,
																		"nodeType": "ExpressionStatement",
																		"src": "9110:60:10"
																	},
																	{
																		"expression": {
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2137,
																				"name": "liquidityWallet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1610,
																				"src": "9184:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2138,
																				"name": "newWallet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2012,
																				"src": "9202:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "9184:27:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2140,
																		"nodeType": "ExpressionStatement",
																		"src": "9184:27:10"
																	}
																]
															}
														},
														"id": 2169,
														"nodeType": "IfStatement",
														"src": "8844:624:10",
														"trueBody": {
															"id": 2121,
															"nodeType": "Block",
															"src": "8904:126:10",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"id": 2113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2111,
																					"name": "newWallet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2012,
																					"src": "8926:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"id": 2112,
																					"name": "communityWallet",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "8939:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"src": "8926:28:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"hexValue": "53616d652077616c6c65742061646472657373",
																				"id": 2114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8956:21:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																					"typeString": "literal_string \"Same wallet address\""
																				},
																				"value": "Same wallet address"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																					"typeString": "literal_string \"Same wallet address\""
																				}
																			],
																			"id": 2110,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "8918:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8918:60:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2116,
																	"nodeType": "ExpressionStatement",
																	"src": "8918:60:10"
																},
																{
																	"expression": {
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2117,
																			"name": "communityWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1608,
																			"src": "8992:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 2118,
																			"name": "newWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "9010:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8992:27:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2120,
																	"nodeType": "ExpressionStatement",
																	"src": "8992:27:10"
																}
															]
														}
													},
													"id": 2170,
													"nodeType": "IfStatement",
													"src": "8521:947:10",
													"trueBody": {
														"id": 2101,
														"nodeType": "Block",
														"src": "8581:257:10",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2078,
																				"name": "newWallet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2012,
																				"src": "8603:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"id": 2079,
																				"name": "ecosystemWallet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1606,
																				"src": "8616:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "8603:28:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "53616d652077616c6c65742061646472657373",
																			"id": 2081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8633:21:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																				"typeString": "literal_string \"Same wallet address\""
																			},
																			"value": "Same wallet address"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																				"typeString": "literal_string \"Same wallet address\""
																			}
																		],
																		"id": 2077,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "8595:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 2082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8595:60:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2083,
																"nodeType": "ExpressionStatement",
																"src": "8595:60:10"
															},
															{
																"expression": {
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 2084,
																			"name": "vestingSchedules",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1632,
																			"src": "8669:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
																				"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
																			}
																		},
																		"id": 2086,
																		"indexExpression": {
																			"id": 2085,
																			"name": "newWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "8686:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "8669:27:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
																			"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"baseExpression": {
																			"id": 2087,
																			"name": "vestingSchedules",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1632,
																			"src": "8699:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
																				"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
																			}
																		},
																		"id": 2089,
																		"indexExpression": {
																			"id": 2088,
																			"name": "ecosystemWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1606,
																			"src": "8716:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8699:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
																			"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
																		}
																	},
																	"src": "8669:63:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
																		"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
																	}
																},
																"id": 2091,
																"nodeType": "ExpressionStatement",
																"src": "8669:63:10"
															},
															{
																"expression": {
																	"id": 2095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "delete",
																	"prefix": true,
																	"src": "8746:40:10",
																	"subExpression": {
																		"baseExpression": {
																			"id": 2092,
																			"name": "vestingSchedules",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1632,
																			"src": "8753:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
																				"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
																			}
																		},
																		"id": 2094,
																		"indexExpression": {
																			"id": 2093,
																			"name": "ecosystemWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1606,
																			"src": "8770:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "8753:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
																			"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2096,
																"nodeType": "ExpressionStatement",
																"src": "8746:40:10"
															},
															{
																"expression": {
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2097,
																		"name": "ecosystemWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1606,
																		"src": "8800:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2098,
																		"name": "newWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "8818:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "8800:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2100,
																"nodeType": "ExpressionStatement",
																"src": "8800:27:10"
															}
														]
													}
												},
												"id": 2171,
												"nodeType": "IfStatement",
												"src": "8203:1265:10",
												"trueBody": {
													"id": 2068,
													"nodeType": "Block",
													"src": "8262:253:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2045,
																			"name": "newWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "8284:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2046,
																			"name": "treasuryWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1604,
																			"src": "8297:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8284:27:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53616d652077616c6c65742061646472657373",
																		"id": 2048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8313:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																			"typeString": "literal_string \"Same wallet address\""
																		},
																		"value": "Same wallet address"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3fd602027c9e9b2988e813180c445dde3c40a67e32615f459339080fc90bd38f",
																			"typeString": "literal_string \"Same wallet address\""
																		}
																	],
																	"id": 2044,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8276:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8276:59:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2050,
															"nodeType": "ExpressionStatement",
															"src": "8276:59:10"
														},
														{
															"expression": {
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2051,
																		"name": "vestingSchedules",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "8349:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
																			"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
																		}
																	},
																	"id": 2053,
																	"indexExpression": {
																		"id": 2052,
																		"name": "newWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "8366:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8349:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
																		"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2054,
																		"name": "vestingSchedules",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "8379:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
																			"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
																		}
																	},
																	"id": 2056,
																	"indexExpression": {
																		"id": 2055,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "8396:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8379:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
																		"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
																	}
																},
																"src": "8349:62:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
																	"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
																}
															},
															"id": 2058,
															"nodeType": "ExpressionStatement",
															"src": "8349:62:10"
														},
														{
															"expression": {
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "8425:39:10",
																"subExpression": {
																	"baseExpression": {
																		"id": 2059,
																		"name": "vestingSchedules",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1632,
																		"src": "8432:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
																			"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
																		}
																	},
																	"id": 2061,
																	"indexExpression": {
																		"id": 2060,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "8449:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8432:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
																		"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2063,
															"nodeType": "ExpressionStatement",
															"src": "8425:39:10"
														},
														{
															"expression": {
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2064,
																	"name": "treasuryWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "8478:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2065,
																	"name": "newWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "8495:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8478:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2067,
															"nodeType": "ExpressionStatement",
															"src": "8478:26:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2173,
															"name": "walletType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "9496:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2174,
															"name": "newWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "9508:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2172,
														"name": "WalletUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "9482:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9482:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2176,
												"nodeType": "EmitStatement",
												"src": "9477:41:10"
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "7763:201:10",
										"text": "@notice Aggiorna l'indirizzo di un wallet\n @param walletType Tipo di wallet (\"treasury\", \"ecosystem\", \"community\", \"liquidity\", \"reserve\")\n @param newWallet Nuovo indirizzo del wallet"
									},
									"functionSelector": "780b9737",
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2015,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2014,
												"name": "onlyOwner",
												"nameLocations": [
													"8045:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8045:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "8045:9:10"
										}
									],
									"name": "updateWallet",
									"nameLocation": "7978:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "walletType",
												"nameLocation": "8005:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "7991:24:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7991:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "newWallet",
												"nameLocation": "8025:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "8017:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8017:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7990:45:10"
									},
									"returnParameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8055:0:10"
									},
									"scope": 2610,
									"src": "7969:1556:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2237,
										"nodeType": "Block",
										"src": "9696:348:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2189,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "9714:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9723:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9714:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9726:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 2188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9706:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9706:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "9706:37:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2197,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9771:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9775:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9771:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2196,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2589
																	],
																	"referencedDeclaration": 2589,
																	"src": "9761:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9761:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2200,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "9786:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9761:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9794:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9753:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9753:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2204,
												"nodeType": "ExpressionStatement",
												"src": "9753:64:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2206,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9833:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9837:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9833:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2208,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "9845:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2205,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "9827:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9827:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "9827:25:10"
											},
											{
												"expression": {
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2211,
															"name": "lockedForDAO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "9862:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2214,
														"indexExpression": {
															"expression": {
																"id": 2212,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9875:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9879:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9875:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9862:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2220,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "9918:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2215,
																	"name": "lockedForDAO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "9889:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2218,
																"indexExpression": {
																	"expression": {
																		"id": 2216,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "9902:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9906:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "9902:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9889:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9914:3:10",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1282,
															"src": "9889:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9889:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9862:63:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "9862:63:10"
											},
											{
												"expression": {
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2224,
														"name": "totalLockedForDAO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "9935:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2227,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "9977:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2225,
																"name": "totalLockedForDAO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "9955:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9973:3:10",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1282,
															"src": "9955:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9955:29:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9935:49:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2230,
												"nodeType": "ExpressionStatement",
												"src": "9935:49:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2232,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10018:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10022:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10018:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2234,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "10030:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2231,
														"name": "TokensLockedForDAO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "9999:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9999:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2236,
												"nodeType": "EmitStatement",
												"src": "9994:43:10"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "9531:88:10",
										"text": "@notice Blocca token per la DAO\n @param amount Quantità di token da bloccare"
									},
									"functionSelector": "9576a374",
									"id": 2238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2184,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2183,
												"name": "nonReentrant",
												"nameLocations": [
													"9669:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "9669:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9669:12:10"
										},
										{
											"id": 2186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2185,
												"name": "whenNotPaused",
												"nameLocations": [
													"9682:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "9682:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "9682:13:10"
										}
									],
									"name": "lockForDAO",
									"nameLocation": "9633:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9652:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2238,
												"src": "9644:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9644:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9643:16:10"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9696:0:10"
									},
									"scope": 2610,
									"src": "9624:420:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "10219:360:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2249,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "10237:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10246:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10237:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 2252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10249:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 2248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10229:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10229:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "10229:37:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2256,
																	"name": "lockedForDAO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "10284:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2259,
																"indexExpression": {
																	"expression": {
																		"id": 2257,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10297:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10301:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10297:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10284:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2260,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "10312:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10284:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6f636b65642062616c616e6365",
															"id": 2262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10320:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121",
																"typeString": "literal_string \"Insufficient locked balance\""
															},
															"value": "Insufficient locked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121",
																"typeString": "literal_string \"Insufficient locked balance\""
															}
														],
														"id": 2255,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10276:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10276:74:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2264,
												"nodeType": "ExpressionStatement",
												"src": "10276:74:10"
											},
											{
												"expression": {
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2265,
															"name": "lockedForDAO",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "10360:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2268,
														"indexExpression": {
															"expression": {
																"id": 2266,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10373:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10377:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10373:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10360:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2274,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "10416:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2269,
																	"name": "lockedForDAO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "10387:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2272,
																"indexExpression": {
																	"expression": {
																		"id": 2270,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10400:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10404:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10400:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10387:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10412:3:10",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1297,
															"src": "10387:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10387:36:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10360:63:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2277,
												"nodeType": "ExpressionStatement",
												"src": "10360:63:10"
											},
											{
												"expression": {
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2278,
														"name": "totalLockedForDAO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1620,
														"src": "10433:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2281,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "10475:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2279,
																"name": "totalLockedForDAO",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1620,
																"src": "10453:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10471:3:10",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1297,
															"src": "10453:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10453:29:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10433:49:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "10433:49:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2286,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10498:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10502:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10498:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2288,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "10510:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2285,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "10492:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10492:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2290,
												"nodeType": "ExpressionStatement",
												"src": "10492:25:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2292,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10553:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10557:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10553:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2294,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "10565:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2291,
														"name": "TokensUnlockedForDAO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "10532:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10532:40:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2296,
												"nodeType": "EmitStatement",
												"src": "10527:45:10"
											}
										]
									},
									"documentation": {
										"id": 2239,
										"nodeType": "StructuredDocumentation",
										"src": "10050:89:10",
										"text": "@notice Sblocca token dalla DAO\n @param amount Quantità di token da sbloccare"
									},
									"functionSelector": "74300378",
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2243,
												"name": "nonReentrant",
												"nameLocations": [
													"10192:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "10192:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10192:12:10"
										},
										{
											"id": 2246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2245,
												"name": "whenNotPaused",
												"nameLocations": [
													"10205:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "10205:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10205:13:10"
										}
									],
									"name": "unlockFromDAO",
									"nameLocation": "10153:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10175:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "10167:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10167:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10166:16:10"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10219:0:10"
									},
									"scope": 2610,
									"src": "10144:435:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2404,
										"nodeType": "Block",
										"src": "10773:839:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2309,
																	"name": "wallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "10791:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2310,
																	"name": "treasuryWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1604,
																	"src": "10801:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10791:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2312,
																	"name": "wallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "10819:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2313,
																	"name": "ecosystemWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "10829:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "10819:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "10791:53:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642076657374696e672077616c6c6574",
															"id": 2316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10846:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5e5f891013d108cb382059cf5e60ad3034ca479aedc7a83dd619e3cb9166f546",
																"typeString": "literal_string \"Invalid vesting wallet\""
															},
															"value": "Invalid vesting wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5e5f891013d108cb382059cf5e60ad3034ca479aedc7a83dd619e3cb9166f546",
																"typeString": "literal_string \"Invalid vesting wallet\""
															}
														],
														"id": 2308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10783:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10783:88:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2318,
												"nodeType": "ExpressionStatement",
												"src": "10783:88:10"
											},
											{
												"assignments": [
													2321
												],
												"declarations": [
													{
														"constant": false,
														"id": 2321,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "10905:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "10881:32:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
															"typeString": "struct UBI4ALLQuantum.VestingSchedule"
														},
														"typeName": {
															"id": 2320,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2319,
																"name": "VestingSchedule",
																"nameLocations": [
																	"10881:15:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1626,
																"src": "10881:15:10"
															},
															"referencedDeclaration": 1626,
															"src": "10881:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																"typeString": "struct UBI4ALLQuantum.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2325,
												"initialValue": {
													"baseExpression": {
														"id": 2322,
														"name": "vestingSchedules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "10916:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
															"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
														}
													},
													"id": 2324,
													"indexExpression": {
														"id": 2323,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "10933:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10916:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
														"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10881:59:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2327,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2321,
																	"src": "10958:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																		"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
																	}
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10967:11:10",
																"memberName": "totalAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1623,
																"src": "10958:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 2329,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2321,
																	"src": "10981:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																		"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
																	}
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10990:14:10",
																"memberName": "releasedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1625,
																"src": "10981:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10958:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11006:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																"typeString": "literal_string \"No tokens to release\""
															},
															"value": "No tokens to release"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
																"typeString": "literal_string \"No tokens to release\""
															}
														],
														"id": 2326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10950:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10950:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2334,
												"nodeType": "ExpressionStatement",
												"src": "10950:79:10"
											},
											{
												"assignments": [
													2336
												],
												"declarations": [
													{
														"constant": false,
														"id": 2336,
														"mutability": "mutable",
														"name": "elapsedTime",
														"nameLocation": "11048:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "11040:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2335,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11040:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2342,
												"initialValue": {
													"arguments": [
														{
															"id": 2340,
															"name": "vestingStart",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "11082:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2337,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11062:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11068:9:10",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "11062:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11078:3:10",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1297,
														"src": "11062:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11062:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11040:55:10"
											},
											{
												"assignments": [
													2344
												],
												"declarations": [
													{
														"constant": false,
														"id": 2344,
														"mutability": "mutable",
														"name": "vestedAmount",
														"nameLocation": "11113:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "11105:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2343,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11105:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2353,
												"initialValue": {
													"arguments": [
														{
															"id": 2351,
															"name": "VESTING_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "11170:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2348,
																	"name": "elapsedTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2336,
																	"src": "11153:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 2345,
																		"name": "schedule",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "11128:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																			"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
																		}
																	},
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11137:11:10",
																	"memberName": "totalAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1623,
																	"src": "11128:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11149:3:10",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1312,
																"src": "11128:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11128:37:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11166:3:10",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1327,
														"src": "11128:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11128:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11105:80:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2354,
														"name": "vestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2344,
														"src": "11199:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2355,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2321,
															"src": "11214:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
															}
														},
														"id": 2356,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11223:11:10",
														"memberName": "totalAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1623,
														"src": "11214:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11199:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2364,
												"nodeType": "IfStatement",
												"src": "11195:101:10",
												"trueBody": {
													"id": 2363,
													"nodeType": "Block",
													"src": "11236:60:10",
													"statements": [
														{
															"expression": {
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2358,
																	"name": "vestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2344,
																	"src": "11250:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2359,
																		"name": "schedule",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "11265:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																			"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
																		}
																	},
																	"id": 2360,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11274:11:10",
																	"memberName": "totalAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1623,
																	"src": "11265:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11250:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2362,
															"nodeType": "ExpressionStatement",
															"src": "11250:35:10"
														}
													]
												}
											},
											{
												"assignments": [
													2366
												],
												"declarations": [
													{
														"constant": false,
														"id": 2366,
														"mutability": "mutable",
														"name": "releasable",
														"nameLocation": "11314:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2404,
														"src": "11306:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2365,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11306:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2372,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2369,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2321,
																"src": "11344:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																	"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
																}
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11353:14:10",
															"memberName": "releasedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1625,
															"src": "11344:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2367,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2344,
															"src": "11327:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11340:3:10",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1297,
														"src": "11327:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11327:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11306:62:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2374,
																"name": "releasable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2366,
																"src": "11386:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11399:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11386:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e732072656c65617361626c65",
															"id": 2377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11402:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_437ccfba16f7a1c3635c6fa73b676800f4140c9683771211c159af154a2c5463",
																"typeString": "literal_string \"No tokens releasable\""
															},
															"value": "No tokens releasable"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_437ccfba16f7a1c3635c6fa73b676800f4140c9683771211c159af154a2c5463",
																"typeString": "literal_string \"No tokens releasable\""
															}
														],
														"id": 2373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11378:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11378:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "11378:47:10"
											},
											{
												"expression": {
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2380,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2321,
															"src": "11436:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
															}
														},
														"id": 2382,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11445:14:10",
														"memberName": "releasedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1625,
														"src": "11436:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2386,
																"name": "releasable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2366,
																"src": "11490:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2383,
																	"name": "schedule",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2321,
																	"src": "11462:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																		"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
																	}
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11471:14:10",
																"memberName": "releasedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1625,
																"src": "11462:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11486:3:10",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1282,
															"src": "11462:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11462:39:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11436:65:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "11436:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2393,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11529:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UBI4ALLQuantum_$2610",
																		"typeString": "contract UBI4ALLQuantum"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UBI4ALLQuantum_$2610",
																		"typeString": "contract UBI4ALLQuantum"
																	}
																],
																"id": 2392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11521:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2391,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11521:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11521:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2395,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2301,
															"src": "11536:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2396,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "11544:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2390,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "11511:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11511:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2398,
												"nodeType": "ExpressionStatement",
												"src": "11511:44:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2400,
															"name": "wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2301,
															"src": "11586:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2401,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "11594:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2399,
														"name": "VestingReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "11570:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11570:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2403,
												"nodeType": "EmitStatement",
												"src": "11565:40:10"
											}
										]
									},
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "10585:107:10",
										"text": "@notice Rilascia i token in vesting per un wallet\n @param wallet Indirizzo del wallet in vesting"
									},
									"functionSelector": "d486d129",
									"id": 2405,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2303,
												"name": "nonReentrant",
												"nameLocations": [
													"10746:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "10746:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10746:12:10"
										},
										{
											"id": 2306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2305,
												"name": "whenNotPaused",
												"nameLocations": [
													"10759:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "10759:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "10759:13:10"
										}
									],
									"name": "releaseVesting",
									"nameLocation": "10706:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "10729:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2405,
												"src": "10721:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10721:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10720:16:10"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10773:0:10"
									},
									"scope": 2610,
									"src": "10697:915:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2463,
										"nodeType": "Block",
										"src": "11857:450:10",
										"statements": [
											{
												"assignments": [
													2415
												],
												"declarations": [
													{
														"constant": false,
														"id": 2415,
														"mutability": "mutable",
														"name": "schedule",
														"nameLocation": "11891:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 2463,
														"src": "11867:32:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
															"typeString": "struct UBI4ALLQuantum.VestingSchedule"
														},
														"typeName": {
															"id": 2414,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2413,
																"name": "VestingSchedule",
																"nameLocations": [
																	"11867:15:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1626,
																"src": "11867:15:10"
															},
															"referencedDeclaration": 1626,
															"src": "11867:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																"typeString": "struct UBI4ALLQuantum.VestingSchedule"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2419,
												"initialValue": {
													"baseExpression": {
														"id": 2416,
														"name": "vestingSchedules",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "11902:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1626_storage_$",
															"typeString": "mapping(address => struct UBI4ALLQuantum.VestingSchedule storage ref)"
														}
													},
													"id": 2418,
													"indexExpression": {
														"id": 2417,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2408,
														"src": "11919:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11902:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage",
														"typeString": "struct UBI4ALLQuantum.VestingSchedule storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11867:59:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2420,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "11940:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
															}
														},
														"id": 2421,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11949:11:10",
														"memberName": "totalAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1623,
														"src": "11940:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11964:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11940:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2426,
												"nodeType": "IfStatement",
												"src": "11936:39:10",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 2424,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11974:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2412,
													"id": 2425,
													"nodeType": "Return",
													"src": "11967:8:10"
												}
											},
											{
												"assignments": [
													2428
												],
												"declarations": [
													{
														"constant": false,
														"id": 2428,
														"mutability": "mutable",
														"name": "elapsedTime",
														"nameLocation": "11994:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 2463,
														"src": "11986:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11986:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2434,
												"initialValue": {
													"arguments": [
														{
															"id": 2432,
															"name": "vestingStart",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "12028:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2429,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12008:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12014:9:10",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12008:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12024:3:10",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1297,
														"src": "12008:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12008:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11986:55:10"
											},
											{
												"assignments": [
													2436
												],
												"declarations": [
													{
														"constant": false,
														"id": 2436,
														"mutability": "mutable",
														"name": "vestedAmount",
														"nameLocation": "12059:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 2463,
														"src": "12051:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2435,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12051:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2445,
												"initialValue": {
													"arguments": [
														{
															"id": 2443,
															"name": "VESTING_PERIOD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "12116:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2440,
																	"name": "elapsedTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2428,
																	"src": "12099:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 2437,
																		"name": "schedule",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "12074:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																			"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
																		}
																	},
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12083:11:10",
																	"memberName": "totalAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1623,
																	"src": "12074:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12095:3:10",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1312,
																"src": "12074:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12074:37:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12112:3:10",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1327,
														"src": "12074:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12074:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12051:80:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2446,
														"name": "vestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2436,
														"src": "12145:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2447,
															"name": "schedule",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "12160:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
															}
														},
														"id": 2448,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12169:11:10",
														"memberName": "totalAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1623,
														"src": "12160:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12145:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2456,
												"nodeType": "IfStatement",
												"src": "12141:101:10",
												"trueBody": {
													"id": 2455,
													"nodeType": "Block",
													"src": "12182:60:10",
													"statements": [
														{
															"expression": {
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2450,
																	"name": "vestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "12196:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2451,
																		"name": "schedule",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "12211:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																			"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
																		}
																	},
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12220:11:10",
																	"memberName": "totalAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1623,
																	"src": "12211:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12196:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2454,
															"nodeType": "ExpressionStatement",
															"src": "12196:35:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2459,
																"name": "schedule",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2415,
																"src": "12276:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VestingSchedule_$1626_storage_ptr",
																	"typeString": "struct UBI4ALLQuantum.VestingSchedule storage pointer"
																}
															},
															"id": 2460,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12285:14:10",
															"memberName": "releasedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1625,
															"src": "12276:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2457,
															"name": "vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "12259:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12272:3:10",
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1297,
														"src": "12259:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12259:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2412,
												"id": 2462,
												"nodeType": "Return",
												"src": "12252:48:10"
											}
										]
									},
									"documentation": {
										"id": 2406,
										"nodeType": "StructuredDocumentation",
										"src": "11618:156:10",
										"text": "@notice Ottiene l'importo di token in vesting rilasciabile per un wallet\n @param wallet Indirizzo del wallet\n @return Importo rilasciabile"
									},
									"functionSelector": "0553be1e",
									"id": 2464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReleasableVesting",
									"nameLocation": "11788:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "11817:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "11809:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11809:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11808:16:10"
									},
									"returnParameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "11848:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11848:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11847:9:10"
									},
									"scope": 2610,
									"src": "11779:528:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2535,
										"nodeType": "Block",
										"src": "12737:592:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2481,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2467,
																"src": "12755:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12769:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12761:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2482,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12761:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12761:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12755:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e74",
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12773:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															},
															"value": "Invalid recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d",
																"typeString": "literal_string \"Invalid recipient\""
															}
														],
														"id": 2480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12747:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12747:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "12747:46:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2491,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2469,
																"src": "12811:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12820:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12811:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 2494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12823:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 2490,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12803:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12803:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2496,
												"nodeType": "ExpressionStatement",
												"src": "12803:37:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2498,
																"name": "leverage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2471,
																"src": "12858:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12870:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "12858:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c65766572616765206d757374206265206174206c65617374203178",
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12875:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e2c7effb3a6763254027cb85bfc985f467b0837e322283dece80d291243b39f",
																"typeString": "literal_string \"Leverage must be at least 1x\""
															},
															"value": "Leverage must be at least 1x"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e2c7effb3a6763254027cb85bfc985f467b0837e322283dece80d291243b39f",
																"typeString": "literal_string \"Leverage must be at least 1x\""
															}
														],
														"id": 2497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12850:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12850:56:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2503,
												"nodeType": "ExpressionStatement",
												"src": "12850:56:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2506,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "12934:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "12938:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "12934:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2505,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2589
																	],
																	"referencedDeclaration": 2589,
																	"src": "12924:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12924:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2509,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2469,
																"src": "12949:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12924:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12957:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12916:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12916:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2513,
												"nodeType": "ExpressionStatement",
												"src": "12916:64:10"
											},
											{
												"assignments": [
													2515
												],
												"declarations": [
													{
														"constant": false,
														"id": 2515,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13159:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2535,
														"src": "13154:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2514,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13154:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2521,
												"initialValue": {
													"arguments": [
														{
															"id": 2518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2467,
															"src": "13184:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2519,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2469,
															"src": "13188:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2516,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "13169:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_UBI4ALLQuantum_$2610_$",
																"typeString": "type(contract super UBI4ALLQuantum)"
															}
														},
														"id": 2517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13175:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "13169:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13169:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13154:41:10"
											},
											{
												"condition": {
													"id": 2522,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2515,
													"src": "13209:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2532,
												"nodeType": "IfStatement",
												"src": "13205:94:10",
												"trueBody": {
													"id": 2531,
													"nodeType": "Block",
													"src": "13218:81:10",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2524,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13255:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13259:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13255:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2526,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2467,
																		"src": "13267:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2527,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2469,
																		"src": "13271:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2528,
																		"name": "leverage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2471,
																		"src": "13279:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2523,
																	"name": "LeveragedTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "13237:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256)"
																	}
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13237:51:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2530,
															"nodeType": "EmitStatement",
															"src": "13232:56:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2533,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2515,
													"src": "13315:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2479,
												"id": 2534,
												"nodeType": "Return",
												"src": "13308:14:10"
											}
										]
									},
									"documentation": {
										"id": 2465,
										"nodeType": "StructuredDocumentation",
										"src": "12313:292:10",
										"text": "@notice Trasferisce token con supporto per leva (per trading avanzato)\n @param to Indirizzo del destinatario\n @param amount Quantità di token da trasferire\n @param leverage Fattore di leva (es. 100 = 1x, 200 = 2x)\n @return True se il trasferimento ha successo"
									},
									"functionSelector": "33127b0d",
									"id": 2536,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2473,
												"name": "nonReentrant",
												"nameLocations": [
													"12695:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "12695:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "12695:12:10"
										},
										{
											"id": 2476,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2475,
												"name": "whenNotPaused",
												"nameLocations": [
													"12708:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "12708:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "12708:13:10"
										}
									],
									"name": "transferWithLeverage",
									"nameLocation": "12619:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12648:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "12640:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12640:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12660:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "12652:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12652:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "leverage",
												"nameLocation": "12676:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "12668:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12639:46:10"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2536,
												"src": "12731:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12731:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:6:10"
									},
									"scope": 2610,
									"src": "12610:719:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										582,
										1436
									],
									"body": {
										"id": 2571,
										"nodeType": "Block",
										"src": "13668:173:10",
										"statements": [
											{
												"assignments": [
													2552
												],
												"declarations": [
													{
														"constant": false,
														"id": 2552,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13683:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2571,
														"src": "13678:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2551,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13678:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2558,
												"initialValue": {
													"arguments": [
														{
															"id": 2555,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2539,
															"src": "13708:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2556,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2541,
															"src": "13712:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2553,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "13693:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_UBI4ALLQuantum_$2610_$",
																"typeString": "type(contract super UBI4ALLQuantum)"
															}
														},
														"id": 2554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13699:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "13693:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 2557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13693:26:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13678:41:10"
											},
											{
												"condition": {
													"id": 2559,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2552,
													"src": "13733:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2568,
												"nodeType": "IfStatement",
												"src": "13729:82:10",
												"trueBody": {
													"id": 2567,
													"nodeType": "Block",
													"src": "13742:69:10",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2561,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13777:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13781:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13777:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2563,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2539,
																		"src": "13789:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2564,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "13793:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2560,
																	"name": "QuantumTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "13761:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13761:39:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2566,
															"nodeType": "EmitStatement",
															"src": "13756:44:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2569,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2552,
													"src": "13827:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2550,
												"id": 2570,
												"nodeType": "Return",
												"src": "13820:14:10"
											}
										]
									},
									"documentation": {
										"id": 2537,
										"nodeType": "StructuredDocumentation",
										"src": "13335:213:10",
										"text": "@notice Trasferisce token (con supporto per leva futura)\n @param to Indirizzo del destinatario\n @param amount Quantità di token da trasferire\n @return True se il trasferimento ha successo"
									},
									"functionSelector": "a9059cbb",
									"id": 2572,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2547,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2546,
												"name": "whenNotPaused",
												"nameLocations": [
													"13639:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "13639:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "13639:13:10"
										}
									],
									"name": "transfer",
									"nameLocation": "13562:8:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2545,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2543,
												"name": "ERC20",
												"nameLocations": [
													"13615:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "13615:5:10"
											},
											{
												"id": 2544,
												"name": "IUBI4ALLQuantum",
												"nameLocations": [
													"13622:15:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1519,
												"src": "13622:15:10"
											}
										],
										"src": "13606:32:10"
									},
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13579:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "13571:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13571:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13591:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "13583:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13583:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13570:28:10"
									},
									"returnParameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "13662:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13662:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13661:6:10"
									},
									"scope": 2610,
									"src": "13553:288:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										558,
										1427
									],
									"body": {
										"id": 2588,
										"nodeType": "Block",
										"src": "14074:48:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2585,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2575,
															"src": "14107:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2583,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "14091:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_UBI4ALLQuantum_$2610_$",
																"typeString": "type(contract super UBI4ALLQuantum)"
															}
														},
														"id": 2584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14097:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 558,
														"src": "14091:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14091:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2582,
												"id": 2587,
												"nodeType": "Return",
												"src": "14084:31:10"
											}
										]
									},
									"documentation": {
										"id": 2573,
										"nodeType": "StructuredDocumentation",
										"src": "13847:123:10",
										"text": "@notice Ottiene il saldo di un account\n @param account Indirizzo dell'account\n @return Saldo dell'account"
									},
									"functionSelector": "70a08231",
									"id": 2589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13984:9:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2579,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2577,
												"name": "ERC20",
												"nameLocations": [
													"14032:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "14032:5:10"
											},
											{
												"id": 2578,
												"name": "IUBI4ALLQuantum",
												"nameLocations": [
													"14039:15:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1519,
												"src": "14039:15:10"
											}
										],
										"src": "14023:32:10"
									},
									"parameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14002:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "13994:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13994:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13993:17:10"
									},
									"returnParameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2589,
												"src": "14065:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14065:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14064:9:10"
									},
									"scope": 2610,
									"src": "13975:147:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2598,
										"nodeType": "Block",
										"src": "14208:25:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2595,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "14218:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14218:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2597,
												"nodeType": "ExpressionStatement",
												"src": "14218:8:10"
											}
										]
									},
									"documentation": {
										"id": 2590,
										"nodeType": "StructuredDocumentation",
										"src": "14128:39:10",
										"text": "@notice Mette in pausa il contratto"
									},
									"functionSelector": "8456cb59",
									"id": 2599,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2593,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2592,
												"name": "onlyOwner",
												"nameLocations": [
													"14198:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "14198:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "14198:9:10"
										}
									],
									"name": "pause",
									"nameLocation": "14181:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14186:2:10"
									},
									"returnParameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14208:0:10"
									},
									"scope": 2610,
									"src": "14172:61:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2608,
										"nodeType": "Block",
										"src": "14329:27:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2605,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "14339:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14339:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2607,
												"nodeType": "ExpressionStatement",
												"src": "14339:10:10"
											}
										]
									},
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "14239:47:10",
										"text": "@notice Ripristina il contratto dalla pausa"
									},
									"functionSelector": "3f4ba83a",
									"id": 2609,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2602,
												"name": "onlyOwner",
												"nameLocations": [
													"14319:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "14319:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "14319:9:10"
										}
									],
									"name": "unpause",
									"nameLocation": "14300:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14307:2:10"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14329:0:10"
									},
									"scope": 2610,
									"src": "14291:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2611,
							"src": "562:13796:10",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								295,
								300,
								984,
								993,
								1504,
								1512,
								1518,
								1641,
								1648,
								1655,
								1662,
								1673
							]
						}
					],
					"src": "32:14326:10"
				},
				"id": 10
			}
		}
	}
}